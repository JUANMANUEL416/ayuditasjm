IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE NAME = 'SPK_NC_CIERRE_FACTURAS_AJUSTE' AND XTYPE='P')
BEGIN
   DROP PROCEDURE SPK_NC_CIERRE_FACTURAS_AJUSTE
END

GO
CREATE PROC DBO.SPK_NC_CIERRE_FACTURAS_AJUSTE
@ANO     VARCHAR(4), 
@MES     INT,
@USUARIO VARCHAR(12),
@CUENTA  VARCHAR(20)
WITH ENCRYPTION
AS
DECLARE @AUX    INT
DECLARE @ANOANT VARCHAR(4)
DECLARE @MESANT INT
BEGIN
   SELECT @MESANT = CASE @MES WHEN 1 THEN 12 ELSE @MES -1 END
   SELECT @ANOANT = CASE @MES WHEN 1 THEN @ANO - 1 ELSE @ANO END
   DELETE SALDOMESTERFAC WHERE ANO = @ANO AND MES = @MES  AND CUENTA=@CUENTA
   /*********************************************************************************************/
   PRINT ' /* BALANCE DEL MES DB Y CR CON MOVIMIENTOS DEL MES X TERCERO X FACTURA SALDOMESTERFAC */ '
   /*********************************************************************************************/
   INSERT INTO SALDOMESTERFAC (ANO, MES, CUENTA, IDTERCERO, CCOSTO, N_FACTURA, NOMCUENTA, SI, DB, CR, SF, SM, NTZ, SI_DB, SI_CR, SF_DB, SF_CR)
   SELECT @ANO, @MES, X.CUENTA, COALESCE(MCH.IDTERCERO,''), 
          CASE WHEN DBO.FNK_VALORVARIABLE('IDTIPOCXP_DEFAULT')='ARS' THEN COALESCE(MCH.CCOSTO,'') ELSE CASE WHEN X.CLASE  IN ('CXC', 'CXP' ) THEN '' ELSE COALESCE(MCH.CCOSTO,'') END END, 
          CASE WHEN X.CLASE  IN ('CXC', 'CXP' ) THEN COALESCE(MCH.N_FACTURA,'') ELSE '' END, X.NOMCUENTA, 
          0 SI,
          SUM(CASE MCH.TIPO WHEN 'DB' THEN MCH.VALOR ELSE 0 END) DB, 
          SUM(CASE MCH.TIPO WHEN 'CR' THEN MCH.VALOR ELSE 0 END) CR,
          0 SF,
          0 SM, 	       
          NTZ.TIPO, 0 SI_DB, 0 SI_CR, 0 SF_DB, 0 SF_CR
   FROM   MCP INNER JOIN MCH   ON MCP.NROCOMPROBANTE  = MCH.NROCOMPROBANTE 
              INNER JOIN CUE X ON X.CUENTA    = MCH.CUENTA
              INNER JOIN NTZ   ON  LEFT(MCH.CUENTA,1) = NTZ.N_INICIAL
   WHERE  MCP.ESTADO = 2 AND ISNULL(MCP.ANULADO,0) = 0
   AND    MCP.ANO = @ANO --FECHACONTABLE >=  DBO.FNK_DIA_DEL_MES(@ANOANT,@MESANT,'PRIMERO') 
   AND    MCP.MES = @MES --FECHACONTABLE <   DBO.FNK_DIA_DEL_MES(@ANO,@MES,'ULTIMO')+1
   AND    MCH.CUENTA=@CUENTA
   GROUP BY X.CUENTA, COALESCE(MCH.IDTERCERO,''), 
            CASE WHEN DBO.FNK_VALORVARIABLE('IDTIPOCXP_DEFAULT')='ARS' THEN COALESCE(MCH.CCOSTO,'') ELSE CASE WHEN X.CLASE  IN ('CXC', 'CXP' ) THEN '' ELSE COALESCE(MCH.CCOSTO,'') END END,
            CASE WHEN X.CLASE  IN ('CXC', 'CXP' ) THEN COALESCE(MCH.N_FACTURA,'') ELSE '' END, 
            X.CLASE, X.NOMCUENTA, NTZ.TIPO	       
   ORDER BY X.CUENTA, COALESCE(MCH.IDTERCERO,''), 
            CASE WHEN DBO.FNK_VALORVARIABLE('IDTIPOCXP_DEFAULT')='ARS' THEN COALESCE(MCH.CCOSTO,'') ELSE CASE WHEN X.CLASE  IN ('CXC', 'CXP' ) THEN '' ELSE COALESCE(MCH.CCOSTO,'') END END, 
            CASE WHEN X.CLASE  IN ('CXC', 'CXP' ) THEN COALESCE(MCH.N_FACTURA,'') ELSE '' END
   /*****************************************************************************************************************************/
   PRINT' /* SE INSERTA EN BALANCE CUENTAS QUE NO TUVIERON MOVIMIENTO EN EL MES PERO TIENEN SALDOS ANTERIORES   SALDOMESTERFAC  */'
   /*****************************************************************************************************************************/  
   INSERT INTO SALDOMESTERFAC (ANO, MES, CUENTA, IDTERCERO, CCOSTO, N_FACTURA, NOMCUENTA ,SI,DB,CR,SF, SM, NTZ, SI_DB, SI_CR, SF_DB, SF_CR)
   SELECT @ANO AS ANO, @MES AS MES, X.CUENTA, A.IDTERCERO, A.CCOSTO, A.N_FACTURA, X.NOMCUENTA, 0 AS SI, 0 AS DB, 0 AS CR, 0 AS SF, 0 AS SM, NTZ.TIPO,
          0 AS SI_DB, 0 AS SI_CR, 0 AS SF_DB, 0 AS SF_CR
   FROM   SALDOMESTERFAC A INNER JOIN CUE X ON X.CUENTA = A.CUENTA
                           INNER JOIN NTZ   ON LEFT(A.CUENTA,1) = NTZ.N_INICIAL
   WHERE  NOT EXISTS (SELECT CUENTA 
                      FROM   SALDOMESTERFAC T 
                      WHERE  T.CUENTA    = X.CUENTA 
                      AND    COALESCE(T.IDTERCERO,'') = COALESCE(A.IDTERCERO,'') 
                      AND    COALESCE(T.CCOSTO,'')    = COALESCE(A.CCOSTO,'')
                      AND    COALESCE(T.N_FACTURA,'') = COALESCE(A.N_FACTURA,'')
                      AND    T.ANO       = @ANO 
                      AND    T.MES       = @MES
                      AND    T.CUENTA    =@CUENTA
                      )
   AND    A.ANO    = @ANOANT
   AND    A.MES    = @MESANT
   AND    A.CUENTA =@CUENTA
   --AND    A.SF    <> 0
   GROUP BY X.CUENTA, A.IDTERCERO, A.CCOSTO, A.N_FACTURA, X.NOMCUENTA,NTZ.TIPO 
   /******************************/
   PRINT '/* COLOCAMOS SALDOS INICIALES */ '
   /******************************/
   UPDATE SALDOMESTERFAC SET SALDOMESTERFAC.SI = X.SF, SALDOMESTERFAC.SI_DB = X.SF_DB, SALDOMESTERFAC.SI_CR = X.SF_CR
	FROM   SALDOMESTERFAC INNER JOIN (
                                     SELECT SALDOMESTERFAC.CUENTA, SALDOMESTERFAC.IDTERCERO, SALDOMESTERFAC.CCOSTO, SALDOMESTERFAC.N_FACTURA, SALDOMESTERFAC.SF,
                                            SALDOMESTERFAC.SF_DB, SALDOMESTERFAC.SF_CR
	                                  FROM   SALDOMESTERFAC 
	                                  WHERE  SALDOMESTERFAC.ANO = @ANOANT
	                                  AND    SALDOMESTERFAC.MES = @MESANT 
                                     AND    SALDOMESTERFAC.CUENTA=@CUENTA
                                 ) X ON SALDOMESTERFAC.CUENTA    = X.CUENTA	
                                    AND COALESCE(SALDOMESTERFAC.IDTERCERO,'') = COALESCE(X.IDTERCERO,'')
                                    AND COALESCE(SALDOMESTERFAC.CCOSTO,'') =    COALESCE(X.CCOSTO,'') 
                                    AND COALESCE(SALDOMESTERFAC.N_FACTURA,'') = COALESCE(X.N_FACTURA,'') 
   WHERE   SALDOMESTERFAC.ANO = @ANO
   AND     SALDOMESTERFAC.MES = @MES 
   AND    SALDOMESTERFAC.CUENTA=@CUENTA                           
   /*****************************/
  PRINT ' /* CALCULAMOS SALDOS FINALES */'
   /*****************************/
   UPDATE SALDOMESTERFAC SET SF = CASE NTZ.TIPO WHEN 'DB' THEN SALDOMESTERFAC.SI + SALDOMESTERFAC.DB - SALDOMESTERFAC.CR
                                                          ELSE SALDOMESTERFAC.SI + SALDOMESTERFAC.CR - SALDOMESTERFAC.DB
                                  END,                
                             SM = CASE NTZ.TIPO WHEN 'DB' THEN SALDOMESTERFAC.DB - SALDOMESTERFAC.CR
                                                       ELSE SALDOMESTERFAC.CR - SALDOMESTERFAC.DB
                                  END                     
   FROM   SALDOMESTERFAC INNER JOIN NTZ ON LEFT(SALDOMESTERFAC.CUENTA,1) = NTZ.N_INICIAL
   WHERE  SALDOMESTERFAC.ANO = @ANO
   AND    SALDOMESTERFAC.MES = @MES
   AND    SALDOMESTERFAC.CUENTA=@CUENTA
   /*************************************/
   PRINT 'SALDO FINAL DB Y CR'
   /*************************************/
   UPDATE SALDOMESTERFAC SET SF_DB = CASE NTZ.TIPO WHEN 'DB' THEN CASE WHEN SF>= 0 THEN SF ELSE 0  END                      
                                                             ELSE CASE WHEN SF>= 0 THEN 0  ELSE ABS(SF) END
                                     END,
                             SF_CR = CASE NTZ.TIPO WHEN 'CR' THEN CASE WHEN SF>= 0 THEN SF ELSE 0  END                      
                                                             ELSE CASE WHEN SF>= 0 THEN 0  ELSE ABS(SF) END
                                     END
   FROM   SALDOMESTERFAC INNER JOIN NTZ ON LEFT(SALDOMESTERFAC.CUENTA,1) = NTZ.N_INICIAL
   WHERE  SALDOMESTERFAC.ANO = @ANO
   AND    SALDOMESTERFAC.MES = @MES
   AND    SALDOMESTERFAC.CUENTA=@CUENTA
   PRINT 'TERMINADO'
   /*BORRAMOS*/
   --DELETE SALDOMESTERFAC WHERE ANO = '2005' AND MES = 8 AND SI= 0 AND DB= 0 AND CR= 0 AND SF = 0
END