CREATE OR ALTER PROCEDURE DBO.SPQ_FPAG_COL @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
SET DATEFORMAT dmy
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)		  ,@MODELO VARCHAR(100)			   ,@METODO VARCHAR(100)
		,@USUARIO VARCHAR(12)			  ,@COMPANIA VARCHAR(2)		       ,@IDSEDE      VARCHAR(5)		
        ,@SYS_COMPUTERNAME VARCHAR(200)   ,@DATOS    VARCHAR(MAX)          ,@DATOS1    VARCHAR(MAX)
DECLARE @CNSRPDX VARCHAR(20)              ,@CLASE    VARCHAR(2)            ,@IMPUESTO VARCHAR(20)
        ,@CNSFPAG VARCHAR(20)             ,@N_FACTURA VARCHAR(20)          ,@VLR_FACTURA DECIMAL(14,2)
        ,@VLR_GLOSA DECIMAL(14,2)         ,@TIPOF VARCHAR(20)              ,@CNSGLO VARCHAR(20)
        ,@CNSCXC VARCHAR(20)              ,@MOTIGLOSA VARCHAR(512)         ,@MOTIVO01 VARCHAR(20) 
		  ,@NIT VARCHAR(20)                 ,@MOTIVO02 VARCHAR(20)           ,@VLR_IMPUESTOS DECIMAL(14,2)
        ,@BANCO VARCHAR(5)                ,@SUCURSAL VARCHAR(30)           ,@TIPO_CUENTA VARCHAR(20)
	    ,@CTA_BCO VARCHAR(20)        		,@ITEM INT                 		,@RENGLON SMALLINT
		,@IDTERCERO VARCHAR(20)       		,@INGRESO VARCHAR(20)      		,@NUMERODOCUMENTO VARCHAR(20)
		,@OBSERVACION VARCHAR(1024)      	,@NOCONTABILIZA SMALLINT   		,@FECHA DATETIME
		,@FECHAPAGO DATE              		,@VALORPAGO DECIMAL(18, 2)    	,@VLRGLOSAS DECIMAL(18, 2)
		,@VLRIMPUESTOS DECIMAL(18, 2)    	,@VLRAJUSTEPESO DECIMAL(18, 2)	,@DTOFNCIERO DECIMAL(18, 2)
		,@VLRDTOFINAN DECIMAL(18, 2)  		,@CNS1 VARCHAR(20)         		,@GRUPOETAREO VARCHAR(1)
		,@CNS5 VARCHAR(20)            		,@IDIMPUESTO VARCHAR(10)   		,@LINEA AS VARCHAR(MAX)
		,@NROLINEAS INT               		,@INDICE INT               		,@N_FACTU VARCHAR(20)
		,@VRL_PAGOF DECIMAL(14,2)     		,@VLR_GLOSAP DECIMAL(14,2)  		,@TIPO_FAC VARCHAR(2)
		,@IDCLASE VARCHAR(20)         		,@VLR_IMP DECIMAL(14,2)    		,@MOTIVO_GLOSA01 VARCHAR(10)
		,@MOTIVO_GLOSA02 VARCHAR(10)  		,@OBSERVACIONES VARCHAR(512)		,@IMP_ICA VARCHAR(20)
		,@CLASE_ICA VARCHAR(20)       		,@FACTOR DECIMAL(9,5)      		,@BASE DECIMAL(14,2)
		,@VLR_ICA DECIMAL(14,2)       		,@VLR_DTO DECIMAL(14,2)    		,@ERROR VARCHAR(120)
		,@MODOINGRESO VARCHAR(1)      		,@NROCOMPROBANTE VARCHAR(30) 		,@C1 INT
		,@C2 INT                      		,@DONE VARCHAR(15)         		,@SUMIMP   DECIMAL (14,4)
		,@VALOR1   DECIMAL (14,4)     		,@VALORSERVICIOS DECIMAL (14,4)	,@CANTIDAD INT = 0
		,@MIVA SMALLINT               		,@SaldoNeto DECIMAL(14,4)
      ,@PROCESO VARCHAR(20)               ,@CNSFCXP  VARCHAR(20)            ,@NOREFERNCIA  VARCHAR(20)
      ,@F_FACTURAREF  DATETIME            ,@VLRCRUCE  DECIMAL(14,2)         
		DECLARE @TABLA AS TABLE(
			ITEM INT IDENTITY(1,1),
			VALOR VARCHAR(MAX)
		)
BEGIN
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			 MODELO  VARCHAR(100) '$.MODELO'
			,METODO  VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
	)

   SELECT   @MODELO = MODELO ,@METODO = METODO ,@PARAMETROS = PARAMETROS ,@USUARIO = USUARIO FROM #JSON

	IF @METODO = 'CREA_RPDX'     
	BEGIN         
		SELECT @CNSFPAG = CNSFPAG FROM OPENJSON (@PARAMETROS)
		WITH ( CNSFPAG VARCHAR(10) '$.CNSFPAG' )           
      
		IF COALESCE(@CNSFPAG,'')=''
		BEGIN
			SELECT 'KO'KO,''ERROR
			RETURN
		END

		SELECT @CNSRPDX = ''
		     , @IDSEDE = COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE)
			 , @COMPANIA = COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA)
			 , @SYS_COMPUTERNAME = COALESCE(USUSU.SYS_ComputerName,HOST_NAME())
		FROM USUSU 
		     LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
		WHERE 
		     USUSU.USUARIO = @USUARIO
		
		BEGIN TRY           
			PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE=' + COALESCE(@IDSEDE,'SIN SEDE')   
			SELECT @CNSRPDX=''

			EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@RPDX', @CNSRPDX OUTPUT  
			SELECT @CNSRPDX = @IDSEDE+REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)

			PRINT '@CNSRPDX='+COALESCE(@CNSRPDX,'')   
            
			UPDATE FPAG SET CNSRPDX=@CNSRPDX WHERE CNSFPAG=@CNSFPAG
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK,@CNSRPDX CNSRPDX
		RETURN 
	END  
   IF @METODO='CARGAR_SEDES'     
   BEGIN         
      SELECT 'OK'OK,DBO.FNK_FECHA_GRINGA(DBO.FNK_DIA_DEL_MES(YEAR(GETDATE()),MONTH(GETDATE())-1,'PRIMERO')) F_INICIAL
      SELECT SED.IDSEDE value, SED.DESCRIPCION label
      FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_COMPUTERNAME=UBEQ.SYS_COMPUTERNAME
                 LEFT JOIN SED ON COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE)=SED.IDSEDE
      WHERE USUSU.USUARIO=@USUARIO
      RETURN
   END  
   IF @METODO='TRAE_PAGO'     
   BEGIN         
      SELECT @CNSFPAG=CNSFPAG      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSFPAG  VARCHAR(20)   '$.CNSFPAG'
      )
      IF EXISTS(SELECT * FROM FPAG WHERE CNSFPAG=@CNSFPAG)
      BEGIN
         IF EXISTS(SELECT * FROM FPAGD WHERE CNSFPAG=@CNSFPAG)
         BEGIN
            SELECT 'KO'KO,'Este Pago tiene facturas Asignadas no se Permiten cambios'ERROR
         END
         ELSE
         BEGIN
            SELECT 'OK'OK
            SELECT FPAG.CNSFPAG,FPAG.INGRESO,DBO.FNK_FECHA_GRINGA(FPAG.FECHA)FECHA,BCO.BANCO,CONCAT(BCO.BANCO,'-',BCO.DESCRIPCION) DESCRIPCION ,BSU.SUCURSAL,BSU.DESCRIPCION AS DESCSUCURSAL,
            TER.IDTERCERO,TER.RAZONSOCIAL,FPAG.CTA_BCO,FPAG.ITEM,FPAG.RENGLON,FPAG.NOCONTABILIZA,FPAG.NUMERODOCUMENTO,FPAG.VALORPAGO,
            BANCODOC,FPAG.CODCAJA,FPAG.CNSFACJ,FPAG.VLRGLOSAS,FPAG.VLRIMPUESTOS,FPAG.VLRAJUSTEPESO,FPAG.VLRDTOFINAN,
            FPAG.OBSERVACION,DBO.FNK_FECHA_GRINGA(FPAG.FECHAPAGO)FECHAPAGO
            FROM FPAG INNER JOIN TER  ON FPAG.IDTERCERO=TER.IDTERCERO
                      LEFT JOIN BMOV ON FPAG.BANCO=BMOV.BANCO AND FPAG.SUCURSAL=BMOV.SUCURSAL AND FPAG.CTA_BCO=BMOV.CTA_BCO AND FPAG.ITEM=BMOV.ITEM
                      LEFT JOIN BCO  ON FPAG.BANCO=BCO.BANCO
                      LEFT JOIN BSU  ON FPAG.BANCO=BSU.BANCO AND FPAG.SUCURSAL=BSU.SUCURSAL
            WHERE FPAG.CNSFPAG=@CNSFPAG
         END
      END
      ELSE
      BEGIN
         SELECT 'KO'KO,'No se Encontro Pago Seleccionado'ERROR
      END
      RETURN
   END  
	IF @METODO = 'TRAE_IMPUESTOS'     
	BEGIN  
		SELECT 'OK' OK

		SELECT @IMPUESTO=DBO.FNK_VALORVARIABLE('IDCLASE_REC')
		SELECT @CLASE=DBO.FNK_VALORVARIABLE('IDIMPUESTO_REC')

		SELECT CAST(FIMP.IDIMPUESTO AS VARCHAR(20))+'|'+CAST(FIMPD.IDCLASE AS VARCHAR(10))+'|'+CAST(FIMPDV.ITEM AS VARCHAR(20)) IMPUESTO,FIMP.DESCRIPCION+' -- '+FIMPD.DESCRIPCION DESCRIPCION
		FROM FIMP INNER JOIN FIMPD ON FIMP.IDIMPUESTO=FIMPD.IDIMPUESTO
				INNER JOIN FIMPDV ON FIMP.IDIMPUESTO=FIMPDV.IDIMPUESTO AND FIMPD.IDCLASE=FIMPDV.IDCLASE
		WHERE FIMPDV.FECHAFIN>GETDATE()
		--AND FIMP.IDIMPUESTO=CASE WHEN COALESCE(@IMPUESTO,'')<>'' THEN @IMPUESTO ELSE FIMP.IDIMPUESTO END
		--AND FIMPD.IDCLASE=CASE WHEN COALESCE(@CLASE,'')<>'' THEN @CLASE ELSE FIMPDV.IDCLASE END
		--AND COALESCE(FIMPDV.VALOR,0)>0

		IF DBO.FNK_VALORVARIABLE('MOBSERVADEVOLFACTURA')='SI'
		BEGIN
			SELECT CNSFCGLO AS value,CNSFCGLO+' --'+LEFT(DESCRIPCION,100) label FROM FCGLO WHERE CLASE='Glosa'
		END
		ELSE
		BEGIN 
			SELECT ''value,''label
		END
		RETURN 
	END 
	IF @METODO = 'ADD_FACTURA'     
	BEGIN
      
		DECLARE @FIMP AS TABLE(
		CNS  VARCHAR(20),
			N_FACTURA VARCHAR(20),
			TIPO      VARCHAR(2),
			CNSGLO    VARCHAR(20),
			IDIMPUESTO VARCHAR(20),
			IDCLASE    VARCHAR(20),
			FACTOR     DECIMAL(7,2),
			ITEMFIMPDV INT,
			BASE       DECIMAL(14,2),
			VLRIMPTO   DECIMAL(14,2),
			ESGLOBAL   BIT,
			MODOINGRESO VARCHAR(1),
			IMPORIGEN   VARCHAR(20),
			TBASE       VARCHAR(3)
		)
		SELECT @DATOS=ADDFACTURA,@DATOS1 = ADDIMPUESTO      
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
			ADDFACTURA NVARCHAR(MAX) AS JSON,
			ADDIMPUESTO NVARCHAR(MAX) AS JSON 
			)           
      
			SELECT @N_FACTURA=N_FACTURA,@VLR_FACTURA=CONVERT(DECIMAL(14,2),COALESCE(VLR_FACTURA,'0')),@VLR_GLOSA=CONVERT(DECIMAL(14,2),COALESCE(VLR_GLOSA,0)),
				@TIPOF=TIPOF,@CNSGLO=CNSGLO,@CNSFPAG=CNSFPAG,@CNSRPDX=CNSRPDX,@CNSCXC=CNSCXC,@MOTIGLOSA=MOTIGLOSA,@MOTIVO01=MOTIVO01,@MOTIVO02=MOTIVO02       
			FROM   OPENJSON (@DATOS)
			WITH   (  
			N_FACTURA   VARCHAR(20)     '$.N_FACTURA',
			VLR_FACTURA VARCHAR(20)   '$.VLR_FACTURA',
			VLR_GLOSA   VARCHAR(20)    '$.VRL_GLOSA',
			TIPOF       VARCHAR(2)    '$.TIPOF',
			CNSGLO      VARCHAR(20)    '$.CNSGLO',
			CNSFPAG     VARCHAR(20)    '$.CNSFPAG',
			CNSRPDX     VARCHAR(20)    '$.CNSRPDX',
			CNSCXC      VARCHAR(20)   '$.CNSCXC',
			MOTIGLOSA   VARCHAR(250)   '$.MOTIGLOSA',
			MOTIVO01    VARCHAR(20)     '$.MOTIVO01.value',
			MOTIVO02   VARCHAR(20)     '$.MOTIVO02.value'
			)   
		INSERT INTO @FIMP(CNS, N_FACTURA, TIPO, CNSGLO, IDIMPUESTO, IDCLASE, FACTOR, ITEMFIMPDV, BASE, VLRIMPTO, ESGLOBAL,
					MODOINGRESO,IMPORIGEN,TBASE)
		SELECT  CNSRPDX,N_FACTURA,TIPO,CNSGLO,NULL,NULL,NULL,NULL,0,CONVERT(DECIMAL(14,2),COALESCE(VALOR,'0')),0,'I',IMPUESTO,TBASE
		FROM OPENJSON(@DATOS1)
		WITH (
			N_FACTURA VARCHAR(20)     '$.N_FACTURA',
			TIPO VARCHAR(20)          '$.TIPO',
			CNSGLO VARCHAR(20)        '$.CNSGLO',
			IMPUESTO VARCHAR(20)      '$.IMPUESTO',
			DESCRIPCION VARCHAR(37)   '$.DESCRIPCION',
			TBASE VARCHAR(20)         '$.TBASE',
			VALOR DECIMAL(14,2)       '$.VALOR',
			CNSRPDX VARCHAR(20)       '$.CNSRPDX'      
		)

	  


		IF EXISTS(SELECT * FROM @FIMP)
		BEGIN
			UPDATE @FIMP SET IDIMPUESTO=(SELECT WORD FROM DBO.FNK_EXPLODE(IMPORIGEN,'|') WHERE WORDID=1) WHERE COALESCE(IMPORIGEN,'')<>''
			UPDATE @FIMP SET IDCLASE=(SELECT WORD FROM DBO.FNK_EXPLODE(IMPORIGEN,'|') WHERE WORDID=2)WHERE COALESCE(IMPORIGEN,'')<>''
			UPDATE @FIMP SET ITEMFIMPDV=(SELECT WORD FROM DBO.FNK_EXPLODE(IMPORIGEN,'|') WHERE WORDID=3)WHERE COALESCE(IMPORIGEN,'')<>''

			UPDATE @FIMP SET FACTOR=B.VALOR
			FROM @FIMP A INNER JOIN FIMPDV B ON A.IDCLASE=B.IDCLASE AND A.IDIMPUESTO=B.IDIMPUESTO AND A.ITEMFIMPDV=B.ITEM
			WHERE COALESCE(IMPORIGEN,'')<>''

			UPDATE @FIMP SET BASE=CASE WHEN TBASE='V' THEN ROUND(VLRIMPTO/(FACTOR/100),2) ELSE BASE END WHERE COALESCE(IMPORIGEN,'')<>''
			UPDATE @FIMP SET VLRIMPTO=CASE WHEN TBASE='B' THEN ROUND(BASE*(FACTOR/100),2) ELSE VLRIMPTO END WHERE COALESCE(IMPORIGEN,'')<>''

			SELECT @VLR_IMPUESTOS=SUM(VLRIMPTO) FROM @FIMP
		END
		ELSE
		BEGIN
			SELECT @VLR_IMPUESTOS=0
		END

		--SALDO NETO: 

		--SELECT * FROM @FIMP
		--SALDO NETO
		SELECT @VLR_FACTURA = SALDONETO FROM VWK_CXC1 WHERE N_FACTURA = @N_FACTURA
	 
		BEGIN TRY           
			INSERT INTO FTIMP(CNS, N_FACTURA, TIPO, CNSGLO, IDIMPUESTO, IDCLASE, FACTOR, ITEMFIMPDV, BASE, VLRIMPTO, ESGLOBAL, MODOINGRESO)
			SELECT CNS,@N_FACTURA,TIPO,CNSGLO,IDIMPUESTO,IDCLASE,FACTOR,ITEMFIMPDV,@VLR_FACTURA, @VLR_FACTURA * (FACTOR/100),2,MODOINGRESO  FROM @FIMP      
			
			--GET VALOR11 
			SELECT @VLR_IMPUESTOS = SUM(VLRIMPTO) FROM FTIMP WHERE CNS = @CNSRPDX AND N_FACTURA = @N_FACTURA AND TIPO = 'F' AND (COALESCE(ESGLOBAL, 0) = 0 OR COALESCE(ESGLOBAL, 0) = 2 )

			INSERT INTO RPDX (CNS,CNS1,GRUPOETAREO,CNS2,ID10,VALOR30,VALOR1,VALOR2,VALOR11,CANTIDAD3,VALOR7,VALOR9,CNS5,CANTIDAD,CANTIDAD1,CANTIDAD2,VALOR10,STRINGMAX,ID11,ID12)
			SELECT @CNSRPDX,@N_FACTURA,@TIPOF,@CNSCXC,@USUARIO,@VLR_FACTURA,@VLR_FACTURA,@VLR_GLOSA,@VLR_IMPUESTOS,0,0,0,@CNSGLO,0,0,0,0,@MOTIGLOSA,@MOTIVO01,@MOTIVO02

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		UPDATE FCXCDV SET MARCAPAGO=1 WHERE N_FACTURA=@N_FACTURA AND TIPO=@TIPOF AND CNSGLO=@CNSGLO
		SELECT 'OK' OK
		RETURN 
	END      
	IF @METODO = 'SUBIR_TXT'     
	BEGIN         
	  
		--DECLARE @TABLA AS TABLE(
		--	ITEM INT IDENTITY(1,1),
		--	VALOR VARCHAR(MAX)
		--)

		SELECT  @NROLINEAS=COUNT(*)
		FROM OPENJSON(@PARAMETROS, '$.LINEAS') 

		SELECT @CNSRPDX = JSON_VALUE(@PARAMETROS, '$.CNSRPDX'), 
		       @CNSFPAG = JSON_VALUE(@PARAMETROS, '$.CNSFPAG');

		IF @NROLINEAS>0
		BEGIN

			SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA),
			@SYS_COMPUTERNAME=COALESCE(USUSU.SYS_ComputerName,HOST_NAME())
			FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
			WHERE USUSU.USUARIO=@USUARIO


			IF @CNSRPDX = ''
			BEGIN
				PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE='+COALESCE(@IDSEDE,'SIN SEDE')   
				SELECT @CNSRPDX=''
				EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@RPDX', @CNSRPDX OUTPUT  
				SELECT @CNSRPDX = @IDSEDE+REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)
				PRINT '@CNSRPDX='+COALESCE(@CNSRPDX,'') 
					
				UPDATE FPAG SET CNSRPDX = @CNSRPDX WHERE CNSFPAG = @CNSFPAG

			END

			SELECT @INDICE=0
			DECLARE SUBIR_CURSOR CURSOR FOR   
			SELECT VALUE 
			FROM OPENJSON(@PARAMETROS, '$.LINEAS')		  
			OPEN SUBIR_CURSOR  
			FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
			WHILE @@FETCH_STATUS = 0  
			BEGIN  	  
				DELETE FROM @TABLA WHERE 1=1

			IF LEN(@LINEA)<5
			BEGIN 
				FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
				CONTINUE
			END
				INSERT INTO @TABLA(VALOR)
				SELECT VALUE FROM string_split(@LINEA,',')

			SELECT @N_FACTU        = VALOR FROM @TABLA WHERE ITEM=1+@INDICE
			SELECT @VRL_PAGOF      = CONVERT(DECIMAL(14,2),COALESCE(VALOR,'0')) FROM @TABLA WHERE ITEM=2+@INDICE
			SELECT @VLR_GLOSAP     = CONVERT(DECIMAL(14,2), IIF( VALOR = '' ,'0',COALESCE(VALOR,'0') )) FROM @TABLA WHERE ITEM=3+@INDICE
			SELECT @TIPO_FAC       = VALOR FROM @TABLA WHERE ITEM=4+@INDICE
			SELECT @IDIMPUESTO     = VALOR FROM @TABLA WHERE ITEM=5+@INDICE
			SELECT @IDCLASE        = VALOR FROM @TABLA WHERE ITEM=6+@INDICE
			SELECT @VLR_IMP        = CONVERT(DECIMAL(14,2),IIF( VALOR = '' ,'0',COALESCE(VALOR,'0'))) FROM @TABLA WHERE ITEM=7+@INDICE
			SELECT @MOTIVO_GLOSA01 = VALOR FROM @TABLA WHERE ITEM=8+@INDICE
			SELECT @MOTIVO_GLOSA02 = VALOR FROM @TABLA WHERE ITEM=9+@INDICE
			SELECT @OBSERVACIONES  = VALOR FROM @TABLA WHERE ITEM=10+@INDICE
			SELECT @IMP_ICA        = VALOR FROM @TABLA WHERE ITEM=11+@INDICE
			SELECT @CLASE_ICA      = VALOR FROM @TABLA WHERE ITEM=12+@INDICE
			SELECT @VLR_ICA        = CONVERT(DECIMAL(14,2),IIF( VALOR = '' ,'0',COALESCE(VALOR,'0'))) FROM @TABLA WHERE ITEM=13+@INDICE
			SELECT @VLR_DTO        = CONVERT(DECIMAL(14,2),IIF( VALOR = '' ,'0',COALESCE(VALOR,'0'))) FROM @TABLA WHERE ITEM=14+@INDICE
			SET @ERROR=''

			PRINT '@N_FACTU '+ @N_FACTU
			IF NOT EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTU AND ESTADO='P' AND COALESCE(TIPOANULACION,'')<>'NC')
			BEGIN
				--SET @ERROR += 'Factura no existe o se encuentra anulada, no se puede procesar.'
				INSERT INTO @TBLERRORES (ERROR)
				SELECT CONCAT(@N_FACTU,' - ','Factura no existe o se encuentra anulada, no se puede procesar.')
			END

			ELSE IF EXISTS (SELECT * FROM RPDX WHERE CNS = @CNSRPDX AND RPDX.ID1 = @N_FACTURA)
			BEGIN
				--SET @ERROR +='Factura duplicada.'
				INSERT INTO @TBLERRORES (ERROR)
				SELECT CONCAT(@N_FACTU,' - ','Factura duplicada.')
			END

			ELSE IF NOT EXISTS(SELECT * FROM FCXCD WHERE N_FACTURA=@N_FACTURA AND SALDO<=(@VRL_PAGOF+@VLR_GLOSAP)) -- STORRES Validar tema del impuesto. No lo tiene en cuenta
			BEGIN
				--SET @ERROR +='Factura no tiene Saldo en Cartera  no se puede subir.'
				INSERT INTO @TBLERRORES (ERROR)
				SELECT CONCAT(@N_FACTU,' - ','Factura no tiene Saldo en Cartera  no se puede subir.')
			END

			ELSE IF COALESCE(@VRL_PAGOF+@VLR_GLOSAP,0)<=0
			BEGIN
				--SET @ERROR +='Valor de la nota no puede ser menor o igual a cero, No se Puede Subir.' 
				INSERT INTO @TBLERRORES (ERROR)
				SELECT CONCAT(@N_FACTU,' - ','Valor de la nota no puede ser menor o igual a cero, No se Puede Subir.')
			END
			ELSE IF ((@IDIMPUESTO = '' OR @IDCLASE = '') AND @VLR_IMP > 0 )
			BEGIN
				INSERT INTO @TBLERRORES (ERROR)
				SELECT CONCAT(@N_FACTU,' - ','No Existe impueso asociado al valor, No se puede Subir')
			END

			ELSE IF NOT EXISTS (  SELECT CNSCXC,SALDONETO,COALESCE(CNSGLO,'') FROM FCXCDV WHERE N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC)
			BEGIN
				INSERT INTO @TBLERRORES (ERROR)
				SELECT CONCAT(@N_FACTU,' - ','No Existe Cuenta de Cobro para esta Factura, Revise la Radicacion')
			END

			ELSE IF (@TIPO_FAC = 'G' OR @TIPO_FAC = 'R' ) AND NOT EXISTS ( SELECT CNSCXC,SALDONETO,COALESCE(CNSGLO,'') FROM FCXCDV WHERE N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC)
			BEGIN
				INSERT INTO @TBLERRORES (ERROR)
				SELECT CONCAT(@N_FACTU,' - ','No Existe Consecutivo de Glosa, Revise las Respuestas de Glosa')
			END

			ELSE IF (SELECT SALDONETO FROM FCXCDV WHERE N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC) <= 0 
			     OR (SELECT SALDONETO FROM FCXCDV WHERE N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC) < @VRL_PAGOF
			BEGIN
				INSERT INTO @TBLERRORES (ERROR)
				SELECT CONCAT(@N_FACTU,' - ','El Saldo de la Factura es menor que el valor Recaudado.')
			END
			ELSE IF ( @TIPO_FAC = 'F') AND (SELECT COUNT(*) FROM FCXCDV WHERE N_FACTURA = @N_FACTU) > 1
			BEGIN
				INSERT INTO @TBLERRORES (ERROR)
				SELECT CONCAT(@N_FACTU,' - ','Esta Factura ya Tiene Asociada una Glosa .. No se puede Subir')
			END

			ELSE
			BEGIN
			PRINT 'PASA VALIDACIONES @N_FACTU '+ @N_FACTU

			SELECT @SaldoNeto = SALDONETO FROM FCXCDV WHERE N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC

			IF @VLR_GLOSAP = 0
			BEGIN
				IF @IDIMPUESTO <> '' AND @VLR_IMP > 0
				BEGIN
					IF @IDCLASE <> ''
					BEGIN
						INSERT INTO FTIMP (CNS, N_FACTURA, TIPO, CNSGLO, IDIMPUESTO, IDCLASE, FACTOR, ITEMFIMPDV, BASE, VLRIMPTO, ESGLOBAL, MODOINGRESO)
						SELECT @CNSRPDX, @N_FACTU, @TIPO_FAC,'', @IDIMPUESTO, @IDCLASE, VALOR, ITEM, @VRL_PAGOF, @VLR_IMP,'2', 'I' FROM FIMPDV  
						WHERE IDIMPUESTO=@IDIMPUESTO AND IDCLASE = @IDCLASE AND FECHAINI<= GETDATE() AND FECHAFIN > GETDATE()
					END
				END
				
				IF @IMP_ICA <> '' AND @VLR_ICA>0 AND @CLASE_ICA<> ''
				BEGIN
					INSERT INTO FTIMP (CNS, N_FACTURA, TIPO, CNSGLO, IDIMPUESTO, IDCLASE, FACTOR, ITEMFIMPDV, BASE, VLRIMPTO, ESGLOBAL, MODOINGRESO)
					SELECT @CNSRPDX, @N_FACTU, @TIPO_FAC,'', @IMP_ICA, @CLASE_ICA, VALOR, ITEM, @VRL_PAGOF, @VLR_ICA,'2', 'I' FROM FIMPDV  
					WHERE IDIMPUESTO=@IDIMPUESTO AND IDCLASE = @IDCLASE AND FECHAINI<= GETDATE() AND FECHAFIN > GETDATE()
				END
			END

				SELECT @SUMIMP = SUM(VLRIMPTO) FROM FTIMP WHERE CNS = @CNSRPDX AND N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC AND (COALESCE(ESGLOBAL, 0) = 0 OR COALESCE(ESGLOBAL, 0) = 2 )
				
				IF @VRL_PAGOF > 0 AND @VLR_GLOSAP = 0
				BEGIN
					SET @VALOR1 = @VRL_PAGOF
				END

				IF @VRL_PAGOF = @VLR_GLOSAP
				BEGIN
					SET @VALOR1   = @VLR_GLOSAP
					SET @CANTIDAD = 1
				END
				ELSE IF @VRL_PAGOF > 0 AND @VLR_GLOSAP > 0
				BEGIN
					SET @VALOR1 = @VRL_PAGOF
				END
				SELECT @MIVA = MIVA, @VALORSERVICIOS= VALORSERVICIOS FROM FTR WHERE N_FACTURA= @N_FACTU

				INSERT INTO RPDX( CNS,ID1, VALOR1, VALOR2, ID2, ID3, ID4, VALOR3, ID5, ID6, STRINGGRANDE1,
				                  ID7, ID8, VALOR4, VALOR11, VALOR7, VALOR9, VALOR5, CANTIDAD, CANTIDAD2, VALOR10, STRINGMAX, STRINGMEDIO1, GRUPOETAREO, ID11, ID12, VALOR12)
				SELECT            @CNSRPDX, @N_FACTU, @VALOR1, @VLR_GLOSAP, @TIPO_FAC, @IDIMPUESTO, @IDCLASE, @VLR_IMP, @MOTIVO_GLOSA01, @MOTIVO_GLOSA02,@OBSERVACIONES,
						          @IMP_ICA, @CLASE_ICA, @VLR_ICA, @SUMIMP, 0,0, @VLR_DTO, @CANTIDAD, @MIVA ,@VALORSERVICIOS, @ERROR, @OBSERVACIONES, @TIPO_FAC, @MOTIVO_GLOSA01, @MOTIVO_GLOSA02, @VLR_DTO

			END

			SET @INDICE +=14
			FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
			END  
		  
			CLOSE SUBIR_CURSOR  
			DEALLOCATE SUBIR_CURSOR  

			UPDATE FCXCDV SET MARCAPAGO = 1 
			FROM  FCXCDV
			INNER JOIN RPDX ON FCXCDV.CNSCXC=RPDX.CNS2 AND FCXCDV.N_FACTURA=RPDX.CNS1 AND FCXCDV.TIPO=RPDX.GRUPOETAREO AND FCXCDV.CNSGLO=RPDX.CNS5 
			WHERE RPDX.CNS = @CNSRPDX

			SELECT @NROLINEAS=COUNT(*) FROM @TBLERRORES

			SELECT 'OK' OK, @CNSRPDX CNSRPDX, @NROLINEAS ERRADOS

			SELECT * FROM @TBLERRORES

			RETURN

		END
		ELSE
		BEGIN
			SELECT 'KO','No se encontraron Datos para Procesar, Verfique e intente de nuevo' ERROR
			RETURN
		END
	END  
	-- Lo nuevo es de aquí para abajo :) --JCLLAMAS
	IF @METODO = 'INSERTAR'
	BEGIN
	   SELECT   @IDSEDE = JSON_VALUE(@PARAMETROS, '$.IDSEDE'),
		         @BANCO = JSON_VALUE(@PARAMETROS, '$.BANCO'),
		         @SUCURSAL = JSON_VALUE(@PARAMETROS, '$.SUCURSAL'),
		         @CTA_BCO = JSON_VALUE(@PARAMETROS, '$.CTA_BCO'),
		         @ITEM = JSON_VALUE(@PARAMETROS, '$.ITEM'),
		         @RENGLON = JSON_VALUE(@PARAMETROS, '$.RENGLON'),
		         @IDTERCERO = JSON_VALUE(@PARAMETROS, '$.IDTERCERO'),
		         @INGRESO = JSON_VALUE(@PARAMETROS, '$.INGRESO'),
		         @NUMERODOCUMENTO = JSON_VALUE(@PARAMETROS, '$.NUMERODOCUMENTO'),
		         @OBSERVACION = JSON_VALUE(@PARAMETROS, '$.OBSERVACION'),
		         @NOCONTABILIZA = JSON_VALUE(@PARAMETROS, '$.NOCONTABILIZA'),
		         @FECHA = CONVERT(DATE,JSON_VALUE(@PARAMETROS, '$.FECHA')),
		         @FECHAPAGO =CONVERT(DATE,JSON_VALUE(@PARAMETROS, '$.FECHAPAGO')),
		         @VALORPAGO = JSON_VALUE(@PARAMETROS, '$.VALORPAGO'),
		         @VLRGLOSAS = JSON_VALUE(@PARAMETROS, '$.VLRGLOSAS'),
		         @VLRIMPUESTOS = JSON_VALUE(@PARAMETROS, '$.VLRIMPUESTOS'),
		         @VLRAJUSTEPESO = JSON_VALUE(@PARAMETROS, '$.VLRAJUSTEPESO'),
		         @DTOFNCIERO = JSON_VALUE(@PARAMETROS, '$.DTOFNCIERO'),
		         @VLRDTOFINAN = JSON_VALUE(@PARAMETROS, '$.VLRDTOFINAN'),
		         @CNSFPAG = JSON_VALUE(@PARAMETROS, '$.CNSFAPG');


		--SET @FECHA = DATEADD(hour, DATEPART(hour, CURRENT_TIMESTAMP), 
		--				DATEADD(minute, DATEPART(minute, CURRENT_TIMESTAMP), 
		--				DATEADD(second, DATEPART(second, CURRENT_TIMESTAMP), 
		--				CONVERT(datetime, CONVERT(date, @FECHA)))));
      IF EXISTS(SELECT  * FROM FPAG WHERE INGRESO=@INGRESO AND ESTADO='Activo' AND CERRADO=0 AND IDTERCERO=@IDTERCERO AND USUARIO=@USUARIO)
      BEGIN
         SELECT 'KO' OK,'Existen Pagos Abiertos para este tercero y este Usuario, No se Permiten Varios pagos Abiertos.' ERROR
       --  RETURN
      END
      BEGIN TRY           
			-- Insertar los valores seleccionados en la tabla FPAG

			SELECT @CNSFPAG = NULL 
			EXEC SPK_GENCONSECUTIVO '01', @IDSEDE, '@FPAG',  @CNSFPAG OUTPUT  
			SELECT @CNSFPAG = @IDSEDE +  REPLACE(SPACE(8 - LEN(@CNSFPAG))+LTRIM(RTRIM(@CNSFPAG)),SPACE(1),0)

			INSERT INTO FPAG (CNSFPAG, FECHA, IDTERCERO, BANCO, NUMERODOCUMENTO, VALORPAGO, CERRADO, USUARIO, VLRAJUSTEPESO, 
								AJUSTADAPESO, DTOFNCIERO, CONTABILIZADO, INGRESO, SUCURSAL, CTA_BCO, ITEM, RENGLON, NOCONTABILIZA, FECHAPAGO, 
								OBSERVACION, ESTADO, IDSEDE)
			VALUES (@CNSFPAG, @FECHA, @IDTERCERO, @BANCO, @NUMERODOCUMENTO, @VALORPAGO, 0, @USUARIO, @VLRAJUSTEPESO, 
					@VLRAJUSTEPESO, @DTOFNCIERO, 0, @INGRESO, @SUCURSAL, @CTA_BCO, @ITEM, @RENGLON, @NOCONTABILIZA, COALESCE(@FECHAPAGO,@FECHA), 
					@OBSERVACION, 'Activo', @IDSEDE);   

         IF @INGRESO='BANCOS'
         BEGIN
            UPDATE BMOVD SET ENPAGOS=1 WHERE BANCO=@BANCO AND SUCURSAL=@SUCURSAL AND CTA_BCO=@CTA_BCO AND ITEM=@ITEM AND RENGLON=@RENGLON
         END

			PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE=' + COALESCE(@IDSEDE,'SIN SEDE')   
			SELECT @CNSRPDX=''

			EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@RPDX', @CNSRPDX OUTPUT  
			SELECT @CNSRPDX = @IDSEDE+REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)

			PRINT '@CNSRPDX='+COALESCE(@CNSRPDX,'')   
            
			UPDATE FPAG SET CNSRPDX=@CNSRPDX WHERE CNSFPAG=@CNSFPAG
       
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      SELECT FPAG.CNSFPAG,FPAG.IDSEDE	,FPAG.INGRESO	,CASE COALESCE(FPAG.CERRADO, 0)		WHEN 0 THEN 'Abierto' ELSE 'Cerrado'END CERRADO	,DBO.FNK_FECHA_GRINGA(FPAG.FECHAPAGO) F_PAGO	,DBO.FNK_FECHA_GRINGA(FPAG.FECHA) F_LEGALIZA
	         ,TER.IDTERCERO	,TER.NIT	,TER.RAZONSOCIAL	,COALESCE(FPAG.VALORPAGO, 0) VALORPAGO	,COALESCE(FPAG.VLRTOTAL, 0) VLRTOTAL
	         ,COALESCE(FPAG.VLRITEMS, 0) VLRITEMS	,COALESCE(FPAG.VLRIMPUESTOS, 0) VLRIMPUESTOS	,COALESCE(FPAG.VLRAJUSTEPESO, 0) VLRAJUSTEPESO
	         ,COALESCE(FPAG.VLRDTOFINAN, 0) VLRDTOFINAN	,COALESCE(FPAG.VLRGLOSAS, 0) VLRGLOSAS	,COALESCE(FPAG.CONTABILIZADO, 0) CONTABILIZADA
	         ,COALESCE(FPAG.NROCOMPROBANTE, '') NROCOMPROBANTE	,FPAG.ESTADO
	         ,COALESCE(FPAG.CNSRPDX, '') CNSRPDX	,FPAG.USUARIO
      FROM FPAG INNER JOIN TER ON FPAG.IDTERCERO = TER.IDTERCERO
      WHERE CNSFPAG=@CNSFPAG
      RETURN 
	END
	IF @METODO = 'ACTUALIZAR'
	BEGIN
	   SELECT   @IDSEDE = JSON_VALUE(@PARAMETROS, '$.IDSEDE'),
		         @BANCO = JSON_VALUE(@PARAMETROS, '$.BANCO'),
		         @SUCURSAL = JSON_VALUE(@PARAMETROS, '$.SUCURSAL'),
		         @CTA_BCO = JSON_VALUE(@PARAMETROS, '$.CTA_BCO'),
		         @ITEM = JSON_VALUE(@PARAMETROS, '$.ITEM'),
		         @RENGLON = JSON_VALUE(@PARAMETROS, '$.RENGLON'),
		         @IDTERCERO = JSON_VALUE(@PARAMETROS, '$.IDTERCERO'),
		         @INGRESO = JSON_VALUE(@PARAMETROS, '$.INGRESO'),
		         @NUMERODOCUMENTO = JSON_VALUE(@PARAMETROS, '$.NUMERODOCUMENTO'),
		         @OBSERVACION = JSON_VALUE(@PARAMETROS, '$.OBSERVACION'),
		         @NOCONTABILIZA = JSON_VALUE(@PARAMETROS, '$.NOCONTABILIZA'),
		         @FECHA = CONVERT(DATE,JSON_VALUE(@PARAMETROS, '$.FECHA')),
		         @FECHAPAGO =CONVERT(DATE,JSON_VALUE(@PARAMETROS, '$.FECHAPAGO')),
		         @VALORPAGO = JSON_VALUE(@PARAMETROS, '$.VALORPAGO'),
		         @VLRGLOSAS = JSON_VALUE(@PARAMETROS, '$.VLRGLOSAS'),
		         @VLRIMPUESTOS = JSON_VALUE(@PARAMETROS, '$.VLRIMPUESTOS'),
		         @VLRAJUSTEPESO = JSON_VALUE(@PARAMETROS, '$.VLRAJUSTEPESO'),
		         @DTOFNCIERO = JSON_VALUE(@PARAMETROS, '$.DTOFNCIERO'),
		         @VLRDTOFINAN = JSON_VALUE(@PARAMETROS, '$.VLRDTOFINAN'),
		         @CNSFPAG = JSON_VALUE(@PARAMETROS, '$.CNSFPAG');

      IF EXISTS(SELECT  * FROM FPAG WHERE CNSFPAG=@CNSFPAG AND CERRADO=0 AND ESTADO='Activo')
      BEGIN
         DECLARE 
          @ITEMANT INT
         ,@SUCURSALANT VARCHAR(20)
         ,@BCOANT VARCHAR(20)
         ,@RENGLONANT INT 
         ,@CTA_BCOANT VARCHAR(20)
         ,@INGRESOANT VARCHAR(20)

         SELECT @ITEMANT=ITEM,@SUCURSALANT=SUCURSAL,@BCOANT=BANCO,@RENGLONANT=RENGLON,@CTA_BCOANT=CTA_BCO,@INGRESOANT=INGRESO
         FROM FPAG WHERE CNSFPAG=@CNSFPAG
         IF @INGRESOANT='BANCOS' AND @INGRESO <> 'BANCOS'
         BEGIN
            PRINT 'se actualizan las variables'
            SELECT @ITEM=NULL,@RENGLON=NULL,@BANCO=NULL,@CTA_BCO=NULL,@SUCURSAL=NULL,@FECHAPAGO=CASE WHEN @FECHAPAGO IS NULL THEN DBO.FNK_GETDATE() END
         END
         BEGIN TRY           
			   UPDATE FPAG SET  FECHAPAGO=@FECHAPAGO, IDTERCERO=@IDTERCERO, BANCO=@BANCO, NUMERODOCUMENTO=@NUMERODOCUMENTO, VALORPAGO=@VALORPAGO,
                             CERRADO=0, USUARIO=@USUARIO, VLRAJUSTEPESO=0,AJUSTADAPESO=0, DTOFNCIERO=0, CONTABILIZADO=0, INGRESO=@INGRESO,
                             SUCURSAL=@SUCURSAL, CTA_BCO=@CTA_BCO, ITEM=@ITEM, RENGLON=@RENGLON, NOCONTABILIZA=@NOCONTABILIZA, FECHA=COALESCE(@FECHA,@FECHAPAGO), 
								   OBSERVACION=@OBSERVACION, ESTADO='Activo', IDSEDE=@IDSEDE
            WHERE CNSFPAG= @CNSFPAG

            IF @INGRESO='BANCOS' AND @INGRESOANT='BANCOS' AND (@BCOANT<>@BANCO OR @SUCURSAL<>@SUCURSALANT OR @ITEM<>@ITEMANT OR @RENGLONANT<>@RENGLON)
            BEGIN
               UPDATE BMOVD SET ENPAGOS=0 WHERE BANCO=@BCOANT AND SUCURSAL=@SUCURSALANT AND CTA_BCO=@CTA_BCOANT AND ITEM=@ITEMANT AND RENGLON=@RENGLONANT
               UPDATE BMOVD SET ENPAGOS=1 WHERE BANCO=@BANCO AND SUCURSAL=@SUCURSAL AND CTA_BCO=@CTA_BCO AND ITEM=@ITEM AND RENGLON=@RENGLON
            END
            ELSE
            BEGIN
               IF @INGRESOANT='BANCOS' AND @INGRESO <> 'BANCOS'
               BEGIN
                  UPDATE BMOVD SET ENPAGOS=0 WHERE BANCO=@BCOANT AND SUCURSAL=@SUCURSALANT AND CTA_BCO=@CTA_BCOANT AND ITEM=@ITEMANT AND RENGLON=@RENGLONANT  
               END
               ELSE
               BEGIN 
                  IF @INGRESOANT<>'BANCOS' AND @INGRESO = 'BANCOS'
                  BEGIN
                     UPDATE BMOVD SET ENPAGOS=1 WHERE BANCO=@BANCO AND SUCURSAL=@SUCURSAL AND CTA_BCO=@CTA_BCO AND ITEM=@ITEM AND RENGLON=@RENGLON
                  END
               END
            END        
         END TRY
         BEGIN CATCH
                  INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Consecutivo de pago no encontrado o ya esta cerrado'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
	END
	IF @METODO = 'CONSULTACXC'
	BEGIN
	    SELECT  @IDTERCERO = JSON_VALUE(@PARAMETROS, '$.IDTERCERO');

		SELECT 
			 VWK_CXC1.IDSEDE, VWK_CXC1.CNSCXC, VWK_CXC1.IDTERCERO, VWK_CXC1.FECHACXC, VWK_CXC1.N_FACTURA, VWK_CXC1.SALDONETO, VWK_CXC1.TIPO, VWK_CXC1.INDRECIBIDO, VWK_CXC1.CNSGLO, VWK_CXC1.MIVA, VWK_CXC1.VALORSERVICIOS
		FROM VWK_CXC1 
		WHERE 
			(IDTERCERO = @IDTERCERO OR (IDTERCERO IN (SELECT IDTERCEROFU FROM TERFU WHERE IDTERCERO = @IDTERCERO)))
			AND SALDONETO > 0 AND MARCAPAGO = 0 
		
		RETURN
	END
	IF @METODO = 'RELIQUIDAR'
	BEGIN
	   SELECT  @CNSCXC = JSON_VALUE(@PARAMETROS, '$.CNSCXC'),
		        @N_FACTURA = JSON_VALUE(@PARAMETROS, '$.N_FACTURA');
      BEGIN TRY           
            EXEC SPK_RELIQUIDA_FTR @CNSCXC,@N_FACTURA               
      END TRY
      BEGIN CATCH
              INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN   
	END
	IF @METODO = 'CONSULTARPDX'
	BEGIN
	SELECT  @CNSRPDX = JSON_VALUE(@PARAMETROS, '$.CNSRPDX');

		declare  @VlrSinIvaP DECIMAL(14,4) = 0
		declare  @SALDO DECIMAL(14,4) = 0

		SELECT CNS1, VALOR1, ITEM, VALOR2, CANTIDAD , VALOR7, VALOR9, VALOR11, VALOR12
			, ((RPDX.VALOR1 - @VlrSinIvaP) - RPDX.VALOR11 - RPDX.VALOR2) AS VLRPAGOSIN
			, 0 AS DTOFINAN
			, CANTIDAD1 
			, IIF( COALESCE(CANTIDAD1,0)=1, 0, (( (RPDX.VALOR1 - @VlrSinIvaP) - RPDX.VALOR11 - RPDX.VALOR2) - 0 ) ) AS VLRPAGO
			, GRUPOETAREO, CNS5
			, @SALDO AS SALDO
			, CANTIDAD2, CANTIDAD3
			, TER.RAZONSOCIAL
			, VALOR10, VALOR30
		FROM RPDX 
		INNER JOIN FTR ON FTR.N_FACTURA = RPDX.CNS1 
		INNER JOIN TER ON FTR.IDTERCERO = TER.IDTERCERO
		WHERE RPDX.CNS = @CNSRPDX

		--SELECT 'OK'OK

		--SELECT RPDX.CNS, ITEM, RPDX.CNS1 N_FACTURA,RPDX.VALOR1 VLRFACTURA,RPDX.VALOR2 VLRGLOSA,RPDX.CANTIDAD AF,RPDX.VALOR7 VLRCOPAGO,RPDX.VALOR9 PAGOEXTRA,
	--                            RPDX.VALOR11 VLRIMP,COALESCE(RPDX.VALOR12,0) VLRDTO,COALESCE(RPDX.CANTIDAD1,0) SINPAGO,RPDX.GRUPOETAREO TIPO,RPDX.CNS5 CNSGLO,RPDX.CANTIDAD2 IVA,
	--                            RPDX.CANTIDAD3 LEVANTADO,RPDX.VALOR10 VLSERVICIOS,RPDX.VALOR30 SALDOORIGEN

		--FROM RPDX WHERE RPDX.CNS = @CNSRPDX
	
	END
	IF @METODO = 'DEL_FACTURA'
	BEGIN
		SELECT      @CNS1 = JSON_VALUE(@PARAMETROS, '$.CNS1'),
				@GRUPOETAREO = JSON_VALUE(@PARAMETROS, '$.GRUPOETAREO'),
					@CNS5 = JSON_VALUE(@PARAMETROS, '$.CNS5'),
					@CNSRPDX = JSON_VALUE(@PARAMETROS, '$.CNSRPDX'),
					@ITEM = JSON_VALUE(@PARAMETROS, '$.ITEM');

		IF (@GRUPOETAREO = 'G')
		BEGIN
			UPDATE FCXCDV SET MARCAPAGO = 0 WHERE N_FACTURA = @CNS1 AND TIPO = @GRUPOETAREO AND CNSGLO = @CNS5
			DELETE FTIMP WHERE COALESCE(ESGLOBAL,0)= 2 AND CNS = @CNSRPDX AND N_FACTURA = @CNS1 AND TIPO = @GRUPOETAREO AND CNSGLO = @CNS5
		END
		ELSE
		BEGIN
			DELETE FTIMP WHERE COALESCE(ESGLOBAL,0)= 2 AND CNS = @CNSRPDX AND N_FACTURA = @CNS1 AND TIPO = @GRUPOETAREO
			UPDATE FCXCDV SET MARCAPAGO = 0 WHERE N_FACTURA = @CNS1 AND TIPO = @GRUPOETAREO
		END

		DELETE RPDX WHERE CNS = @CNSRPDX AND ITEM = @ITEM

		SELECT 'OK'OK

	END
	IF @METODO = 'IMPUESTOS'
	BEGIN
      
		SELECT IDIMPUESTO, CONCAT(IDIMPUESTO,' - ',DESCRIPCION) DESCRIPCION, TIPO
		,IIF(DBO.FNK_VALORVARIABLE('IDIMPUESTO_REC') = FIMP.IDIMPUESTO, 'Si', 'No') AS DEF
		FROM FIMP
	END
	IF @METODO = 'IMPUESTOSD'
	BEGIN
		SELECT @IDIMPUESTO = JSON_VALUE(@PARAMETROS, '$.IDIMPUESTO');
		SELECT @CNSRPDX = JSON_VALUE(@PARAMETROS, '$.CNSRPDX');
		SELECT @N_FACTURA = JSON_VALUE(@PARAMETROS, '$.N_FACTURA');

		SELECT IDIMPUESTO, IDCLASE, CONCAT(IDCLASE, ' - ', DESCRIPCION) AS DESCRIPCION, BASE 
				,IIF(DBO.FNK_VALORVARIABLE('IDCLASE_REC') = FIMPD.IDCLASE, 'Si', 'No') AS DEF
		FROM FIMPD 
		WHERE IDIMPUESTO = @IDIMPUESTO
      AND NOT EXISTS(SELECT * FROM FTIMP WHERE CNS=@CNSRPDX AND N_FACTURA=@N_FACTURA AND FTIMP.IDIMPUESTO=FIMPD.IDIMPUESTO AND FTIMP.IDCLASE=FIMPD.IDCLASE )
	END
	IF @METODO = 'FACTOR'
	BEGIN

		SELECT @IDIMPUESTO = JSON_VALUE(@PARAMETROS, '$.IDIMPUESTO'), @IDCLASE =  JSON_VALUE(@PARAMETROS, '$.IDCLASE');

		SELECT FIMPDV.VALOR, FIMPDV.ITEM FROM  FIMPDV
		WHERE FIMPDV.IDIMPUESTO = @IDIMPUESTO
		AND  FIMPDV.IDCLASE     = @IDCLASE
		AND CONVERT(SMALLDATETIME,GETDATE() ) >= FIMPDV.FECHAINI
		AND CONVERT(SMALLDATETIME,GETDATE() ) <= FIMPDV.FECHAFIN
	END
	IF @METODO = 'ADDFTIMP'
	BEGIN
		SELECT 
				@CNSRPDX = JSON_VALUE(@PARAMETROS, '$.CNS'),
				@N_FACTURA = JSON_VALUE(@PARAMETROS, '$.N_FACTURA'),
				@TIPO_FAC = JSON_VALUE(@PARAMETROS, '$.TIPO'),
				@CNSGLO = JSON_VALUE(@PARAMETROS, '$.CNSGLO'),
				@IDIMPUESTO =  JSON_VALUE(@PARAMETROS, '$.IDIMPUESTO'),
				@IDCLASE =  JSON_VALUE(@PARAMETROS, '$.IDCLASE'),
				@FACTOR =  JSON_VALUE(@PARAMETROS, '$.FACTOR'),
				@ITEM =  JSON_VALUE(@PARAMETROS, '$.ITEMFIMPDV'),
				@BASE =  REPLACE(REPLACE(JSON_VALUE(@PARAMETROS, '$.BASE'),'.',''),',','.'),
				@VLRIMPUESTOS = REPLACE(REPLACE(JSON_VALUE(@PARAMETROS, '$.VLRIMPTO'),'.',''),',','.'),
				@INDICE =  JSON_VALUE(@PARAMETROS, '$.ESGLOBAL'),
				@MODOINGRESO =  JSON_VALUE(@PARAMETROS, '$.MODOINGRESO');

            IF NOT EXISTS(SELECT * FROM FTIMP WHERE CNS=@CNSRPDX AND  N_FACTURA= @N_FACTURA AND  TIPO =@TIPO_FAC AND  CNSGLO=@CNSGLO AND 
                          IDIMPUESTO=@IDIMPUESTO AND IDCLASE=@IDCLASE)
            BEGIN
				   INSERT INTO FTIMP(CNS, N_FACTURA, TIPO, CNSGLO, IDIMPUESTO, IDCLASE, FACTOR, ITEMFIMPDV, BASE, VLRIMPTO, ESGLOBAL, MODOINGRESO)
				   SELECT @CNSRPDX, @N_FACTURA, @TIPO_FAC, @CNSGLO, @IDIMPUESTO, @IDCLASE, @FACTOR, @ITEM, @BASE, @VLRIMPUESTOS, @INDICE, @MODOINGRESO
            END
		SELECT 'OK'OK
		RETURN
	END
	IF @METODO = 'IMPUESTOSRPDX'
	BEGIN
		SELECT @CNSRPDX = JSON_VALUE(@PARAMETROS, '$.CNSRPDX');
		SELECT @N_FACTURA = JSON_VALUE(@PARAMETROS, '$.N_FACTURA');

		SELECT @IMPUESTO=DBO.FNK_VALORVARIABLE('IDCLASE_REC')
		SELECT @CLASE=DBO.FNK_VALORVARIABLE('IDIMPUESTO_REC')

		SELECT FTIMP.CNS, FTIMP.N_FACTURA, FTIMP.TIPO, FTIMP.CNSGLO
			, FTIMP.IDIMPUESTO, FIMP.DESCRIPCION AS DESCIMP
			, FTIMP.IDCLASE, FIMPD.DESCRIPCION AS DESCCLASE
			, FTIMP.FACTOR, FTIMP.ITEMFIMPDV, FTIMP.BASE, FTIMP.VLRIMPTO, FTIMP.ESGLOBAL, FTIMP.MODOINGRESO 
			, FIMPDV.ITEM
		FROM FTIMP
		INNER JOIN FIMP ON FTIMP.IDIMPUESTO =  FIMP.IDIMPUESTO
		INNER JOIN FIMPD ON FTIMP.IDCLASE =  FIMPD.IDCLASE AND FTIMP.IDIMPUESTO=FIMPD.IDIMPUESTO
		INNER JOIN FIMPDV ON FIMP.IDIMPUESTO = FIMPDV.IDIMPUESTO AND FIMPD.IDCLASE=FIMPDV.IDCLASE AND FTIMP.ITEMFIMPDV=FIMPDV.ITEM
		WHERE CNS  = @CNSRPDX
			AND FIMPDV.FECHAFIN>GETDATE() 
			AND COALESCE(FIMPDV.VALOR,0)>0
      AND FTIMP.N_FACTURA=CASE WHEN COALESCE(@N_FACTURA,'')<>'' THEN @N_FACTURA ELSE N_FACTURA END
	RETURN
	END
	IF @METODO = 'DELFTIMP'
	BEGIN
      DECLARE @ITEMFIMPDV INT
		SELECT @CNSRPDX = JSON_VALUE(@PARAMETROS, '$.CNSRPDX');
      SELECT @N_FACTURA=JSON_VALUE(@PARAMETROS, '$.N_FACTURA');
      SELECT @IDIMPUESTO=JSON_VALUE(@PARAMETROS, '$.IDIMPUESTO');
      SELECT @IDCLASE=JSON_VALUE(@PARAMETROS, '$.IDCLASE');
      SELECT @ITEMFIMPDV=JSON_VALUE(@PARAMETROS, '$.ITEMFIMPDV');
		DELETE FTIMP WHERE CNS = @CNSRPDX 
      AND N_FACTURA=@N_FACTURA
      AND IDIMPUESTO=@IDIMPUESTO
      AND IDCLASE=@IDCLASE
      AND ITEMFIMPDV=@ITEMFIMPDV
	END
	IF @METODO = 'ASIGNAR'
	BEGIN
		SELECT  @CNSRPDX = JSON_VALUE(@PARAMETROS, '$.CNSRPDX'),
				@CNSFPAG = JSON_VALUE(@PARAMETROS, '$.CNSFPAG'),
				@COMPANIA = JSON_VALUE(@PARAMETROS, '$.COMPANIA'),
				@NIT = JSON_VALUE(@PARAMETROS, '$.NIT');
	
		SELECT @FACTOR = SUM(FACTOR)/100 FROM FTIMP WHERE CNS = @CNSRPDX

		EXEC SPK_CARGA_MASIVA_FAC_CXC_02 @CNSFPAG, @CNSRPDX, @USUARIO, @COMPANIA, @NIT, 1 , @CNSRPDX, @FACTOR, 0, 0

      DELETE RPDX WHERE CNS=@CNSRPDX
      DELETE FTIMP WHERE CNS=@CNSRPDX
	END
	IF @METODO = 'FPAGD'
	BEGIN
		SELECT @CNSFPAG= JSON_VALUE(@PARAMETROS, '$.CNSFPAG');

		SELECT CNSFPAG, N_FACTURA, VLRFACTURA, VLRGLOSA, GLOSAAFECTAIMP, VLRCOPAGO ,BASE, VLRIMPUESTO, VLRPAGOSIN, VLRDTOFIN, SINPAGO, VLROTROSDCTOS, VLREXTRA, VALORPAGO, LEVANTADO, ESTADO, ITEM
		FROM FPAGD WHERE CNSFPAG = @CNSFPAG
	END
	IF @METODO = 'QUITARFPAGD'
	BEGIN
		SELECT  @N_FACTURA = JSON_VALUE(@PARAMETROS, '$.N_FACTURA'),
				@CNSFPAG = JSON_VALUE(@PARAMETROS, '$.CNSFPAG'),
				@ITEM = JSON_VALUE(@PARAMETROS, '$.ITEM');

		BEGIN TRY  
			DELETE FPAGDI WHERE CNSFPAG = @CNSFPAG AND N_FACTURA = @N_FACTURA AND ITEM = @ITEM

			DELETE FPAGD WHERE CNSFPAG = @CNSFPAG AND ITEM = @ITEM AND N_FACTURA = @N_FACTURA

			UPDATE FCXCDV SET MARCAPAGO = 0
			FROM FCXCDV INNER JOIN FPAGD ON FCXCDV.N_FACTURA = FPAGD.N_FACTURA AND FCXCDV.CNSCXC = FPAGD.CNSCXC AND FCXCDV.TIPO = FPAGD.CLASE
			WHERE FPAGD.CNSFPAG = @CNSFPAG AND FPAGD.ITEM = @ITEM

			EXEC SPK_FPAG @CNSFPAG

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK'OK
		RETURN
	END

	IF @METODO = 'APLICARPAGO'
	BEGIN

		SELECT  @IDSEDE    = JSON_VALUE(@PARAMETROS, '$.IDSEDE'),
				@CNSFPAG   = JSON_VALUE(@PARAMETROS, '$.CNSFPAG'),
				@COMPANIA  = JSON_VALUE(@PARAMETROS, '$.COMPANIA'),
				@SYS_COMPUTERNAME = JSON_VALUE(@PARAMETROS, '$.SYS_COMPUTERNAME');
      SELECT @FECHAPAGO=FECHAPAGO,@INGRESO=INGRESO FROM FPAG WHERE CNSFPAG=@CNSFPAG
      IF NOT EXISTS(SELECT * FROM PRI WHERE FECHA_FIN>=@FECHAPAGO AND FECHA_FIN+1>@FECHAPAGO AND CERRADO=0)
      BEGIN
         SELECT 'KO'KO,'Periodo contable no existe o esta Cerrado. Verifique e intente de nuevo'ERROR
         RETURN
      END
      IF @INGRESO='CXP'
      BEGIN
         SELECT @VLRCRUCE=SUM(COALESCE(VLRCRUCE,0))FROM FPAGDCXP WHERE CNSFPAG=@CNSFPAG
         IF EXISTS(SELECT * FROM FPAG WHERE CNSFPAG=@CNSFPAG AND COALESCE(VLRITEMS,0)<>@VLRCRUCE)
         BEGIN
            SELECT 'KO'KO,'El valor de los pagos debe ser igual al valor del cruce. Verifique e intente de nuevo'ERROR
            RETURN            
         END
      END
		BEGIN TRY
			EXEC SPK_PAGOSCXC @CNSFPAG, @IDSEDE, @COMPANIA, @USUARIO, @SYS_COMPUTERNAME
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
		RETURN 
	END
--query2
--query2
	IF @METODO = 'ANULARPAGO'
	BEGIN

		SELECT  @IDSEDE    = JSON_VALUE(@PARAMETROS, '$.IDSEDE'),
				@CNSFPAG   = JSON_VALUE(@PARAMETROS, '$.CNSFPAG'),
				@COMPANIA  = JSON_VALUE(@PARAMETROS, '$.COMPANIA'),
				@COMPANIA  = JSON_VALUE(@PARAMETROS, '$.COMPANIA'),
				@NROCOMPROBANTE = JSON_VALUE(@PARAMETROS, '$.NROCOMPROBANTE');
		

		IF (SELECT COUNT(*) FROM FPAGD WHERE COALESCE(ESTADO,'')='Retirada' AND CNSFPAG=@CNSFPAG)>0
		BEGIN
			SELECT 'KO'OK, 'Este Recaudo ya tiene Facturas Retiradas No se Puede Anular'ERROR
			RETURN
		END

		IF(SELECT COUNT(*) FROM MCPE WHERE NROCOMPROBANTE = @NROCOMPROBANTE)>0
		BEGIN
			DELETE MCHE WHERE NROCOMPROBANTE = @NROCOMPROBANTE
			DELETE MCPE WHERE NROCOMPROBANTE = @NROCOMPROBANTE
		END
		ELSE 
		BEGIN
			IF(SELECT COALESCE(ESTADO,0) FROM MCP WHERE NROCOMPROBANTE=@NROCOMPROBANTE)<>2
			BEGIN
				SELECT 'KO'OK, 'El COMPROBANTE Contable esta Con Error Ó Sin Confirmar Se Debe Corregir Primero'ERROR
			END
		END

		SELECT @C1 = CERRADO, @C2= COALESCE(CERRADO_CARTERA,0) FROM PRI WHERE FECHA_INI<= CONVERT(SMALLDATETIME,GETDATE())

		IF (@C1 = 1 AND @C2 =1) 
		BEGIN
			SELECT @DONE = 'CERRADO1'
		END

		IF (@C1 = 0 AND @C2 =1) 
		BEGIN
			SELECT @DONE = 'CERRADO2'
		END

		IF (@C1 = 0 AND @C2 = 0) 
		BEGIN
			SELECT @DONE = 'CERRADO3'
		END

		IF (@C1 = 1 AND @C2 = 0) 
		BEGIN
			SELECT @DONE = 'CERRADO4'
		END


		IF (@C1 < 1 AND @C2 < 1)
		BEGIN

			IF (SELECT DBO.FNK_VALORVARIABLE('PRESUP_CXC_ACTIVADO') AS DATO) = 'SI'
			BEGIN
				--todo
				PRINT 'todo'
			END

			BEGIN TRY  
				EXEC SPK_DESPAGOSCXC @CNSFPAG, @IDSEDE, @COMPANIA, @USUARIO, @SYS_COMPUTERNAME, 'ANULAR'
			END TRY
			BEGIN CATCH
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
			END CATCH

			IF(SELECT COUNT(*) FROM @TBLERRORES)>0
			BEGIN
				SELECT 'KO' OK, ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK' OK
			RETURN 

		END
	END
	IF @METODO = 'DESAPLICARPAGO'
	BEGIN
		SELECT  @IDSEDE    = JSON_VALUE(@PARAMETROS, '$.IDSEDE'),
				  @CNSFPAG   = JSON_VALUE(@PARAMETROS, '$.CNSFPAG'),
				  @INGRESO   = JSON_VALUE(@PARAMETROS, '$.INGRESO'),
				  @COMPANIA  = JSON_VALUE(@PARAMETROS, '$.COMPANIA'),
				  @NROCOMPROBANTE = JSON_VALUE(@PARAMETROS, '$.NROCOMPROBANTE'),
				  @SYS_COMPUTERNAME = JSON_VALUE(@PARAMETROS, '$.SYS_COMPUTERNAME');

      SELECT @FECHA=FECHA FROM FPAG WHERE CNSFPAG=@CNSFPAG

		IF @INGRESO = 'GLOSAS'
		BEGIN
			IF(SELECT COUNT(*) FROM FGLO WHERE CERRADA=1 AND CNSFPAG = @CNSFPAG)>1
			BEGIN
				SELECT 'KO'OK, 'Existen Glosas de Este pago que ya fueron Contestadas en Auditoria... No se Puede Desaplicar el Pago.'ERROR
				RETURN
			END
		END
		IF(SELECT COUNT(*) FROM FPAGD WHERE COALESCE(ESTADO,'')='Retirada' AND CNSFPAG = @CNSFPAG) > 1
		BEGIN
			SELECT 'KO'OK, 'Este Recaudo ya tiene Facturas Retiradas No se Puede Desaplicar.'ERROR
			RETURN
		END

		IF @INGRESO = 'CAJA'
		BEGIN
			EXEC SPK_DESPAGOSCXC @CNSFPAG, @IDSEDE, @COMPANIA, @USUARIO, @SYS_COMPUTERNAME, 'DESAPLICAR'
			SELECT 'OK'OK
			RETURN
		END

		IF(SELECT COUNT(*) FROM MCPE WHERE NROCOMPROBANTE = @NROCOMPROBANTE) > 1
		BEGIN
			DELETE MCHE  WHERE NROCOMPROBANTE=@NROCOMPROBANTE
			DELETE MCPE  WHERE NROCOMPROBANTE=@NROCOMPROBANTE
		END
		ELSE
		BEGIN
			IF(SELECT COALESCE(ESTADO,0) FROM MCP WHERE NROCOMPROBANTE=@NROCOMPROBANTE)<>2
			BEGIN
				SELECT 'KO'OK, 'El COMPROBANTE Contable se encuetra con error o Sin Confirmar, se debe realizar las correcciones correspondientes primero'ERROR
				RETURN
			END
		END
		IF DBO.FNK_VALORVARIABLE('PRESUP_CXC_ACTIVADO') = 'SI'
		BEGIN
			--todo
			PRINT 'todo'
		END

		BEGIN TRY  
			EXEC SPK_DESPAGOSCXC @CNSFPAG, @IDSEDE, @COMPANIA, @USUARIO, @SYS_COMPUTERNAME, 'DESAPLICAR'
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
	   RETURN 
	END

--QUERY2
--QUERY2
	IF @METODO = 'BORRARTODO'
	BEGIN
		SELECT  @CNSFPAG   = JSON_VALUE(@PARAMETROS, '$.CNSFPAG');
		BEGIN TRY
			EXEC SPK_BORRAPAGO @CNSFPAG
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
		RETURN 
	END
	IF @METODO = 'FTIMPRPDX'
	BEGIN
		SELECT  
				@CNSRPDX   = JSON_VALUE(@PARAMETROS, '$.CNSRPDX'),
				@N_FACTURA    = JSON_VALUE(@PARAMETROS, '$.N_FACTURA'),
				@GRUPOETAREO  = JSON_VALUE(@PARAMETROS, '$.GRUPOETAREO');

		SELECT FTIMP.* , FIMP.DESCRIPCION DESC_IMP, FIMPD.DESCRIPCION AS DESCCLASE
		FROM FTIMP 
		INNER JOIN FIMP ON FTIMP.IDIMPUESTO =  FIMP.IDIMPUESTO
		INNER JOIN FIMPD ON FTIMP.IDCLASE =  FIMPD.IDCLASE AND FIMPD.IDIMPUESTO = FTIMP.IDIMPUESTO
		WHERE N_FACTURA = @N_FACTURA AND CNS = @CNSRPDX AND FTIMP.TIPO = @GRUPOETAREO AND (COALESCE(ESGLOBAL,0) = 0 OR COALESCE(ESGLOBAL,0) = 2)
		RETURN
	END
	IF @METODO = 'INACTIVAR'
	BEGIN
		SELECT  @CNSFPAG   = JSON_VALUE(@PARAMETROS, '$.CNSFPAG'),
				@INGRESO   = JSON_VALUE(@PARAMETROS, '$.INGRESO');
		--BEGIN TRY
			
			IF EXISTS(SELECT * FROM FPAG WHERE CNSFPAG = @CNSFPAG AND CERRADO=1)
			BEGIN
				SELECT 'KO' OK, 'Recaudo se encuentra inactivo o no se ha cerrado.'ERROR
				RETURN
			END
			IF (SELECT COUNT(*) FROM FPAGD WHERE CNSFPAG = @CNSFPAG) > 0
			BEGIN
				SELECT 'KO' OK, 'El Pago tiene Detalles No se Puede Anular.'ERROR
				RETURN
			END
			IF @INGRESO = 'BANCOS'
			BEGIN
				PRINT 'ENTRO'
            UPDATE BMOVD SET ENPAGOS=0
            FROM BMOVD INNER JOIN FPAG ON BMOVD.BANCO=FPAG.BANCO AND BMOVD.CTA_BCO=FPAG.CTA_BCO 
                                          AND BMOVD.ITEM=FPAG.ITEM AND BMOVD.RENGLON=FPAG.RENGLON
                                          AND BMOVD.IDTERCERO=FPAG.IDTERCERO
            WHERE FPAG.CNSFPAG=@CNSFPAG
				UPDATE FPAG
				SET BANCO = NULL,
					CTA_BCO = NULL,
					ITEM = NULL,
					RENGLON = NULL,
					BANCODOC = NULL,
					NUMERODOCUMENTO = NULL,
					VALORPAGO = 0,
					VLRITEMS = 0,
					VLRIMPUESTOS = 0,
					CERRADO = 0,
					VLRAJUSTEPESO = 0,
					AJUSTADAPESO = 0,
					VLRGLOSAS = 0,
					VLRDTOFINAN = 0,
					VLRTOTAL = 0,
					DTOFNCIERO = 0,
					CNSFACJ = NULL,
					CODCAJA = NULL,
					SUCURSAL = NULL,
					OBSERVACION = NULL,
					ESTADO = 'Inactivo'
				WHERE CNSFPAG = @CNSFPAG

			END
		SELECT 'OK' OK
		RETURN 
	END
	IF @METODO = 'FPAGDI'
	BEGIN
		SELECT  
				@CNSFPAG      = JSON_VALUE(@PARAMETROS, '$.CNSFPAG'),
				@N_FACTURA    = JSON_VALUE(@PARAMETROS, '$.N_FACTURA'),
				@GRUPOETAREO  = JSON_VALUE(@PARAMETROS, '$.GRUPOETAREO');
		SELECT FPAGDI.* , FIMP.DESCRIPCION DESC_IMP, FIMPD.DESCRIPCION AS DESCCLASE
		FROM FPAGDI 
		INNER JOIN FIMP ON FPAGDI.IDIMPUESTO =  FIMP.IDIMPUESTO
		INNER JOIN FIMPD ON FPAGDI.IDCLASE =  FIMPD.IDCLASE AND FIMPD.IDIMPUESTO = FPAGDI.IDIMPUESTO
		WHERE COALESCE(FPAGDI.N_FACTURA, '') = @N_FACTURA AND COALESCE(FPAGDI.CNSFPAG, '') = @CNSFPAG
		RETURN
	END
   IF @METODO='PROCESAR_FACTURA'     
   BEGIN 
      DECLARE @VRL_PAGO DECIMAL(14,2)
      SELECT 
         @CNSRPDX      = JSON_VALUE(@PARAMETROS, '$.CNSRPDX'),   
         @INGRESO      = JSON_VALUE(@PARAMETROS, '$.INGRESO'),   
         @VRL_PAGO      = JSON_VALUE(@PARAMETROS, '$.VRL_PAGO'),   
         @N_FACTURA      = JSON_VALUE(@PARAMETROS, '$.N_FACTURA'),   
         @TIPOF      = JSON_VALUE(@PARAMETROS, '$.TIPO'),   
         @CNSCXC      = JSON_VALUE(@PARAMETROS, '$.CNSCXC'),
         @SaldoNeto   = JSON_VALUE(@PARAMETROS, '$.SALDONETO'),
         @VALORSERVICIOS=JSON_VALUE(@PARAMETROS, '$.VALORSERVICIOS'),
         @CNSGLO      = JSON_VALUE(@PARAMETROS, '$.CNSGLO'),   
         @MOTIVO_GLOSA01      = JSON_VALUE(@PARAMETROS, '$.MOTIVO1'),   
         @MOTIVO_GLOSA01      = JSON_VALUE(@PARAMETROS, '$.MOTIVO2'),   
         @OBSERVACIONES      = JSON_VALUE(@PARAMETROS, '$.OBSERVA'); 
      IF @INGRESO='BANCOS' OR @INGRESO='CAJA' OR @INGRESO='CXP'
      BEGIN
         PRINT 'INGRESO A BANCOS'
         SELECT @VLR_IMP=SUM(VLRIMPTO) FROM FTIMP WHERE CNS=@CNSRPDX AND N_FACTURA=@N_FACTURA AND TIPO=@TIPOF
         BEGIN TRY           
            INSERT INTO RPDX(CNS,CNS1,GRUPOETAREO,CNS2,ID10,VALOR1,VALOR30,VALOR2,CANTIDAD1,CANTIDAD3,VALOR11,VALOR7,VALOR9,CNS5,CANTIDAD,CANTIDAD2,
                             VALOR10,STRINGMAX,ID11,ID12)
            SELECT  @CNSRPDX,@N_FACTURA,@TIPOF,@CNSCXC,@USUARIO,@VRL_PAGO+COALESCE(@VLR_IMP,0),@VRL_PAGO+COALESCE(@VLR_IMP,0),0,0,0,@VLR_IMP,0,0,@CNSGLO,0,0,@VALORSERVICIOS,@OBSERVACIONES,
                    @MOTIVO_GLOSA01,@MOTIVO_GLOSA02                             
         END TRY
         BEGIN CATCH
                 INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      IF @INGRESO='GLOSAS'
      BEGIN
         PRINT 'INGRESO A GLOSAS'
         BEGIN TRY           
            INSERT INTO RPDX(CNS,CNS1,GRUPOETAREO,CNS2,ID10,VALOR1,VALOR30,VALOR2,CANTIDAD1,CANTIDAD3,VALOR11,VALOR7,VALOR9,CNS5,CANTIDAD,CANTIDAD2,
                             VALOR10,STRINGMAX,ID11,ID12)
            SELECT  @CNSRPDX,@N_FACTURA,@TIPOF,@CNSCXC,@USUARIO,@VRL_PAGO,@SaldoNeto,@VRL_PAGO,1,0,0,0,0,@CNSGLO,0,0,@VALORSERVICIOS,@OBSERVACIONES,
                    @MOTIVO_GLOSA01,@MOTIVO_GLOSA02
         END TRY
         BEGIN CATCH
                 INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH

      END
      IF @INGRESO='DEVOLUCION'
      BEGIN
         PRINT 'INGRESO A DEVOLUCIONES'
         BEGIN TRY           
            INSERT INTO RPDX(CNS,CNS1,GRUPOETAREO,CNS2,ID10,VALOR1,VALOR30,VALOR2,CANTIDAD1,CANTIDAD3,VALOR11,VALOR7,VALOR9,CNS5,CANTIDAD,CANTIDAD2,
                             VALOR10,STRINGMAX,ID11,ID12)
            SELECT  @CNSRPDX,@N_FACTURA,@TIPOF,@CNSCXC,@USUARIO,@SaldoNeto,@SaldoNeto,@SaldoNeto,1,0,0,0,0,@CNSGLO,0,0,@VALORSERVICIOS,@OBSERVACIONES,
                    @MOTIVO_GLOSA01,@MOTIVO_GLOSA02
         END TRY
         BEGIN CATCH
                 INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='NO_PROCESAR'     
   BEGIN    
      SELECT 
         @CNSRPDX      = JSON_VALUE(@PARAMETROS, '$.CNSRPDX'),   
         @N_FACTURA      = JSON_VALUE(@PARAMETROS, '$.N_FACTURA'),   
         @TIPOF      = JSON_VALUE(@PARAMETROS, '$.TIPO'),   
         @CNSCXC      = JSON_VALUE(@PARAMETROS, '$.CNSCXC'),
         @CNSGLO      = JSON_VALUE(@PARAMETROS, '$.CNSGLO');

      IF EXISTS(SELECT * FROM FTIMP WHERE CNS=@CNSRPDX AND N_FACTURA=@N_FACTURA AND COALESCE(CNSGLO,'')=COALESCE(@CNSGLO,''))
      BEGIN
         DELETE FTIMP WHERE CNS=@CNSRPDX AND N_FACTURA=@N_FACTURA AND COALESCE(CNSGLO,'')=COALESCE(@CNSGLO,'')
      END
      SELECT 'OK'OK
      RETURN
   END  
   IF @METODO='CARGAR_FACTURAS'     
	BEGIN        


		SELECT  @NROLINEAS=COUNT(*)
		FROM OPENJSON(@PARAMETROS, '$.LINEAS') 

		SELECT @CNSRPDX =''

		IF @NROLINEAS>0
		BEGIN

			SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA),
			@SYS_COMPUTERNAME=COALESCE(USUSU.SYS_ComputerName,HOST_NAME())
			FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
			WHERE USUSU.USUARIO=@USUARIO


			IF @CNSRPDX = ''
			BEGIN
				PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE='+COALESCE(@IDSEDE,'SIN SEDE')   
				SELECT @CNSRPDX=''
				EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@RPDX', @CNSRPDX OUTPUT  
				SELECT @CNSRPDX = @IDSEDE+REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)
				PRINT '@CNSRPDX='+COALESCE(@CNSRPDX,'') 
			END
         ELSE
         BEGIN
            DELETE RPDX WHERE CNS=@CNSRPDX
         END

			SELECT @INDICE=0
			DECLARE SUBIR_CURSOR CURSOR FOR   
			SELECT VALUE 
			FROM OPENJSON(@PARAMETROS, '$.LINEAS')		  
			OPEN SUBIR_CURSOR  
			FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
			WHILE @@FETCH_STATUS = 0  
			BEGIN  	  
				DELETE FROM @TABLA WHERE 1=1

			   IF LEN(@LINEA)<5
			   BEGIN 
				   FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
				   CONTINUE
			   END
				   INSERT INTO @TABLA(VALOR)
				   SELECT VALUE FROM string_split(@LINEA,',')

              -- SELECT * FROM @TABLA
			      SELECT @N_FACTU        = VALOR FROM @TABLA WHERE ITEM=1+@INDICE
			      SELECT @VRL_PAGOF      = CONVERT(DECIMAL(14,2),COALESCE(VALOR,0)) FROM @TABLA WHERE ITEM=2+@INDICE
			      SELECT @VLR_GLOSAP     = CONVERT(DECIMAL(14,2), IIF( VALOR = '' ,0,COALESCE(VALOR,0) )) FROM @TABLA WHERE ITEM=3+@INDICE
			      SELECT @TIPO_FAC       = VALOR FROM @TABLA WHERE ITEM=4+@INDICE
			      SELECT @IDIMPUESTO     = VALOR FROM @TABLA WHERE ITEM=5+@INDICE
			      SELECT @IDCLASE        = VALOR FROM @TABLA WHERE ITEM=6+@INDICE
			      SELECT @VLR_IMP        = CONVERT(DECIMAL(14,2),IIF( VALOR = '' ,0,COALESCE(VALOR,0))) FROM @TABLA WHERE ITEM=7+@INDICE
			      SELECT @MOTIVO_GLOSA01 = VALOR FROM @TABLA WHERE ITEM=8+@INDICE
			      SELECT @MOTIVO_GLOSA02 = VALOR FROM @TABLA WHERE ITEM=9+@INDICE
			      SELECT @OBSERVACIONES  = VALOR FROM @TABLA WHERE ITEM=10+@INDICE
			      SELECT @IMP_ICA        = VALOR FROM @TABLA WHERE ITEM=11+@INDICE
			      SELECT @CLASE_ICA      = VALOR FROM @TABLA WHERE ITEM=12+@INDICE
			      SELECT @VLR_ICA        = CONVERT(DECIMAL(14,2),IIF( VALOR = '' ,0,COALESCE(VALOR,0))) FROM @TABLA WHERE ITEM=13+@INDICE
			      SELECT @VLR_DTO        = CONVERT(DECIMAL(14,2),IIF( VALOR = '' ,0,COALESCE(VALOR,0))) FROM @TABLA WHERE ITEM=14+@INDICE
			      SET @ERROR=''

			      PRINT '@N_FACTU '+ @N_FACTU

			      IF NOT EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTU AND ESTADO='P' AND COALESCE(TIPOANULACION,'')<>'NC')
			      BEGIN
				      --SET @ERROR += 'Factura no existe o se encuentra anulada, no se puede procesar.'
				      INSERT INTO @TBLERRORES (ERROR)
				      SELECT CONCAT(@N_FACTU,' | ','Factura no existe o se encuentra anulada, no se puede procesar.')
			      END

			      ELSE IF EXISTS (SELECT * FROM RPDX WHERE CNS = @CNSRPDX AND RPDX.ID1 = @N_FACTU)
			      BEGIN
				      --SET @ERROR +='Factura duplicada.'
				      INSERT INTO @TBLERRORES (ERROR)
				      SELECT CONCAT(@N_FACTU,' | ','Factura duplicada.')
			      END

			      ELSE IF EXISTS(SELECT * FROM FCXCD WHERE N_FACTURA=@N_FACTU AND SALDONETO<(@VRL_PAGOF+@VLR_GLOSAP)) -- STORRES Validar tema del impuesto. No lo tiene en cuenta
			      BEGIN
				      --SET @ERROR +='Factura no tiene Saldo en Cartera  no se puede subir.'
				      INSERT INTO @TBLERRORES (ERROR)
				      SELECT CONCAT(@N_FACTU,' | ','Factura no tiene Saldo en Cartera  no se puede subir. VRL_PAGOF='+CAST(@VRL_PAGOF AS VARCHAR(20))+' VLR_GLOSAP='+CAST(@VLR_GLOSAP AS VARCHAR(20)))
			      END

			      ELSE IF COALESCE(@VRL_PAGOF+@VLR_GLOSAP,0)<0
			      BEGIN
				      --SET @ERROR +='Valor de la nota no puede ser menor o igual a cero, No se Puede Subir.' 
				      INSERT INTO @TBLERRORES (ERROR)
				      SELECT CONCAT(@N_FACTU,' | ','Valor del pago no puede ser menor o igual a cero, No se Puede Subir.')
			      END
			      ELSE IF ((@IDIMPUESTO = '' OR @IDCLASE = '') AND @VLR_IMP > 0 )
			      BEGIN
				      INSERT INTO @TBLERRORES (ERROR)
				      SELECT CONCAT(@N_FACTU,' | ','No Existe impueso asociado al valor, No se puede Subir')
			      END

			      ELSE IF NOT EXISTS (  SELECT CNSCXC,SALDONETO,COALESCE(CNSGLO,'') FROM FCXCDV WHERE N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC)
			      BEGIN
				      INSERT INTO @TBLERRORES (ERROR)
				      SELECT CONCAT(@N_FACTU,' | ','No Existe Cuenta de Cobro para esta Factura, Revise la Radicacion')
			      END

			      ELSE IF (@TIPO_FAC = 'G' OR @TIPO_FAC = 'R' ) AND NOT EXISTS ( SELECT CNSCXC,SALDONETO,COALESCE(CNSGLO,'') 
                        FROM FCXCDV WHERE N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC)
			      BEGIN
				      INSERT INTO @TBLERRORES (ERROR)
				      SELECT CONCAT(@N_FACTU,' | ','No Existe Consecutivo de Glosa, Revise las Respuestas de Glosa')
			      END

			      ELSE IF (SELECT SALDONETO FROM FCXCDV WHERE N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC) < 0 
			           OR (SELECT SALDONETO FROM FCXCDV WHERE N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC) < @VRL_PAGOF
			      BEGIN
				      INSERT INTO @TBLERRORES (ERROR)
				      SELECT CONCAT(@N_FACTU,' | ','El Saldo de la Factura es menor que el valor Recaudado.')
			      END
			      ELSE IF ( @TIPO_FAC = 'F') AND (SELECT COUNT(*) FROM FCXCDV WHERE N_FACTURA = @N_FACTU) > 1
			      BEGIN
				      INSERT INTO @TBLERRORES (ERROR)
				      SELECT CONCAT(@N_FACTU,' | ','Esta Factura ya Tiene Asociada una Glosa .. No se puede Subir')
			      END

			   ELSE
			   BEGIN
			      PRINT 'PASA VALIDACIONES @N_FACTU '+ @N_FACTU

			      SELECT @SaldoNeto = SALDONETO,@CNSCXC=CNSCXC,@CNSGLO=CNSGLO
               FROM FCXCDV WHERE N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC

			      IF @VLR_GLOSAP = 0
			      BEGIN
			   	   IF @IDIMPUESTO <> '' AND @VLR_IMP > 0
			   	   BEGIN
			   		   IF @IDCLASE <> ''
			   		   BEGIN
			   			   INSERT INTO FTIMP (CNS, N_FACTURA, TIPO, CNSGLO, IDIMPUESTO, IDCLASE, FACTOR, ITEMFIMPDV, BASE, VLRIMPTO, ESGLOBAL, MODOINGRESO)
			   			   SELECT @CNSRPDX, @N_FACTU, @TIPO_FAC,'', @IDIMPUESTO, @IDCLASE, VALOR, ITEM, @VRL_PAGOF, @VLR_IMP,'2', 'I' FROM FIMPDV  
			   			   WHERE IDIMPUESTO=@IDIMPUESTO AND IDCLASE = @IDCLASE AND FECHAINI<= GETDATE() AND FECHAFIN > GETDATE()
			   		   END
			   	   END
				
			   	   IF @IMP_ICA <> '' AND @VLR_ICA>0 AND @CLASE_ICA<> ''
			   	   BEGIN
			   		   INSERT INTO FTIMP (CNS, N_FACTURA, TIPO, CNSGLO, IDIMPUESTO, IDCLASE, FACTOR, ITEMFIMPDV, BASE, VLRIMPTO, ESGLOBAL, MODOINGRESO)
			   		   SELECT @CNSRPDX, @N_FACTU, @TIPO_FAC,'', @IMP_ICA, @CLASE_ICA, VALOR, ITEM, @VRL_PAGOF, @VLR_ICA,'2', 'I' FROM FIMPDV  
			   		   WHERE IDIMPUESTO=@IDIMPUESTO AND IDCLASE = @IDCLASE AND FECHAINI<= GETDATE() AND FECHAFIN > GETDATE()
			   	   END
			      END

			   	   SELECT @SUMIMP = SUM(VLRIMPTO) FROM FTIMP WHERE CNS = @CNSRPDX AND N_FACTURA = @N_FACTU AND TIPO = @TIPO_FAC AND (COALESCE(ESGLOBAL, 0) = 0 OR COALESCE(ESGLOBAL, 0) = 2 )
				
			   	   IF @VRL_PAGOF > 0 AND @VLR_GLOSAP = 0
			   	   BEGIN
			   		   SET @VALOR1 = @VRL_PAGOF
			   	   END

			   	   IF @VRL_PAGOF = @VLR_GLOSAP
			   	   BEGIN
			   		   SET @VALOR1   = @VLR_GLOSAP
			   		   SET @CANTIDAD = 1
			   	   END
			   	   ELSE IF @VRL_PAGOF > 0 AND @VLR_GLOSAP > 0
			   	   BEGIN
			   		   SET @VALOR1 = @VRL_PAGOF
			   	   END
			   	   SELECT @MIVA = MIVA, @VALORSERVICIOS= VALORSERVICIOS FROM FTR WHERE N_FACTURA= @N_FACTU

			   	   INSERT INTO RPDX( CNS,ID1, VALOR1, VALOR2, ID2, ID3, ID4, VALOR3, ID5, ID6, STRINGGRANDE1,
			   	                     ID7, ID8, VALOR4, VALOR11, VALOR7, VALOR9, VALOR5, CANTIDAD, CANTIDAD2, VALOR10, STRINGMAX, STRINGMEDIO1, 
                                    GRUPOETAREO, ID11, ID12, VALOR12,ID13,ID14)
			   	   SELECT            @CNSRPDX, @N_FACTU, @VALOR1, @VLR_GLOSAP, @TIPO_FAC, @IDIMPUESTO, @IDCLASE, @VLR_IMP, @MOTIVO_GLOSA01, @MOTIVO_GLOSA02,@OBSERVACIONES,
			   			             @IMP_ICA, @CLASE_ICA, @VLR_ICA, @SUMIMP, 0,0, @VLR_DTO, @CANTIDAD, @MIVA ,@VALORSERVICIOS, @ERROR, @OBSERVACIONES, @TIPO_FAC,
                                  @MOTIVO_GLOSA01, @MOTIVO_GLOSA02, @VLR_DTO,@CNSCXC,@CNSGLO

			      END

			      UPDATE FCXCDV SET MARCAPAGO = 1 
			      FROM  FCXCDV INNER JOIN RPDX ON FCXCDV.CNSCXC=RPDX.CNS2 AND FCXCDV.N_FACTURA=RPDX.CNS1 AND FCXCDV.TIPO=RPDX.GRUPOETAREO AND FCXCDV.CNSGLO=RPDX.CNS5 
			      WHERE RPDX.CNS = @CNSRPDX
               AND FCXCDV.N_FACTURA=@N_FACTU

			      SET @INDICE +=14

			   FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
			END  
		  
			CLOSE SUBIR_CURSOR  
			DEALLOCATE SUBIR_CURSOR  
			SELECT @NROLINEAS=COUNT(*) FROM @TBLERRORES

			SELECT 'OK' OK, @CNSRPDX CNSRPDX, @NROLINEAS ERRADOS

         INSERT INTO RPDX(CNS,ID1,STRINGGRANDE1)
			SELECT @CNSRPDX+'_ER',SUBSTRING(ERROR,1,CHARINDEX('|',ERROR,0)-1),RIGHT(ERROR,LEN(ERROR)-CHARINDEX('|',ERROR,0)) ERROR FROM @TBLERRORES

			RETURN

		END
		ELSE
		BEGIN
			SELECT 'KO','No se encontraron Datos para Procesar, Verfique e intente de nuevo' ERROR
			RETURN
		END
	END 
   IF @METODO='EXPORT_ERRADOS'     
   BEGIN         
      SELECT @CNSRPDX=CNSRPDX        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSRPDX  VARCHAR(20)   '$.CNSRPDX'
      )
      SELECT 'OK'OK
      SELECT LTRIM(RTRIM(ID1)) N_FACTURA,LTRIM(RTRIM(STRINGGRANDE1)) AS ERROR
      FROM RPDX 
      WHERE CNS=@CNSRPDX+'_ER'
      DELETE RPDX WHERE CNS=@CNSRPDX+'_ER'
   END 
   IF @METODO='ASIGNA_PLANO'     
   BEGIN    
      DECLARE @CNSSUBIR VARCHAR(20)
      SELECT @CNSRPDX=CNSRPDX,@CNSSUBIR=CNSSUBIR,@CNSFPAG=CNSFPAG      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSRPDX  VARCHAR(20)   '$.CNSRPDX',
      CNSSUBIR  VARCHAR(20)   '$.CNSSUBIR',
      CNSFPAG  VARCHAR(20)   '$.CNSFPAG'
      ) 
      IF EXISTS(SELECT * FROM RPDX WHERE CNS=@CNSSUBIR)
      BEGIN
         IF EXISTS(SELECT * FROM FPAG WHERE CNSFPAG=@CNSFPAG AND INGRESO IN('BANCOS','CAJA','CXP'))
         BEGIN
            INSERT INTO RPDX(CNS,CNS1,GRUPOETAREO,CNS2,ID10,VALOR1,VALOR30,VALOR2,CANTIDAD1,CANTIDAD3,VALOR11,VALOR7,VALOR9,CNS5,CANTIDAD,CANTIDAD2,
                             VALOR10,STRINGMAX,ID11,ID12)
            SELECT  @CNSRPDX,ID1,ID2,ID13,@USUARIO,VALOR1+COALESCE(VALOR3,0)+COALESCE(VALOR4,0),VALOR1+COALESCE(VALOR3,0)+COALESCE(VALOR4,0),0,0,0,COALESCE(VALOR3,0)+COALESCE(VALOR4,0),0,0,ID14,0,0,VALOR10,STRINGMEDIO1,
                    ID11,ID12   
            FROM RPDX WHERE CNS=@CNSSUBIR

            IF EXISTS(SELECT * FROM FTIMP WHERE CNS=@CNSSUBIR)
            BEGIN
               UPDATE FTIMP SET CNS=@CNSRPDX WHERE CNS=@CNSSUBIR
            END
         END
         ELSE
         BEGIN
            INSERT INTO RPDX(CNS,CNS1,GRUPOETAREO,CNS2,ID10,VALOR1,VALOR30,VALOR2,CANTIDAD1,CANTIDAD3,VALOR11,VALOR7,VALOR9,CNS5,CANTIDAD,CANTIDAD2,
                             VALOR10,STRINGMAX,ID11,ID12)
            SELECT  @CNSRPDX,ID1,ID2,ID13,@USUARIO,VALOR2,VALOR2,VALOR2,1,0,0,0,0,ID14,0,0,VALOR10,STRINGMEDIO1,
                    ID11,ID12   
            FROM RPDX WHERE CNS=@CNSSUBIR            
         END
         DELETE RPDX WHERE CNS=@CNSSUBIR
      END
      RETURN
   END 
   IF @METODO='CIERRA_MASIVO'     
   BEGIN         
      SELECT @CNSRPDX=CNSRPDX        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSRPDX  VARCHAR(20)   '$.CNSRPDX'
      ) 
      SELECT COUNT(*) AS PENDIENTES FROM RPDX WHERE CNS=@CNSRPDX
   END
   IF @METODO='BORRA_PEND'     
   BEGIN         
      SELECT @CNSRPDX=CNSRPDX        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSRPDX  VARCHAR(20)   '$.CNSRPDX'
      ) 
      DELETE FTIMP WHERE CNS=@CNSRPDX
      DELETE RPDX WHERE CNS=@CNSRPDX

      SELECT 'OK'OK
      RETURN
   END  
   IF @METODO='ENVIAR_AUDIT'     
   BEGIN         
      SELECT @CNSFPAG=CNSFPAG        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSFPAG  VARCHAR(20)   '$.CNSFPAG'
      )
      IF EXISTS(SELECT * FROM FGLO WHERE CNSFPAG=@CNSFPAG AND COALESCE(ENAUDITORIA,0)=0 AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPCARTERA'))
      BEGIN
         DECLARE @CNSENTREGA VARCHAR(20)
         DECLARE @IDSEDEF VARCHAR(6)

         PRINT 'Empiezo a revisar datos y capturar los nuevos @USUARIO='+COALESCE(@USUARIO,'SIN USUARIO')
         SELECT @SYS_COMPUTERNAME=COALESCE(SYS_ComputerName,HOST_NAME()) FROM USUSU WHERE USUARIO=@USUARIO
         SELECT @IDSEDEF=IDSEDE FROM FPAG WHERE CNSFPAG=@CNSFPAG

         IF COALESCE(@IDSEDEF,'')=''
         BEGIN
            PRINT 'busco la sede del usuario'
            SELECT @IDSEDEF=IDSEDE FROM UBEQ WHERE SYS_ComputerName=@SYS_COMPUTERNAME
         END
         IF COALESCE(@IDSEDEF,'')=''
         BEGIN
            SELECT @IDSEDEF= IDSEDE FROM USUSU WHERE USUARIO=@USUARIO
         END
         SELECT @IDSEDE=@IDSEDEF,@COMPANIA='01'
         BEGIN TRY 
		      PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE='+COALESCE(@IDSEDE,'SIN SEDE')   
            SELECT @CNSENTREGA=''
		      EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@ENT', @CNSENTREGA OUTPUT  
		      SELECT @CNSENTREGA = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSENTREGA))+LTRIM(RTRIM(@CNSENTREGA)),SPACE(1),0)
		      PRINT '@CNSENTREGA='+COALESCE(@CNSENTREGA,'')

            INSERT INTO ENT(CNSENTREGA, PROCESO, USUARIOENTREGA, FECHAENTREGA, USUARIORECIBE, USUARIO, COMPANIA, ESTADO, ENT_ENTREGA, ENT_RECIBE, FECHARECIBE, IDSEDE, CERRADO, IDTERCERO, IDPLAN, MSEDE)
            SELECT @CNSENTREGA, 'GLOSAS', @USUARIO, DBO.FNK_GETDATE(), NULL, @USUARIO, '01', 0, DBO.FNK_VALORVARIABLE('IDFDEPCARTERA'),DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA'),
                   NULL, @IDSEDE, NULL, NULL, NULL, 0

            INSERT INTO ENTD(CNSENTREGA, NODOCUMENTO, PROCESO, ESTADO, USUARIOVERIFICA, MARCA, VALORENTREGA, OBSERVACION, ENDEVO, CNSDEVOL)
            SELECT @CNSENTREGA, CNSGLO, 'GLOSAS', 0, NULL, 0, NULL,'Enviado desde Pagos Quasar' , 0, null
            FROM FGLO
            WHERE CNSFPAG=@CNSFPAG
            AND COALESCE(ENAUDITORIA,0)=0
            AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPCARTERA') 
            AND COALESCE(FGLO.CNSENTREGA,'')=''

            UPDATE FGLO SET CNSENTREGA=@CNSENTREGA,ASIGENT=1
            FROM FGLO INNER JOIN ENTD ON FGLO.CNSGLO=ENTD.NODOCUMENTO
            WHERE ENTD.CNSENTREGA=@CNSENTREGA
            AND ENTD.PROCESO='GLOSAS'
            AND FGLO.CNSFPAG=@CNSFPAG
            AND COALESCE(ENAUDITORIA,0)=0
            AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPCARTERA')
            AND COALESCE(FGLO.CNSENTREGA,'')=''

            UPDATE FPAG SET ENAUDIT=1,CNSENTREGA=@CNSENTREGA WHERE CNSFPAG=@CNSFPAG
         END TRY
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH         
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'No Existen Glosas pendientes por Enviar'

         UPDATE FPAG SET ENAUDIT=1 WHERE CNSFPAG=@CNSFPAG
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END 
   IF @METODO='EXPORTA_EXCEL'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )
      DECLARE @TIPOAPLICACION VARCHAR(20)
      DECLARE @ESTADO VARCHAR(10)
      DECLARE @F_INICIAL DATETIME
      DECLARE @F_FINAL DATETIME

      SELECT @IDSEDE=SEDE,@INGRESO=INGRESO,@TIPOAPLICACION=TIPOAPLICACION,@ESTADO=ESTADO,@F_INICIAL=CONVERT(DATE,F_INICIAL),@F_FINAL=CONVERT(DATE,F_FINAL),
      @IDTERCERO=IDTERCERO
      FROM   OPENJSON (@DATOS)
      WITH   (       
      SEDE  VARCHAR(20)   '$.SEDE',
      INGRESO  VARCHAR(20)   '$.INGRESO',
      TIPOAPLICACION  VARCHAR(20)   '$.TIPOAPLICACION',
      ESTADO  VARCHAR(20)   '$.ESTADO',
      F_INICIAL  VARCHAR(20)   '$.F_INICIAL',
      F_FINAL  VARCHAR(20)   '$.F_FINAL',
      IDTERCERO  VARCHAR(20)   '$.IDTERCERO'
      )   
      SELECT 'OK' OK
      SELECT FPAG.CNSFPAG,DBO.FNK_FECHA_DDMMAA(FPAG.FECHA) FECHA,FPAG.INGRESO,FPAG.IDSEDE,DBO.FNK_FECHA_DDMMAA(FPAG.FECHAPAGO) FECHAPAGO,
             TER.NIT,TER.RAZONSOCIAL,FPAGD.N_FACTURA,FPAGD.VLRFACTURA,FPAGD.VLRGLOSA,FPAGD.VLRIMPUESTO,FPAGD.VALORPAGO,VLRDTOFIN
      FROM FPAG INNER JOIN FPAGD ON FPAG.CNSFPAG=FPAGD.CNSFPAG
                INNER JOIN TER ON FPAG.IDTERCERO=TER.IDTERCERO
     WHERE CONVERT(DATE,FPAG.FECHA)>=@F_INICIAL
     AND  CONVERT(DATE,FPAG.FECHA)<=@F_FINAL
     AND FPAG.INGRESO=CASE WHEN @INGRESO='TODOS' THEN FPAG.INGRESO ELSE @INGRESO END
     AND FPAG.CERRADO=CASE WHEN @TIPOAPLICACION='T' THEN FPAG.CERRADO ELSE CASE WHEN @TIPOAPLICACION='S' THEN 0 ELSE 1 END END
     AND FPAG.ESTADO= @ESTADO
     AND FPAG.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')='' THEN FPAG.IDTERCERO ELSE @IDTERCERO END
   END 
   IF @METODO='CRUD_FPAGDCXP'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )
     
      SELECT @CNSFPAG=CNSFPAG,@PROCESO=PROCESO,@CNSFCXP=CNSFCXP,@VLRCRUCE=VLRCRUCE,@ITEM=ITEM
      FROM   OPENJSON (@DATOS)
      WITH   ( 
      CNSFPAG  VARCHAR(20)   '$.CNSFPAG',
      PROCESO  VARCHAR(20)   '$.PROCESO',
      CNSFCXP  VARCHAR(20)   '$.CNSFCXP',
      VLRCRUCE  DECIMAL(14,2)   '$.VLRCRUCE',
      ITEM  INT   '$.ITEM'
      )  
      IF EXISTS(SELECT * FROM FPAG WHERE CNSFPAG=@CNSFPAG AND CERRADO=0)
      BEGIN
         IF @PROCESO='Nuevo'
         BEGIN
            IF NOT EXISTS(SELECT * FROM FPAGDCXP WHERE CNSFPAG=@CNSFPAG AND CNSFCXP=@CNSFCXP)
            BEGIN
               SELECT @ITEM=COALESCE((MAX(ITEM)),0)+1 FROM FPAGDCXP WHERE CNSFPAG=@CNSFPAG
               INSERT INTO FPAGDCXP(CNSFPAG, ITEM, CNSFCXP, NOREFERENCIA, IDTERCERO, SALDO, VLR_NETO, F_FACTURAREF, F_VENCE, CERRADO, USUARIO, VLRCRUCE, CNSFCXPP)
               SELECT @CNSFPAG, @ITEM, @CNSFCXP, NOREFERENCIA, IDTERCERO, SALDO, VLR_NETO, F_FACTURAREF, F_VENCE, 0, @USUARIO, @VLRCRUCE, NULL
               FROM FCXP
               WHERE CNSFCXP=@CNSFCXP
            END
            ELSE
            BEGIN
               INSERT INTO @TBLERRORES(ERROR)
               SELECT 'Cuenta por pagar ya existe en este pago no se puede continuar, verifique e intente de nuevo'
            END
         END
         IF @PROCESO='Editar'
         BEGIN
            IF EXISTS(SELECT * FROM FPAGDCXP WHERE CNSFPAG=@CNSFPAG AND ITEM=@ITEM)
            BEGIN
               IF EXISTS(SELECT * FROM FPAGDCXP WHERE CNSFPAG=@CNSFPAG AND ITEM=@ITEM  AND CNSFCXP=@CNSFCXP)
               BEGIN
                  UPDATE FPAGDCXP SET SALDO=FCXP.SALDO,VLRCRUCE=@VLRCRUCE
                  FROM FPAGDCXP INNER JOIN FCXP ON FPAGDCXP.CNSFCXP=FCXP.CNSFCXP
                  WHERE FPAGDCXP.CNSFPAG=@CNSFPAG
                  AND FCXP.CNSFCXP=@CNSFCXP
               END
               ELSE
               BEGIN
                  DELETE FPAGDCXP WHERE CNSFPAG=@CNSFPAG AND ITEM=@ITEM

                  INSERT INTO FPAGDCXP(CNSFPAG, ITEM, CNSFCXP, NOREFERENCIA, IDTERCERO, SALDO, VLR_NETO, F_FACTURAREF, F_VENCE, CERRADO, USUARIO, VLRCRUCE, CNSFCXPP)
                  SELECT @CNSFPAG, @ITEM, @CNSFCXP, NOREFERENCIA, IDTERCERO, SALDO, VLR_NETO, F_FACTURAREF, F_VENCE, 0, @USUARIO, @VLRCRUCE, NULL
                  FROM FCXP
                  WHERE CNSFCXP=@CNSFCXP                  
               END
            END
            ELSE
            BEGIN
               INSERT INTO @TBLERRORES(ERROR)
               SELECT 'Item no encontrado, verifique los datos ingresados e intente de nuevo '
            END  
         END
         IF @PROCESO='Borrar'
         BEGIN
             IF EXISTS(SELECT * FROM FPAGDCXP WHERE CNSFPAG=@CNSFPAG AND ITEM=@ITEM)
             BEGIN
                DELETE FPAGDCXP WHERE CNSFPAG=@CNSFPAG AND ITEM=@ITEM
             END
             ELSE
             BEGIN
               INSERT INTO @TBLERRORES(ERROR)
               SELECT 'Item no encontrado, verifique los datos ingresados e intente de nuevo '             
             END
         END
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Registro de pago no encontrado o ya fue cerrado, verifique e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK 
      RETURN 
   END  
   IF @METODO='REGRESA_FCXPAGDCXP'     
   BEGIN         
      SELECT @CNSFPAG=CNSFPAG        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
       CNSFPAG  VARCHAR(20)   '$.CNSFPAG'
      )  
      IF EXISTS(SELECT * FROM FPAG WHERE CNSFPAG=@CNSFPAG AND CERRADO=0 AND ESTADO='Activo')
      BEGIN
         SELECT @VLRCRUCE=SUM(VLRCRUCE) FROM FPAGDCXP WHERE CNSFPAG=@CNSFPAG
         UPDATE FPAG SET VALORPAGO=@VLRCRUCE WHERE CNSFPAG=@CNSFPAG
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Pago no se encuentra o ya esta cerrado '
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK 
      RETURN 
   END  
END







