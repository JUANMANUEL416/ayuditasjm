CREATE OR ALTER PROCEDURE DBO.SPQ_FTR_COL @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
SET DATEFORMAT dmy
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)			,@MODELO VARCHAR(100)			   ,@METODO VARCHAR(100)
		,@USUARIO VARCHAR(12)				   ,@COMPANIA VARCHAR(2)		      ,@IDSEDE      VARCHAR(5)		
      ,@PREFIJO   VARCHAR(20)       		,@SYS_COMPUTERNAME VARCHAR(200)	,@CNSLOG	VARCHAR(20)			        	
      ,@IDMODELOAG VARCHAR(12)	         ,@PROCESO VARCHAR(100)= 'INSERT'	
      ,@NOW VARCHAR(20) = REPLACE(CONVERT(VARCHAR,GETDATE(),102),'.','') 
      ,@USUANULA   VARCHAR(20)             ,@RAZONANULA VARCHAR(256)        ,@N_FACTURA VARCHAR(20)
      ,@IDDEP      VARCHAR(20)             ,@INDCARTERA BIT                 ,@INDCXC BIT
      ,@PROCEDENCIA VARCHAR(20)            ,@CAPITA BIT                     ,@NOREFERENCIA VARCHAR(20)
      ,@TIPOFACT VARCHAR(2)                ,@CONTABILIZADA SMALLINT
      DECLARE 
      @CNSFTR VARCHAR(20)             ,@IDSEDEF VARCHAR(7)        ,@F_FACTURA DATETIME        ,@IDTERCERO VARCHAR(20)       ,@IDPLAN    VARCHAR(6)
      ,@CAPIPGP   BIT                 ,@ABONOS    DECIMAL(14,2)   ,@DESCUENTOS DECIMAL(14,2)  ,@OBSERVACION VARCHAR(2048)   ,@CP_CONVENIO VARCHAR(20)
      ,@CP_MODALIDAD VARCHAR(80)      ,@CP_MES       VARCHAR(20)  ,@FECHACAP_INI DATETIME     ,@FECHCACA_FIN DATETIME       ,@COPAPROPIO BIT
      ,@VLRCOPAPRO DECIMAL(14,2)      ,@DV         SMALLINT       ,@TV VARCHAR(20)            ,@EC BIT                      ,@IDTERPART VARCHAR(20)      
      ,@IDFORMATOFTR VARCHAR(20)      ,@CNSRESOL     VARCHAR(20)  ,@TTEC VARCHAR(20)          ,@NODESCUENTACOPAGO BIT       ,@CUENTACXC VARCHAR(20)
      ,@CUENTACXC_RAD VARCHAR(20)     ,@DATO  VARCHAR(20)         ,@DATO3  VARCHAR(20)        ,@NVOCONSEC  VARCHAR(20)      ,@N_CUOTA SMALLINT
      ,@IDSERVICIO VARCHAR(20)        ,@ANEXO VARCHAR(2048)       ,@CANTIDAD DECIMAL(14,2)    ,@VALOR DECIMAL(14,2)         ,@VR_TOTAL DECIMAL(14,2)
	  ,@VALORCOPAGO  DECIMAL(14,2)		,@VALORMODERADORA  DECIMAL(14,2) 
      ,@CCOSTO VARCHAR(20)            ,@IDAREA VARCHAR(20)        ,@DATOS VARCHAR(MAX)        ,@CLASEORDEN VARCHAR(20)      ,@IDPESPECIAL VARCHAR(20)
      ,@RIESGO VARCHAR(20)            ,@NOADMISION VARCHAR(20)     ,@IDTERCEROF VARCHAR(20)    ,@NOPRESTACION VARCHAR(20)    ,@NOITEM INT
      ,@MARCAFAC BIT                  ,@USUMARCA VARCHAR(20)       ,@CNSFACT VARCHAR(20)       ,@TIPODOC VARCHAR(10)         ,@ESTDIAN SMALLINT
      ,@IDAFILIADO VARCHAR(20)        ,@FECHAINI DATETIME               ,@FECHAFIN DATETIME        ,@FILTRO VARCHAR(MAX)
      ,@CNSAGREGAPGP VARCHAR(20)      ,@COPAGOS_CP DECIMAL(14,2)    ,@VLR_CPROPIOFRD  DECIMAL(14,2),@SINENVIO BIT
      ,@NOMBREXML VARCHAR(256)        ,@XML VARCHAR(MAX)            ,@NOMBREJSON VARCHAR(120)      ,@RIPSJSON VARCHAR(MAX)
      ,@IDPLANSOAT VARCHAR(10)        ,@IDPLANFONSAT VARCHAR(10)    
   BEGIN
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			MODELO VARCHAR(100) '$.MODELO'
			,METODO VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
	)

	SELECT   @MODELO = MODELO			,@METODO = METODO
			,@PARAMETROS = PARAMETROS	,@USUARIO = USUARIO
	FROM #JSON
   
   SELECT @IDPLANSOAT   = DBO.FNK_VALORVARIABLE('IDPLANSOAT')
   SELECT @IDPLANFONSAT = DBO.FNK_VALORVARIABLE('IDPLANFONSAT')

	IF @METODO = 'BUSCASED'
	BEGIN
		SELECT 'OK' AS OK

		SELECT DISTINCT COALESCE(FTR.IDSEDE,'00') value ,COALESCE(SED.DESCRIPCION,'Sin Sede Asociada') label
      FROM FTR LEFT JOIN SED ON FTR.IDSEDE=SED.IDSEDE
      RETURN
	END
	IF @METODO = 'SEDFACUMASI'
	BEGIN
		SELECT 'OK' AS OK

		SELECT DISTINCT COALESCE(SED.IDSEDE,'00') value ,COALESCE(SED.DESCRIPCION,'Sin Sede Asociada') label
      FROM SED 

	END
   IF @METODO = 'ANULARFAC'
   BEGIN
      PRINT 'VOY A ANULAR'

      SELECT @USUANULA= USUARIO,@N_FACTURA=N_FACTURA,@RAZONANULA=OBSANULA
      FROM   OPENJSON (@PARAMETROS)
      WITH   (
              N_FACTURA VARCHAR(20)  '$.N_FACTURA'
              ,USUARIO   VARCHAR(12)  '$.USUANULA'
              ,OBSANULA   VARCHAR(256)  '$.OBSANULA'
             )
      
       PRINT '@USUANULA='+@USUANULA
       IF NOT EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTURA AND ESTADO='P' AND COALESCE(TIPOANULACION,'')<>'NC')
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Factura  Anulada...' 
       END
       IF EXISTS(SELECT * FROM FNOT WHERE N_FACTURA=@N_FACTURA AND ESTADO<>'A')
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Factura tiene Notas Debito/Credito Asociadas no se puede Anular' 
       END
       IF EXISTS(SELECT * FROM FPAGD INNER JOIN FPAG ON FPAG.CNSFPAG=FPAGD.CNSFPAG WHERE FPAGD.N_FACTURA=@N_FACTURA AND FPAG.INGRESO<>'DEVOLUCION')
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Factura tiene Pagos Asociadas no se puede Anular' 
       END
       PRINT 'Capturo los datos de la factura'
       SELECT @IDDEP=IDDEP,@INDCARTERA=INDCARTERA,@INDCXC=INDCXC,@PROCEDENCIA=PROCEDENCIA,@IDSEDE=IDSEDE,@CAPITA=COALESCE(CAPITADA,0)
       FROM FTR WHERE N_FACTURA=@N_FACTURA
       IF @IDDEP<> DBO.FNK_VALORVARIABLE('IDFDEPFACTURACION')
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Factura tiene Notas Debito/Credito Asociadas no se puede Anular' 
       END
       IF @IDDEP<> DBO.FNK_VALORVARIABLE('IDFDEPFACTURACION')
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La Factura No esta en el Departamento de Facturación. No se puede Anular' 
       END
       IF @INDCARTERA=1 
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La Factura Se encuentra Asignada a una Cuenta por Cobrar no se puede Anular' 
       END
       IF @INDCXC=1 
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La Factura Se encuentra en una Cuenta por Cobrar ya Entregada no se puede Anular' 
       END

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
      PRINT 'Procedo a Anular la Factura...'
      BEGIN TRY 
         SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME()) FROM USUSU WHERE USUARIO=@USUANULA
         IF @PROCEDENCIA NOT IN('FINANCIERO','CAJA')
         BEGIN
            EXEC SPK_ANULA_FACT @N_FACTURA,'01',@IDSEDE,@USUARIO,@RAZONANULA,@SYS_COMPUTERNAME,@USUANULA
         END
         ELSE
         BEGIN
            IF @CAPITA=1
            BEGIN
               EXEC SPK_ANULA_FACT_CAPITADA @N_FACTURA,'01',@IDSEDE,@USUARIO,@RAZONANULA,@SYS_COMPUTERNAME,@USUANULA
            END
            ELSE
            BEGIN
               
               EXEC SPK_ANULA_FACT @N_FACTURA,'01',@IDSEDE,@USUARIO,@RAZONANULA,@SYS_COMPUTERNAME,@USUANULA
            END
         END
      END TRY
      BEGIN CATCH
         IF @CAPITA=1
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'SPK_ANULA_FACT_CAPITADA '+@N_FACTURA+',''01'','+@IDSEDE+','+@USUARIO+','+@RAZONANULA+','+@SYS_COMPUTERNAME+','+@USUANULA
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'SPK_ANULA_FACT '+@N_FACTURA+',''01'','+@IDSEDE+','+@USUARIO+','+@RAZONANULA+','+@SYS_COMPUTERNAME+','+@USUANULA
         END
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN

   END
   IF @METODO = 'LIBERARFAC'
   BEGIN
      PRINT 'VOY A LIBERAR FACTURA'

      SELECT @USUANULA= USUARIO,@N_FACTURA=N_FACTURA,@RAZONANULA=OBSANULA
      FROM   OPENJSON (@PARAMETROS)
      WITH   (
              N_FACTURA VARCHAR(20)  '$.N_FACTURA'
              ,USUARIO   VARCHAR(12)  '$.USUANULA'
              ,OBSANULA   VARCHAR(256)  '$.OBSANULA'
             )
      
       PRINT '@USUANULA='+@USUANULA
       IF NOT EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTURA AND ESTADO='P' AND COALESCE(TIPOANULACION,'')<>'NC')
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Factura  Anulada...' 
       END
       IF EXISTS(SELECT * FROM FNOT WHERE N_FACTURA=@N_FACTURA AND ESTADO<>'A')
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Factura tiene Notas Debito/Credito Asociadas no se puede liberar' 
       END
       IF EXISTS(SELECT * FROM FPAGD INNER JOIN FPAG ON FPAG.CNSFPAG=FPAGD.CNSFPAG WHERE FPAGD.N_FACTURA=@N_FACTURA AND FPAG.INGRESO<>'DEVOLUCION')
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Factura tiene Pagos Asociadas no se puede liberar' 
       END
       PRINT 'Capturo los datos de la factura'
       SELECT @IDDEP=IDDEP,@INDCARTERA=INDCARTERA,@INDCXC=INDCXC,@PROCEDENCIA=PROCEDENCIA,@IDSEDE=IDSEDE,@CAPITA=COALESCE(CAPITADA,0),
              @NOREFERENCIA=NOREFERENCIA,@TIPOFACT=TIPOFAC,@CONTABILIZADA=CONTABILIZADA, @IDPLAN = IDPLAN
       FROM FTR WHERE N_FACTURA=@N_FACTURA

       PRINT '<<<<< @IDPLANSOAT >>>> '+@IDPLANSOAT+' <<<<< @IDPLANFONSAT >>>>> '+@IDPLANFONSAT+' <<<<< @IDPLAN >>>> '+@IDPLAN
       
       IF @IDDEP<> DBO.FNK_VALORVARIABLE('IDFDEPFACTURACION')
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Factura tiene Notas Debito/Credito Asociadas no se puede liberar' 
       END
       IF @IDDEP<> DBO.FNK_VALORVARIABLE('IDFDEPFACTURACION')
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La Factura No esta en el Departamento de Facturación. No se puede liberar' 
       END
       IF @INDCARTERA=1 
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La Factura Se encuentra Asignada a una Cuenta por Cobrar no se puede liberar' 
       END
       IF @INDCXC=1 
       BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La Factura Se encuentra en una Cuenta por Cobrar ya Entregada no se puede liberar' 
       END
      IF @PROCEDENCIA='SALUD' AND NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOREFERENCIA)
      BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se encontro Nro de Admision Asociada a la Factura. No se puede liberar' 
      END
      IF @PROCEDENCIA='AUT' AND NOT EXISTS(SELECT * FROM AUT WHERE IDAUT=@NOREFERENCIA)
      BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se encontro Nro de Autorización Asociada a la Factura. No se puede liberar' 
      END

      IF @PROCEDENCIA='CI' AND @NOREFERENCIA <> 'VARIOS' AND NOT EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO=@NOREFERENCIA) AND @IDPLAN NOT IN (@IDPLANFONSAT, @IDPLANSOAT)
      BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se encontro Cita  Asociada a la Factura. No se puede liberar' 
      END
      IF @PROCEDENCIA='FINANCIERO' 
      BEGIN
         IF @CONTABILIZADA=0
         BEGIN
			   INSERT INTO @TBLERRORES(ERROR)
			   SELECT 'La Factura no se ha Enviado a Contabilidad No Es nesesario Liberar' 
         END
      END

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

      PRINT 'Procedo a liberar la Factura...'
      BEGIN TRY 
         SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME()) FROM USUSU WHERE USUARIO=@USUANULA
         IF @PROCEDENCIA NOT IN('FINANCIERO','CAJA')
         BEGIN
            EXEC SPK_LIBERAR_FACT @N_FACTURA,'01',@IDSEDE,@USUARIO,@RAZONANULA,@SYS_COMPUTERNAME,@USUANULA
         END
         ELSE
         BEGIN
            IF DBO.FNK_VALORVARIABLE('IDTIPOCXP_DEFAULT')='COMER'
            BEGIN
               EXEC SPK_LIBERA_FTR_COMER @N_FACTURA
            END
            ELSE
            BEGIN
               EXEC SPK_LIBERAR_FACT @N_FACTURA,'01',@IDSEDE,@USUARIO,@RAZONANULA,@SYS_COMPUTERNAME,@USUANULA
            END
         END
      END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN

   END
   IF @METODO = 'CREARFTR'
   BEGIN

      SELECT @DATOS=DATOS
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON
      )  
      PRINT @DATOS
      DECLARE @USUARIOFACTURA VARCHAR(20)
      SELECT @CNSFTR=CNSFTR,@N_FACTURA=N_FACTURA,@IDSEDEF=IDSEDEF,	@F_FACTURA=F_FACTURA,	@IDTERCEROF=IDTERCERO,	@IDPLAN=IDPLAN,	
             @CAPIPGP=CAPIPGP,	@ABONOS=ABONOS,	@DESCUENTOS=DESCUENTOS,	@OBSERVACION=OBSERVACION,	@CP_CONVENIO=CP_CONVENIO,
             @CP_MODALIDAD=CP_MODALIDAD,	@CP_MES=CP_MES,	@FECHACAP_INI=FECHACAP_INI,	@FECHCACA_FIN=FECHCACA_FIN,	
             @COPAPROPIO=CONVERT(BIT,COALESCE(COPAPROPIO,0)),	@VLRCOPAPRO=CONVERT(DECIMAL(14,2),VLRCOPAPRO),@USUARIOFACTURA=USUARIOFACTURA
			 ,	@VALORCOPAGO=CONVERT(DECIMAL(14,2),VALORCOPAGO),	@VALORMODERADORA=CONVERT(DECIMAL(14,2),VALORMODERADORA)
      FROM   OPENJSON (@DATOS)
      WITH   (
               CNSFTR VARCHAR(20)  '$.CNSFTR',
               N_FACTURA VARCHAR(20)  '$.N_FACTURA',
               IDSEDEF VARCHAR(7)  '$.IDSEDE',
               F_FACTURA DATE  '$.F_FACTURA',
               IDTERCERO VARCHAR(20)  '$.IDTERCERO',
               IDPLAN VARCHAR(6)  '$.IDPLAN',
               CAPIPGP BIT  '$.CAPITADA',
               ABONOS DECIMAL(14,2)  '$.ABONOS',
               DESCUENTOS DECIMAL(14,2)  '$.DESCUENTOS',
               OBSERVACION VARCHAR(2048)  '$.OBSERVACION',
               CP_CONVENIO VARCHAR(20)  '$.CONVENIO',
               CP_MODALIDAD VARCHAR(80)  '$.MODALIDAD',
               CP_MES VARCHAR(20)  '$.MES',
               FECHACAP_INI DATE  '$.F_INICIAL',
               FECHCACA_FIN DATE  '$.F_FINAL',
               COPAPROPIO BIT  '$.COPAGOP',
               VLRCOPAPRO VARCHAR(20)  '$.VLRCOPAPRO',
               VALORCOPAGO DECIMAL(14,2)  '$.VALORCOPAGO',
               VALORMODERADORA DECIMAL(14,2)  '$.VALORMODERADORA',
               USUARIOFACTURA VARCHAR(20) '$.USUARIOFACTU'
             )
         
      PRINT  @VLRCOPAPRO
      IF COALESCE(@USUARIO,'')=''
      BEGIN
         SELECT @USUARIO=@USUARIOFACTURA
      END
      PRINT 'Empiezo a revisar datos y capturar los nuevos @USUARIO='+COALESCE(@USUARIO,'SIN USUARIO')
      SELECT @SYS_COMPUTERNAME=COALESCE(SYS_ComputerName,HOST_NAME()) FROM USUSU WHERE USUARIO=@USUARIO
      IF @F_FACTURA IS NULL 
      BEGIN
         SELECT @F_FACTURA=DBO.FNK_GETDATE()
      END
      IF NOT EXISTS(SELECT * FROM PRI WHERE FECHA_INI<=@F_FACTURA AND FECHA_FIN+1>@F_FACTURA AND COALESCE(CERRADO,0)=0)
      BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Periodo Contable No Existe o no Esta Abierto, Revise Configuración Peridos Contables'
         
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURNS
      END

      IF COALESCE(@IDSEDEF,'')=''
      BEGIN
         PRINT 'busco la sede del usuario'
         SELECT @IDSEDEF=IDSEDE FROM UBEQ WHERE SYS_ComputerName=@SYS_COMPUTERNAME
      END
      IF COALESCE(@IDSEDEF,'')=''
      BEGIN
         SELECT @IDSEDEF= IDSEDE FROM USUSU WHERE USUARIO=@USUARIO
      END
      SELECT @IDSEDE=@IDSEDEF,@COMPANIA='01'
      IF COALESCE(@CNSFTR,'')='' OR @N_FACTURA=''
      BEGIN
         PRINT 'VOY A CREAR LA FACTURA'
         BEGIN TRY 
		      PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE='+COALESCE(@IDSEDE,'SIN SEDE')   
            SELECT @CNSFTR=''
		      EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@CNSFTR', @CNSFTR OUTPUT  
		      SELECT @CNSFTR = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSFTR))+LTRIM(RTRIM(@CNSFTR)),SPACE(1),0)
		      PRINT '@CNSFTR='+COALESCE(@CNSFTR,'')
         END TRY
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH


        
		   SELECT @DV = DIASVTO, @TTEC = TIPOTERCONTABLE, @NODESCUENTACOPAGO = NODESCUENTACOPAGO
		   FROM   PPT WHERE IDTERCERO = @IDTERCERO AND IDPLAN = @IDPLAN
		   PRINT 'DV-TTEC-NODESCUENTA'

		   IF (SELECT SIIF FROM TER WHERE IDTERCERO = @IDTERCERO)=1
		   BEGIN
			   SELECT @OBSERVACION='#$'+COALESCE(SIIFCODIGOPCI,'')+';'+COALESCE(SIIFCONTRATO,'')+';'+COALESCE(SIIFCORREOSUPER,'')+'#$'
			   FROM TER WHERE IDTERCERO = @IDTERCERO 
		   END

		   SELECT @CUENTACXC = CUENTA,@CUENTACXC_RAD=CUENTARAD FROM TTEC
		   WHERE TIPO = @TTEC
		   PRINT 'CUENTACXC-CUENTACXCRAD'

		   IF @DV IS NULL
		   BEGIN
			   SELECT @DV = 30
		   END
		   IF @DV = 0
		   BEGIN
			   SELECT @DV = 30  
		   END
		   PRINT 'DV='+STR(@DV)

		   SELECT @TV = 'Credito'
		   SELECT @EC = ENVIODICAJA FROM TER WHERE IDTERCERO = @IDTERCERO
        
		   IF @EC IS NULL
		   BEGIN
			   SELECT @EC = 0
		   END
                
		   SELECT @IDTERPART = DATO FROM USVGS WHERE IDVARIABLE = 'IDCJTERCEROEXTERNO'
                
            
		   SELECT @DATO = DATO FROM USVGS WHERE IDVARIABLE = 'IDMONEDABASE'          

                    
		   SELECT @DATO3 = LEFT(DATO,20) FROM USVGS WHERE IDVARIABLE = 'IDFDEPFACTURACION' 

         BEGIN TRY
		      PRINT 'AQUI LLAMO A NUMFACTURA'         
		      SET @NVOCONSEC = SPACE(20)
		      EXEC SPK_GENNUMEROFACTURA @COMPANIA, @IDSEDE, NULL, @NVOCONSEC OUTPUT   
		      PRINT 'REGRESE DE NUMFACTURA'

		      PRINT '@NVOCONSEC='+@NVOCONSEC  
         END TRY 
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
		
		   --IF EXISTS(SELECT * FROM PPT WHERE IDTERCERO=@IDTERCERO AND IDPLAN=@IDPLAN AND COALESCE(MFORMATOFACTURAIND,0)=1 AND COALESCE(IDFORMATOFTR,'')<>'')
		   --BEGIN
			  -- SELECT @IDFORMATOFTR=IDFORMATOFTR  FROM PPT WHERE IDTERCERO=@IDTERCERO AND IDPLAN=@IDPLAN AND COALESCE(MFORMATOFACTURAIND,0)=1 AND COALESCE(IDFORMATOFTR,'')<>''
		   --END
		   --ELSE
		   --BEGIN
			  -- SELECT @IDFORMATOFTR=DBO.FNK_VALORVARIABLE('IDFORMATOFTR')
		   --END
         --Es Factura Administrativa
         SELECT @IDFORMATOFTR=DBO.FNK_VALORVARIABLE('IDFORMATOFTRFINANCIE')
		   IF DBO.FNK_VALORVARIABLE('BLOQUEADIAN')='SI'
		   BEGIN
			   IF DBO.FNK_VALORVARIABLE('FACTSEDE')='SI'
			   BEGIN
				   SELECT  @CNSRESOL=CNSRESOL FROM FDIAN WHERE IDENTIFICADOR=@IDSEDE AND VENCIDA=0 AND PROCEDENCIA = 'FTR'
			   END
			   ELSE
			   BEGIN
				   SELECT  @CNSRESOL=CNSRESOL FROM FDIAN WHERE  VENCIDA=0 AND PROCEDENCIA = 'FTR'
			   END
		   END
         BEGIN TRY
		      PRINT 'INSERTO EN FTR'
		      INSERT INTO FTR(CNSFCT, COMPANIA, CLASE, IDTERCERO, N_FACTURA, F_FACTURA, F_VENCE, VR_TOTAL, COBRADOR, VENDEDOR, MONEDA, OCOMPRA, ESTADO, F_CANCELADO,
						      IDAFILIADO, EMPLEADO, NOREFERENCIA, PROCEDENCIA, TIPOFAC, OBSERVACION, TIPOVENTA, VALORCOPAGO, DESCUENTO, VALORPCOMP, CREDITO, INDCARTERA,
						      INDCXC, MARCACONT, CONTABILIZADA, NROCOMPROBANTE, MARCA, INDASIGCXC, IMPRESO, VALORSERVICIOS, CLASEANULACION, CNSLOG, USUARIOFACTURA, FECHAFAC,
						      MIVA, PIVA, VR_ABONOS, IDPLAN, FECHAPASOCXC, TIPOFIN, CNSFMAS, IDAREA_ALTA,
						      CCOSTO_ALTA, IDDEP, TIPOTTEC, CUENTACXC,CUENTACXC_RAD, CODUNG , CODPRG, PAQUETE, -- JEDM 09.AGO.2011 SE AUMENTA CAMPO PAQUETE
						      IDSEDE, RDIAN, CNSRESOL,IDFORMATO,COPAPROPIO,CP_VLR_COPAGOS,CAPITADA,CP_CONVENIO,CP_MODALIDAD,CP_MES,FECHACAP_INI,FECHACAP_FIN, VALORMODERADORA)
		      SELECT @CNSFTR, @COMPANIA, 'C', @IDTERCEROF, @NVOCONSEC, CASE  WHEN  @F_FACTURA IS NOT NULL THEN @F_FACTURA ELSE DBO.FNK_GETDATE() END,
                  CASE  WHEN  @F_FACTURA IS NOT NULL THEN @F_FACTURA+ @DV ELSE DBO.FNK_GETDATE()+ @DV END,0, NULL, NULL, LEFT(@DATO,2), NULL, 'P', NULL, 
				      NULL, @USUARIO, NULL, 'FINANCIERO', 'I', REPLACE(COALESCE(@OBSERVACION,''),'@N_FACTURA',@NVOCONSEC), @TV,  @VALORCOPAGO, 0, 0, 0, 
			      0, 0, 0, 0, NULL, 0, 0, 0, 0, NULL, NULL, @USUARIO, GETDATE(), 0, 0, 0, 
			      @IDPLAN, NULL, 'C', NULL, NULL, NULL, @DATO3, @TTEC,@CUENTACXC,@CUENTACXC_RAD, NULL , NULL, 0, @IDSEDE,
			      CASE COALESCE(@CNSRESOL,'') WHEN '' THEN 0 ELSE 1 END, COALESCE(@CNSRESOL,''),@IDFORMATOFTR,@COPAPROPIO,
               @VLRCOPAPRO,@CAPIPGP,@CP_CONVENIO,@CP_MODALIDAD,@CP_MES,@FECHACAP_INI,@FECHCACA_FIN, @VALORMODERADORA
      
         END TRY 
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      ELSE
      BEGIN
         PRINT 'Voy a Actualizar'
		   SELECT @DV = COALESCE(DIASVTO,30), @TTEC = TIPOTERCONTABLE, @NODESCUENTACOPAGO = NODESCUENTACOPAGO
		   FROM   PPT WHERE IDTERCERO = @IDTERCERO AND IDPLAN = @IDPLAN
			
		   IF @DV IS NULL
		   BEGIN
			   SELECT @DV = 30
		   END
		   IF @DV = 0
		   BEGIN
			   SELECT @DV = 30  
		   END
		   PRINT 'DV='+STR(@DV)
         PRINT '@N_FACTURA = '+@N_FACTURA
         PRINT '@CNSFTR '+ @CNSFTR
         BEGIN TRY
            UPDATE FTR SET F_FACTURA=@F_FACTURA,
            F_VENCE=@F_FACTURA+@DV,
            IDTERCERO=@IDTERCEROF,
            IDPLAN=@IDPLAN,
            IDSEDE=@IDSEDEF,
            OBSERVACION=@OBSERVACION,
            CAPITADA=@CAPIPGP,
            CP_MODALIDAD=@CP_MODALIDAD,
            CP_CONVENIO=@CP_CONVENIO,
            CP_MES=@CP_MES,
            FECHACAP_INI=@FECHACAP_INI,
            FECHACAP_FIN=@FECHCACA_FIN,
            COPAPROPIO=@COPAPROPIO,
            CP_VLR_COPAGOS=@VLRCOPAPRO,
            VALORCOPAGO=@VALORCOPAGO,
            VALORMODERADORA=@VALORMODERADORA
            WHERE N_FACTURA=@N_FACTURA
            AND CNSFCT=@CNSFTR
            PRINT 'PASE UPDATE'
             SELECT @NVOCONSEC=@N_FACTURA
         END TRY 
         BEGIN CATCH
            PRINT 'MEDIO ERROR'
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
        
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN

         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      SELECT 'OK' OK
      PRINT 'VOY A DEVOLVER LOS RESPULTADOS @NVOCONSEC='+COALESCE(@NVOCONSEC,'NO TRAIGO FACTURA')
      SELECT FTR.N_FACTURA,FTR.IDTERCERO,TER.NIT, TER.RAZONSOCIAL,FTR.F_FACTURA,FTR.F_VENCE,FTR.PROCEDENCIA,FTR.NOREFERENCIA,FTR.IDPLAN,FTR.VALORSERVICIOS,COALESCE(FTR.VALORCOPAGO,0)VALORCOPAGO,
             FTR.VR_TOTAL,FTR.ESTADO,COALESCE(FTR.TIPOANULACION,'')NC,CASE COALESCE(FACTE,0) WHEN 0 THEN 'Sin Notificar' WHEN 1 THEN 'En Cola' WHEN 2 THEN 'Notificada' WHEN 3  THEN 'Con Errores' WHEN 4 THEN  'Procesando' END ESTDIAN,
             FTR.CONTABILIZADA, FTR.CNSFCT AS CNSFTR, FTR.VR_ABONOS AS ABONOS ,FTR.CAPITADA,CP_CONVENIO AS CONVENIO,COPAPROPIO AS COPAGOP,COALESCE(CP_VLR_COPAGOS,0) AS VLRCOPAPRO ,DESCUENTO,FECHACAP_INI AS F_INICIAL,
             FECHACAP_FIN AS F_FINAL,IDSEDE,CP_MES AS MES,CP_MODALIDAD AS MODALIDAD,OBSERVACION,TIPOFIN AS TIPOFINAN,PLN.DESCPLAN,USUARIOFACTURA,CP_VLR_SERVICIOS,CP_VLR_COPAGOS, FTR.VALORCOPAGO , FTR.VALORMODERADORA
      FROM FTR INNER JOIN TER ON FTR.IDTERCERO=TER.IDTERCERO 
               INNER JOIN PLN ON FTR.IDPLAN=PLN.IDPLAN
      WHERE FTR.N_FACTURA=@NVOCONSEC

      RETURN
   END
   IF @METODO='LISTAFTRD'
   BEGIN
      SELECT @N_FACTURA=N_FACTURA
      FROM   OPENJSON (@PARAMETROS)
      WITH   (
               N_FACTURA VARCHAR(20)  '$.N_FACTURA'
              )
      
      SELECT 'OK'OK,N_CUOTA,AREAPRESTACION,VALOR,CCOSTO,PREFIJO,ANEXO,REFERENCIA,CANTIDAD,VR_TOTAL 
      FROM FTRD WHERE N_FACTURA=@N_FACTURA
   END
   IF @METODO='CRUDFTRD'
   BEGIN
      
      SELECT @DATOS=DATOS
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON
      )
      SELECT @CNSFTR=CNSFTR, @N_CUOTA =COALESCE(N_CUOTA,0),  @PREFIJO = PREFIJO, @IDSERVICIO = IDSERVICIO, @ANEXO = ANEXO, @CANTIDAD = CANTIDAD,
             @VALOR = VALOR, @VR_TOTAL = VR_TOTAL, @CCOSTO = CCOSTO,	@N_FACTURA = N_FACTURA,  	@IDPLAN = IDPLAN,@VLR_CPROPIOFRD=VLR_CPROPIOFRD
      FROM   OPENJSON (@DATOS)
      WITH   (
               CNSFTR  VARCHAR(20) '$.CNSFTR',
               N_CUOTA SMALLINT  '$.N_CUOTA',
               PREFIJO VARCHAR(20)  '$.PREFIJO',
               IDSERVICIO VARCHAR(20)  '$.IDSERVICIO',
               ANEXO VARCHAR(2048)  '$.ANEXO',
               CANTIDAD DECIMAL(14,2)  '$.CANTIDAD',
               VALOR DECIMAL(14,2)  '$.VALOR',
               VR_TOTAL DECIMAL(14,2)  '$.VR_TOTAL',
               CCOSTO VARCHAR(20)  '$.CCOSTO',
               N_FACTURA VARCHAR(20)  '$.N_FACTURA',
               IDPLAN VARCHAR(6)  '$.IDPLAN',
               VLR_CPROPIOFRD DECIMAL(14,2)  '$.VLR_COPAPRO'
      )

      PRINT 'PROCEDO A SEGUIR '+COALESCE(@N_FACTURA,'NADA')
      IF COALESCE(@N_fACTURA,'')=''
      BEGIN
         SELECT 'KO' OK
         SELECT 'No Se ha Relacionado Ninguna Factura...'ERROR 
         RETURN         
      END
      SELECT @IDAREA=dbo.FNK_AREADELCCOSTO(@CCOSTO)
      IF COALESCE(@N_CUOTA,0)=0
      BEGIN
         PRINT 'VOY A INSERTAR'
         IF EXISTS(SELECT * FROM FTRD WHERE N_FACTURA=@N_FACTURA)
         BEGIN
            SELECT @N_CUOTA=MAX(N_CUOTA)+1 FROM FTRD WHERE N_FACTURA=@N_FACTURA
         END
         ELSE
         BEGIN
            SELECT @N_CUOTA=1
         END
		 

         BEGIN TRY 
            INSERT INTO FTRD(CNSFTR,N_CUOTA,AREAPRESTACION,PREFIJO,REFERENCIA,ANEXO,CANTIDAD,VALOR,VR_TOTAL,VLR_SERVICI,IDPLAN,CCOSTO,N_FACTURA,FECHA,COPAGOS_CP)
            SELECT @CNSFTR,@N_CUOTA,@IDAREA,@PREFIJO,@IDSERVICIO,@ANEXO,@CANTIDAD,@VALOR,@VR_TOTAL,@VR_TOTAL,@IDPLAN,@CCOSTO,@N_FACTURA,dbo.FNK_GETDATE(),COALESCE(@VLR_CPROPIOFRD,0)
			
         END TRY 
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT 'INSERT '+ ERROR_MESSAGE()
         END CATCH
      END
      ELSE
      BEGIN
         BEGIN TRY
            PRINT 'VOY A ACTUALIZAR'
            UPDATE FTRD SET
            AREAPRESTACION=@IDAREA,
            PREFIJO=@PREFIJO,
            REFERENCIA=@IDSERVICIO,
            ANEXO=@ANEXO,
            CANTIDAD=@CANTIDAD,
            VALOR=@VALOR,
            VR_TOTAL=@VR_TOTAL,
            VLR_SERVICI=@VR_TOTAL,
            CCOSTO=@CCOSTO
            WHERE CNSFTR=@CNSFTR
            AND N_CUOTA=@N_CUOTA
            AND N_FACTURA=@N_FACTURA
			PRINT 'ACTUALICE FTRD'
         END TRY 
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      EXEC SPK_TOTALFACTURFIN @N_FACTURA
      EXEC SPK_FAC_IMPDEDUC  @USUARIO,@CNSFTR,@N_FACTURA,@VALOR
      SELECT @VALOR=VALORSERVICIOS FROM FTR WHERE N_FACTURA=@N_FACTURA
      SELECT 'OK' OK,@VALOR TOTALFTR
      RETURN
   END
   IF @METODO='DELETEFTRD'
   BEGIN
      SELECT @DATOS=DATOS
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON
      )      
      SELECT @CNSFTR=CNSFTR, @N_CUOTA =COALESCE(N_CUOTA,0), @N_FACTURA = N_FACTURA
      FROM   OPENJSON (@DATOS)
      WITH   (
               CNSFTR  VARCHAR(20) '$.CNSFTR',
               N_CUOTA SMALLINT  '$.N_CUOTA',
               N_FACTURA VARCHAR(20)  '$.N_FACTURA'
             )
      IF COALESCE(@N_FACTURA,'')<>''
      BEGIN
         IF EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTURA AND CONTABILIZADA=0 AND COALESCE(FACTE,0)=0 AND COALESCE(IMPRESO,0)<=0)
         BEGIN
            BEGIN TRY
               DELETE FTRD WHERE CNSFTR=@CNSFTR  AND N_CUOTA=@N_CUOTA AND N_FACTURA=@N_FACTURA
            END TRY 
            BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH            
         END
         ELSE
         BEGIN
            SELECT 'KO' OK
            SELECT 'Factura Contabilizada, Notificada a la Dian y/o Impresa, no se permiten Cambios'ERROR 
            RETURN              
         END
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'N_Factura no Encontrada'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      EXEC SPK_TOTALFACTURFIN @N_FACTURA
      SELECT @VALOR=VALORSERVICIOS FROM FTR WHERE N_FACTURA=@N_FACTURA
      EXEC SPK_FAC_IMPDEDUC  @USUARIO,@CNSFTR,@N_FACTURA,@VALOR
      SELECT 'OK' OK,@VALOR TOTALFTR
      RETURN
   END
   IF @METODO='ADDFTRDC'
   BEGIN
      
      SELECT @DATOS=DATOS
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON
      )    

      SELECT @CNSFTR=CNSFTR, @N_CUOTA =COALESCE(N_CUOTA,0),@IDTERCERO=IDTERCERO,@IDPLAN=IDPLAN,@FECHACAP_INI=FECHAINI,
      @FECHCACA_FIN=FECHAFIN,@PROCEDENCIA=PROCEDENCIA,@CLASEORDEN=CLASEORDEN,@IDPESPECIAL=IDPESPECIAL,@RIESGO=RIESGO,
      @NOADMISION=NOADMISION,@PROCESO=PROCESO,@IDSEDEF=CASE WHEN COALESCE(IDSEDEF,'')='' THEN NULL ELSE IDSEDEF END
      FROM   OPENJSON (@DATOS)
      WITH   (
               CNSFTR  VARCHAR(20)    '$.CNSFTR',
               N_CUOTA SMALLINT       '$.N_CUOTA',
               IDTERCERO VARCHAR(20)  '$.IDTERCERO',
               IDPLAN VARCHAR(20)     '$.IDPLAN',
               FECHAINI DATE          '$.FECHAINI',
               FECHAFIN DATE          '$.FECHAFIN',
               PROCEDENCIA VARCHAR(20)'$.PROCEDENCIA',
               CLASEORDEN VARCHAR(20) '$.CLASEORDEN',
               IDPESPECIAL VARCHAR(20)'$.IDPESPECIAL',
               RIESGO VARCHAR(20)     '$.RIESGO',
               NOADMISION VARCHAR(20) '$.NOADMISION',
               PROCESO    VARCHAR(10) '$.PROCESO',
               IDSEDEF    VARCHAR(10) '$.IDSEDE'
             )
      IF COALESCE(@CNSFTR,'')<>'' AND COALESCE(@N_CUOTA,0)>0
      BEGIN
         BEGIN TRY 
            IF @PROCESO='ADD'
            BEGIN
               PRINT 'EXEC DBO.SPK_DELSERCAP '+@CNSFTR+','+STR(@N_CUOTA)+','+@IDTERCERO+','+@IDPLAN+','+CONVERT(VARCHAR,@FECHACAP_INI,103)+','+CONVERT(VARCHAR,@FECHCACA_FIN,103)+','+@PROCEDENCIA+','+@NOADMISION+','+COALESCE(@IDSEDEF,'NULL')
               EXEC DBO.SPK_ADDSERCAP @CNSFTR,@N_CUOTA,@IDTERCERO,@IDPLAN,@FECHACAP_INI,@FECHCACA_FIN,@PROCEDENCIA,@CLASEORDEN,@IDPESPECIAL,@RIESGO,@NOADMISION,@IDSEDEF
            END
            IF @PROCESO='DEL'
            BEGIN
               PRINT 'EXEC DBO.SPK_DELSERCAP '+@CNSFTR+','+STR(@N_CUOTA)+','+@IDTERCERO+','+@IDPLAN+','+CONVERT(VARCHAR,@FECHACAP_INI,103)+','+CONVERT(VARCHAR,@FECHCACA_FIN,103)+','+@PROCEDENCIA+','+@NOADMISION+','+@IDSEDEF
               EXEC DBO.SPK_DELSERCAP @CNSFTR,@N_CUOTA,@IDTERCERO,@IDPLAN,@FECHACAP_INI,@FECHCACA_FIN,@PROCEDENCIA,@NOADMISION,@IDSEDEF
            END
         END TRY 
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
         
         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
         SELECT 'OK' OK
         SELECT FTR.N_FACTURA,FTR.IDTERCERO,TER.NIT, TER.RAZONSOCIAL,FTR.F_FACTURA,FTR.F_VENCE,FTR.PROCEDENCIA,FTR.NOREFERENCIA,FTR.IDPLAN,FTR.VALORSERVICIOS,COALESCE(FTR.VALORCOPAGO,0)VALORCOPAGO,
                FTR.VR_TOTAL,FTR.ESTADO,COALESCE(FTR.TIPOANULACION,'')NC,CASE COALESCE(FACTE,0) WHEN 0 THEN 'Sin Notificar' WHEN 1 THEN 'En Cola' WHEN 2 THEN 'Notificada' WHEN 3  THEN 'Con Errores' WHEN 4 THEN  'Procesando' END ESTDIAN,
                FTR.CONTABILIZADA, FTR.CNSFCT AS CNSFTR, FTR.VR_ABONOS AS ABONOS ,FTR.CAPITADA,CP_CONVENIO AS CONVENIO,COPAPROPIO AS COPAGOP,COALESCE(CP_VLR_COPAGOS,0) AS VLRCOPAPRO ,DESCUENTO,FECHACAP_INI AS F_INICIAL,
                FECHACAP_FIN AS F_FINAL,IDSEDE,CP_MES AS MES,CP_MODALIDAD AS MODALIDAD,OBSERVACION,TIPOFIN AS TIPOFINAN,PLN.DESCPLAN,USUARIOFACTURA,CP_VLR_SERVICIOS,CP_VLR_COPAGOS
         FROM FTR INNER JOIN TER ON FTR.IDTERCERO=TER.IDTERCERO 
                  INNER JOIN PLN ON FTR.IDPLAN=PLN.IDPLAN
         WHERE FTR.CNSFCT=@CNSFTR
         RETURN
      END
   END
   IF @METODO='MARCAFACT'
   BEGIN 

      SELECT @DATOS=DATOS,@CNSFACT=CNSFACT
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON,
         CNSFACT VARCHAR(20)         '$.CNSFACT'
      ) 

      SELECT @NOADMISION=NOADMISION,@NOPRESTACION=NOPRESTACION, @NOITEM=NOITEM,@PROCEDENCIA=PROCEDENCIA,
             @MARCAFAC=MARCAFAC,@USUMARCA=USUMARCA,@IDSERVICIO=IDSERVICIO
      FROM   OPENJSON (@DATOS)
      WITH   (
         PROCEDENCIA VARCHAR(20)     '$.PROCEDENCIA',
         NOADMISION VARCHAR(20)      '$.NOADMISION',
         MARCAFAC BIT                '$.MARCAFAC',
         USUMARCA VARCHAR(20)        '$.USUMARCA',
         NOPRESTACION VARCHAR(20)    '$.NOPRESTACION',
         NOITEM INT                  '$.NOITEM',
         IDSERVICIO VARCHAR(20)      '$.IDSERVICIO'
         )
         PRINT '@PROCEDENCIA='+@PROCEDENCIA
         PRINT 'NOADMISION ='+@NOADMISION
         PRINT '@NOPRESTACION='+@NOPRESTACION
         PRINT '@MARCAFAC='+STR(@MARCAFAC)
         PRINT '@NOITEM='+STR(@NOITEM)
         PRINT '@IDSERVICIO ='+@IDSERVICIO
      IF COALESCE(@CNSFACT,'')=''
      BEGIN
         SELECT @CNSFACT=''
         SELECT @COMPANIA='01', @IDSEDE=IDSEDE FROM USUSU WHERE USUARIO=@USUARIO
		   EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@RPDX', @CNSFACT OUTPUT  
		   SELECT @CNSFACT = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSFACT))+LTRIM(RTRIM(@CNSFACT)),SPACE(1),0)            
      END
      IF COALESCE(@CNSFACT,'')=''
      BEGIN
         SELECT 'KO' OK,'No se ha Creado el Consecutivo de Facturacion Masiva'
         RETURN
      END
      BEGIN TRY
         IF @PROCEDENCIA='HADM'
         BEGIN
            PRINT 'MARCANDO PRESTACIONES'
            UPDATE HPRED SET MARCA=CASE WHEN @MARCAFAC=0 THEN 1 ELSE 0 END, USUARIOMARCA=CASE WHEN @MARCAFAC=0 THEN @USUARIO ELSE NULL END,
            CNSITFC=CASE WHEN @MARCAFAC=0 THEN @CNSFACT ELSE NULL END
            FROM HPRED INNER JOIN HPRE ON HPRED.NOPRESTACION=HPRE.NOPRESTACION
            WHERE HPRE.NOADMISION=@NOADMISION
            AND HPRED.NOPRESTACION=@NOPRESTACION
            AND HPRED.NOITEM=@NOITEM
         END
         IF @PROCEDENCIA='CIT'
         BEGIN
            UPDATE CIT SET MARCAFAC=CASE WHEN @MARCAFAC=0 THEN 1 ELSE 0 END,USUARIONOFACTURABLE=CASE WHEN @MARCAFAC=0 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN @MARCAFAC=0 THEN @CNSFACT ELSE NULL END
            WHERE CONSECUTIVO=@NOADMISION
            AND IDAUTSES IS NULL
         END
         IF @PROCEDENCIA='AUT'
         BEGIN
            UPDATE AUTD SET MARCA=CASE WHEN @MARCAFAC=0 THEN 1 ELSE 0 END,USUARIOMARCA=CASE WHEN @MARCAFAC=0 THEN @USUARIO ELSE NULL END,
            CNSFCT=CASE WHEN @MARCAFAC=0 THEN @CNSFACT ELSE NULL END
            WHERE IDAUT=@NOADMISION AND NO_ITEM=@NOITEM

            PRINT 'MARCO AUT'
            UPDATE AUT SET MARCAFAC=CASE WHEN COALESCE(AUTD.MARCA,0)=1 THEN 1 ELSE 0 END,USUARIONOFACTURABLE=CASE WHEN  COALESCE(AUTD.MARCA,0)=1 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN  COALESCE(AUTD.MARCA,0)=1 THEN @CNSFACT ELSE NULL END
            FROM AUTD INNER JOIN AUT ON AUTD.IDAUT=AUT.IDAUT
            WHERE AUTD.IDAUT=@NOADMISION

         END
         IF @PROCEDENCIA='ONCO'
         BEGIN
            UPDATE HCATDIMOV SET MARCAFAC=CASE WHEN @MARCAFAC=0 THEN 1 ELSE 0 END,USUMARCA=CASE WHEN @MARCAFAC=0 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN @MARCAFAC=0 THEN @CNSFACT ELSE NULL END
            WHERE CONSECUTIVOCIT=@NOADMISION
            AND  ID=@NOITEM
            AND IDSERVICIO=@IDSERVICIO

            UPDATE CIT SET MARCAFAC=CASE WHEN @MARCAFAC=0 THEN 1 ELSE 0 END,USUARIONOFACTURABLE=CASE WHEN @MARCAFAC=0 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN @MARCAFAC=0 THEN @CNSFACT ELSE NULL END
            WHERE CONSECUTIVO=@NOADMISION
            AND IDAUTSES IS NOT  NULL
            AND IDSERVICIO=@IDSERVICIO
            
         END
      END TRY 
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
         
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK,@CNSFACT CNSFACT
   END   
   IF @METODO='FACTU_MASIPAQ'
   BEGIN 
      DECLARE @CNSFACTPAQ VARCHAR(20)
      DECLARE @IDTERCEROPAQ VARCHAR(20)
      DECLARE @IDPLANPAQ VARCHAR(6)
      DECLARE @IDSERPAQ VARCHAR(20)
      DECLARE @DESCSERVIPAQ VARCHAR(512)
      DECLARE @VALORPAQ DECIMAL(14,2)
      DECLARE @MCANTIPAQ BIT
      DECLARE @CANTIPAQ SMALLINT
      DECLARE @PMVALORPAQ BIT
      DECLARE @VLRTOTALPAQ DECIMAL(14,2)
      DECLARE @NROPROCE INT
      DECLARE @PROCEPAQ VARCHAR(20)
      DECLARE @NIT VARCHAR(20)
      DECLARE @CITAS TABLE(CONSECUTIVO VARCHAR(20))
   

   
      SELECT @DATOS=DATOS
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON
      ) 

      SELECT 
         @CNSFACTPAQ=CNSFACTPAQ,
         @IDTERCEROPAQ=IDTERCEROPAQ,
         @IDPLANPAQ=IDPLANPAQ,
         @IDSERPAQ=IDSERPAQ,
         @DESCSERVIPAQ=DESCSERVIPAQ,
         @VALORPAQ=VALORPAQ,
         @MCANTIPAQ=MCANTIPAQ,
         @CANTIPAQ=CANTIPAQ,
         @PMVALORPAQ=PMVALORPAQ,
         @VLRTOTALPAQ=VLRTOTALPAQ,
         @PROCEPAQ=PROCEPAQ
      FROM   OPENJSON (@DATOS)
      WITH   (
         CNSFACTPAQ VARCHAR(20)       '$.CNSFACTPAQ',
         IDTERCEROPAQ VARCHAR(20)      '$.IDTERCEROPAQ',
         IDPLANPAQ VARCHAR(6)           '$.IDPLANPAQ',
         IDSERPAQ VARCHAR(20)            '$.IDSERPAQ',
         DESCSERVIPAQ VARCHAR(512)      '$.DESCSERVIPAQ',
         VALORPAQ DECIMAL(14,2)          '$.VALORPAQ',
         MCANTIPAQ BIT                 '$.MCANTIPAQ',
         CANTIPAQ DECIMAL(14,2)          '$.CANTIPAQ',
         PMVALORPAQ BIT                  '$.PMVALORPAQ',
         VLRTOTALPAQ DECIMAL(14,2)       '$.VLRTOTALPAQ',
         PROCEPAQ    VARCHAR(20)         '$.PROCEPAQ'    
      )
      PRINT 'VOY A LLAMAR EL SPK '

      IF COALESCE(@CNSFACTPAQ,'')=''
      BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No Existe Consecutivo de facturación Masiva'          
      END
      IF @PROCEPAQ='CIT'
      BEGIN
         SELECT @NROPROCE=COUNT(*)
         FROM VWK_CARGOS_HADMAUTCIT 
         WHERE MARCAFAC=1
         AND USUMARCA=@USUARIO
         AND CNSFACT=@CNSFACTPAQ
         AND PROCEDENCIA=@PROCEPAQ
      
         IF @NROPROCE<=0
         BEGIN
            PRINT '@@USUARIO='+@USUARIO
            PRINT '@CNSFACTPAQ'+@CNSFACTPAQ
            PRINT '@PROCEPAQ='+@PROCEPAQ
			   INSERT INTO @TBLERRORES(ERROR)
			   SELECT 'No se encontraron items marcados...' 
         END

         INSERT INTO @CITAS(CONSECUTIVO)
         SELECT DISTINCT NOADMISION 
         FROM VWK_CARGOS_HADMAUTCIT 
         WHERE MARCAFAC=1
         AND USUMARCA=@USUARIO
         AND CNSFACT=@CNSFACTPAQ
         AND PROCEDENCIA=@PROCEPAQ

         SELECT @IDSEDE=CASE WHEN UBEQ.SYS_ComputerName IS NULL THEN USUSU.IDSEDE ELSE UBEQ.IDSEDE END
         FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
         WHERE USUARIO=@USUARIO
         IF COALESCE(@IDSEDE,'')=''
         BEGIN
			   INSERT INTO @TBLERRORES(ERROR)
			   SELECT 'Sede No Encontrada, Revise Configuración usuario' 
         END
         SELECT @F_FACTURA=DBO.FNK_GETDATE(),@COMPANIA='01',@NIT=NIT
         FROM TER WHERE IDTERCERO=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')
         IF COALESCE(@NIT,'')='' 
         BEGIN
			   INSERT INTO @TBLERRORES(ERROR)
			   SELECT 'Tercero Facturador No Identificado, Revise Configuración Terceros' 
         END

         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
         IF COALESCE(@IDSERPAQ,'')<>''
         BEGIN
            BEGIN TRY 
               PRINT 'LLAMO EL SPK'
               EXEC DBO.SPK_FACTURACI_ESCIP_MASI @CNSFACTPAQ,@NIT,@COMPANIA,@IDSEDE,@USUARIO,@IDTERCEROPAQ,@IDPLANPAQ,@OBSERVACION,@F_FACTURA,@IDSERPAQ,@VALORPAQ,@CANTIPAQ,@VLRTOTALPAQ

               PRINT 'BUSCO LA FACTURA PARA REGRESAR E IMPPRIMIR'
               SELECT TOP 1 @N_FACTURA= CIT.N_FACTURA
               FROM CIT INNER JOIN @CITAS X ON CIT.CONSECUTIVO=X.CONSECUTIVO
               WHERE CIT.FACTURADA=1

            END TRY
            BEGIN CATCH
               PRINT 'DEVUELVO ERROR'
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
         END
      END

      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK,@N_FACTURA N_FACTURA
      RETURN
   END
   -- query 2
   IF @METODO='MARCAFACTPTE'
   BEGIN 
      SELECT @DATOS=DATOS,@FILTRO=DATOSF,@CNSFACT=CNSFACT
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON,
         DATOSF NVARCHAR(MAX) AS JSON,
         CNSFACT VARCHAR(20)         '$.CNSFACT'
      ) 

      SELECT @NOADMISION=NOADMISION,@NOPRESTACION=NOPRESTACION, @NOITEM=NOITEM,@PROCEDENCIA=PROCEDENCIA,
             @MARCAFAC=MARCAFAC,@USUMARCA=USUMARCA,@IDAFILIADO=IDAFILIADO,@IDTERCERO=IDTERCERO,@IDPLAN=IDPLAN
      FROM   OPENJSON (@DATOS)
      WITH   (
         PROCEDENCIA VARCHAR(20)     '$.PROCEDENCIA',
         NOADMISION VARCHAR(20)      '$.NOADMISION',
         MARCAFAC BIT                '$.MARCAFAC',
         USUMARCA VARCHAR(20)        '$.USUMARCA',
         NOPRESTACION VARCHAR(20)    '$.NOPRESTACION',
         NOITEM INT                  '$.NOITEM',
         IDAFILIADO VARCHAR(20)      '$.IDAFILIADO',
         IDTERCERO  VARCHAR(20)      '$.IDTERCERO',
         IDPLAN     VARCHAR(6)       '$.IDPLAN'
         )

      SELECT @FECHAINI=F_INIMAS,@FECHAFIN=DATEADD(DAY,1,F_FINMAS),@PROCEDENCIA=PROCE,@IDSEDEF=SEDEFMAS
      FROM   OPENJSON (@FILTRO)
      WITH   (
         F_INIMAS DATE        '$.F_INIMAS',
         F_FINMAS DATE        '$.F_FINMAS',
         PROCE VARCHAR(20)    '$.PROCE',
         SEDEFMAS VARCHAR(6)  '$.SEDEFMAS'
         )
         PRINT '@PROCEDENCIA='+@PROCEDENCIA
         PRINT 'NOADMISION ='+@NOADMISION
         PRINT '@NOPRESTACION='+@NOPRESTACION
         PRINT '@MARCAFAC='+STR(@MARCAFAC)
         PRINT '@NOITEM='+STR(@NOITEM)
      IF COALESCE(@CNSFACT,'')=''
      BEGIN
         SELECT @CNSFACT=''
         SELECT @COMPANIA='01', @IDSEDE=IDSEDE FROM USUSU WHERE USUARIO=@USUARIO
		   EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@RPDX', @CNSFACT OUTPUT  
		   SELECT @CNSFACT = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSFACT))+LTRIM(RTRIM(@CNSFACT)),SPACE(1),0)            
      END
      IF COALESCE(@CNSFACT,'')=''
      BEGIN
         SELECT 'KO' OK,'No se ha Creado el Consecutivo de Facturacion Masiva'
         RETURN
      END
      BEGIN TRY
         IF @PROCEDENCIA='HADM'
         BEGIN
            PRINT 'MARCANDO PRESTACIONES'
            UPDATE HPRED SET MARCA=CASE WHEN HPRED.MARCA=0 THEN 1 ELSE 0 END, 
            USUARIOMARCA=CASE WHEN HPRED.MARCA=0 THEN @USUARIO ELSE NULL END,
            CNSITFC=CASE WHEN HPRED.MARCA=0 THEN @CNSFACT ELSE NULL END
            FROM HPRED INNER JOIN HPRE ON HPRED.NOPRESTACION=HPRE.NOPRESTACION
                       INNER JOIN HADM ON HPRE.NOADMISION=HADM.NOADMISION
            WHERE HPRE.NOADMISION=@NOADMISION
            AND HADM.IDAFILIADO=@IDAFILIADO
            AND COALESCE(HPRED.FACTURADA,0)=0
            AND COALESCE(HPRED.NOCOBRABLE,0)=0
            AND COALESCE(HPRED.VALOREXCEDENTE,0)>0
            AND HPRE.IDTERCEROCA=@IDTERCERO
            AND HPRE.IDPLAN=@IDPLAN
            AND HPRE.FECHA>=@FECHAINI
            AND HPRE.FECHA<@FECHAFIN
         END
         IF @PROCEDENCIA='CIT' OR  @PROCEDENCIA='CITCE'
         BEGIN
            UPDATE CIT SET MARCAFAC=CASE WHEN MARCAFAC=0 THEN 1 ELSE 0 END,USUARIONOFACTURABLE=CASE WHEN MARCAFAC=0 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN MARCAFAC=0 THEN @CNSFACT ELSE NULL END
            WHERE IDAFILIADO=@IDAFILIADO
            AND IDTERCEROCA=@IDTERCERO
            AND IDPLAN=@IDPLAN
            AND COALESCE(FACTURADA,0)=0
            AND COALESCE(FACTURABLE,0)=1
            --AND COALESCE(VALORTOTAL,0)>0
            AND FECHA>=@FECHAINI
            AND FECHA<@FECHAFIN
            AND COALESCE(FACTURADA,0) = 0 
            AND CIT.CUMPLIDA = CASE DBO.FNK_VALORVARIABLE('RIPS_CITSOLOCUMPLIDA') WHEN 'SI' THEN 1 ELSE CIT.CUMPLIDA END
            AND CIT.IDAFILIADO IS NOT NULL
            AND IDAUTSES IS NULL
         END
         IF @PROCEDENCIA='AUT'  OR  @PROCEDENCIA='CITCE'
         BEGIN
            UPDATE AUTD SET MARCA=CASE WHEN COALESCE(MARCA,0)=0 THEN 1 ELSE 0 END,USUARIOMARCA=CASE WHEN COALESCE(MARCA,0)=0 THEN @USUARIO ELSE NULL END,
            CNSFCT=CASE WHEN COALESCE(MARCA,0)=0 THEN @CNSFACT ELSE NULL END
            FROM AUTD INNER JOIN AUT ON AUTD.IDAUT=AUT.IDAUT
            WHERE AUT.IDAFILIADO=@IDAFILIADO
            AND AUT.IDTERCEROCA=@IDTERCERO
            AND AUT.IDPLAN=@IDPLAN
            AND AUT.FACTURABLE=1
            AND AUT.FACTURADA=0
            AND AUT.FECHA>=@FECHAINI
            AND AUT.FECHA<@FECHAFIN

            UPDATE AUT SET MARCAFAC=CASE WHEN COALESCE(AUTD.MARCA,0)=1 THEN 1 ELSE 0 END,USUARIONOFACTURABLE=CASE WHEN COALESCE(AUTD.MARCA,0)=1 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN  COALESCE(AUTD.MARCA,0)=1 THEN @CNSFACT ELSE NULL END
            FROM AUTD INNER JOIN AUT ON AUTD.IDAUT=AUT.IDAUT
            WHERE AUT.IDAFILIADO=@IDAFILIADO
            AND AUT.IDTERCEROCA=@IDTERCERO
            AND AUT.IDPLAN=@IDPLAN
            AND AUT.FACTURABLE=1
            AND AUT.FACTURADA=0
            AND AUT.FECHA>=@FECHAINI
            AND AUT.FECHA<@FECHAFIN

         END
         IF @PROCEDENCIA='ONCO'  OR  @PROCEDENCIA='CITCE'
         BEGIN
            PRINT 'VOY A MARCAR ONCOLOGIA'
            UPDATE HCATDIMOV SET MARCAFAC=CASE WHEN HCATDIMOV.MARCAFAC=0 THEN 1 ELSE 0 END,USUMARCA=CASE WHEN HCATDIMOV.MARCAFAC=0 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN HCATDIMOV.MARCAFAC=0 THEN @CNSFACT ELSE NULL END
            FROM HCATDIMOV INNER JOIN CIT ON HCATDIMOV.CONSECUTIVOCIT=CIT.CONSECUTIVO
            WHERE CIT.IDAFILIADO=@IDAFILIADO
            AND CIT.IDTERCEROCA=@IDTERCERO
            AND CIT.IDPLAN=@IDPLAN
            AND COALESCE(HCATDIMOV.N_FACTURA,'')=''
            AND COALESCE(CIT.FACTURABLE,0)=1
            AND COALESCE(HCATDIMOV.FACTURADA,0)=0
            AND CIT.FECHA>=@FECHAINI
            AND CIT.FECHA<@FECHAFIN

            UPDATE CIT SET MARCAFAC=CASE WHEN MARCAFAC=0 THEN 1 ELSE 0 END,USUARIONOFACTURABLE=CASE WHEN MARCAFAC=0 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN MARCAFAC=0 THEN @CNSFACT ELSE NULL END
            WHERE IDAFILIADO=@IDAFILIADO
            AND IDTERCEROCA=@IDTERCERO
            AND IDPLAN=@IDPLAN
            AND COALESCE(FACTURADA,0)=0
            AND COALESCE(FACTURABLE,0)=1
            AND COALESCE(VALORTOTAL,0)>0
            AND FECHA>=@FECHAINI
            AND FECHA<@FECHAFIN
            AND COALESCE(FACTURADA,0) = 0 
            AND CIT.CUMPLIDA = CASE DBO.FNK_VALORVARIABLE('RIPS_CITSOLOCUMPLIDA') WHEN 'SI' THEN 1 ELSE CIT.CUMPLIDA END
            AND CIT.IDAFILIADO IS NOT NULL
            AND IDAUTSES IS NOT  NULL
         END
      END TRY 
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
         
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK,@CNSFACT CNSFACT
   END   

   IF @METODO='ACTUALIZAITEM'
   BEGIN 
      DECLARE @IDSDEORI NVARCHAR(1200) 
      SELECT @DATOS=DATOS
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON
      ) 
      DECLARE @TIPOCOPA VARCHAR(2)
      DECLARE @NROAUTORIZA VARCHAR(20)
      SELECT 
         @NOADMISION=CONSECUTIVO,
         @NOITEM =NOITEM,
         @IDSERVICIO=IDSERVICIO,
         @TIPOCOPA=TIPOCOPA,
         @CANTIDAD=CANTIDAD,
         @VALOR=VLR_TOTAL,
         @VLRCOPAPRO=VLR_COPA,
         @VR_TOTAL =VALOREXCE,
         @IDTERCERO=COBRARA,
         @IDPLAN=IDPLAN,
         @NROAUTORIZA=NROAUTORIZA,
         @PROCEDENCIA=PROCEDENCIA,
         @IDSEDEF= JSON_VALUE(IDSEDEORI,'$.value'),
         @IDSDEORI=IDSEDEORI
      FROM   OPENJSON (@DATOS)
      WITH   (
         CONSECUTIVO VARCHAR(20)   '$.CONSECUTIVO',
         NOITEM     SMALLINT       '$.NOITEM',
         IDSERVICIO VARCHAR(20)    '$.IDSERVICIO',
         TIPOCOPA VARCHAR(20)      '$.TIPOCOPA',
         CANTIDAD SMALLINT         '$.CANTIDAD',
         VLR_TOTAL DECIMAL(14,2)   '$.VLR_TOTAL',
         VLR_COPA DECIMAL(14,2)    '$.VLR_COPA',
         VALOREXCE DECIMAL(14,2)   '$.VALOREXCE',
         COBRARA VARCHAR(20)       '$.COBRARA',
         IDPLAN VARCHAR(20)        '$.IDPLAN',
         NROAUTORIZA VARCHAR(20)   '$.NROAUTORIZA',
         PROCEDENCIA VARCHAR(10)   '$.PROCEDENCIA',
         IDSEDEORI NVARCHAR(MAX)   AS JSON
      )
      IF @PROCEDENCIA='CIT'
      BEGIN
         BEGIN TRY
            UPDATE CIT SET 
            IDTERCEROCA=@IDTERCERO,
            IDPLAN=@IDPLAN,
            CANTIDADC=@CANTIDAD,
            VALORTOTAL=@VALOR,
            VALORCOPAGO=@VLRCOPAPRO,
            NOAUTORIZACION=@NROAUTORIZA
            WHERE CONSECUTIVO=@NOADMISION
         END TRY
         BEGIN CATCH
            PRINT 'DEVUELVO ERROR'
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH         
      END
      IF @PROCEDENCIA='AUT'
      BEGIN
         BEGIN TRY
            UPDATE AUTD SET 
            IDTERCEROCA=@IDTERCERO,
            IDPLAN=@IDPLAN,
            CANTIDAD=@CANTIDAD,
            VALOR=@VALOR,
            VALORCOPAGO=@VLRCOPAPRO
            WHERE IDAUT=@NOADMISION
            UPDATE AUT SET  NUMAUTORIZA=@NROAUTORIZA,IDSEDE=@IDSEDEF,IDTERCEROCA=@IDTERCERO,
            IDPLAN=@IDPLAN,VALORTOTAL=X.VALOR,VALORCOPAGO=X.VALORCOPAGO
            FROM AUT INNER JOIN(SELECT IDAUT, SUM(VALOR*CANTIDAD) VALOR, SUM(VALORCOPAGO)VALORCOPAGO 
                                 FROM AUTD WHERE IDAUT=@NOADMISION
                                GROUP BY IDAUT)X  ON AUT.IDAUT=X.IDAUT
            WHERE AUT.IDAUT=@NOADMISION
         END TRY
         BEGIN CATCH
            PRINT 'DEVUELVO ERROR'
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH         
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END   
   IF @METODO='MARCANOCOBRABLE'
   BEGIN 
      SELECT @DATOS=DATOS
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON
      ) 
      SELECT 
      @IDAFILIADO=IDAFILIADO,@PROCEDENCIA=PROCEDENCIA,@NOADMISION=NOADMISION,
      @IDSERVICIO=IDSERVICIO,@NOPRESTACION=NOPRESTACION,@NOITEM=NOITEM
      FROM   OPENJSON (@DATOS)
      WITH   (
         IDAFILIADO VARCHAR(20)           '$.IDAFILIADO',
         PROCEDENCIA VARCHAR(20)          '$.PROCEDENCIA',
         NOADMISION VARCHAR(20)           '$.NOADMISION',
         IDSERVICIO VARCHAR(20)           '$.IDSERVICIO',
         NOPRESTACION VARCHAR(20)         '$.NOPRESTACION',
         NOITEM INT                       '$.NOITEM'
      )
      IF @PROCEDENCIA='CIT'
      BEGIN
         BEGIN TRY
            UPDATE CIT SET 
            FACTURABLE=CASE WHEN FACTURABLE=1 THEN 0 ELSE 1 END,
            USUARIONOFACTURABLE=CASE WHEN FACTURABLE=1 THEN @USUARIO ELSE NULL END
            WHERE CONSECUTIVO=@NOADMISION
         END TRY
         BEGIN CATCH
            PRINT 'DEVUELVO ERROR'
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH         
      END
      IF @PROCEDENCIA='AUT'
      BEGIN
         BEGIN TRY
            UPDATE AUTD SET 
            NOCOBRABLE=CASE WHEN NOCOBRABLE=1 THEN 0 ELSE 1 END
            WHERE IDAUT=@NOADMISION
            AND NO_ITEM=@NOITEM
         END TRY
         BEGIN CATCH
            PRINT 'DEVUELVO ERROR'
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH         
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END   
   IF @METODO='MARCATODOMASI'
   BEGIN 
      DECLARE @ACCION SMALLINT
      SELECT @DATOS=DATOS,@ACCION=ACCION,@CNSFACT=CNSFACT
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON,
         ACCION SMALLINT        '$.ACCION',
         CNSFACT VARCHAR(20)    '$.CNSFACT'
      ) 

      SELECT @FECHAINI=F_INIMAS,@FECHAFIN=DATEADD(DAY,1,F_FINMAS),@IDTERCERO=IDTERMAS,
      @IDPLAN=IDPLANMAS,@PROCEDENCIA=PROCE,@IDSEDEF=SEDEFMAS
      FROM   OPENJSON (@DATOS)
      WITH   (
         F_INIMAS DATE          '$.F_INIMAS',
         F_FINMAS DATE          '$.F_FINMAS',
         IDTERMAS VARCHAR(20)   '$.IDTERMAS',
         IDPLANMAS VARCHAR(20)  '$.IDPLANMAS',
         PROCE VARCHAR(20)      '$.PROCE',
         SEDEFMAS VARCHAR(20)   '$.SEDEFMAS'
      )

      IF COALESCE(@CNSFACT,'')='' AND @ACCION=1
      BEGIN
         SELECT @CNSFACT=''
         SELECT @COMPANIA='01', @IDSEDE=IDSEDE FROM USUSU WHERE USUARIO=@USUARIO
		   EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@RPDX', @CNSFACT OUTPUT  
		   SELECT @CNSFACT = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSFACT))+LTRIM(RTRIM(@CNSFACT)),SPACE(1),0)            
      END
      IF COALESCE(@CNSFACT,'')=''  AND @ACCION=1
      BEGIN
         SELECT 'KO' OK,'No se ha Creado el Consecutivo de Facturacion Masiva'
         RETURN
      END
      BEGIN TRY
         IF @PROCEDENCIA='CIT'
         BEGIN 
            UPDATE CIT SET MARCAFAC=0,USUARIONOFACTURABLE=NULL,CNSFACT=NULL WHERE COALESCE(CNSFACT,'')=@CNSFACT
            UPDATE CIT SET MARCAFAC=CASE WHEN @ACCION=1 THEN 1 ELSE 0 END,
            USUARIONOFACTURABLE=CASE WHEN @ACCION=1 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN @ACCION=1 THEN @CNSFACT ELSE NULL END
            WHERE COALESCE(FACTURADA,0) = 0 
            AND COALESCE(VALORTOTAL,0)>0 
            AND FECHA>=@FECHAINI
            AND FECHA<@FECHAFIN
            AND IDTERCEROCA=@IDTERCERO
            AND IDPLAN=@IDPLAN
            AND IDSEDE=CASE WHEN @IDSEDEF='TODAS' THEN IDSEDE ELSE @IDSEDEF END
			   AND COALESCE(CUMPLIDA,0)=IIF(DBO.FNK_VALORVARIABLE('RIPS_CITSOLOCUMPLIDA') = 'SI',1, COALESCE(CUMPLIDA,0))
         END
      END TRY 
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
         
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK,@CNSFACT CNSFACT
   END   
   IF @METODO='FACTURAR_MASI'
   BEGIN 
      DECLARE @PRESTACION VARCHAR(20)
      DECLARE @N_FACTURADEV  VARCHAR(20)
      SELECT @DATOS=DATOS,@ACCION=ACCION,@CNSFACT=CNSFACT
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON,
         ACCION SMALLINT  '$.ACCION',
         CNSFACT VARCHAR(20) '$.CNSFACT'
      ) 
      SELECT @FECHAINI=F_INIMAS,@FECHAFIN=DATEADD(DAY,1,F_FINMAS),@IDTERCERO=IDTERMAS,
      @IDPLAN=IDPLANMAS,@PROCEDENCIA=PROCE,@IDSEDEF=SEDEFMAS
      FROM   OPENJSON (@DATOS)
      WITH   (
         F_INIMAS DATE          '$.F_INIMAS',
         F_FINMAS DATE          '$.F_FINMAS',
         IDTERMAS VARCHAR(20)   '$.IDTERMAS',
         IDPLANMAS VARCHAR(20)  '$.IDPLANMAS',
         PROCE VARCHAR(20)      '$.PROCE',
         SEDEFMAS VARCHAR(6)    '$.SEDEFMAS'
      )
      SELECT @F_FACTURA=DBO.FNK_GETDATE(),@COMPANIA='01',@NIT=NIT
      FROM TER WHERE IDTERCERO=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')
      IF dbo.FNK_VALORVARIABLE('FACTSEDE')='SI'
      BEGIN
         SELECT @IDSEDE=@IDSEDEF
      END
      ELSE
      BEGIN
         SELECT @IDSEDE=UBEQ.IDSEDE 
         FROM USUSU INNER JOIN UBEQ ON USUSU.SYS_COMPUTERNAME=UBEQ.SYS_COMPUTERNAME 
         WHERE USUARIO=@USUARIO
      END

      IF COALESCE(@NIT,'')='' 
      BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Tercero Facturador No Identificado, Revise Configuración Terceros'
         
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURNS
      END
      IF NOT EXISTS(SELECT * FROM PRI WHERE FECHA_INI<=DBO.FNK_GETDATE() AND FECHA_FIN+1>DBO.FNK_GETDATE() AND COALESCE(CERRADO,0)=0)
      BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Periodo Contable No Existe o no Esta Abierto, Revise Configuración Peridos Contables'
         
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      IF @ACCION=1 
      BEGIN 
         IF @PROCEDENCIA='CIT'
         BEGIN
            BEGIN TRY 
               EXEC SPK_FACTURACI_ESCIP @CNSFACT,@NIT,@COMPANIA,@IDSEDE,@USUARIO,@IDTERCERO,@IDPLAN,'',@F_FACTURA
            END TRY 
            BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
            IF(SELECT COUNT(*) FROM @TBLERRORES)>0
            BEGIN
               SELECT 'KO' OK
               SELECT ERROR FROM @TBLERRORES
               RETURN
            END
            SELECT 'OK' OK
            RETURN
         END
         IF @PROCEDENCIA='AUT'
         BEGIN
            PRINT 'INGRESO A FACTURAR AUT...'
            IF(SELECT COUNT(*) FROM VWK_AUT_FTR WHERE CNSFACT =@CNSFACT AND VALORTOTAL = 0 AND MARCAFAC =  1 )>0
            BEGIN
               SELECT 'KO' KO, 'Existen autorizaciones con Total en Cero, Revise la inconsistencia, Debe Desmarcarlas para poder facturar'ERROR
               RETURN
            END
            IF (SELECT COUNT(*) FROM (SELECT DISTINCT IDAFILIADO FROM VWK_AUT_FTR WHERE CNSFACT =@CNSFACT AND VALORTOTAL > 0 AND MARCAFAC =  1)X )>1
            BEGIN
               SELECT 'KO' KO, 'Solo se permiten los Cargos de un Solo Paciente,Verifique e intente de nuevo 'ERROR
               RETURN
            END
            BEGIN TRY    
                SELECT @F_FACTURA=DBO.FNK_GETDATE()
                EXEC SPK_FACTURA_MASI_UNIFICAWEB @CNSFACT,@NIT,@COMPANIA,@IDSEDE,@USUARIO,@IDTERCERO,@IDPLAN,'fACTURACION MASIVA AUT WEB'                              
            END TRY
            BEGIN CATCH
                  INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH   
            IF(SELECT COUNT(*) FROM @TBLERRORES)>0
            BEGIN
               SELECT 'KO' OK
               SELECT ERROR FROM @TBLERRORES
               RETURN
            END
            SELECT 'OK' OK
            RETURN
         END
         IF @PROCEDENCIA='ONCO' OR  @PROCEDENCIA='CITCE'
         BEGIN
            BEGIN TRY    
                SELECT @F_FACTURA=DBO.FNK_GETDATE()
                EXEC SPK_FACTURA_MASI_UNIFICAWEB @CNSFACT,@NIT,@COMPANIA,@IDSEDE,@USUARIO,@IDTERCERO,@IDPLAN,'fACTURACION MASIVA AUT WEB'                              
            END TRY
            BEGIN CATCH
                  INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH   
            IF(SELECT COUNT(*) FROM @TBLERRORES)>0
            BEGIN
               SELECT 'KO' OK
               SELECT ERROR FROM @TBLERRORES
               RETURN
            END
            SELECT 'OK' OK
            RETURN
         END
         IF  @PROCEDENCIA='CITCE'
         BEGIN            
            BEGIN TRY 
               SELECT TOP 1 @PRESTACION=CONSECUTIVO FROM CIT WHERE CNSFACT= @CNSFACT AND MARCAFAC=1 AND USUARIONOFACTURABLE=@USUARIO
               IF COALESCE(@PRESTACION,'')=''
               BEGIN
                  SELECT TOP 1 @PRESTACION=IDAUT FROM AUT WHERE CNSFACT= @CNSFACT AND MARCAFAC=1 AND USUARIONOFACTURABLE=@USUARIO
               END
               EXEC SPK_FACTURA_MASI_UNIFICAWEB @CNSFACT,@NIT,@COMPANIA,@IDSEDE,@USUARIO,@IDTERCERO,@IDPLAN,'fACTURACION UNIFICADA WEB'
            END TRY 
            BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
            IF(SELECT COUNT(*) FROM @TBLERRORES)>0
            BEGIN
               SELECT 'KO' OK
               SELECT ERROR FROM @TBLERRORES
               RETURN
            END
            SELECT @N_FACTURADEV=N_FACTURA FROM CIT WHERE CONSECUTIVO=@PRESTACION
            IF COALESCE(@N_FACTURADEV,'')=''
            BEGIN
               SELECT @N_FACTURADEV=N_FACTURA FROM AUT WHERE IDAUT=@PRESTACION
            END
            SELECT 'OK' OK,@N_FACTURADEV N_FACTURA
            RETURN
         END
      END
      IF @ACCION=3
      BEGIN
         IF @PROCEDENCIA='CIT' OR  @PROCEDENCIA='CITCE'
         BEGIN
            BEGIN TRY 
               PRINT 'VOy'
               EXEC SPK_FACTURACI_ESCIN @CNSFACT,@NIT,@COMPANIA,@IDSEDE,@USUARIO,@IDTERCERO,@F_FACTURA
            END TRY 
            BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
            IF(SELECT COUNT(*) FROM @TBLERRORES)>0
            BEGIN
               SELECT 'KO' OK
               SELECT ERROR FROM @TBLERRORES
               RETURN
            END
            SELECT 'OK' OK
         END
         IF @PROCEDENCIA='AUT' OR  @PROCEDENCIA='CITCE'
         BEGIN
            BEGIN TRY 
               PRINT 'Voy para autorizaciones'
               EXEC SPK_FACTURACE_ESCIN @CNSFACT,@NIT,@COMPANIA,@IDSEDE,@USUARIO,@IDTERCERO,@FECHAFAC=@F_FACTURA
            END TRY 
            BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
            IF(SELECT COUNT(*) FROM @TBLERRORES)>0
            BEGIN
               SELECT 'KO' OK
               SELECT ERROR FROM @TBLERRORES
               RETURN
            END
            SELECT 'OK' OK
         END
         IF @PROCEDENCIA='ONCO' OR  @PROCEDENCIA='CITCE'
         BEGIN
            BEGIN TRY    
                SELECT @F_FACTURA=DBO.FNK_GETDATE()
                EXEC SPK_FACTURA_MASI_UNIFICAWEB @CNSFACT,@NIT,@COMPANIA,@IDSEDE,@USUARIO,@IDTERCERO,@IDPLAN,'fACTURACION MASIVA AUT WEB'                              
            END TRY
            BEGIN CATCH
                  INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH   
            IF(SELECT COUNT(*) FROM @TBLERRORES)>0
            BEGIN
               SELECT 'KO' OK
               SELECT ERROR FROM @TBLERRORES
               RETURN
            END
            SELECT 'OK' OK
            RETURN
         END
      END
      IF @ACCION=4
      BEGIN
         IF @PROCEDENCIA='CIT' OR  @PROCEDENCIA='CITCE'
         BEGIN
            BEGIN TRY 
               EXEC SPK_FACTURACI_ESCMA @CNSFACT,@NIT,@COMPANIA,@IDSEDE,@USUARIO,@IDTERCERO,@IDPLAN,'',@IDTERCERO,@F_FACTURA
            END TRY 
            BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
            IF(SELECT COUNT(*) FROM @TBLERRORES)>0
            BEGIN
               SELECT 'KO' OK
               SELECT ERROR FROM @TBLERRORES
               RETURN
            END
            SELECT 'OK' OK
         END
         IF @PROCEDENCIA='AUT' OR  @PROCEDENCIA='CITCE'
         BEGIN
            BEGIN TRY 
               EXEC SPK_FACTURACE_ESCMA @CNSFACT,@NIT,@COMPANIA,@IDSEDE,@USUARIO,@IDTERCERO,@IDPLAN,'',@IDTERCERO,@FECHAFAC=@F_FACTURA
            END TRY 
            BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
            IF(SELECT COUNT(*) FROM @TBLERRORES)>0
            BEGIN
               SELECT 'KO' OK
               SELECT ERROR FROM @TBLERRORES
               RETURN
            END
            SELECT 'OK' OK
         END
      END
   END   
   IF @METODO='ENVIA_CONTAB'
   BEGIN 
      SELECT @N_FACTURA=N_FACTURA
      FROM   OPENJSON (@PARAMETROS)
      WITH   (
               N_FACTURA VARCHAR(20)  '$.N_FACTURA'
              )
      PRINT '@N_FACTURA='+COALESCE(@N_FACTURA,'NO TENGO FACTURA')
      IF COALESCE(@N_FACTURA,'')='' OR NOT EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTURA)
      BEGIN
         SELECT 'OK','No existe el Documento En Facturacion' ERROR
         RETURN
      END
      IF  EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTURA AND COALESCE(CONTABILIZADA,0) IN(1,2))
      BEGIN
         SELECT 'KO' KO,'Documento ya Contabilziado o Presenta Errores' ERROR
         RETURN
      END
      IF  EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTURA AND (COALESCE(VR_TOTAL,0)<=0 OR ESTADO<>'P'))
      BEGIN
         SELECT 'KO' KO,'Factura Sin Valor o Anulada, No se Puede Enviar' ERROR
         RETURN
      END
      IF NOT  EXISTS(SELECT * FROM FTRD WHERE N_FACTURA=@N_FACTURA )
      BEGIN
         SELECT 'KO' KO,'Factura Sin Detalles, No se Puede Enviar' ERROR
         RETURN
      END
      BEGIN TRY
         SELECT @SYS_COMPUTERNAME=UBEQ.SYS_ComputerName
         FROM USUSU INNER JOIN UBEQ ON USUSU.SYS_COMPUTERNAME=UBEQ.SYS_COMPUTERNAME 
         WHERE USUARIO=@USUARIO

         SELECT @COMPANIA='01',@IDSEDE=CASE WHEN COALESCE(@IDSEDE,'')='' THEN IDSEDE ELSE @IDSEDE END
         FROM FTR WHERE N_FACTURA=@N_FACTURA

         EXEC DBO.SPK_NC_CONTAB_FTR @N_FACTURA,@COMPANIA,@USUARIO,@SYS_COMPUTERNAME,@IDSEDE,''

         SELECT 'OK' OK,'Documento contabilizado Correctamente'
         RETURN
      END TRY
      BEGIN CATCH
            SELECT 'KO',ERROR_MESSAGE() ERROR
      END CATCH
      RETURN
   END   

   IF @METODO='NOTI_DIAN'
   BEGIN 
      SELECT @N_FACTURA=N_FACTURA
      FROM   OPENJSON (@PARAMETROS)
      WITH   (
               N_FACTURA VARCHAR(20)  '$.N_FACTURA'
              )
      PRINT '@N_FACTURA='+COALESCE(@N_FACTURA,'NO TENGO FACTURA')
      IF COALESCE(@N_FACTURA,'')='' OR NOT EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTURA)
      BEGIN
         SELECT 'OK','No existe el Documento En Facturacion' ERROR
         RETURN
      END
      IF NOT EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTURA AND COALESCE(FACTE,0) IN(0,3))
      BEGIN
         SELECT 'OK','Factura ya fue encolada, Verifique las Respuestas o Espere la Respuesta de la Dian ' ERROR
         RETURN
      END
      BEGIN TRY
         UPDATE FTR SET FACTE=1 WHERE N_FACTURA=@N_FACTURA        
      END TRY
      BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
          SELECT 'KO' OK
          SELECT ERROR FROM @TBLERRORES
          RETURN
       END
       SELECT 'OK' OK
      RETURN 
   END
   -- FACTURA ELECTRONICA

   IF @METODO='ENCOLAR_ITEM'
   BEGIN 
      SELECT @CNSFACT = CNSFCT,@TIPODOC=TIPODOC
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         TIPODOC VARCHAR(10)    '$.TIPODOC',
         CNSFCT   VARCHAR(20)    '$.CNSFCT'
      ) 
     IF COALESCE(@TIPODOC,'')=''
     BEGIN
        SELECT 'KO'OK,'No se ha Espeficiado el Tipo de Documento ' ERROR
        RETURN
     END
     IF COALESCE(@TIPODOC,'')='FACTURA'
     BEGIN
        IF EXISTS(SELECT * FROM FTR WHERE CNSFCT=@CNSFACT AND COALESCE(FACTE,0)=0)
        BEGIN
           BEGIN TRY
              UPDATE FTR SET FACTE=1 WHERE  CNSFCT=@CNSFACT AND COALESCE(FACTE,0)=0     
            END TRY
            BEGIN CATCH
                    INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
        END
     END
     IF COALESCE(@TIPODOC,'')='NOTADB' OR COALESCE(@TIPODOC,'')='NOTACR'
     BEGIN
        IF EXISTS(SELECT * FROM FNOT WHERE CNSFNOT=@CNSFACT AND COALESCE(FACTE,0)=0)
        BEGIN
           BEGIN TRY
              UPDATE FNOT SET FACTE=1 WHERE  CNSFNOT=@CNSFACT AND COALESCE(FACTE,0)=0     
            END TRY
            BEGIN CATCH
                   INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
        END
     END
     IF(SELECT COUNT(*) FROM @TBLERRORES)>0
     BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
     RETURN 
   END   
   IF @METODO='DESCOLA_ITEM'
   BEGIN 
      SELECT @CNSFACT = CNSFCT,@TIPODOC=TIPODOC
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         TIPODOC VARCHAR(10)    '$.TIPODOC',
         CNSFCT   VARCHAR(20)    '$.CNSFCT'
      ) 
     IF COALESCE(@TIPODOC,'')=''
     BEGIN
        SELECT 'KO'OK,'No se ha Espeficiado el Tipo de Documento ' ERROR
        RETURN
     END
     IF COALESCE(@TIPODOC,'')='FACTURA'
     BEGIN
        IF EXISTS(SELECT * FROM FTR WHERE CNSFCT=@CNSFACT AND COALESCE(FACTE,0)=1)
        BEGIN
           BEGIN TRY
              UPDATE FTR SET FACTE=0 WHERE  CNSFCT=@CNSFACT AND COALESCE(FACTE,0)=1     
            END TRY
            BEGIN CATCH
                    INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
        END
        ELSE
        BEGIN
           SELECT 'KO'KO,' Documento no esta encolado, Verifique E intente de Nuevo'
           RETURN
        END
     END
     IF COALESCE(@TIPODOC,'')='NOTADB' OR COALESCE(@TIPODOC,'')='NOTACR'
     BEGIN
        IF EXISTS(SELECT * FROM FNOT WHERE CNSFNOT=@CNSFACT AND COALESCE(FACTE,0)=1)
        BEGIN
           BEGIN TRY
              UPDATE FNOT SET FACTE=0 WHERE  CNSFNOT=@CNSFACT AND COALESCE(FACTE,0)=1     
            END TRY
            BEGIN CATCH
                   INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
        END
         ELSE
         BEGIN
            SELECT 'KO'KO,' Documento no esta encolado, Verifique E intente de Nuevo'
            RETURN
         END
     END
     IF(SELECT COUNT(*) FROM @TBLERRORES)>0
     BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
     RETURN 
   END 
   IF @METODO='ENCOLAR_MASIVO'
   BEGIN 
      SELECT @DATOS=DATOS,@ACCION=ACCION
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON,
         ACCION SMALLINT '$.ACCION'
      ) 
   
      SELECT @FECHAINI=F_INICIAL,@FECHAFIN=DATEADD(DAY,1,F_FINAL),@IDTERCERO=IDTERCERO,@IDPLAN=IDPLAN,@ESTDIAN=LEFT(ESTDIAN,1),@TIPODOC=TIPODOC,
      @PROCEDENCIA=COALESCE(PROCEDENCIA,'Todas'), @IDSEDEF=COALESCE(IDSEDE,'Todas')
      FROM   OPENJSON (@DATOS)
      WITH   (
         F_INICIAL DATE          '$.F_INICIAL',
         F_FINAL   DATE          '$.F_FINAL',
         IDTERCERO VARCHAR(20)   '$.IDTERCERO',
         IDPLAN VARCHAR(20)      '$.IDPLAN',
         ESTDIAN VARCHAR(20)     '$.ESTDIAN',
         TIPODOC  VARCHAR(20)    '$.TIPODOC',
         IDSEDE   VARCHAR(10)    '$.IDSEDE',
         PROCEDENCIA VARCHAR(20) '$.PROCEDENCIA'
      )
   IF @ACCION=1
   BEGIN
      BEGIN TRY
         UPDATE FTR SET FACTE=1
         FROM FTR INNER JOIN VWK_ESTADODIAN_FTRE VK ON FTR.CNSFCT=VK.CNSFCT
         WHERE VK.F_fACTURA>=@FECHAINI
         AND VK.F_fACTURA<@FECHAFIN
         AND VK.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE VK.IDTERCERO END
         AND VK.IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE VK.IDPLAN END
         AND VK.IDSEDE=CASE WHEN @IDSEDEF<>'Todas' THEN @IDSEDEF ELSE VK.IDSEDE END
         AND VK.PROCEDENCIA=CASE WHEN @PROCEDENCIA<>'Todas' THEN @PROCEDENCIA ELSE VK.PROCEDENCIA END
         AND COALESCE(VK.FACTE,0)=0
         AND VK.TIPODOC=CASE WHEN @TIPODOC IN('Todas','FACTURA') THEN 'FACTURA' ELSE 'XXXXXXXX' END

         UPDATE FNOT SET FACTE=1
         FROM FNOT INNER JOIN VWK_ESTADODIAN_FTRE VK ON FNOT.CNSFNOT=VK.CNSFCT
         WHERE VK.F_fACTURA>=@FECHAINI
         AND VK.F_fACTURA<@FECHAFIN
         AND VK.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE VK.IDTERCERO END
         AND VK.IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE VK.IDPLAN END
         AND VK.IDSEDE=CASE WHEN @IDSEDEF<>'Todas' THEN @IDSEDEF ELSE VK.IDSEDE END
         AND VK.PROCEDENCIA=CASE WHEN @PROCEDENCIA<>'Todas' THEN @PROCEDENCIA ELSE VK.PROCEDENCIA END
         AND VK.FACTE=0
         AND VK.TIPODOC=CASE WHEN @TIPODOC IN('Todas','NOTACR') THEN 'NOTACR' ELSE 'XXXXXXXX' END
         AND FNOT.CLASE='C'

         UPDATE FNOT SET FACTE=1
         FROM FNOT INNER JOIN VWK_ESTADODIAN_FTRE VK ON FNOT.CNSFNOT=VK.CNSFCT
         WHERE VK.F_fACTURA>=@FECHAINI
         AND VK.F_fACTURA<@FECHAFIN
         AND VK.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE VK.IDTERCERO END
         AND VK.IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE VK.IDPLAN END
         AND VK.IDSEDE=CASE WHEN @IDSEDEF<>'Todas' THEN @IDSEDEF ELSE VK.IDSEDE END
         AND VK.PROCEDENCIA=CASE WHEN @PROCEDENCIA<>'Todas' THEN @PROCEDENCIA ELSE VK.PROCEDENCIA END
         AND VK.FACTE=0
         AND VK.TIPODOC=CASE WHEN @TIPODOC IN('Todas','NOTADB') THEN 'NOTADB' ELSE 'XXXXXXXX' END
         AND FNOT.CLASE='D'                 
      END TRY
      BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
   END
   IF @ACCION=2
   BEGIN
      BEGIN TRY
         UPDATE FTR SET FACTE=0
         FROM FTR INNER JOIN VWK_ESTADODIAN_FTRE VK ON FTR.CNSFCT=VK.CNSFCT
         WHERE VK.F_fACTURA>=@FECHAINI
         AND VK.F_fACTURA<@FECHAFIN
         AND VK.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE VK.IDTERCERO END
         AND VK.IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE VK.IDPLAN END
         AND VK.IDSEDE=CASE WHEN @IDSEDEF<>'Todas' THEN @IDSEDEF ELSE VK.IDSEDE END
         AND VK.PROCEDENCIA=CASE WHEN @PROCEDENCIA<>'Todas' THEN @PROCEDENCIA ELSE VK.PROCEDENCIA END
         AND VK.FACTE =1
         AND VK.TIPODOC=CASE WHEN @TIPODOC IN('Todas','FACTURA') THEN 'FACTURA' ELSE 'XXXXXXXX' END

         UPDATE FNOT SET FACTE=0
         FROM FNOT INNER JOIN VWK_ESTADODIAN_FTRE VK ON FNOT.CNSFNOT=VK.CNSFCT
         WHERE VK.F_fACTURA>=@FECHAINI
         AND VK.F_fACTURA<@FECHAFIN
         AND VK.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE VK.IDTERCERO END
         AND VK.IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE VK.IDPLAN END
         AND VK.IDSEDE=CASE WHEN @IDSEDEF<>'Todas' THEN @IDSEDEF ELSE VK.IDSEDE END
         AND VK.PROCEDENCIA=CASE WHEN @PROCEDENCIA<>'Todas' THEN @PROCEDENCIA ELSE VK.PROCEDENCIA END
         AND VK.FACTE =1
         AND VK.TIPODOC=CASE WHEN @TIPODOC IN('Todas','NOTACR') THEN 'NOTACR' ELSE 'XXXXXXXX' END
         AND FNOT.CLASE='C'

         UPDATE FNOT SET FACTE=0
         FROM FNOT INNER JOIN VWK_ESTADODIAN_FTRE VK ON FNOT.CNSFNOT=VK.CNSFCT
         WHERE VK.F_fACTURA>=@FECHAINI
         AND VK.F_fACTURA<@FECHAFIN
         AND VK.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE VK.IDTERCERO END
         AND VK.IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE VK.IDPLAN END
         AND VK.IDSEDE=CASE WHEN @IDSEDEF<>'Todas' THEN @IDSEDEF ELSE VK.IDSEDE END
         AND VK.PROCEDENCIA=CASE WHEN @PROCEDENCIA<>'Todas' THEN @PROCEDENCIA ELSE VK.PROCEDENCIA END
         AND VK.FACTE =1
         AND VK.TIPODOC=CASE WHEN @TIPODOC IN('Todas','NOTADB') THEN 'NOTADB' ELSE 'XXXXXXXX' END
         AND FNOT.CLASE='D'  
      END TRY
      BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
   END
   IF(SELECT COUNT(*) FROM @TBLERRORES)>0
   BEGIN
      SELECT 'KO' OK
      SELECT ERROR FROM @TBLERRORES
      RETURN
   END
   SELECT 'OK' OK
   RETURN 
   END   
   IF @METODO='LISTAR_FTRE'
   BEGIN
      SELECT @DATOS=DATOS
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON
      ) 
   
      SELECT @FECHAINI=CONVERT(DATETIME,F_INICIAL),@FECHAFIN=CONVERT(DATETIME,DATEADD(DAY,1,F_FINAL)),@IDTERCERO=IDTERCERO,@IDPLAN=IDPLAN,@ESTDIAN=LEFT(ESTDIAN,1),@TIPODOC=TIPODOC,
      @PROCEDENCIA=COALESCE(PROCEDENCIA,'Todas'), @IDSEDEF=COALESCE(IDSEDE,'Todas'),@SINENVIO=CASE WHEN SINENVIO='true' THEN 1 ELSE 0 END
      FROM   OPENJSON (@DATOS)
      WITH   (
         F_INICIAL DATE          '$.F_INICIAL',
         F_FINAL   DATE          '$.F_FINAL',
         IDTERCERO VARCHAR(20)   '$.IDTERCERO',
         IDPLAN VARCHAR(20)      '$.IDPLAN',
         ESTDIAN VARCHAR(20)     '$.ESTDIAN',
         TIPODOC  VARCHAR(20)    '$.TIPODOC',
         IDSEDE   VARCHAR(10)    '$.IDSEDE',
         PROCEDENCIA VARCHAR(20) '$.PROCEDENCIA',
         SINENVIO VARCHAR(10)    '$.SINENVIO'
      )
      PRINT @FECHAINI
      PRINT @FECHAFIN
      SELECT FTR.N_FACTURA,VK.TIPODOC,FTR.CNSFCT
      FROM FTR INNER JOIN VWK_ESTADODIAN_FTRE VK ON FTR.CNSFCT=VK.CNSFCT
      WHERE VK.FECHADOC>=@FECHAINI
      AND VK.FECHADOC<@FECHAFIN
      AND VK.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE VK.IDTERCERO END
      AND VK.IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE VK.IDPLAN END
      AND VK.IDSEDE=CASE WHEN @IDSEDEF<>'Todas' THEN @IDSEDEF ELSE VK.IDSEDE END
      AND VK.PROCEDENCIA=CASE WHEN @PROCEDENCIA<>'Todas' THEN @PROCEDENCIA ELSE VK.PROCEDENCIA END
      AND COALESCE(VK.FACTE,0)=2
      AND VK.TIPODOC=CASE WHEN @TIPODOC IN('Todas','FACTURA') THEN 'FACTURA' ELSE 'XXXXXXXX' END
      AND VK.NOTICLIENTE =CASE WHEN @SINENVIO=1 THEN 'SinEnviar' ELSE VK.NOTICLIENTE END
      UNION ALL
      SELECT VK.CNSFCT,VK.TIPODOC,VK.CNSFCT
      FROM  VWK_ESTADODIAN_FTRE VK 
      WHERE VK.FECHADOC >=@FECHAINI
      AND VK.FECHADOC<@FECHAFIN
      AND VK.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE VK.IDTERCERO END
      AND VK.IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE VK.IDPLAN END
      AND VK.IDSEDE=CASE WHEN @IDSEDEF<>'Todas' THEN @IDSEDEF ELSE VK.IDSEDE END
      AND VK.PROCEDENCIA=CASE WHEN @PROCEDENCIA<>'Todas' THEN @PROCEDENCIA ELSE VK.PROCEDENCIA END
      AND COALESCE(VK.FACTE,0)=2
      AND VK.TIPODOC=CASE WHEN @TIPODOC IN('Todas','NOTACR') THEN 'NOTACR' ELSE 'XXXXXXXX' END
      AND VK.NOTICLIENTE =CASE WHEN @SINENVIO=1 THEN 'SinEnviar' ELSE VK.NOTICLIENTE END
      UNION ALL
      SELECT VK.CNSFCT,VK.TIPODOC,VK.CNSFCT
      FROM  VWK_ESTADODIAN_FTRE VK 
      WHERE VK.FECHADOC>=@FECHAINI
      AND VK.FECHADOC<@FECHAFIN
      AND VK.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE VK.IDTERCERO END
      AND VK.IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE VK.IDPLAN END
      AND VK.IDSEDE=CASE WHEN @IDSEDEF<>'Todas' THEN @IDSEDEF ELSE VK.IDSEDE END
      AND VK.PROCEDENCIA=CASE WHEN @PROCEDENCIA<>'Todas' THEN @PROCEDENCIA ELSE VK.PROCEDENCIA END
      AND COALESCE(VK.FACTE,0)=2
      AND VK.TIPODOC=CASE WHEN @TIPODOC IN('Todas','NOTADB') THEN 'NOTADB' ELSE 'XXXXXXXX' END 
      AND VK.NOTICLIENTE =CASE WHEN @SINENVIO=1 THEN 'SinEnviar' ELSE VK.NOTICLIENTE END
      RETURN
   END
   IF @METODO='LISTA_EXPORFTR'
   BEGIN
      SELECT @DATOS=DATOS
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON
      ) 
   
      SELECT @FECHAINI=CONVERT(DATETIME,F_INICIAL),@FECHAFIN=CONVERT(DATETIME,DATEADD(DAY,1,F_FINAL)),@IDTERCERO=IDTERCERO,@IDPLAN=IDPLAN,@ESTDIAN=CASE WHEN ISNUMERIC(ESTDIAN)=1 THEN  LEFT(ESTDIAN,1) ELSE NULL END,@TIPODOC=TIPODOC,
      @PROCEDENCIA=COALESCE(PROCEDENCIA,'Todas'), @IDSEDEF=COALESCE(IDSEDE,'Todas'),@SINENVIO=CASE WHEN SINENVIO='true' THEN 1 ELSE 0 END
      FROM   OPENJSON (@DATOS)
      WITH   (
         F_INICIAL DATE          '$.F_INICIAL',
         F_FINAL   DATE          '$.F_FINAL',
         IDTERCERO VARCHAR(20)   '$.IDTERCERO',
         IDPLAN VARCHAR(20)      '$.IDPLAN',
         ESTDIAN VARCHAR(20)     '$.ESTDIAN',
         TIPODOC  VARCHAR(20)    '$.TIPODOC',
         IDSEDE   VARCHAR(10)    '$.IDSEDE',
         PROCEDENCIA VARCHAR(20) '$.PROCEDENCIA',
         SINENVIO VARCHAR(10)    '$.SINENVIO'
      )
      PRINT @FECHAINI
      PRINT @FECHAFIN
      SELECT FTR.N_FACTURA,'FACTURA'TIPODOC,FTR.CNSFCT
      FROM FTR INNER JOIN TER ON FTR.IDTERCERO=TER.IDTERCERO
               LEFT  JOIN FDIAN ON FTR.CNSRESOL=FDIAN.CNSRESOL
               LEFT  JOIN FTRE ON FTR.N_FACTURA=FTRE.FTRN_FACTURA AND FTR.PREFIJODIANFE=FTRE.PREFIJO AND FTR.CNSDIANFE=FTRE.N_FACTURA
      WHERE FTR.FACTE= CASE WHEN @ESTDIAN IS NULL THEN CASE WHEN COALESCE(FDIAN.FTRELECTRONICA,0)=0 THEN FTR.FACTE ELSE 2 END 
                       WHEN @ESTDIAN=5 THEN FTR.FACTE ELSE 2 END
      AND FTR.F_FACTURA>=@FECHAINI
      AND FTR.F_FACTURA<@FECHAFIN
      AND FTR.IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE FTR.IDTERCERO END
      AND FTR.IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE FTR.IDPLAN END
      AND FTR.IDSEDE=CASE WHEN @IDSEDEF<>'Todas' THEN @IDSEDEF ELSE FTR.IDSEDE END
      AND FTR.PROCEDENCIA=CASE WHEN @PROCEDENCIA<>'Todas' THEN @PROCEDENCIA ELSE FTR.PROCEDENCIA END
      AND COALESCE(FTRE.NOTIFICADO,0)=CASE WHEN  @SINENVIO=1 THEN 0 ELSE  COALESCE(FTRE.NOTIFICADO,0)  END
      RETURN
   END
--QUERY 3
   IF @METODO='TREA_XML'
   BEGIN 
      SELECT @CNSFACT=CNSFCT,@TIPODOC=TIPODOC
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         CNSFCT VARCHAR(20) '$.CNSFCT',
         TIPODOC VARCHAR(20) '$.TIPODOC'
      ) 
      SELECT @N_FACTURA=N_FACTURA FROM FTR WHERE CNSFCT=@CNSFACT
      IF EXISTS(SELECT * FROM FTR WHERE N_fACTURA=@N_FACTURA AND COALESCE(FACTE,0)=2)
      BEGIN
         IF @TIPODOC='FACTURA'
         BEGIN
            PRINT '@N_FACTURA '+@N_FACTURA+' @CNSFACT'+@CNSFACT
            SELECT @NOMBREXML=ATTACHED_DOCNAME 
            FROM FTRE INNER JOIN FTR ON FTR.N_FACTURA=FTRN_FACTURA AND FTRE.N_FACTURA=FTR.CNSDIANFE AND FTRE.PREFIJO=FTR.PREFIJODIANFE
            select @XML= dbo.FNK_AttachedDocument(@CNSFACT,'fv')
         END
         ELSE
         BEGIN 
            SELECT @NOMBREXML=ATTACHED_DOCNAME FROM FTRE WHERE FTRN_FACTURA=@N_FACTURA AND N_FACTURA=@CNSFACT
            IF @TIPODOC='NOTACR'
            BEGIN
               select @XML= dbo.FNK_AttachedDocument(@CNSFACT,'NC')            
            END
            ELSE
            BEGIN
               select @XML= dbo.FNK_AttachedDocument(@CNSFACT,'NB')   
            END
         END
         SELECT 'OK' OK,@XML AS XML_FACTURA, @NOMBREXML AS NOMBRE_XML
         RETURN
      END
      ELSE 
      BEGIN 
         SELECT 'KO' KO,'Factura no Existe o no se ha Notificado a la Dian'
      END
   END
   IF @METODO='MARCAITEM_VK'
   BEGIN 
      SELECT @DATOS=DATOS,@PROCEDENCIA=PROCEDENCIA,@NOADMISION=NOADMISION,@NOPRESTACION=NOPRESTACION,
      @NOITEM=CONVERT(INT,NOITEM)
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON,
         PROCEDENCIA VARCHAR(10)   '$.PROCEDENCIA',
         NOADMISION  VARCHAR(20)   '$.NOADMISION',
         NOPRESTACION VARCHAR(20)  '$.NOPRESTACION',
         NOITEM       VARCHAR(3)          '$.NOITEM'
      ) 
   
      SELECT @CNSFACT=CNSFACT,@CNSAGREGAPGP=CNSAGREGAPGP
      FROM   OPENJSON (@DATOS)
      WITH   (
      CNSFACT VARCHAR(20) '$.CNSFACT',
      CNSAGREGAPGP VARCHAR(20) '$.CNSAGREGAPGP'
      )
      BEGIN TRY
         IF @PROCEDENCIA='CIT'
         BEGIN
            UPDATE CIT SET MARCAFAC=CASE WHEN MARCAFAC=0 THEN 1 ELSE 0 END,USUARIONOFACTURABLE=CASE WHEN MARCAFAC=0 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN MARCAFAC=0 THEN @CNSAGREGAPGP ELSE NULL END
            WHERE CONSECUTIVO=@NOADMISION
         END
         IF @PROCEDENCIA='AUT'
         BEGIN
            PRINT 'ACTULIZANDO AUTD IDAUT='+@NOADMISION+' @NOITEM'+STR(@NOITEM)+' @CNSAGREGAPGP='+@CNSAGREGAPGP
			   UPDATE AUTD SET MARCA=CASE WHEN MARCA=0 THEN 1 ELSE 0 END,USUARIOMARCA=CASE WHEN MARCA=0 THEN @USUARIO ELSE NULL END,
            CNSFCT=CASE WHEN MARCA=0 THEN @CNSAGREGAPGP ELSE NULL END
            FROM AUTD INNER JOIN AUT ON AUTD.IDAUT=AUT.IDAUT
            WHERE AUTD.IDAUT=@NOADMISION
            AND AUTD.NO_ITEM=@NOITEM

            PRINT 'MARCO AUT'
            UPDATE AUT SET MARCAFAC=CASE WHEN COALESCE(AUTD.MARCA,0)=1 THEN 1 ELSE 0 END,USUARIONOFACTURABLE=CASE WHEN  COALESCE(AUTD.MARCA,0)=1 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN  COALESCE(AUTD.MARCA,0)=1 THEN @CNSAGREGAPGP ELSE NULL END
            FROM AUTD INNER JOIN AUT ON AUTD.IDAUT=AUT.IDAUT
            WHERE AUTD.IDAUT=@NOADMISION

         END   
         IF @PROCEDENCIA='HADM'
         BEGIN
            UPDATE HPRED SET MARCA= CASE WHEN COALESCE(MARCA,0)=1 THEN 0 ELSE 1 END , 
                              USUARIOMARCA= CASE WHEN COALESCE(MARCA,0)=1 THEN NULL ELSE @USUARIO END,
                              CNSITFC= CASE WHEN COALESCE(MARCA,0)=1 THEN NULL ELSE @CNSAGREGAPGP END
            FROM HPRED INNER JOIN VWK_CARGOS_HADMAUTCIT A ON HPRED.NOPRESTACION=A.NOPRESTACION 
                                                               AND HPRED.NOITEM=A.NOITEM  
            WHERE A.NOADMISION=@NOADMISION
            AND HPRED.NOPRESTACION=@NOPRESTACION 
            AND HPRED.NOITEM=@NOITEM
            AND A.PROCEDENCIA='HADM'
         END
         IF @PROCEDENCIA='ONCO'  
         BEGIN
            PRINT 'VOY A MARCAR ONCOLOGIA'
            UPDATE HCATDIMOV SET MARCAFAC=CASE WHEN HCATDIMOV.MARCAFAC=0 THEN 1 ELSE 0 END,USUMARCA=CASE WHEN HCATDIMOV.MARCAFAC=0 THEN @USUARIO ELSE NULL END,
            CNSFACT=CASE WHEN HCATDIMOV.MARCAFAC=0 THEN @CNSAGREGAPGP ELSE NULL END
            FROM HCATDIMOV INNER JOIN CIT ON HCATDIMOV.CONSECUTIVOCIT=CIT.CONSECUTIVO
            WHERE CONSECUTIVO=@NOADMISION
            AND HCATDIMOV.ID=@NOITEM
         END
      END TRY
      BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='MARCAPTE_VK'
   BEGIN 

      SELECT @DATOS=DATOS,@IDAFILIADO=IDAFILIADO,@IDTERCERO=IDTERCERO,@IDPLAN=IDPLAN,
      @IDSEDEF=SEDEF
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON,
	      IDAFILIADO VARCHAR(20)      '$.IDAFILIADO',
         IDTERCERO  VARCHAR(20)      '$.IDTERCERO',
         IDPLAN     VARCHAR(6)       '$.IDPLAN',
         SEDEF VARCHAR(6)            '$.IDSEDE'
      ) 
   
      SELECT @CNSFACT=CNSFACT,@CNSAGREGAPGP=CNSAGREGAPGP,@FECHAINI=F_INIMAS,@FECHAFIN=DATEADD(DAY,1,F_FINMAS),
      @PROCEDENCIA=PROCEDENCIA
      FROM   OPENJSON (@DATOS)
      WITH   (
      CNSFACT VARCHAR(20) '$.CNSFACT',
      CNSAGREGAPGP VARCHAR(20) '$.CNSAGREGAPGP',
      F_INIMAS DATE        '$.FECHA_INI',
      F_FINMAS DATE        '$.FECHA_FIN',
      PROCEDENCIA VARCHAR(20)    '$.PROCEDENCIA'
      )
      BEGIN TRY
         PRINT 'MARCO CITAS'
         UPDATE CIT SET MARCAFAC=CASE WHEN CIT.MARCAFAC=0 THEN 1 ELSE 0 END,
         CIT.USUARIONOFACTURABLE=CASE WHEN CIT.MARCAFAC=0 THEN @USUARIO ELSE NULL END,
         CIT.CNSFACT=CASE WHEN CIT.MARCAFAC=0 THEN @CNSAGREGAPGP ELSE NULL END
         FROM CIT INNER JOIN VWK_CARGOS_HADMAUTCIT VK ON CIT.CONSECUTIVO=VK.NOADMISION AND VK.PROCEDENCIA='CIT'
         WHERE CIT.IDAFILIADO=@IDAFILIADO
         AND CIT.IDTERCEROCA=@IDTERCERO
         AND CIT.IDPLAN=@IDPLAN
         AND COALESCE(CIT.FACTURADA,0)=0
         AND COALESCE(CIT.FACTURABLE,0)=1
         AND COALESCE(CIT.VALORTOTAL,0)>0
         AND CIT.FECHA>=@FECHAINI
         AND CIT.FECHA<@FECHAFIN
         AND CIT.IDSEDE=@IDSEDEF
 
         PRINT 'MARCO AUT'
         PRINT 'ACTULIZANDO AUTD IDAUT='+@NOADMISION+' @NOITEM'+STR(@NOITEM)+' @CNSAGREGAPGP='+@CNSAGREGAPGP
			UPDATE AUTD SET MARCA=CASE WHEN MARCA=0 THEN 1 ELSE 0 END,USUARIOMARCA=CASE WHEN MARCA=0 THEN @USUARIO ELSE NULL END,
         CNSFCT=CASE WHEN MARCA=0 THEN @CNSAGREGAPGP ELSE NULL END
         FROM AUTD INNER JOIN AUT ON AUTD.IDAUT=AUT.IDAUT
         WHERE AUT.IDAFILIADO=@IDAFILIADO
         AND AUT.IDTERCEROCA=@IDTERCERO
         AND AUT.IDPLAN=@IDPLAN
         AND AUT.FACTURABLE=1
         AND AUT.FACTURADA=0
         AND AUT.FECHA>=@FECHAINI
         AND AUT.FECHA<@FECHAFIN

         PRINT 'MARCO HPRED'
         UPDATE HPRED SET MARCA= CASE WHEN COALESCE(MARCA,0)=1 THEN 0 ELSE 1 END , 
                           USUARIOMARCA= CASE WHEN COALESCE(MARCA,0)=1 THEN NULL ELSE @USUARIO END,
                           CNSITFC= CASE WHEN COALESCE(MARCA,0)=1 THEN NULL ELSE @CNSAGREGAPGP END
         FROM HPRED INNER JOIN VWK_CARGOS_HADMAUTCIT A ON HPRED.NOPRESTACION=A.NOPRESTACION 
                                                            AND HPRED.NOITEM=A.NOITEM 
         WHERE A.IDAFILIADO=@IDAFILIADO
         AND COALESCE(HPRED.FACTURADA,0)=0
         AND COALESCE(HPRED.NOCOBRABLE,0)=0
         AND COALESCE(HPRED.VALOREXCEDENTE,0)>0
         AND A.IDTERCEROCA=@IDTERCERO
         AND A.IDPLAN=@IDPLAN
         AND A.FECHA>=@FECHAINI
         AND A.FECHA<@FECHAFIN
         AND A.PROCEDENCIA='HADM'

         PRINT 'MARCO ONCOLOGIA'
         UPDATE HCATDIMOV SET MARCAFAC=CASE WHEN HCATDIMOV.MARCAFAC=0 THEN 1 ELSE 0 END,USUMARCA=CASE WHEN HCATDIMOV.MARCAFAC=0 THEN @USUARIO ELSE NULL END,
         CNSFACT=CASE WHEN HCATDIMOV.MARCAFAC=0 THEN @CNSAGREGAPGP ELSE NULL END
         FROM HCATDIMOV INNER JOIN CIT ON HCATDIMOV.CONSECUTIVOCIT=CIT.CONSECUTIVO
         WHERE CIT.IDAFILIADO=@IDAFILIADO
         AND CIT.IDTERCEROCA=@IDTERCERO
         AND CIT.IDPLAN=@IDPLAN
         AND COALESCE(HCATDIMOV.N_FACTURA,'')=''
         AND COALESCE(CIT.FACTURABLE,0)=1
         AND COALESCE(HCATDIMOV.FACTURADA,0)=0
         AND CIT.FECHA>=@FECHAINI
         AND CIT.FECHA<@FECHAFIN

      END TRY
      BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END

   IF @METODO='ADDFTRDC_MARCA'
   BEGIN 
      SELECT @DATOS=DATOS,@N_CUOTA=CONVERT(INT,N_CUOTA)
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON,
         N_CUOTA VARCHAR(2) '$.N_CUOTA'
      ) 
      SELECT @CNSFTR=CNSFACT,@CNSAGREGAPGP=CNSAGREGAPGP
      FROM   OPENJSON (@DATOS)
      WITH   (
      CNSFACT VARCHAR(20) '$.CNSFACT',
      CNSAGREGAPGP VARCHAR(20) '$.CNSAGREGAPGP'
      )
      IF EXISTS(SELECT * FROM VWK_CARGOS_HADMAUTCIT WHERE MARCAFAC=1 AND USUMARCA=@USUARIO AND CNSFACT=@CNSAGREGAPGP )
      BEGIN
         BEGIN TRY
            SELECT @N_FACTURA = N_FACTURA FROM FTR WHERE CNSFCT=@CNSFTR  
 
             INSERT INTO FTRDC (CNSFTR,N_CUOTA,PROCEDENCIA,FECHA,NOADMISION,PACIENTE,NOPRESTACION,NOITEM,IDSERVICIO,IDAREA,IDPLAN,  
                                CCOSTO,PREFIJO,CANTIDAD,VALOR,VALORTOTAL,VLR_COPAGO,VLR_PAGCOMP,VALOREXCEDENTE,DESCUENTO,TIPOTERCERO,  
                                CUENTA,ENRECAUDOS,IDAFILIADO)  
             SELECT @CNSFTR,@N_CUOTA,A.PROCEDENCIA,A.FECHA,A.NOADMISION,A.PACIENTE, A.NOPRESTACION,A.NOITEM,A.IDSERVICIO,A.IDAREA,A.IDPLANCA,A.CCOSTO,A.PREFIJO,A.CANTIDAD,  
                    A.VALOR,A.VALORTOTAL,A.VALORCOPAGO,A.VALORPCOMP,A.VALOREXCEDENTE,A.DESCUENTO,A.TIPOTERCONTABLE,TTEC.CUENTA,0,A.IDAFILIADO
             FROM VWK_CARGOS_HADMAUTCIT A LEFT JOIN TTEC ON A.TIPOTERCONTABLE=TTEC.TIPO
             WHERE MARCAFAC=1
             AND COALESCE(USUMARCA,'')=@USUARIO
             AND COALESCE(CNSFACT,'')=@CNSAGREGAPGP
             AND NOT EXISTS(SELECT * FROM FTRDC WHERE CNSFTR=@CNSFTR AND FTRDC.NOADMISION=A.NOADMISION 
                             AND FTRDC.PROCEDENCIA=A.PROCEDENCIA 
                             AND FTRDC.NOADMISION=A.NOADMISION 
                             AND FTRDC.NOPRESTACION=A.NOPRESTACION 
                             AND FTRDC.NOITEM=A.NOITEM )

             UPDATE CIT SET FACTURADA=1,N_FACTURA=@N_fACTURA,CNSFACT=@CNSFTR,MARCAFAC=0,USUARIONOFACTURABLE=NULL
             WHERE MARCAFAC=1 AND COALESCE(USUARIONOFACTURABLE,'')=@USUARIO AND COALESCE(CNSFACT,'')=@CNSAGREGAPGP

             UPDATE AUTD SET FACTURADA=1,N_FACTURA=@N_FACTURA,MARCA=0,USUARIOMARCA=NULL,CNSFCT=@CNSFTR
             WHERE MARCA=1 AND COALESCE(USUARIOMARCA,'')=@USUARIO 
             AND  COALESCE(CNSFCT,'')=@CNSAGREGAPGP

               PRINT 'VOY A MARCAR ONCOLOGIA'
               UPDATE HCATDIMOV SET MARCAFAC=0 , USUMARCA= NULL,CNSFACT=@CNSFTR,FACTURADA=1,N_FACTURA=@N_FACTURA
               FROM HCATDIMOV INNER JOIN CIT ON HCATDIMOV.CONSECUTIVOCIT=CIT.CONSECUTIVO
               WHERE HCATDIMOV.MARCAFAC=1 
               AND COALESCE(USUMARCA,'')=@USUARIO 
               AND COALESCE(HCATDIMOV.CNSFACT,'')=@CNSAGREGAPGP

             IF EXISTS(SELECT * FROM  VWK_CARGOS_HADMAUTCIT VK 
                        WHERE MARCAFAC=1 AND USUMARCA=@USUARIO AND CNSFACT=@CNSAGREGAPGP
                        AND VK.PROCEDENCIA='HADM'
             )
             BEGIN 
               IF NOT EXISTS(SELECT * FROM HADMF INNER JOIN VWK_CARGOS_HADMAUTCIT VK ON HADMF.NOADMISION=VK.NOADMISION
                             WHERE MARCAFAC=1 AND USUMARCA=@USUARIO AND CNSFACT=@CNSAGREGAPGP AND VK.PROCEDENCIA='HADM')
               BEGIN
                  PRINT 'Colocando el N_Factura en HADMF...'+@N_FACTURA+'NO ADMISION '+COALESCE(@NOADMISION,'')
                  INSERT INTO HADMF (NOADMISION,N_FACTURA,CNSFCT,ESTADO,N_FACTURAR,ANEXOUNICO,IDTERCERO,IDPLAN,DESCRIPCION,ITFC,CNSITFC)
                  SELECT DISTINCT VK.NOADMISION,@N_FACTURA,@CNSFTR,'P',NULL,NULL,VK.IDTERCERO,VK.IDPLAN,'FACTURA CAPITADA',0,NULL
                  FROM  VWK_CARGOS_HADMAUTCIT VK 
                  WHERE MARCAFAC=1 
                  AND USUMARCA=@USUARIO 
                  AND CNSFACT=@CNSAGREGAPGP
                  AND VK.PROCEDENCIA='HADM'

                  UPDATE HPRED SET FACTURADA=1, N_FACTURA=@N_FACTURA  
                  FROM HPRED INNER JOIN VWK_CARGOS_HADMAUTCIT A ON HPRED.NOPRESTACION=A.NOPRESTACION 
                                                                   AND HPRED.NOITEM=A.NOITEM  
                  WHERE A.MARCAFAC=1 
                  AND A.USUMARCA=@USUARIO 
                  AND A.CNSFACT=@CNSAGREGAPGP
                  AND A.PROCEDENCIA='HADM'
               END
            END
         END TRY
         BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      ELSE
      BEGIN
          INSERT INTO @TBLERRORES(ERROR) SELECT 'No se Encontraron Registros Marcardos, Valide e Intente de Nuevo' 
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK,ERROR FROM @TBLERRORES
         RETURN
      END
      UPDATE FTRD SET VLR_COPAGOS =CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI'
	   THEN ROUND(V.VALORCOPAGO ,0) ELSE V.VALORCOPAGO END
       FROM (SELECT VALORCOPAGO = SUM( VLR_COPAGO) FROM FTRDC WHERE CNSFTR = @CNSFTR AND  N_CUOTA=@N_CUOTA) V  
       WHERE CNSFTR = @CNSFTR  
       AND N_CUOTA=@N_CUOTA

       SELECT  @COPAGOS_CP=SUM(COALESCE(COPAGOS_CP,0))  FROM FTRD WHERE CNSFTR = @CNSFTR  

       UPDATE FTR SET CP_VLR_SERVICIOS =CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI' 
	    THEN ROUND( V.VALORTOTAL,0) ELSE  V.VALORTOTAL END,
                      CP_VLR_COPAGOS   = 				   
	   CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI' 
		   THEN ROUND(CASE WHEN FTR.COPAPROPIO=1 THEN @COPAGOS_CP ELSE  V.VALORCOPAGO END,0)
		   ELSE CASE WHEN FTR.COPAPROPIO=1 THEN @COPAGOS_CP ELSE  V.VALORCOPAGO END END,
                      CP_VLR_PAGCOMP   = 
				      CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI' 
				           THEN ROUND(V.VALORPCOMP,0) ELSE V.VALORPCOMP END,
				      VALORCOPAGO   = 
				      CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI' THEN ROUND(V.VALORCOPAGO ,0)
				      ELSE V.VALORCOPAGO  END
          FROM (SELECT VALORTOTAL = SUM(VALORTOTAL), VALORCOPAGO = SUM(VLR_COPAGO  ), VALORPCOMP = SUM(VLR_PAGCOMP) 
                FROM FTRDC WHERE CNSFTR = @CNSFTR ) V  
          WHERE CNSFCT = @CNSFTR  

	      IF DBO.FNK_VALORVARIABLE('DESCCOP_CAPI')='SI'
	      BEGIN 
	          UPDATE FTR SET VR_TOTAL=
		      CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI' THEN 
		      round((SELECT SUM(VALOR*CANTIDAD)-SUM( VLR_COPAGOS) FROM FTRD WHERE CNSFTR = @CNSFTR  ),0)
		      ELSE (SELECT SUM(VALOR*CANTIDAD)-SUM( VLR_COPAGOS) FROM FTRD WHERE CNSFTR = @CNSFTR  ) END
		
		      WHERE  CNSFCT = @CNSFTR
	      END 
      SELECT @VR_TOTAL=CP_VLR_SERVICIOS--,@COPAGOS_CP=CASE COALESCE(COPAPROPIO,0) WHEN 1 THEN CP_VLR_COPAGOS ELSE VALORCOPAGO END 
      FROM FTR  WHERE  CNSFCT = @CNSFTR
      SELECT 'OK' OK,@VR_TOTAL CP_VLR_SERVICIOS,@COPAGOS_CP CP_VLR_COPAGOS
      RETURN                    
   END
   IF @METODO='QUITAR_FTRDC'
   BEGIN 
      SELECT @ACCION= CASE WHEN ACCION='pte' THEN 1 ELSE 0 END,@CNSFTR=CNSFACT,@N_CUOTA=CONVERT(INT,N_CUOTA),@PROCEDENCIA=PROCEDENCIA,@NOADMISION=NOADMISION,
      @NOPRESTACION=NOPRESTACION,@NOITEM=CONVERT(INT,NOITEM),@IDAFILIADO=IDAFILIADO
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         ACCION VARCHAR(10) '$.ACCION',
         CNSFACT VARCHAR(20) '$.CNSFACT',
         N_CUOTA VARCHAR(10)  '$.N_CUOTA',
         PROCEDENCIA VARCHAR(10) '$.PROCEDENCIA',
         NOADMISION  VARCHAR(20)  '$.NOADMISION',
         NOPRESTACION VARCHAR(20)  '$.NOPRESTACION',
         NOITEM       VARCHAR(5)   '$.NOITEM',
         IDAFILIADO   VARCHAR(20)   '$.IDAFILIADO'
      ) 
      SELECT @N_FACTURA=N_FACTURA FROM FTR WHERE CNSFCT=@CNSFTR
      IF @ACCION=0
      BEGIN
         BEGIN TRY
               IF @PROCEDENCIA='HADM'
               BEGIN
                  UPDATE HPRED SET FACTURADA=0, N_FACTURA=''    
                  FROM HPRED INNER JOIN FTRDC A ON HPRED.NOPRESTACION=A.NOPRESTACION AND HPRED.NOITEM=A.NOITEM    
                  WHERE A.NOPRESTACION=@NOPRESTACION
                  AND A.CNSFTR = @CNSFTR  
                  AND A.N_CUOTA=@N_CUOTA
                  AND A.NOITEM=@NOITEM
                  AND A.CNSFTR=@CNSFTR 
                  AND A.PROCEDENCIA = 'HADM' 
               END
               IF @PROCEDENCIA='CIT'
               BEGIN
                  UPDATE CIT SET FACTURADA=0, N_FACTURA=''    
                  FROM CIT INNER JOIN FTRDC A ON CIT.CONSECUTIVO=A.NOPRESTACION     
                  WHERE A.NOPRESTACION=@NOPRESTACION
                  AND A.CNSFTR = @CNSFTR  
                  AND A.N_CUOTA=@N_CUOTA
                  AND A.NOITEM=@NOITEM
                  AND A.CNSFTR=@CNSFTR 
                  AND A.PROCEDENCIA = 'CIT'  
               END
               IF @PROCEDENCIA='AUT'
               BEGIN
                  PRINT 'PRIMERO UPDATE'
                  PRINT '@NOPRESTACION='+@NOPRESTACION
                  PRINT '@CNSFTR='+@CNSFTR
                  PRINT '@N_CUOTA='+STR(@N_CUOTA)
                  PRINT '@NOPRESTACION='+@NOPRESTACION
                  PRINT '@NOITEM='+STR(@NOITEM)

                  UPDATE AUTD SET FACTURADA=0, N_FACTURA=''      
                  FROM AUTD INNER JOIN FTRDC A ON AUTD.IDAUT=A.NOPRESTACION AND AUTD.NO_ITEM=A.NOITEM    
                  WHERE A.NOPRESTACION=@NOPRESTACION
                  AND A.CNSFTR = @CNSFTR  
                  AND A.N_CUOTA=@N_CUOTA
                  AND A.NOITEM=@NOITEM
                  AND A.PROCEDENCIA = 'AUT' 
                  
                  IF NOT EXISTS(SELECT * FROM AUTD WHERE FACTURADA=1 AND COALESCE(N_FACTURA,'')<>'' AND  IDAUT=@NOPRESTACION )
                  BEGIN
                     UPDATE AUT SET FACTURADA=0, N_FACTURA=''      
                     FROM AUT INNER JOIN FTRDC A ON AUT.IDAUT=A.NOPRESTACION  
                     WHERE A.NOPRESTACION=@NOPRESTACION
                     AND A.CNSFTR = @CNSFTR  
                     AND A.N_CUOTA=@N_CUOTA
                     AND A.NOITEM=@NOITEM
                     AND A.CNSFTR=@CNSFTR 
                     AND A.PROCEDENCIA = 'AUT'   
                  END
               END
               IF @PROCEDENCIA='ONCO'
               BEGIN
                  UPDATE HCATDIMOV SET FACTURADA=0,N_FACTURA=''
                  FROM HCATDIMOV INNER JOIN FTRDC A ON HCATDIMOV.CONSECUTIVOCIT=A.NOPRESTACION  AND HCATDIMOV.ID=A.NOITEM
                  WHERE A.NOPRESTACION=@NOPRESTACION
                  AND A.CNSFTR = @CNSFTR  
                  AND A.N_CUOTA=@N_CUOTA
                  AND A.NOITEM=@NOITEM
                  AND A.CNSFTR=@CNSFTR 
                  AND A.PROCEDENCIA = 'ONCO'  
               END

               PRINT 'VOY A BORRAR'
               PRINT '@CNSFTR ='+@CNSFTR
               PRINT '@N_CUOTA ='+STR(@N_CUOTA)
               PRINT '@PROCEDENCIA ='+@PROCEDENCIA
               PRINT '@NOADMISION = '+@NOADMISION
               PRINT '@NOPRESTACION = '+@NOPRESTACION
               PRINT '@NOITEM = '+STR(@NOITEM)
               PRINT '@IDAFILIADO = '+@IDAFILIADO
               DELETE FTRDC WHERE CNSFTR=@CNSFTR 
               AND N_CUOTA=@N_CUOTA 
               AND PROCEDENCIA=@PROCEDENCIA 
               AND NOADMISION=@NOADMISION     
               AND NOPRESTACION=@NOPRESTACION
               AND NOITEM=@NOITEM
               AND COALESCE(IDAFILIADO,'')=CASE WHEN COALESCE(@IDAFILIADO,'')<>'' THEN @IDAFILIADO ELSE  COALESCE(IDAFILIADO,'') END
               PRINT 'TERMINO DELETE'
            END TRY
            BEGIN CATCH
                  INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
      END
      IF @ACCION=1
      BEGIN
          BEGIN TRY

            UPDATE HPRED SET FACTURADA=0, N_FACTURA=''    
            FROM HPRED INNER JOIN FTRDC A ON HPRED.NOPRESTACION=A.NOPRESTACION AND HPRED.NOITEM=A.NOITEM    
            WHERE A.CNSFTR = @CNSFTR  
            AND A.N_CUOTA=@N_CUOTA
            AND A.CNSFTR=@CNSFTR 
            AND A.IDAFILIADO=@IDAFILIADO
            AND COALESCE(HPRED.FACTURADA,0)=1
            AND COALESCE(HPRED.N_FACTURA,'')=@N_FACTURA
            AND A.PROCEDENCIA = 'HADM' 

            UPDATE CIT SET FACTURADA=0, N_FACTURA=''    
            FROM CIT INNER JOIN FTRDC A ON CIT.CONSECUTIVO=A.NOPRESTACION     
            WHERE A.CNSFTR = @CNSFTR  
            AND A.N_CUOTA=@N_CUOTA
            AND COALESCE(CIT.FACTURADA,0)=1
            AND COALESCE(CIT.N_FACTURA,'')=@N_FACTURA
            AND A.IDAFILIADO=@IDAFILIADO
            AND A.PROCEDENCIA = 'CIT'  

            UPDATE AUTD SET FACTURADA=0, N_FACTURA=''      
            FROM AUTD INNER JOIN FTRDC A ON AUTD.IDAUT=A.NOPRESTACION AND AUTD.NO_ITEM=A.NOITEM    
            WHERE A.CNSFTR = @CNSFTR  
            AND A.N_CUOTA=@N_CUOTA
            AND COALESCE(AUTD.FACTURADA,0)=1
            AND COALESCE(AUTD.N_FACTURA,'')=@N_FACTURA
            AND A.IDAFILIADO=@IDAFILIADO
            AND A.PROCEDENCIA = 'AUT' 
            
            IF NOT EXISTS(SELECT * FROM AUTD INNER JOIN AUT ON AUT.IDAUT=AUTD.IDAUT WHERE AUT.IDAFILIADO=@IDAFILIADO AND AUTD.N_FACTURA=@N_FACTURA AND AUTD.FACTURADA=1)
            BEGIN
               UPDATE AUT SET FACTURADA=0, N_FACTURA=''      
               FROM AUT INNER JOIN FTRDC A ON AUT.IDAUT=A.NOPRESTACION  
               WHERE A.CNSFTR = @CNSFTR  
               AND A.N_CUOTA=@N_CUOTA
               AND A.IDAFILIADO=@IDAFILIADO
               AND A.CNSFTR=@CNSFTR 
               AND A.PROCEDENCIA = 'AUT'   
            END

            UPDATE HCATDIMOV SET FACTURADA=0,N_FACTURA=''
            FROM HCATDIMOV INNER JOIN FTRDC A ON HCATDIMOV.CONSECUTIVOCIT=A.NOPRESTACION  AND HCATDIMOV.ID=A.NOITEM
            WHERE A.CNSFTR = @CNSFTR  
            AND A.N_CUOTA=@N_CUOTA
            AND A.CNSFTR=@CNSFTR 
            AND A.IDAFILIADO=@IDAFILIADO
            AND A.PROCEDENCIA = 'ONCO'  

            PRINT 'VOY A BORRAR'
            DELETE FTRDC WHERE CNSFTR=@CNSFTR 
            AND N_CUOTA=@N_CUOTA 
            AND IDAFILIADO=@IDAFILIADO
            PRINT 'TERMINO DELETE'
         END TRY
         BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      UPDATE FTRD SET VLR_COPAGOS =CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI'
	                                 THEN ROUND(V.VALORCOPAGO ,0) ELSE V.VALORCOPAGO END
      FROM (SELECT VALORCOPAGO = SUM( VLR_COPAGO) FROM FTRDC WHERE CNSFTR = @CNSFTR AND  N_CUOTA=@N_CUOTA) V  
      WHERE CNSFTR = @CNSFTR  
      AND N_CUOTA=@N_CUOTA

      SELECT  @COPAGOS_CP=SUM(COALESCE(COPAGOS_CP,0))  FROM FTRD WHERE CNSFTR = @CNSFTR  

      UPDATE FTR SET CP_VLR_SERVICIOS = CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI' 
	                                     THEN ROUND( V.VALORTOTAL,0) ELSE  V.VALORTOTAL END,
                      CP_VLR_COPAGOS  = CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI' 
		                                  THEN ROUND(CASE WHEN FTR.COPAPROPIO=1 THEN @COPAGOS_CP ELSE  V.VALORCOPAGO END,0)
		                                  ELSE CASE WHEN FTR.COPAPROPIO=1 THEN @COPAGOS_CP ELSE  V.VALORCOPAGO END END,
                      CP_VLR_PAGCOMP   = CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI' 
				                            THEN ROUND(V.VALORPCOMP,0) ELSE V.VALORPCOMP END,
				          VALORCOPAGO   =  CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI' THEN ROUND(V.VALORCOPAGO ,0)
				                           ELSE V.VALORCOPAGO  END
      FROM (SELECT VALORTOTAL = SUM(VALORTOTAL), VALORCOPAGO = SUM(VLR_COPAGO  ), VALORPCOMP = SUM(VLR_PAGCOMP) 
            FROM FTRDC WHERE CNSFTR = @CNSFTR ) V  
      WHERE CNSFCT = @CNSFTR  

	   IF DBO.FNK_VALORVARIABLE('DESCCOP_CAPI')='SI'
	   BEGIN 
	      UPDATE FTR SET VR_TOTAL= CASE WHEN dbo.FNK_VALORVARIABLE('REDONDEOFTRFINANC' )='SI' THEN 
		                                 round((SELECT SUM(VALOR*CANTIDAD)-SUM( VLR_COPAGOS) FROM FTRD WHERE CNSFTR = @CNSFTR  ),0)
		                            ELSE (SELECT SUM(VALOR*CANTIDAD)-SUM( VLR_COPAGOS) FROM FTRD WHERE CNSFTR = @CNSFTR  ) END
		
		    WHERE  CNSFCT = @CNSFTR
      END
      SELECT @VR_TOTAL=CP_VLR_SERVICIOS--,@COPAGOS_CP=CASE COALESCE(COPAPROPIO,0) WHEN 1 THEN CP_VLR_COPAGOS ELSE VALORCOPAGO END 
      FROM FTR  WHERE  CNSFCT = @CNSFTR
      SELECT 'OK' OK,@VR_TOTAL CP_VLR_SERVICIOS,@COPAGOS_CP CP_VLR_COPAGOS
      RETURN 
   END     
   IF @METODO='ASIGNAR_NROAUT'     
   BEGIN         
      SELECT @CNSFACT=CNSFACT,@NROAUTORIZA=NROAUTORIZA      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
              CNSFACT VARCHAR(20)  '$.CNSFACT',
              NROAUTORIZA VARCHAR(20) '$.NOAUTORIZACION'
            )           
      BEGIN TRY           
         UPDATE CIT SET NOAUTORIZACION=@NROAUTORIZA WHERE CNSFACT=@CNSFACT AND MARCAFAC=1 AND USUARIONOFACTURABLE=@USUARIO
         UPDATE AUT SET NUMAUTORIZA=@NROAUTORIZA WHERE CNSFACT=@CNSFACT AND MARCAFAC=1 AND USUARIONOFACTURABLE=@USUARIO                      
      END TRY
      BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='RIPS_JSON'
   BEGIN 
      PRINT 'INGRESO A RIPS JSON'
      SELECT @CNSFACT=CNSFCT,@TIPODOC=TIPODOC
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         CNSFCT VARCHAR(20) '$.CNSFCT',
         TIPODOC VARCHAR(20) '$.TIPODOC'
      ) 
      SELECT @N_FACTURA=N_FACTURA FROM FTR WHERE CNSFCT=@CNSFACT
      IF EXISTS(SELECT * FROM FTR WHERE N_fACTURA=@N_FACTURA AND COALESCE(FACTE,0)=2)
      BEGIN
         IF @TIPODOC='FACTURA'
         BEGIN
            PRINT '@N_FACTURA '+@N_FACTURA+' @CNSFACT'+@CNSFACT
            SELECT @NOMBREXML=@N_FACTURA+'.xml' 
           -- FROM FTRE INNER JOIN FTR ON FTR.N_FACTURA=FTRN_FACTURA AND FTRE.N_FACTURA=FTR.CNSDIANFE AND FTRE.PREFIJO=FTR.PREFIJODIANFE
            select @XML= dbo.FNK_AttachedDocument(@CNSFACT,'fv')
         END
         ELSE
         BEGIN 
            SELECT @NOMBREXML=ATTACHED_DOCNAME FROM FTRE WHERE FTRN_FACTURA=@N_FACTURA AND N_FACTURA=@CNSFACT
            IF @TIPODOC='NOTACR'
            BEGIN
               select @XML= dbo.FNK_AttachedDocument(@CNSFACT,'NC')            
            END
            ELSE
            BEGIN
               select @XML= dbo.FNK_AttachedDocument(@CNSFACT,'NB')   
            END
         END
         SELECT @NOMBREJSON=@N_FACTURA+'.json'
         EXEC SPK_RIPS_JSON_FTR_IND @N_FACTURA,NULL,@RIPSJSON OUTPUT
         SELECT 'OK' OK,@XML AS XML_FACTURA, @NOMBREXML AS NOMBRE_XML,@RIPSJSON AS RIPSJSON,@NOMBREJSON AS NOMBREJSON
         RETURN
      END
      ELSE 
      BEGIN 
         SELECT 'KO' KO,'Factura no Existe o no se ha Notificado a la Dian'
      END
   END 
   IF @METODO='CONFIG_FACTUAUTO'     
   BEGIN 
      PRINT 'VOY PARA TGEN'
      DECLARE @TABLA VARCHAR(20)
      DECLARE @CAMPO VARCHAR(20)
      DECLARE @CODIGO VARCHAR(20)
      DECLARE @DESCRIPCION VARCHAR(1000)
      DECLARE @CHECK1 BIT
      DECLARE @CHECK2 BIT
      DECLARE @CHECK3 BIT
      DECLARE @CHECK4 BIT
      DECLARE @CHECK5 BIT
      DECLARE @OPCIONESLIBRES BIT
 
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         DATOS NVARCHAR(MAX) AS JSON 
            )           
      
         SELECT  @PROCESO=PROCESO, @TABLA=TABLA, @CAMPO=CAMPO, @CODIGO=CODIGO,@DESCRIPCION=DESCRIPCION,
         @CHECK1=CASE WHEN CHECK1='true' THEN 1 ELSE 0 END,
         @CHECK2=CASE WHEN CHECK2='true' THEN 1 ELSE 0 END,
         @CHECK3=CASE WHEN CHECK3='true' THEN 1 ELSE 0 END,
         @CHECK4=CASE WHEN CHECK4='true' THEN 1 ELSE 0 END,
         @CHECK5=CASE WHEN CHECK5='true' THEN 1 ELSE 0 END,
         @OPCIONESLIBRES=CASE WHEN OPCIONESLIBRES='true' THEN 1  ELSE 0 END
         FROM   OPENJSON (@DATOS)
         WITH   (   
         PROCESO VARCHAR(20)        '$.PROCESO',
         TABLA VARCHAR(20)          '$.TABLA',
         CAMPO VARCHAR(20)          '$.CAMPO',
         CODIGO VARCHAR(20)         '$.CODIGO',
         DESCRIPCION VARCHAR(1000)  '$.DESCRIPCION',
         CHECK1 VARCHAR(20)         '$.CHECK1',
         CHECK2 VARCHAR(20)         '$.CHECK2',
         CHECK3 VARCHAR(20)         '$.CHECK3',
         CHECK4 VARCHAR(20)         '$.CHECK4',
         CHECK5 VARCHAR(20)         '$.CHECK5',
         OPCIONESLIBRES VARCHAR(20) '$.OPCIONESLIBRES'      
         )
         IF @PROCESO='Nuevo'
         BEGIN
            IF NOT EXISTS(SELECT * FROM TGEN WHERE TABLA='FACTAUTOHC' AND CAMPO=@CAMPO AND CODIGO=@CODIGO)
            BEGIN
               BEGIN TRY           
                  INSERT INTO TGEN(TABLA,CAMPO,CODIGO,DESCRIPCION,CHECK1,CHECK2,CHECK3,CHECK4,CHECK5,OPCIONESLIBRES)
                  SELECT @TABLA,@CAMPO,@CODIGO,@DESCRIPCION,@CHECK1,@CHECK2,@CHECK3,@CHECK4,@CHECK5,@OPCIONESLIBRES                                     
               END TRY
               BEGIN CATCH
                     INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
               END CATCH
            END
            ELSE
            BEGIN
               INSERT INTO @TBLERRORES(ERROR) SELECT 'Ya Existe el Registro,No se puede Continuar...'
            END
         END
         ELSE
         BEGIN
            IF @PROCESO='Editar'
            BEGIN 
               PRINT 'Voy a Editar'
               BEGIN TRY           
                  UPDATE TGEN SET CHECK1=@CHECK1,CHECK2=@CHECK2,CHECK3=@CHECK3,CHECK4=@CHECK4,CHECK5=@CHECK5,
                                  OPCIONESLIBRES=@OPCIONESLIBRES
                  WHERE TABLA=@TABLA
                  AND CAMPO=@CAMPO
                  AND CODIGO=@CODIGO                                     
               END TRY
               BEGIN CATCH
                     INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
               END CATCH
            END
            ELSE
            BEGIN
               PRINT 'VOY A BORRAR' 
               BEGIN TRY           
                  DELETE TGEN WHERE TABLA=@TABLA AND CAMPO=@CAMPO AND CODIGO=@CODIGO                    
               END TRY
               BEGIN CATCH
                     INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
               END CATCH
            END
         END
         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK, ERROR FROM @TBLERRORES
            RETURN
         END
         SELECT 'OK' OK
         RETURN 
      END      
END
