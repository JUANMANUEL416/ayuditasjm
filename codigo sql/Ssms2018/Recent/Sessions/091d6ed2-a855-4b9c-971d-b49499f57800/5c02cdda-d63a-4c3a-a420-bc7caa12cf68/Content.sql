CREATE OR ALTER PROCEDURE DBO.SPQ_LISTA_AUT
@JSON  NVARCHAR(MAX) 
WITH
ENCRYPTION
AS
DECLARE @PARAMETROS NVARCHAR(MAX)		,@MODELO VARCHAR(100)		,@METODO VARCHAR(100)
	,@USUARIO VARCHAR(12)				,@GRUPO VARCHAR(8)			,@SYS_COMPUTERNAME VARCHAR(254)
	,@IDSEDE VARCHAR(5)					,@USUNOMBRE VARCHAR(100)	,@SEDE VARCHAR(5)
	,@FECHA VARCHAR(10)					,@IDEMEDICA VARCHAR(4)		,@FECHA1 DATETIME
	,@SQL VARCHAR(MAX)					,@CODCAJERO VARCHAR(20)		,@COMPANIA VARCHAR(10)
	,@IDAFILIADO VARCHAR(20)			,@IDMEDICO VARCHAR(20)		,@FECHAINI DATE
	,@OBSERVACION VARCHAR(MAX)			,@IDAUT VARCHAR(20)			,@NO_ITEM INT
	,@PROCEDENCIA VARCHAR(20)			,@VALOR DECIMAL(14, 2)		,@DIA VARCHAR(10)
	,@CONSECUTIVO VARCHAR(20)			,@MODALIDAD VARCHAR(20)		,@IDSERVICIO VARCHAR(20)
	,@N_FACTURA VARCHAR(20)				,@IDPLAN VARCHAR(20)		,@IDTERCERO VARCHAR(20)
	,@DOCIDAFILIADO VARCHAR(20)			,@CELULAR VARCHAR(20)		,@CODCAJA VARCHAR(20)
	,@CNSFCT VARCHAR(20)				,@CNSFACJ VARCHAR(20)		,@IDKPAGE INT
	,@COPAGO_VARIABLE DECIMAL(14, 2)	,@COPAGO_FIJO DECIMAL(14, 2),@PREFIJO VARCHAR(20)
	,@REQ_AUT BIT						,@NOAUTORIZACION VARCHAR(20),@REQ_CONSULTA BIT
	,@REQ_FARMACOS BIT					,@REQ_EXAMENES BIT			,@COPAGO_FI_CON DECIMAL(14, 2)
	,@COPA_VAR_PORC DECIMAL(14, 2)		,@COPAGO_FI_FAR DECIMAL(14, 2)
	,@COPAGO_VA_FAR DECIMAL(14, 2)		,@COPAGO_FI_EXA DECIMAL(14, 2)
	,@COPAGO_VA_EXA DECIMAL(14, 2)		,@ITEMS INT					,@COPAGOFIJO_D DECIMAL(14, 4)
	,@MIN_AUT SMALLINT					,@MOTIVO VARCHAR(20)		,@CRONICO INT
	,@NOMBREACOM VARCHAR(150)			,@TELEFONOACOM VARCHAR(50)	,@DIRECCIONACOM VARCHAR(60)
	,@PARENTESCOACOM VARCHAR(20)		,@ANIOVIG INT				,@MESVIG INT
	,@FECHA_VIGENCIA DATE				,@FECHAMAX DATE				,@IDCROVIG INT
	,@NOADMISION VARCHAR(16)			,@ESPECIALIDAD VARCHAR(20)	,@CCOSTO VARCHAR(20)
	,@IDAREA VARCHAR(20)				,@IDSERMOVILIDAD VARCHAR(20) = DBO.FNK_VALORVARIABLE('IDSERMOVILIDAD')
	,@PROCESO VARCHAR(20)				,@CANTIDAD	INT
	,@IDBODEGA VARCHAR(10), @SECTOR VARCHAR(20)

DECLARE @PRECIO_TOTAL DECIMAL(14,9), @PORCENTAJE_PRORRATEO DECIMAL(14,9), @VALOR_ITEM DECIMAL(14,9), @COBERTURA_ASEGURADORA DECIMAL(14,9)
	,@COBERTURA_PACIENTE DECIMAL(14,9), @VALOR_COPAGO DECIMAL(14,9) = 0, @VALOR_EXCEDENTE DECIMAL(14,9)=0, @TOTAL_COPAGO DECIMAL(14,9)=0
	,@VLR_COPAGOVAR DECIMAL(14,9)=0, @VLR_PRCOPAGOVAR DECIMAL(14,9)=0

BEGIN 
	SET LANGUAGE Spanish;  
	SET DATEFORMAT dmy
	SELECT *
	INTO #JSON
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)  AS JSON
	)

	SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
	FROM #JSON
	--DEFINICION DE TABLA DE ERRORES
	DECLARE @TBLERRORES TABLE(ERROR VARCHAR(200));
	-- TOMA DEL GRUPO, SYS_COMPUTERNAME, SEDE   DE ACUERDO AL USUARIOpl,   --PRINT 'USUARIO:'+@USUARIO
	SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO), @USUNOMBRE = NOMBRE FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME, @COMPANIA = COMPANIA, @CODCAJERO= CODCAJERO FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @IDSEDE = IDSEDE, @SEDE = IDSEDE FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME

	CREATE TABLE #VECES( FECHAMAX DATE, FECHAINICIAL DATE, VEZ VARCHAR(2), IDTERCERO VARCHAR(20), IDPLAN VARCHAR(20), IDAFILIADO VARCHAR(20), PROCEDENCIA VARCHAR(20))

	PRINT '@USUARIO='+@USUARIO

	IF @METODO = 'AGREGA_NOTA'
	BEGIN
		SELECT @IDAUT=IDAUT , @OBSERVACION = OBSERVACION, @MOTIVO = MOTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH( IDAUT				VARCHAR(20)			'$.IDAUT', MOTIVO		VARCHAR(20)		'$.MOTIVO'
			,OBSERVACION		VARCHAR(MAX)		'$.OBSERVACION'
		)
		
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				INSERT INTO AUTNOT ( AUTNOT.IDAUT, AUTNOT.FECHA, AUTNOT.USUARIO, AUTNOT.NOTA, AUTNOT.MOTIVO)
				SELECT @IDAUT, DBO.FNK_GETDATE(), @USUARIO, @OBSERVACION,@MOTIVO
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'APROBAR_TODOS'
	BEGIN
		SELECT @IDAUT=IDAUT
		FROM OPENJSON(@PARAMETROS)
		WITH( IDAUT VARCHAR(20) '$.IDAUT'
		)
		SELECT @IDKPAGE = COALESCE(IDKPAGE,0) FROM AUT WHERE IDAUT = @IDAUT
		IF EXISTS(SELECT * FROM AUT WHERE IDAUT = @IDAUT AND COALESCE(GENERADO,0) = 3) 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro se encuentra en estado Generado.'
		END
		IF EXISTS(SELECT * FROM AUT WHERE IDAUT = @IDAUT AND COALESCE(IDKPAGE,'')<>'') 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro cuenta con Link de pago Vigente'
		END
		
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				UPDATE AUTD SET GENERADO = 1, NOCOBRABLE = 0 WHERE AUTD.IDAUT = @IDAUT AND COALESCE(GENERADO,0) = 0
				SELECT @SQL='{"MODELO":"LISTA_AUT","METODO":"CALCULO_COPA_AUT","PARAMETROS":{"IDAUT":"'+@IDAUT+'"},"USUARIO":"'+@USUARIO+'"}'
				EXEC SPQ_JSON @SQL
				UPDATE AUT SET GENERADO=3 WHERE IDAUT=@IDAUT
				
				SELECT @PROCEDENCIA = CASE  COALESCE(ESPROGRAMAS,0) WHEN 1 THEN 'CRONICO' ELSE 'AGUDO' END, @PREFIJO=AUT.PREFIJO
					,@IDAFILIADO = AUT.IDAFILIADO, @VALOR = AUT.VALORCOPAGO, @USUARIO=USUARIO, @NOADMISION=NOADMISION, @IDSEDE=IDSEDE
				FROM AUT WHERE AUT.IDAUT = @IDAUT

				IF @PREFIJO = DBO.FNK_VALORVARIABLE('PREFIJOMEDICAMENTOS') AND COALESCE(@NOADMISION,'')<>''
				BEGIN
					SELECT TOP 1 @SECTOR=SECTOR FROM HHAB WHERE NOADMISION=@NOADMISION
					IF COALESCE(@NOADMISION,'')<>''
						SELECT @IDBODEGA=DBO.FNK_BUSCA_BODEGA_IZSOL(@IDSEDE, @SECTOR)
					ELSE
					BEGIN
						IF DBO.FNK_VALORVARIABLE('BODEGA_PEDIDOINV_CE') = 'SEDE'
							SELECT @IDBODEGA = ISNULL(IDBODEGACM,IDBODEGALOG) FROM SED WHERE IDSEDE = @IDSEDE	
					END
							
					IF COALESCE(@IDBODEGA,'')=''
						SELECT @IDBODEGA = ISNULL(IDBODEGA,IDBODEGA2), @COMPANIA = COMPANIA FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME
			    
					EXEC SPK_PEDIDOINVCE @IDAUT, @IDBODEGA, @COMPANIA, @IDSEDE, @USUARIO, @SYS_COMPUTERNAME, @NO_ITEM
				END
			END TRY 
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK, CASE WHEN COALESCE(AUT.IDKPAGE,'') <> '' THEN 'Se genero Link de Pago.' ELSE '' END [ESTADO]  FROM AUT WHERE IDAUT = @IDAUT
		END 
	END
	IF @METODO = 'RECHAZAR_ITEM'
	BEGIN
		SELECT @IDAUT=IDAUT, @NO_ITEM = NO_ITEM
		FROM OPENJSON(@PARAMETROS)
		WITH( IDAUT VARCHAR(20) '$.IDAUT', NO_ITEM INT '$.NO_ITEM'
		)
		IF EXISTS(SELECT * FROM AUT WHERE IDAUT = @IDAUT AND COALESCE(IDKPAGE,'') <> '') 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro ya cuenta con link de Pago'
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
            UPDATE AUTD SET GENERADO = 2, NOCOBRABLE = 1 WHERE AUTD.IDAUT = @IDAUT AND NO_ITEM = @NO_ITEM
            SELECT @SQL='{"MODELO":"LISTA_AUT","METODO":"CALCULO_COPA_AUT","PARAMETROS":{"IDAUT":"'+@IDAUT+'"},"USUARIO":"'+@USUARIO+'"}'
            EXEC SPQ_JSON @SQL
				IF NOT EXISTS(SELECT * FROM AUTD WHERE IDAUT = @IDAUT AND COALESCE(AUTD.GENERADO,0)=0)
				BEGIN
					SELECT @PROCEDENCIA = CASE  COALESCE(ESPROGRAMAS,0) WHEN 1 THEN 'CRONICO' ELSE 'AGUDO' END
						,@IDAFILIADO = AUT.IDAFILIADO, @VALOR = AUT.VALORCOPAGO
					FROM AUT WHERE AUT.IDAUT = @IDAUT
					--IF @VALOR>0 AND EXISTS (SELECT * FROM AUTD WHERE IDAUT = @IDAUT AND COALESCE(AUTD.GENERADO,0)=1)
					--AND @PREFIJO <> DBO.FNK_VALORVARIABLE('PREFIJOCONSULTA')
					--BEGIN
					--	EXEC SPK_GENERA_ORDENPAGO_IZIPAY @IDAUT, 'AUT', @PROCEDENCIA, @IDAFILIADO, @VALOR, '', @USUARIO, 0, 'CREAR'
					--END
					UPDATE AUT SET GENERADO = 3 WHERE IDAUT = @IDAUT
				END
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK, CASE WHEN COALESCE(AUT.IDKPAGE,'') <> '' THEN 'Se genero Link de Pago.' ELSE '' END [ESTADO]  FROM AUT WHERE IDAUT = @IDAUT
		END 
	END
	IF @METODO = 'APROBAR_ITEM'
	BEGIN
		SELECT @IDAUT=IDAUT, @NO_ITEM = NO_ITEM
		FROM OPENJSON(@PARAMETROS)
		WITH( IDAUT VARCHAR(20) '$.IDAUT', NO_ITEM INT '$.NO_ITEM')

		IF EXISTS(SELECT * FROM AUT WHERE IDAUT = @IDAUT AND COALESCE(IDKPAGE,'') <> '') 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro ya cuenta con link de Pago'
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				SELECT @PREFIJO = PREFIJO FROM AUT WHERE IDAUT = @IDAUT
				UPDATE AUTD SET GENERADO = 1, NOCOBRABLE = 0  WHERE AUTD.IDAUT = @IDAUT AND NO_ITEM = @NO_ITEM
				IF @PREFIJO = DBO.FNK_VALORVARIABLE('PREFIJOCONSULTA')
				BEGIN
					INSERT INTO HCA_FAR_NOTI ( CONSECUTIVO, NO_ITEM, FECHA_ENVIO, USUARIO, CORREOS, CLASE, VALIDADO, PROCEDENCIA)
					SELECT @IDAUT, @NO_ITEM, DBO.FNK_GETDATE(), @USUARIO, NULL, @PREFIJO, 1, 'LISTA_TRABAJO'
				END
				/* CALCULO DE VALOR COPAGO  */
				SELECT @SQL='{"MODELO":"LISTA_AUT","METODO":"CALCULO_COPA_AUT","PARAMETROS":{"IDAUT":"'+@IDAUT+'"},"USUARIO":"'+@USUARIO+'"}'
				EXEC SPQ_JSON @SQL
				IF NOT EXISTS(SELECT 1 FROM AUTD WHERE IDAUT = @IDAUT AND COALESCE(AUTD.GENERADO,0)=0)
				BEGIN
					SELECT @PROCEDENCIA = CASE  COALESCE(ESPROGRAMAS,0) WHEN 1 THEN 'CRONICO' ELSE 'AGUDO' END
						,@IDAFILIADO = AUT.IDAFILIADO, @VALOR = AUT.VALORCOPAGO, @USUARIO=USUARIO, @NOADMISION=NOADMISION, @IDSEDE=IDSEDE
					FROM AUT WHERE AUT.IDAUT = @IDAUT
					--IF @VALOR>0 AND EXISTS (SELECT * FROM AUTD WHERE IDAUT = @IDAUT AND COALESCE(AUTD.GENERADO,0)=1)
					-- AND @PREFIJO <> DBO.FNK_VALORVARIABLE('PREFIJOCONSULTA')
					--BEGIN
					--	EXEC SPK_GENERA_ORDENPAGO_IZIPAY @IDAUT, 'AUT', @PROCEDENCIA, @IDAFILIADO, @VALOR, '', @USUARIO, 0, 'CREAR'
					--END

					IF @PREFIJO = DBO.FNK_VALORVARIABLE('PREFIJOCONSULTA')
					BEGIN
						UPDATE AUT SET GENERADO = 3, TIPOPREVIO = 2,AUT.FECHA_TIPOPREVIO = DBO.FNK_GETDATE()  WHERE IDAUT = @IDAUT		
					END
					ELSE UPDATE AUT SET GENERADO = 3 WHERE IDAUT = @IDAUT
					/* POR VALIDAR OSOLANO NO DBEERIA SER POR ITEM SINO GENERAL
					--IF @PREFIJO = DBO.FNK_VALORVARIABLE('PREFIJOMEDICAMENTOS') AND COALESCE(@NOADMISION,'')<>''
					--BEGIN
					--	SELECT TOP 1 @SECTOR=SECTOR FROM HHAB WHERE NOADMISION=@NOADMISION
					--	IF COALESCE(@NOADMISION,'')<>''
					--		SELECT @IDBODEGA=DBO.FNK_BUSCA_BODEGA_IZSOL(@IDSEDE, @SECTOR)
					--	ELSE
					--	BEGIN
					--		IF DBO.FNK_VALORVARIABLE('BODEGA_PEDIDOINV_CE') = 'SEDE'
					--			SELECT @IDBODEGA = ISNULL(IDBODEGACM,IDBODEGALOG) FROM SED WHERE IDSEDE = @IDSEDE	
					--	END
							
					--	IF COALESCE(@IDBODEGA,'')=''
					--		SELECT @IDBODEGA = ISNULL(IDBODEGA,IDBODEGA2), @COMPANIA = COMPANIA FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME
				
			    
					--	EXEC SPK_PEDIDOINVCE @IDAUT, @IDBODEGA, @COMPANIA, @IDSEDE, @USUARIO, @SYS_COMPUTERNAME, @NO_ITEM
					--END
					*/
				END
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK, CASE WHEN COALESCE(AUT.IDKPAGE,'') <> '' THEN 'Se genero Link de Pago.' ELSE '' END [ESTADO]  FROM AUT WHERE IDAUT = @IDAUT
		END 
	END
	IF @METODO = 'SIN_PROCESAR_ITEM'
	BEGIN
		SELECT @IDAUT=IDAUT, @NO_ITEM = NO_ITEM
		FROM OPENJSON(@PARAMETROS)
		WITH( IDAUT VARCHAR(20) '$.IDAUT', NO_ITEM INT '$.NO_ITEM'
		)
		IF EXISTS(SELECT * FROM AUT WHERE IDAUT = @IDAUT AND COALESCE(IDKPAGE,'') <> '') 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro ya cuenta con link de Pago'
		END
		
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				UPDATE AUTD SET GENERADO = 0, NOCOBRABLE = 0  WHERE AUTD.IDAUT = @IDAUT AND NO_ITEM = @NO_ITEM
				UPDATE AUT SET GENERADO = 0  WHERE AUT.IDAUT = @IDAUT
				/* CALCULA COPAGO */
            SELECT @SQL='{"MODELO":"LISTA_AUT","METODO":"CALCULO_COPA_AUT","PARAMETROS":{"IDAUT":"'+@IDAUT+'"},"USUARIO":"'+@USUARIO+'"}'
            EXEC SPQ_JSON @SQL	
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'DIASMEDICO'
	BEGIN
		SELECT @IDEMEDICA = IDEMEDICA,  @IDMEDICO = IDMEDICO, @CRONICO = CRONICO
		FROM OPENJSON(@PARAMETROS)WITH ( IDEMEDICA   VARCHAR(4)		'$.IDEMEDICA', CRONICO   INT '$.CRONICO'
										 ,IDMEDICO    VARCHAR(12)	'$.IDMEDICO' )
		
		SELECT @CRONICO = COALESCE(@CRONICO,0)
		IF @CRONICO = 0
		BEGIN
			IF NOT EXISTS(  SELECT * FROM CIT WHERE IDEMEDICA = @IDEMEDICA AND IDMEDICO = @IDMEDICO AND FECHA > GETDATE()
										AND COALESCE(ESPROGRAMAS,0) = 0  )
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'NO EXISTE AGENDA PARA ESTE MÉDICO'
			END
		END
		IF @CRONICO = 1
		BEGIN
			IF NOT EXISTS(  SELECT * FROM CIT WHERE IDEMEDICA = @IDEMEDICA AND IDMEDICO = @IDMEDICO AND FECHA > GETDATE()
										AND COALESCE(ESPROGRAMAS,0) = 1  )
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'NO EXISTE AGENDA PARA ESTE MÉDICO'
			END
		END
		
		 IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		 BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		 END 

		 IF (SELECT COUNT(*) FROM @TBLERRORES) < 1
		 BEGIN
			SELECT 'OK' OK
			IF @CRONICO = 0
			BEGIN
				SELECT DIAS = (
					 SELECT CIT.IDMEDICO,CONVERT(varchar,FECHA,111) DIA
					 FROM CIT 
					 WHERE IDEMEDICA = @IDEMEDICA 
						AND IDMEDICO = @IDMEDICO
						AND FECHA > GETDATE()
						AND COALESCE(ESPROGRAMAS,0) = 0
					 GROUP BY CIT.IDMEDICO,CONVERT(varchar,FECHA,111) 
				FOR JSON AUTO)
			END
			IF @CRONICO = 1
			BEGIN
				SELECT DIAS = (
					 SELECT CIT.IDMEDICO,CONVERT(varchar,FECHA,111) DIA
					 FROM CIT 
					 WHERE IDEMEDICA = @IDEMEDICA 
						AND IDMEDICO = @IDMEDICO
						AND FECHA > GETDATE()
						AND COALESCE(ESPROGRAMAS,0) = 1
					 GROUP BY CIT.IDMEDICO,CONVERT(varchar,FECHA,111) 
				FOR JSON AUTO)
			END

			SELECT MESS.IDEMEDICA,MESS.IDSERVICIO,DESCSERVICIO FROM MESS 
			INNER JOIN SER ON SER.IDSERVICIO = MESS.IDSERVICIO WHERE MESS.IDEMEDICA = @IDEMEDICA
		END
      RETURN
	END
	IF @METODO = 'GETHORAS'
	BEGIN
		SELECT @IDEMEDICA = IDEMEDICA,  @IDMEDICO = IDMEDICO,  @DIA = DIA, @CRONICO = CRONICO
		FROM OPENJSON(@PARAMETROS)WITH ( IDEMEDICA   VARCHAR(4)		'$.IDEMEDICA', CRONICO   INT			'$.CRONICO',
										 IDMEDICO    VARCHAR(12)	'$.IDMEDICO' , DIA		 VARCHAR(10)	'$.DIA')

		SELECT @CRONICO = COALESCE(@CRONICO,0)

			SELECT 'OK' OK
		IF @CRONICO = 1
		BEGIN
			SELECT CIT.CONSECUTIVO,convert(varchar,CIT.FECHA, 8)HORAS, CIT.FECHA,CIT.IDMEDICO,CIT.IDEMEDICA, 
				ESPROGRAMAS, IIF(COALESCE(CIT.IDAFILIADO,'') <>'', 'Ocupada', 'Disponible')ESTADOCIT  
			FROM CIT 
			WHERE 
			CONVERT(varchar,FECHA,111) = @DIA
			AND IDEMEDICA = @IDEMEDICA 
			AND IDMEDICO = @IDMEDICO
			AND FECHA > GETDATE()
			AND COALESCE(ESPROGRAMAS,0) = 1 
			AND COALESCE(IDAFILIADO,'')=''
			ORDER BY  CIT.FECHA ASC  
		END
		IF @CRONICO = 0
		BEGIN
			SELECT CIT.CONSECUTIVO,convert(varchar,CIT.FECHA, 8)HORAS, CIT.FECHA,CIT.IDMEDICO,CIT.IDEMEDICA, 
				ESPROGRAMAS, IIF(COALESCE(CIT.IDAFILIADO,'') <>'', 'Ocupada', 'Disponible')ESTADOCIT  
			FROM CIT 
			WHERE 
			CONVERT(varchar,FECHA,111) = @DIA
			AND IDEMEDICA = @IDEMEDICA 
			AND IDMEDICO = @IDMEDICO
			AND FECHA > GETDATE()
			AND COALESCE(ESPROGRAMAS,0) = 0 
			AND COALESCE(IDAFILIADO,'')=''
			ORDER BY  CIT.FECHA ASC  
		END
	END
	IF @METODO = 'ASIGNA_CITA'
	BEGIN
		SELECT @PROCEDENCIA = PROCEDENCIA, @IDAFILIADO = IDAFILIADO, @IDAUT = IDAUT,  @NO_ITEM = NO_ITEM,  @CONSECUTIVO = CONSECUTIVO, @MODALIDAD = MODALIDAD , @IDSERVICIO = IDSERVICIO, @REQ_AUT = REQ_AUT, @NOAUTORIZACION = NOAUTORIZACION
			,@REQ_CONSULTA = REQ_CONSULTA, @REQ_FARMACOS = REQ_FARMACOS, @REQ_EXAMENES = REQ_EXAMENES, @COPAGO_FI_CON = COPAGO_FI_CON, @COPA_VAR_PORC = COPA_VAR_PORC, @COPAGO_FI_FAR = COPAGO_FI_FAR
			,@COPAGO_VA_FAR = COPAGO_VA_FAR, @COPAGO_FI_EXA = COPAGO_FI_EXA, @COPAGO_VA_EXA = COPAGO_VA_EXA	,@NOMBREACOM = NOMBREACOM, @DIRECCIONACOM = DIRECCIONACOM, @TELEFONOACOM = TELEFONOACOM, @PARENTESCOACOM = PARENTESCOACOM
			,@MESVIG = MESVIG ,@ANIOVIG = ANIOVIG
		FROM OPENJSON(@PARAMETROS)WITH ( IDAUT				VARCHAR(20)		'$.IDAUT',				NO_ITEM			INT				'$.NO_ITEM' ,
										 CONSECUTIVO		VARCHAR(20)		'$.CONSECUTIVO',		MODALIDAD		VARCHAR(20)		'$.MODALIDAD',
									     IDSERVICIO			VARCHAR(20)		'$.IDSERVICIO',			REQ_AUT			BIT				'$.REQ_AUT',
									     NOAUTORIZACION		VARCHAR(20)		'$.NOAUTORIZACION',		REQ_CONSULTA	BIT				'$.REQ_CONSULTA',
										 REQ_FARMACOS		BIT				'$.REQ_FARMACOS',		REQ_EXAMENES	BIT				'$.REQ_EXAMENES',
										 COPAGO_FI_CON		DECIMAL(14,2)	'$.COPAGO_FI_CON',		COPA_VAR_PORC	DECIMAL(14,2)	'$.COPA_VAR_PORC',
										 COPAGO_FI_FAR		DECIMAL(14,2)	'$.COPAGO_FI_FAR',		COPAGO_VA_FAR	DECIMAL(14,2)	'$.COPAGO_VA_FAR',
										 COPAGO_FI_EXA		DECIMAL(14,2)	'$.COPAGO_FI_EXA',		COPAGO_VA_EXA	DECIMAL(14,2)	'$.COPAGO_VA_EXA',
										 IDAFILIADO			VARCHAR(20)		'$.IDAFILIADO'	,		PROCEDENCIA		VARCHAR(20)		'$.PROCEDENCIA',
										 NOMBREACOM			VARCHAR(20)		'$.NOMBREACOM'	,		DIRECCIONACOM	VARCHAR(20)		'$.DIRECCIONACOM',
										 TELEFONOACOM		VARCHAR(20)		'$.TELEFONOACOM'	,	PARENTESCOACOM	VARCHAR(20)		'$.PARENTESCOACOM',
										 ANIOVIG			INT				'$.ANIOVIG'	,			MESVIG			INT				'$.MESVIG')
	

		--IF @PROCEDENCIA = 'GES_ENF'
		--BEGIN
		--	IF NOT EXISTS(SELECT * FROM AUTD WHERE AUTD.IDAUT = @IDAUT AND AUTD.NO_ITEM = @NO_ITEM AND COALESCE(AUTD.CONSECUTIVOCIT,'') = '' )
		--	BEGIN
		--		INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro ya tiene una Cita Agendada'
		--	END
		--END
		IF @PROCEDENCIA = 'AUTD'
		BEGIN
			IF NOT EXISTS(SELECT * FROM AUTD WHERE AUTD.IDAUT = @IDAUT AND AUTD.NO_ITEM = @NO_ITEM AND COALESCE(AUTD.CONSECUTIVOCIT,'') = '' )
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro ya tiene una Cita Agendada'
			END
		END
		IF @PROCEDENCIA = 'CRONICO'
		BEGIN
			SELECT @IDCROVIG = IDCROVIG,@PROCESO = PROCEDENCIA FROM CROVIGD WHERE  ID = @NO_ITEM
			SELECT @IDPLAN = IDPLAN, @IDTERCERO = IDTERCERO, @IDSEDE = COALESCE(IDSEDE,'01')   FROM CROVIG WHERE IDCROVIG = @IDCROVIG
			IF EXISTS (SELECT * FROM CROVIGD WHERE  ID = @NO_ITEM AND COALESCE(CONSECUTIVOCIT,'')<>'' )
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro ya tiene una Cita Agendada'
			END
			IF @PROCESO = 'ESPTRAT'
			BEGIN
				IF EXISTS (SELECT * FROM CROVIGD WHERE YEAR(FECHAMAX) = @ANIOVIG AND MONTH(FECHAMAX) = @MESVIG  AND IDAFILIADO = @IDAFILIADO AND LLAMADA = 1 AND COALESCE(CONSECUTIVOCIT,'') = '' 
				AND ID <> @NO_ITEM AND PROCEDENCIA = 'ESPTRAT'  AND CROVIGD.LLAMADA = 1 AND  IDPLAN = @IDPLAN  )
				BEGIN
					INSERT INTO @TBLERRORES(ERROR) SELECT 'El paciente tiene una cita anterior a esta, aun pendiente de agendar, agendarla antes de agendar este registro.'
				END
			END
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF @PROCEDENCIA <> 'CRONICO'
				BEGIN
					SELECT @IDPLAN = IDPLAN, @IDTERCERO = AFI.IDADMINISTRADORA, @DOCIDAFILIADO = DOCIDAFILIADO, @CELULAR = CELULAR FROM  AFI WHERE IDAFILIADO = @IDAFILIADO
				END

				IF @PROCEDENCIA = 'CRONICO'
				BEGIN
					  INSERT INTO #VECES (FECHAMAX, FECHAINICIAL, VEZ, IDTERCERO, IDPLAN, IDAFILIADO, PROCEDENCIA) 
					  SELECT  CROVIGD.FECHAMAX,CROVIG.FECHAINICIAL
					  , RIGHT('00000' + Ltrim(Rtrim(   DATEDIFF (MONTH ,CROVIG.FECHAINICIAL,CROVIGD.FECHAMAX )+1     )),2) VEZ  , CROVIG.IDTERCERO, CROVIG.IDPLAN, CROVIG.IDAFILIADO, CROVIGD.PROCEDENCIA
					  FROM CROVIGD
					  INNER JOIN CROVIG ON CROVIGD.IDCROVIG = CROVIG.IDCROVIG
					  WHERE  CROVIGD.ID = @NO_ITEM

					  --SELECT TOP 100   * FROM #VECES

					SELECT @DOCIDAFILIADO = DOCIDAFILIADO, @CELULAR = CELULAR FROM  AFI WHERE IDAFILIADO = @IDAFILIADO
					SELECT @FECHA_VIGENCIA = convert(smalldatetime,datefromparts(@ANIOVIG, @MESVIG, '1'))
					SELECT @FECHAMAX = FECHAMAX,  @IDCROVIG = IDCROVIG, @PROCESO = PROCEDENCIA  FROM CROVIGD WHERE ID = @NO_ITEM
					SELECT @IDPLAN = IDPLAN, @IDTERCERO = IDTERCERO, @IDSEDE = COALESCE(IDSEDE,'01')   FROM CROVIG WHERE IDCROVIG = @IDCROVIG

					IF NOT EXISTS(SELECT 1 FROM HADM WHERE IDAFILIADO = @IDAFILIADO 
											AND HADM.IDPLAN = @IDPLAN 
											AND IDTERCERO = @IDTERCERO
											AND DATEPART(YEAR, HADM.FECHA) = @ANIOVIG
											AND DATEPART(MONTH, HADM.FECHA) = @MESVIG )
					BEGIN
						BEGIN TRY
							EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@HADM',@NOADMISION OUTPUT
							SET @NOADMISION = @IDSEDE + REPLACE(SPACE(10 - LEN(@NOADMISION))+LTRIM(RTRIM(@NOADMISION)),SPACE(1),0) 
							PRINT '@NOADMISION: ' + @NOADMISION
							PRINT 'INSERTANDO HADM' --CLASEING
							INSERT INTO HADM (
								NOADMISION, IDAFILIADO, FECHA, IDSEDE, IDPLAN, IDTERCERO, TIPOADM, HABCAMA, VIAINGRESO, CAUSAEXTERNA, 
								TIPODISCAP, GRADODISCAP, CAUSASALIDA, ESTADOPSALIDA, RESPCUENTA, URG_NOMBRE, URG_DIR, URG_TELE, URG_VINCULO, FACTURADA, CERRADA, 
								PCUBRIMIENTO, USUARIO, DESTINO, ESTADOSALIDA, RIPS, NIVELSOCIOEC, TIPOPOLIZA, FACTURABLE, INDDEVOLUCION, TIPOTOPE, 
								IDPROVEEDOR, TIPOCONT, FECHAPRE, DECLARIESGOS, CLASEING, EMBARAZADA, TTRIAGE, ESINSTPROV, IDPLAN_AFI, 
								IDTERCERO_AFI, USACTC, TIPOHTX, TIPOESTANCIA, TIPOADMINI,ESTADO,
								FECHAALTA,FECHAALTAMED, FECHAALTAENF, OBS, PROCEDENCIA)
							SELECT @NOADMISION, @IDAFILIADO, convert(smalldatetime,@FECHA_VIGENCIA), @IDSEDE, @IDPLAN, @IDTERCERO, '01', NULL, '3', DBO.FNK_VALORVARIABLE('CAU_EXT_CRO'), 
								AFI.TIPODISCAPACIDAD, 'N', 'OR', 1, LEFT(TER.RAZONSOCIAL,45), AFI.URG_NOMBRE, AFI.URG_DIR, AFI.URG_TELE, AFI.URG_VINCULO, 0, 0, 
								100, @USUARIO, 1, 'N', 0, AFI.NIVELSOCIOEC, 'Vigente', 1, 0, 'Fecha',
								AFI.IDPROVEEDOR, 'I',DBO.FNK_GETDATE(), 'Manifiesto no ser Alérgico a ninguna Sustancia', 'A', 
								0, 0, 3, AFI.IDPLAN,
								AFI.IDADMINISTRADORA, 1, '01', NULL, '01','Activo',
								null,null,null, CONCAT('Creada el ', getdate()), 'CRONICON'
							FROM AFI
								INNER JOIN TER ON @IDTERCERO=TER.IDTERCERO
							WHERE AFI.IDAFILIADO=@IDAFILIADO
						END TRY
						BEGIN CATCH
							INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
						END CATCH
						IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
						BEGIN
							SELECT 'KO' OK
							SELECT ERROR FROM @TBLERRORES
							RETURN
						END 
					END
					ELSE
					BEGIN
						SELECT @NOADMISION = NOADMISION FROM HADM WHERE IDAFILIADO = @IDAFILIADO  AND HADM.IDPLAN = @IDPLAN 
															AND IDTERCERO = @IDTERCERO AND DATEPART(YEAR, HADM.FECHA) = @ANIOVIG AND DATEPART(MONTH, HADM.FECHA) = @MESVIG
					END

					IF   @PROCESO = 'ESPTRAT' AND
					EXISTS (SELECT VEZ, PROCEDENCIA, CITPLN.IDPLAN, CITPLN.IDTERCERO, MES, CITPLND.TIPO_ATENCION, CITPLND.CANTIDAD 
					FROM #VECES
					INNER JOIN CITPLN ON #VECES.IDTERCERO = CITPLN.IDTERCERO AND #VECES.IDPLAN = CITPLN.IDPLAN
					INNER JOIN CITPLND ON CITPLN.ITEM = CITPLND.IDCITPLN AND #VECES.VEZ = CITPLND.MES
					)
					BEGIN
						print 'por aca entra'
						IF (SELECT CITPLND.CANTIDAD FROM #VECES
						INNER JOIN CITPLN ON #VECES.IDTERCERO = CITPLN.IDTERCERO AND #VECES.IDPLAN = CITPLN.IDPLAN
						INNER JOIN CITPLND ON CITPLN.ITEM = CITPLND.IDCITPLN AND #VECES.VEZ = CITPLND.MES) 
						>
						(SELECT COUNT(*) FROM CROVIGD WHERE  CROVIGD.IDCROVIG = @IDCROVIG AND CROVIGD.PROCEDENCIA = @PROCESO AND CROVIGD.FECHAMAX = @FECHAMAX)
						BEGIN
							print '2da parte, por aca'
               
							INSERT INTO CROVIGD (IDCROVIG ,IDAFILIADO ,IDSERVICIO ,FECHAMAX ,USUREGISTRO, PROCEDENCIA, LLAMADA, VISIBLE, IDPLAN, IDTERCERO, FECHA_CREA, IDMEDICO , IDEMEDICA )
							SELECT @IDCROVIG , CROVIGD.IDAFILIADO ,CROVIGD.IDSERVICIO ,CROVIGD.FECHAMAX , @USUARIO, CROVIGD.PROCEDENCIA, CROVIGD.LLAMADA + 1, 1, @IDPLAN, @IDTERCERO, GETDATE(), IDMEDICO, IDEMEDICA
							FROM CROVIGD WHERE  CROVIGD.ID = @NO_ITEM
						END
					END
					/*IF   @PROCESO = 'ESPTRAT' AND
						  EXISTS (SELECT * FROM SER WHERE  SER.IDSERVICIO =  @IDSERVICIO AND SER.TELECONSULTA = 2) AND @IDTERCERO = '20523470761'
						  AND NOT EXISTS(SELECT * FROM CROVIGD WHERE  CROVIGD.IDCROVIG = @IDCROVIG AND CROVIGD.PROCEDENCIA = @PROCESO AND CROVIGD.FECHAMAX = @FECHAMAX AND CROVIGD.LLAMADA = 2)
						  AND (SELECT COUNT(*) FROM CROVIGD WHERE  CROVIGD.IDCROVIG = @IDCROVIG AND CROVIGD.PROCEDENCIA = @PROCESO AND CROVIGD.FECHAMAX = @FECHAMAX)<2
					 BEGIN
						   PRINT '2DA EN AUTOMATICOOOOO'
						   INSERT INTO CROVIGD (IDCROVIG ,IDAFILIADO ,IDSERVICIO ,FECHAMAX ,USUREGISTRO, PROCEDENCIA, LLAMADA, VISIBLE, IDPLAN, IDTERCERO, FECHA_CREA )
						   SELECT @IDCROVIG , CROVIGD.IDAFILIADO ,CROVIGD.IDSERVICIO ,CROVIGD.FECHAMAX , @USUARIO, CROVIGD.PROCEDENCIA, CROVIGD.LLAMADA + 1, 1, @IDPLAN, @IDTERCERO, GETDATE()
						   FROM CROVIGD WHERE  CROVIGD.ID = @ID
					 END*/
					UPDATE CROVIGD SET  CONSECUTIVOCIT = @CONSECUTIVO,U_ATENDIDO = @USUARIO,F_ATENDIDO = DBO.FNK_GETDATE(),FECHA_ASIGNA = DBO.FNK_GETDATE()  WHERE ID = @NO_ITEM

				END
				IF COALESCE(@REQ_AUT ,0) = 0
				BEGIN
					SELECT @NOAUTORIZACION = NULL	
				END
				IF COALESCE(@REQ_CONSULTA ,0) = 0
				BEGIN
					SELECT @COPAGO_FI_CON = NULL	, @COPA_VAR_PORC = NULL
				END
				IF COALESCE(@REQ_FARMACOS ,0) = 0
				BEGIN
					SELECT @COPAGO_FI_FAR = NULL	, @COPAGO_VA_FAR = NULL
				END
				IF COALESCE(@REQ_EXAMENES ,0) = 0
				BEGIN
					SELECT @COPAGO_FI_EXA = NULL	, @COPAGO_VA_EXA = NULL
				END

				SELECT @CCOSTO = PLN.CCOSTO, @IDAREA = CEN.IDAREA  FROM PLN
					LEFT JOIN  CEN ON PLN.CCOSTO = CEN.CCOSTO 
				WHERE PLN.IDPLAN = @IDPLAN
				--VALORTOTAL
				--VALORCOPAGO
				UPDATE CIT SET FECHASOL = DBO.FNK_GETDATE(), IDAFILIADO = @IDAFILIADO, NUMCARNET = @DOCIDAFILIADO, IDSERVICIO = @IDSERVICIO, IDCONTRATANTE = @IDTERCERO
				,IDPLAN = @IDPLAN,  ESTADO = 'Activo', TELEFONOAVISO = @CELULAR, USUARIO = @USUARIO, CODCAJA = NULL, IDSEDEORIGEN = @IDSEDE
				,FECHAAUTORIZACION = DBO.FNK_GETDATE(), TIPOCOPAGO = 'C', PROCEDENCIA = @PROCEDENCIA,  IDAREA =  COALESCE(@IDAREA,NULL), CCOSTO = COALESCE(@CCOSTO,NULL)
				, N_FACTURA = NULL, CNSFCT = NULL, ALTOCOSTO = 'No', IDTERCEROCA = @IDTERCERO, TIPOCAJA = NULL,SYS_COMPUTERNAME = @SYS_COMPUTERNAME
				,MODALIDAD = @MODALIDAD, IDKPAGE = NULL, NFACTURA =  NULL, NOAUTORIZACION = @NOAUTORIZACION, VALORCOPAGO = @COPAGO_FI_CON, COPAGO_FI_CON = @COPAGO_FI_CON, COPA_VAR_PORC = @COPA_VAR_PORC
				,COPAGO_FI_FAR = @COPAGO_FI_FAR, COPAGO_VA_FAR = @COPAGO_VA_FAR, COPAGO_FI_EXA = @COPAGO_FI_EXA , COPAGO_VA_EXA = @COPAGO_VA_EXA, NOADMISION = COALESCE(@NOADMISION, NULL)
				WHERE CIT.CONSECUTIVO = @CONSECUTIVO

				EXEC SPK_COPAGO_AUT_CEHOSP @IDAFILIADO,@CONSECUTIVO, 1,@IDSERVICIO  , 0, 0,0, 'CI', @SYS_COMPUTERNAME, '01', @IDSEDE, @USUARIO  , NULL, NULL , NULL ,NULL  , 0

				UPDATE CIT SET VALORCOPAGO = @COPAGO_FI_CON WHERE CONSECUTIVO = @CONSECUTIVO

				IF COALESCE(@NOMBREACOM,'') <> ''
				BEGIN
					UPDATE AFI SET URG_NOMBRE = @NOMBREACOM, URG_TELE = @TELEFONOACOM,  URG_DIR = @DIRECCIONACOM,   URG_VINCULO = @PARENTESCOACOM WHERE IDAFILIADO = @IDAFILIADO
				END

				SELECT @IDMEDICO = CIT.IDMEDICO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO

				IF @PROCEDENCIA = 'AUTD'
				BEGIN
					UPDATE AUTD SET CONSECUTIVOCIT = @CONSECUTIVO, AUTD.GENERADO = 1 WHERE AUTD.IDAUT = @IDAUT AND AUTD.NO_ITEM = @NO_ITEM
					IF NOT EXISTS(SELECT * FROM AUTD WHERE IDAUT = @IDAUT AND COALESCE(AUTD.GENERADO,0)=0)
					BEGIN
						UPDATE AUT SET GENERADO = 3 WHERE IDAUT = @IDAUT
					END
					IF NOT EXISTS(SELECT * FROM AUTD WHERE IDAUT = @IDAUT AND COALESCE(AUTD.GENERADO,0)=0)
					BEGIN
						UPDATE AUT SET GENERADO = 3, TIPOPREVIO = 2,AUT.FECHA_TIPOPREVIO = DBO.FNK_GETDATE() WHERE IDAUT = @IDAUT		
					END
				END
				IF @PROCEDENCIA = 'CRONICO'
				BEGIN
					UPDATE AUTD SET CONSECUTIVOCIT = @CONSECUTIVO, AUTD.GENERADO = 1 WHERE AUTD.IDAUT = @IDAUT AND AUTD.NO_ITEM = @NO_ITEM
					IF NOT EXISTS(SELECT * FROM AUTD WHERE IDAUT = @IDAUT AND COALESCE(AUTD.GENERADO,0)=0)
					BEGIN
						UPDATE AUT SET GENERADO = 3 WHERE IDAUT = @IDAUT
					END
					IF NOT EXISTS(SELECT * FROM AUTD WHERE IDAUT = @IDAUT AND COALESCE(AUTD.GENERADO,0)=0)
					BEGIN
						UPDATE AUT SET GENERADO = 3, TIPOPREVIO = 2,AUT.FECHA_TIPOPREVIO = DBO.FNK_GETDATE() WHERE IDAUT = @IDAUT		
					END
				END
				IF @PROCEDENCIA = 'GES_ENF'
				BEGIN
					INSERT INTO MADSEGUI (IDMAD, USUARIO, OBSERVACION, FECHA, PROCESADO, IDMEDICO, TIPO_PROFESIONAL,CONSECUTIVOCIT)
					SELECT @IDAUT, @USUARIO, NULL, DBO.FNK_GETDATE(), 0, @IDMEDICO, 'MEDICO', @CONSECUTIVO
					UPDATE CIT SET IDMAD = @IDAUT WHERE CIT.CONSECUTIVO = @CONSECUTIVO
				END
				IF DBO.FNK_VALORVARIABLE('ENVIA_SMS_CITA')='SI'
				BEGIN
					EXEC SPK_CANCELA_CITA_SMS 'ASIGNA',@IDAFILIADO,@CONSECUTIVO, @IDSERVICIO
				END
				EXEC SPK_ASIGNA_CITA_LINK @CONSECUTIVO, @USUARIO

				
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'EDITA_COPAGO'
	BEGIN
		SELECT @IDAUT=IDAUT , @COPAGO_FIJO = COPAGO_FIJO, @COPAGO_VARIABLE = COPAGO_VARIABLE
		FROM OPENJSON(@PARAMETROS)
		WITH( IDAUT				VARCHAR(20)			'$.IDAUT'
			,COPAGO_FIJO		DECIMAL(14,2)		'$.COPAGO_FIJO'
			,COPAGO_VARIABLE	DECIMAL(14,2)		'$.COPAGO_VARIABLE')
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				SELECT @CONSECUTIVO = CONSECUTIVOCIT,@PREFIJO = PREFIJO FROM AUT WHERE  IDAUT = @IDAUT
				IF @PREFIJO = DBO.FNK_VALORVARIABLE('PREFIJOLABORATORIO')
				BEGIN
					--UPDATE CIT SET COPAGO_VA_EXA =@COPAGO_VARIABLE , COPAGO_FI_EXA = @COPAGO_FIJO WHERE CIT.CONSECUTIVO = @CONSECUTIVO
					UPDATE AUT SET COPAGO_FIJO =@COPAGO_FIJO , COPAGO_VARIABLE = @COPAGO_VARIABLE WHERE AUT.IDAUT = @IDAUT
				END
				IF @PREFIJO = DBO.FNK_VALORVARIABLE('PREFIJOMEDICAMENTOS')
				BEGIN
					--UPDATE CIT SET COPAGO_VA_FAR =@COPAGO_VARIABLE , COPAGO_FI_FAR = @COPAGO_FIJO WHERE CIT.CONSECUTIVO = @CONSECUTIVO
					UPDATE AUT SET COPAGO_FIJO =@COPAGO_FIJO , COPAGO_VARIABLE = @COPAGO_VARIABLE WHERE AUT.IDAUT = @IDAUT
				END
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
         SELECT @SQL='{"MODELO":"LISTA_AUT","METODO":"CALCULO_COPA_AUT","PARAMETROS":{"IDAUT":"'+@IDAUT+'"},"USUARIO":"'+@USUARIO+'"}'
         EXEC SPQ_JSON @SQL

			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'EDITA_COPAGO_AUTD'
	BEGIN
		SELECT @IDAUT=IDAUT, @NO_ITEM = NO_ITEM , @COPAGO_FIJO = COPAGO_FIJO, @COPAGO_VARIABLE = COPAGO_VARIABLE
		FROM OPENJSON(@PARAMETROS)
		WITH( IDAUT			VARCHAR(20)		'$.IDAUT'			,NO_ITEM			INT				'$.NO_ITEM'
			,COPAGO_FIJO	DECIMAL(14,2)	'$.COPAGO_FIJO'		,COPAGO_VARIABLE	DECIMAL(14,2)	'$.COPAGO_VARIABLE')
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				UPDATE AUTD SET COPAGO_FIJO = @COPAGO_FIJO, COPAGO_VARIABLE = @COPAGO_VARIABLE WHERE IDAUT = @IDAUT AND NO_ITEM = @NO_ITEM
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
         SELECT @SQL='{"MODELO":"LISTA_AUT","METODO":"CALCULO_COPA_AUT","PARAMETROS":{"IDAUT":"'+@IDAUT+'"},"USUARIO":"'+@USUARIO+'"}'
         EXEC SPQ_JSON @SQL

			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'EDITA_CANTIDAD_AUTD'
	BEGIN
		SELECT @IDAUT=IDAUT, @NO_ITEM = NO_ITEM , @CANTIDAD = CANTIDAD
		FROM OPENJSON(@PARAMETROS)
		WITH( IDAUT			VARCHAR(20)		'$.IDAUT'			,NO_ITEM			INT				'$.NO_ITEM'
			,CANTIDAD		INT				'$.CANTIDAD')
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				UPDATE AUTD SET CANTIDAD = @CANTIDAD WHERE IDAUT = @IDAUT AND NO_ITEM = @NO_ITEM
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
         SELECT @SQL='{"MODELO":"LISTA_AUT","METODO":"CALCULO_COPA_AUT","PARAMETROS":{"IDAUT":"'+@IDAUT+'"},"USUARIO":"'+@USUARIO+'"}'
         EXEC SPQ_JSON @SQL

			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'CALCULA_COPAGO'
	BEGIN
		SELECT @IDAUT=IDAUT , @COPAGO_FIJO = COPAGO_FIJO, @COPAGO_VARIABLE = COPAGO_VARIABLE
		FROM OPENJSON(@PARAMETROS)
		WITH( IDAUT				VARCHAR(20)			'$.IDAUT'
			,COPAGO_FIJO		DECIMAL(14,2)		'$.COPAGO_FIJO'
			,COPAGO_VARIABLE	DECIMAL(14,2)		'$.COPAGO_VARIABLE')
		

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				 
				SELECT @VALOR = SUM(COALESCE(AUTD.VALOR,0)) FROM AUTD WHERE IDAUT = @IDAUT AND COALESCE(AUTD.PROTOCOLO,0)=0
				SELECT @VALOR = @VALOR - COALESCE(@COPAGO_FIJO,0)

				SELECT @VALOR
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'APROBAR'
	BEGIN
		SELECT @IDAUT=IDAUT
		FROM OPENJSON(@PARAMETROS)
		WITH( IDAUT				VARCHAR(20)			'$.IDAUT')

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				 UPDATE AUT SET TIPOPREVIO = 2,AUT.FECHA_TIPOPREVIO = DBO.FNK_GETDATE()  WHERE IDAUT = @IDAUT
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'CALCULO_COPA_AUT'     
	BEGIN   
		SELECT @IDAUT=IDAUT        
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
		IDAUT  VARCHAR(20)   '$.IDAUT'
		)

		EXEC DBO.SPK_RECALCULAR_COPAGOS_AUTD @IDAUT -- Ahora los copagos se calculan aquí
		RETURN -- EZERPA 02.11.2024
      
		SELECT @PROCEDENCIA = CASE  COALESCE(ESPROGRAMAS,0) WHEN 1 THEN 'CRONICO' ELSE 'AGUDO' END
				,@IDAFILIADO = AUT.IDAFILIADO, @VALOR = AUT.VALORCOPAGO, @PREFIJO = PREFIJO
		FROM AUT WHERE AUT.IDAUT = @IDAUT
				
		/* CALCULO DE VALOR COPAGO  */
		SELECT @COPAGO_FIJO = COPAGO_FIJO, @COPAGO_VARIABLE = COPAGO_VARIABLE FROM AUT WHERE AUT.IDAUT = @IDAUT
		UPDATE AUTD SET VALORCOPAGO = 0 WHERE IDAUT = @IDAUT AND AUTD.IDSERVICIO = @IDSERMOVILIDAD
		UPDATE AUTD SET VALORCOPAGO = 0,COPAGO_FIJO = 0, COPAGO_VARIABLE = 0  WHERE IDAUT = @IDAUT AND AUTD.IDSERVICIO <> @IDSERMOVILIDAD
		SELECT @COPAGO_VARIABLE = 100 - COALESCE(@COPAGO_VARIABLE,0)
		SELECT @ITEMS = COUNT(*) FROM AUTD WHERE IDAUT=@IDAUT AND COALESCE(AUTD.GENERADO,0) = 1 AND  COALESCE(AUTD.PROTOCOLO,0) = 0
		IF @ITEMS > 0 AND (COALESCE(@COPAGO_VARIABLE,0) > 0 OR COALESCE(@COPAGO_FIJO,0)>0)
		BEGIN
			PRINT 'INICIO CALCULO...'
			IF COALESCE(@COPAGO_FIJO,0)>0
			BEGIN
				UPDATE  AUTD SET COPAGO_FIJO = CASE WHEN  ROUND((@COPAGO_FIJO/@ITEMS),2) >= (VALOR*CANTIDAD) THEN (VALOR*CANTIDAD) ELSE  ROUND((@COPAGO_FIJO/@ITEMS),2) END
				WHERE IDAUT=@IDAUT AND COALESCE(AUTD.GENERADO,0) = 1 AND  COALESCE(AUTD.PROTOCOLO,0) = 0 AND AUTD.IDSERVICIO <> @IDSERMOVILIDAD

				--IF EXISTS(SELECT * FROM AUTD WHERE IDAUT=@IDAUT  AND COALESCE(AUTD.GENERADO,0) = 1 AND  COALESCE(AUTD.PROTOCOLO,0) = 0 AND COPAGO_FIJO >(VALOR*CANTIDAD))
				--BEGIN
				--   UPDATE AUTD SET COPAGO_FIJO=(VALOR*CANTIDAD) WHERE IDAUT=@IDAUT  AND COALESCE(AUTD.GENERADO,0) = 1 AND  COALESCE(AUTD.PROTOCOLO,0) = 0 AND COPAGO_FIJO > (VALOR*CANTIDAD)
				--END
				SELECT @COPAGOFIJO_D = SUM(CONVERT(DECIMAL(14,4),COPAGO_FIJO)) FROM AUTD WHERE IDAUT=@IDAUT  AND COALESCE(AUTD.GENERADO,0) = 1 AND  COALESCE(AUTD.PROTOCOLO,0) = 0 
				PRINT '@COPAGOFIJO_D='+CAST(@COPAGOFIJO_D AS VARCHAR(20))
				PRINT '@COPAGO_FIJO='+STR(CONVERT(DECIMAL(14,2),@COPAGO_FIJO))

				DECLARE @DIF DECIMAL(14,2)

				IF (@COPAGOFIJO_D-@COPAGO_FIJO) <> 0
				BEGIN
					SELECT @DIF=CONVERT(DECIMAL(14,2),@COPAGOFIJO_D-@COPAGO_FIJO)
					PRINT '(@COPAGOFIJO_D-@COPAGO_FIJO)'+CAST((@DIF) AS VARCHAR(20))

						SELECT TOP 1 @MIN_AUT = NO_ITEM  FROM AUTD WHERE IDAUT=@IDAUT AND COALESCE(AUTD.GENERADO,0) = 1 AND  COALESCE(AUTD.PROTOCOLO,0) = 0  AND COPAGO_FIJO < (VALOR*CANTIDAD) ORDER BY  NO_ITEM  DESC


					IF @DIF<0
					BEGIN
							UPDATE AUTD SET COPAGO_FIJO = CASE WHEN  ROUND((COPAGO_FIJO + ABS(@DIF)),2)> ROUND((VALOR*CANTIDAD),2) THEN  ROUND((VALOR*CANTIDAD),2)    ELSE ROUND((COPAGO_FIJO + ABS(@DIF)),2) END
						WHERE AUTD.IDAUT = @IDAUT AND NO_ITEM = @MIN_AUT 
						AND COALESCE(AUTD.GENERADO,0) = 1  AND COALESCE(AUTD.PROTOCOLO,0) = 0 AND AUTD.IDSERVICIO <> @IDSERMOVILIDAD
					END
					ELSE
					BEGIN
						UPDATE AUTD SET COPAGO_FIJO = ROUND((COPAGO_FIJO - ABS(@DIF)),2)
						WHERE AUTD.IDAUT = @IDAUT AND NO_ITEM = @MIN_AUT AND COALESCE(AUTD.GENERADO,0) = 1  AND COALESCE(AUTD.PROTOCOLO,0) = 0 AND AUTD.IDSERVICIO <> @IDSERMOVILIDAD
					END
				END
			END
			IF COALESCE(@COPAGO_VARIABLE,0) > 0
			BEGIN
				UPDATE  AUTD SET COPAGO_VARIABLE =( ((VALOR*CANTIDAD)- COALESCE(COPAGO_FIJO,0))  *(@COPAGO_VARIABLE/100) )   WHERE IDAUT=@IDAUT AND COALESCE(AUTD.GENERADO,0) = 1 AND  COALESCE(AUTD.PROTOCOLO,0) = 0 AND AUTD.IDSERVICIO <> @IDSERMOVILIDAD
			END

			UPDATE  AUTD SET VALORCOPAGO = COPAGO_FIJO + COALESCE(COPAGO_VARIABLE,0)   WHERE IDAUT=@IDAUT AND COALESCE(AUTD.GENERADO,0) = 1 AND  COALESCE(AUTD.PROTOCOLO,0) = 0 AND AUTD.IDSERVICIO <> @IDSERMOVILIDAD
						
		END

		IF EXISTS (SELECT * FROM AUTD WHERE IDAUT = @IDAUT AND IDSERVICIO = @IDSERMOVILIDAD AND COALESCE(AUTD.GENERADO,0) = 1)
		BEGIN
			SELECT @COPAGO_FIJO = COPAGO_FIJO, @COPAGO_VARIABLE = COPAGO_VARIABLE FROM AUTD WHERE AUTD.IDAUT = @IDAUT AND AUTD.IDSERVICIO = @IDSERMOVILIDAD
			IF COALESCE(@COPAGO_VARIABLE,0) > 0
			BEGIN
				UPDATE AUTD SET VALORCOPAGO = VALOR - ( ((VALOR*CANTIDAD)- COALESCE(COPAGO_FIJO,0))  *(@COPAGO_VARIABLE/100) )   WHERE AUTD.IDAUT = @IDAUT AND AUTD.IDSERVICIO = @IDSERMOVILIDAD 
			END

		END


		UPDATE  AUTD SET VALOREXCEDENTE=(VALOR*CANTIDAD)-VALORCOPAGO WHERE IDAUT=@IDAUT

		UPDATE AUT SET VALORCOPAGO=X.VALOR, TIPOCOPAGO='C'
		FROM (
			SELECT SUM(COALESCE(AUTD.VALORCOPAGO,0)) VALOR
			FROM AUT INNER JOIN AUTD ON AUTD.IDAUT=AUT.IDAUT
			WHERE AUT.IDAUT=@IDAUT
		)X
		WHERE IDAUT=@IDAUT



		UPDATE AUT SET NO_ITEMES=X.CANTIDAD, VALORTOTAL=X.VALOR, VALOREXEDENTE=X.VALOR-VALORCOPAGO
		FROM (
			SELECT COUNT(1) CANTIDAD, SUM(ISNULL(AUTD.VALOR,0)*ISNULL(AUTD.CANTIDAD,0)) VALOR
			FROM AUT INNER JOIN AUTD ON AUTD.IDAUT=AUT.IDAUT
			WHERE AUT.IDAUT=@IDAUT
		)X
		WHERE IDAUT=@IDAUT

      RETURN
   END  
	IF @METODO = 'PROCESAR_MEDICAMENTOS'     
	BEGIN   
		SELECT @PARAMETROS = DATOS, @METODO = METODO      
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
			METODO  VARCHAR(20) '$.METODO'
			,DATOS  NVARCHAR(MAX)  AS JSON
		)
		
		SELECT * INTO #AUTDF       
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
			IDAUT VARCHAR(20) '$.IDAUT'
			,IDBODEGA VARCHAR(20) '$.IDBODEGA'
			,IDSERVICIO VARCHAR(20) '$.IDSERVICIO'
			,NO_ITEM SMALLINT '$.NO_ITEM'
			,IDARTICULO VARCHAR(20) '$.IDARTICULO'
			,NOLOTE VARCHAR(20) '$.NOLOTE'
			,NOLOTEPEDIDO VARCHAR(20) '$.NOLOTEPEDIDO'
			,CANTIDAD INT '$.CANTIDAD'
			,VALOR DECIMAL(14,2) '$.VALOR'
			,COPAGO DECIMAL(14,2) '$.COPAGO'
			,VLR_EXCEDENTE DECIMAL(14,2) '$.VLR_EXCEDENTE'
		)
		SELECT TOP 1 @IDAUT=IDAUT FROM #AUTDF
--QUERY2
		IF @METODO='DISPENSAR'
		BEGIN
			--SELECT * FROM #AUTDF
			--RETURN
			INSERT INTO AUTDF (IDAUT, NO_ITEM, IDSERVICIO, IDSERVICIO_AUTD, CANTIDAD, IDBODEGA, NOLOTE, NOLOTEPEDIDO, VALOR, VALORCOPAGO, VALOREXCEDENTE)
			SELECT IDAUT,  NO_ITEM, IDARTICULO, IDSERVICIO, CANTIDAD, IDBODEGA,NOLOTE, NOLOTEPEDIDO, 0, 0,  0
			FROM #AUTDF

			UPDATE AUTDF
			SET VALORCOPAGO = 0, VALOREXCEDENTE = 0
			WHERE IDAUT=@IDAUT 

			SELECT @IDTERCERO=IDTERCEROCA, @IDPLAN=IDPLAN, @FECHA1 = AUT.FECHA FROM AUT WHERE IDAUT=@IDAUT

			--SELECT @VLRSERVICIO  = VLRSERVICIO
			UPDATE AUTDF SET VALOR=SERTOT.VLRSERVICIO
			FROM   AUTDF
			INNER JOIN SERTOT ON SERTOT.IDTERCERO=@IDTERCERO AND SERTOT.IDPLAN=@IDPLAN AND SERTOT.IDSERVICIO=AUTDF.IDSERVICIO
			WHERE  AUTDF.IDAUT=@IDAUT 
			AND	   SERTOT.IDTERCERO   =  @IDTERCERO
			AND    SERTOT.IDPLAN      =  @IDPLAN
			AND    SERTOT.FECHAINIFD   <= @FECHA1 
			AND    SERTOT.FECHAFINFD   >= @FECHA1 
			AND    SERTOT.FECHAINI     <= @FECHA1 
			AND    SERTOT.FECHAFIN     >= @FECHA1 
		
			SELECT @PRECIO_TOTAL = SUM(AUTDF.VALOR)
			FROM AUTDF 
			WHERE IDAUT=@IDAUT

			PRINT @PRECIO_TOTAL

			DECLARE _cursor CURSOR FOR   
				SELECT NO_ITEM FROM AUTDF WHERE IDAUT=@IDAUT --AND COALESCE(GENERADO, 0)=1 AND IDSERVICIO <> @IDSERMOVILIDAD
	  
			OPEN _cursor  
			FETCH NEXT FROM _cursor INTO @NO_ITEM
	  
			WHILE @@FETCH_STATUS = 0  
			BEGIN  

				SELECT @COBERTURA_PACIENTE = 0
					,@TOTAL_COPAGO = 0
					,@VALOR_COPAGO = 0
					,@VALOR_EXCEDENTE = 0


				SELECT @COPAGO_FIJO = COALESCE(COPAGO_FIJO, 0)
					,@COBERTURA_ASEGURADORA = COALESCE(COPAGO_VARIABLE, 0)
				FROM AUTD WHERE IDAUT=@IDAUT AND NO_ITEM=@NO_ITEM

				SELECT @VALOR_ITEM = VALOR 
				FROM AUTDF WHERE IDAUT=@IDAUT AND NO_ITEM=@NO_ITEM

				SELECT @COBERTURA_PACIENTE = 100 - @COBERTURA_ASEGURADORA
		
				SELECT @PORCENTAJE_PRORRATEO = @COPAGO_FIJO * 100 / @PRECIO_TOTAL

				PRINT '@VALOR_ITEM: ' + CAST(@VALOR_ITEM AS VARCHAR(20))
				PRINT '@COPAGO_FIJO: ' + CAST(@COPAGO_FIJO AS VARCHAR(20))
				-- PRINT '@COPAGO_VARIABLE: ' + CAST(@COPAGO_VARIABLE AS VARCHAR(20))

				-- Calculo del Copago Fijo
				IF @PORCENTAJE_PRORRATEO > 0
				BEGIN
					PRINT '@PORCENTAJE_PRORRATEO: ' + CAST(@PORCENTAJE_PRORRATEO AS VARCHAR(20))
					SELECT @COPAGO_FIJO = @VALOR_ITEM * @PORCENTAJE_PRORRATEO / 100
						,@VALOR_EXCEDENTE = @VALOR_ITEM - @VALOR_COPAGO
			
					IF @VALOR_EXCEDENTE < 0
					BEGIN
						SELECT @COPAGO_FIJO = @VALOR_ITEM
							,@VALOR_EXCEDENTE = 0
					END
				END
	  
				-- Calculo del Copago Variable
	  			IF @COBERTURA_PACIENTE > 0 
				BEGIN
		
					PRINT '@COBERTURA_PACIENTE: ' + CAST(@COBERTURA_PACIENTE AS VARCHAR(20))
					SELECT @VALOR_COPAGO =  (@VALOR_ITEM-@COPAGO_FIJO) * @COBERTURA_PACIENTE / 100
						,@VALOR_EXCEDENTE = (@VALOR_ITEM-@COPAGO_FIJO) * (100 - @COBERTURA_PACIENTE) / 100

					IF @VALOR_EXCEDENTE < 0
					BEGIN
						SELECT @VALOR_COPAGO = @VALOR_ITEM - @COPAGO_FIJO
							,@VALOR_EXCEDENTE = 0
					END

					SELECT @TOTAL_COPAGO = @COPAGO_FIJO + @VALOR_COPAGO
				END
				ELSE
					IF @COPAGO_FIJO>0
					BEGIN
						IF @COPAGO_FIJO >= @VALOR_ITEM
						BEGIN
							SELECT @TOTAL_COPAGO = @VALOR_ITEM
								,@VALOR_COPAGO = @VALOR_ITEM
								,@VALOR_EXCEDENTE = 0
						END
						ELSE
						BEGIN
							SELECT @TOTAL_COPAGO = @COPAGO_FIJO
								,@VALOR_COPAGO = @COPAGO_FIJO
								,@VALOR_EXCEDENTE = @VALOR_ITEM- @COPAGO_FIJO
					
						END
					END

				PRINT '@COPAGO_FIJO: ' + CAST(@COPAGO_FIJO AS VARCHAR(20))
				PRINT '@TOTAL_COPAGO: ' + CAST(@TOTAL_COPAGO AS VARCHAR(20))
				PRINT '@VALOR_EXCEDENTE: ' + CAST(@VALOR_EXCEDENTE AS VARCHAR(20))

				UPDATE AUTDF
				SET VALORCOPAGO = @TOTAL_COPAGO
					,VALOREXCEDENTE = @VALOR_EXCEDENTE
				WHERE IDAUT=@IDAUT AND NO_ITEM=@NO_ITEM


				FETCH NEXT FROM _cursor INTO @NO_ITEM
				END  
	  
			CLOSE _cursor  
			DEALLOCATE _cursor 
		END
		
		IF @METODO='DEVOLVER'
		BEGIN
			DELETE FROM AUTDF WHERE IDAUT=@IDAUT AND NO_ITEM IN (SELECT NO_ITEM FROM #AUTDF)
		END
		SELECT @TOTAL_COPAGO = SUM(VALORCOPAGO), @VALOR_EXCEDENTE = SUM(VALOREXCEDENTE), @VALOR_ITEM = SUM(VALOR)
		FROM AUTDF
		WHERE IDAUT=@IDAUT

		IF @METODO='CONFIRMAR'
		BEGIN
			UPDATE AUTD SET VALOR=B.VALOR, VALORCOPAGO=B.VALORCOPAGO, VALOREXCEDENTE=B.VALOREXCEDENTE
			FROM AUTD A
			INNER JOIN AUTDF B ON A.IDAUT=B.IDAUT AND A.NO_ITEM=B.NO_ITEM
			WHERE B.IDAUT=@IDAUT

			SELECT @TOTAL_COPAGO = SUM(VALORCOPAGO), @VALOR_EXCEDENTE = SUM(VALOREXCEDENTE), @VALOR_ITEM = SUM(VALOR)
			FROM AUTDF WHERE IDAUT=@IDAUT

			UPDATE AUT
			SET VALORCOPAGO = @TOTAL_COPAGO
				,VALOREXEDENTE = @VALOR_EXCEDENTE
				,VALORTOTAL = @VALOR_ITEM
			WHERE IDAUT=@IDAUT
			UPDATE AUT SET GENERADO=3 WHERE IDAUT=@IDAUT
			UPDATE AUTD SET GENERADO=1 WHERE IDAUT=@IDAUT

			IF COALESCE(@TOTAL_COPAGO,0)=0
			BEGIN
				SELECT @SQL = '{"MODELO":"LISTA_AUT","METODO":"PROCESAR_MEDICAMENTOS","PARAMETROS":{"METODO":"PROCESAR","DATOS":{"IDAUT":"'+@IDAUT+'"}},"USUARIO":"'+@USUARIO+'"}'
				EXEC SPQ_JSON @SQL
			END
		END
		IF @METODO='PROCESAR'
		BEGIN
			DECLARE @CLASE VARCHAR(20), @CNSIZSOLD VARCHAR(20), @IDARTICULO VARCHAR (20), @IDARTICULO_REAL VARCHAR(20), @CANTIDADSOL INT, @NOLOTE varchar(20)
			SELECT TOP 1 @IDBODEGA=IDBODEGA FROM AUTDF WHERE IDAUt=@IDAUT
			PRINT '@IDBODEGA='
			PRINT @IDBODEGA
			EXEC SPK_PEDIDOINVCE @IDAUT, @IDBODEGA, '01', '01', @USUARIO, @SYS_COMPUTERNAME
			SELECT @CNSFCT=CNSMOV FROM AUT WHERE IDAUT=@IDAUT
			PRINT @CNSFCT
			EXEC SPK_CM_GENIMOV_SOL @CNSFCT, @IDSEDE, @USUARIO, ''
			SELECT @CLASE=CNSMOV FROM IMOV WHERE NODOCUMENTO=@CNSFCT

			DECLARE CUR_SOL CURSOR FOR
			SELECT CNSIZSOLD, IDARTICULO, CANTIDADSOL FROM IZSOLD WHERE CNSIZSOL=@CNSFCT 
				AND EXISTS (SELECT 1 FROM AUTDF WHERE IDAUT=@IDAUT AND IDSERVICIO_AUTD=IZSOLD.IDARTICULO)

			OPEN CUR_SOL
			FETCH NEXT FROM CUR_SOL INTO @CNSIZSOLD, @IDARTICULO , @CANTIDADSOL 
			WHILE @@FETCH_STATUS=0
			BEGIN
				PRINT 'ENTRÓ'
				
				SELECT @IDARTICULO_REAL = IDSERVICIO, @NOLOTE = NOLOTE  FROM AUTDF WHERE IDAUT=@IDAUT AND IDSERVICIO_AUTD=@IDARTICULO
				EXEC SPK_IZSOLDT_PROCESOS @IDARTICULO, @CNSIZSOLD, 'AGREGAR', @IDSEDE, @IDARTICULO_REAL, @NOLOTE,@CANTIDADSOL, @CANTIDADSOL,  @CLASE, ''
				
				FETCH NEXT FROM CUR_SOL INTO @CNSIZSOLD, @IDARTICULO , @CANTIDADSOL

			END
			CLOSE CUR_SOL
			DEALLOCATE CUR_SOL

			EXEC SPK_PROCESA_IZSOLDT @CNSFCT, @CLASE, '01', @IDSEDE, @USUARIO
			EXEC SPK_CONFIRMASAL_CM @CLASE , @USUARIO, @IDSEDE, 'LOG_PROD'
			UPDATE AUT SET TIPOPREVIO = 2,AUT.FECHA_TIPOPREVIO = DBO.FNK_GETDATE()  WHERE IDAUT = @IDAUT
			UPDATE IZSOL SET ESTADO=2 WHERE CNSIZSOL=@CNSFCT
		END

		SELECT 'OK' OK
		SELECT ID = ROW_NUMBER() OVER(ORDER BY AUTDF.IDAUT, AUTDF.NO_ITEM), AUTDF.IDAUT, AUTDF.NO_ITEM, AUTDF.IDSERVICIO, AUTDF.IDSERVICIO_AUTD, AUTDF.CANTIDAD, AUTDF.IDBODEGA, AUTDF.NOLOTE, AUTDF.NOLOTEPEDIDO, AUTDF.VALOR, AUTDF.VALORCOPAGO, AUTDF.VALOREXCEDENTE, SER.DESCSERVICIO
		FROM AUTDF INNER JOIN SER ON SER.IDSERVICIO=AUTDF.IDSERVICIO
		WHERE AUTDF.IDAUT=@IDAUT
		UNION ALL
		SELECT ID = 0, @IDAUT IDAUT,  99 NO_ITEM,  '' IDSERVICIO,  '' IDSERVICIO_AUTD,  '' CANTIDAD, '' IDBODEGA,  '' NOLOTE,  'Total:' NOLOTEPEDIDO, @VALOR_ITEM, @TOTAL_COPAGO, @VALOR_EXCEDENTE, '' DESCSERVICIO
		RETURN

   END  
END

