CREATE OR ALTER  PROCEDURE DBO.SPQ_IZSOL
@JSON  NVARCHAR(MAX)
WITH ENCRYPTION
AS
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)	,@NOLOTEPEDIDO VARCHAR(50)	,@CANTIDAD INT, @COMPLETA BIT	,@CANTIDAD_ENTREGA INT
		, @MODELO    VARCHAR(100)	,@IDARTICULO_REAL VARCHAR(50)	,@NOLOTE VARCHAR(50)		,@CANTIDADSOL INT
		, @METODO    VARCHAR(100)	,@CNSMOV VARCHAR(20)			,@CNSIZSOLDT VARCHAR(20)	, @SYS_ENTREGA VARCHAR(100)
		, @USUARIO   VARCHAR(12)	,@IDTERCERO VARCHAR(20)			,@IDAREA VARCHAR(20)		, @CCOSTO VARCHAR(20)
		, @ID INT					,@ESTADO_IMOV VARCHAR(20)		,@CODIGO VARCHAR(20)		, @MENSAJE VARCHAR(20)
		, @MODELOACT NVARCHAR(MAX)	,@CANTIDAD_SOLICITADA INT		,@EXISLOTE INT				, @CNSTRAN VARCHAR(20)
		, @A INT					,@IDBODEGA_DESC VARCHAR(200)	,@CANTIDAD_PENDIENTE INT	, @NODOCUMENTO VARCHAR(20)
		, @SYS_ComputerName VARCHAR(100)	,@IDITAR VARCHAR(20)	,@NVOCONSEC VARCHAR(20)		, @IDTIPOMOV     VARCHAR(2)
		, @IDBODEGACONSUMO VARCHAR(20)		,@PROCEDENCIA VARCHAR(20)	, @ACCION VARCHAR(20)	, @MOTIVO VARCHAR(50)
		, @IDSEDE VARCHAR(20)		,@SEDE VARCHAR(20)	,@OBSERVACION VARCHAR(200)	, @datoIMOVH NVARCHAR(MAX), @PROCESO VARCHAR(50)
		, @NOADMISION VARCHAR(20)	, @datoIMOV NVARCHAR(MAX)		,@CNSITRA VARCHAR(20)		, @CNSFCOM  VARCHAR(20)
		, @IDBODEGASOL VARCHAR(20)	,@DATOS NVARCHAR(MAX)		,@ITEM INT		, @CNSRPDX_2 VARCHAR(20)
		, @SECTOR VARCHAR(30) ,@F_VIGENCIAINV DATE		,@CODIGOBARRA VARCHAR(20)	, @CNSRPDX_NEW VARCHAR(20)	
		, @CNSIZSOL VARCHAR(20)	,@PCOSTO DECIMAL(14,2)	,@CANTIDAD_TOTAL DECIMAL(14,2)	,@ITEM_2 INT
		, @CNSIZSOLD VARCHAR(20)	,@IDCAUSA VARCHAR(20)	,@CODBARRA VARCHAR(50)		,@CNSRINVIMA VARCHAR(20)
		, @IDPLAN VARCHAR(6)	,@DATO VARCHAR(10)		,@IDARTICULOORI VARCHAR(20)		,@NOAUT VARCHAR(20)	,@IDAUT VARCHAR(20)
		, @TIPO_USUARIO VARCHAR(12)	,@PREFIJO VARCHAR(20)	,@GRUPOABO VARCHAR(20),  @GRUPORH VARCHAR(20)
		, @IDTE VARCHAR(5) 
		, @CLASE VARCHAR(50) = 'SENFER'
		, @COMPANIA VARCHAR(20)
		, @IDBODEGA VARCHAR(20)
DECLARE @FECHAVENCE DATE, @PC_SINIVA DECIMAL(14,2),	@TEMPERATURA DECIMAL(14,2),	@CANTIDADREV DECIMAL(14,2), @PIVA DECIMAL(14,2)	, @CUMPLE BIT
	,@APROBADO BIT	,@VALIDA_STOCKS VARCHAR(200)
DECLARE @CNSRPDX          VARCHAR(20)
DECLARE @ERROR AS INT
		,@IART_DESCRIPCION VARCHAR(MAX)
		,@FVENCE DATE
		,@RAZONSOCIAL VARCHAR(MAX)
		,@CODCUM VARCHAR(100)
		,@REGINVIMA VARCHAR(100)
		,@IDUNIDAD VARCHAR(100)
BEGIN       
	SET DATEFORMAT dmy
	SET LANGUAGE Spanish; 


	SELECT *
	INTO #JSON
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)     AS JSON
	)

	SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
	FROM #JSON

	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @IDSEDE = IDSEDE, @SEDE = IDSEDE, @COMPANIA=COMPANIA, @IDBODEGA = COALESCE(IDBODEGA, IDBODEGA2, IDBODEGANOCHE, IDBODEGACONSUMO) FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME
	SELECT @IDTE     = DBO.FNK_VALORVARIABLE ('@IDTE')
	
   IF COALESCE(@SYS_COMPUTERNAME,'') = ''
   BEGIN
      INSERT INTO @TBLERRORES(ERROR) SELECT 'Este Usuario no tiene Equipo Asignado en Configuraci√≥n (UBEQ)'
      SELECT 'KO' OK
      SELECT ERROR FROM @TBLERRORES
      RETURN
   END

   IF (SELECT COUNT(*) FROM UBEQ WHERE SYS_COMPUTERNAME = @SYS_COMPUTERNAME) <= 0
   BEGIN 
      INSERT INTO @TBLERRORES(ERROR) SELECT 'El Equipo Configurado en el Usuario No Existe en la tabla de Equipos.(UBEQ)'
      SELECT 'KO' OK
      SELECT ERROR FROM @TBLERRORES
      RETURN
   END


	IF @METODO = 'SOLICITUD_CONSUMO'
	BEGIN
      
		--{"MODELO":"HTX","METODO":"CONSULTA","PARAMETROS":{"ADMISIONES":[{"NOADMISION":"0100000004"},{"NOADMISION":"01P00000030"}]},"USUARIO":"AOLAYA"}
		SELECT @MODELOACT = ARTICULOS,
			@NOADMISION = NOADMISION,
			@IDPLAN=IDPLAN
		FROM   OPENJSON (@PARAMETROS)
		WITH ( 
			NOADMISION  VARCHAR(20)   '$.NOADMISION',
			IDPLAN      VARCHAR(6)    '$.IDPLAN',
			ARTICULOS   NVARCHAR(MAX)  AS JSON
		)

		SELECT @SYS_ComputerName = SYS_ComputerName, @IDSEDE=IDSEDE, @IDBODEGASOL=IDBODEGA FROM USUSU WHERE USUARIO=@USUARIO
		SELECT @TIPO_USUARIO = TIPO_USUARIO FROM MED INNER JOIN USUSU ON USUSU.IDMEDICO=MED.IDMEDICO WHERE USUARIO=@USUARIO
		SELECT @IDBODEGACONSUMO = IDBODEGA, @CCOSTO=CCOSTO FROM UBEQ WHERE SYS_COMPUTERNAME = @SYS_ComputerName
		SELECT TOP 1 @SECTOR = SECTOR/*, @HABCAMA=HABCAMA*/ FROM HHAB WHERE NOADMISION = @NOADMISION
      
		IF COALESCE(@NOADMISION,'')='' -- SIGNIFICA QUE EL CONSUMO LO ESTA HACIENDO EL USUARIO PARA SU SERVICIO
		BEGIN
		SET @NOADMISION = 'ENFERMERIA'
		SELECT @NOADMISION = CASE @TIPO_USUARIO
			WHEN 'Enfermera' THEN 'ENFERMERIA'
			WHEN 'Fisioterapia' THEN 'TERAPIA'
			WHEN 'Medico' THEN 'ASISTENCIAL'
			WHEN 'Nutricion' THEN 'ENFERMERIA'
			ELSE 'AMBULATORIO' END
		SET @CLASE = 'Consumo'
		SET @SECTOR= @CCOSTO
		END
      
		SELECT * INTO #ARTICULOS
		FROM  OPENJSON (@MODELOACT)
		WITH  ( 
		IDARTICULO  VARCHAR(20) '$.IDARTICULO',
		CANTIDAD    INT '$.CANTIDAD'
		)  

		--EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@IZSOL', @CNSIZSOL OUTPUT  
		--SELECT @CNSIZSOL = @IDSEDE + REPLACE(SPACE(10 - LEN(@CNSIZSOL))+LTRIM(RTRIM(@CNSIZSOL)),SPACE(1),0)
		EXEC SPQ_GENSEQUENCE @SEDE=@SEDE,@PREFIJO='@IZSOL', @NVOCONSEC=@CNSIZSOL OUTPUT  


		INSERT INTO IZSOL(CNSIZSOL,FECHASOL,USUARIOSOL,ESTADO,IDSEDE,SECTOR,IDBODEGASOLICITA,IDBODEGAATIENDE,CLASE,NOADMISION,SYS_COMPUTER,IDPLAN)
		SELECT @CNSIZSOL,DBO.FNK_FECHA_SIN_MLS(GETDATE()),@USUARIO,0,@IDSEDE,@SECTOR,@IDBODEGASOL,@IDBODEGACONSUMO,@CLASE, @NOADMISION, @SYS_ComputerName,@IDPLAN
      
		DECLARE @CANT_ITEMS INT = (SELECT COUNT(1) FROM #ARTICULOS)
		DECLARE @IDARTICULO VARCHAR(20),  @IDSERVICIO VARCHAR(20)
		WHILE @CANT_ITEMS>0
		BEGIN
			--EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@IZSOLD', @CNSIZSOLD OUTPUT  
			--SELECT @CNSIZSOLD = @IDSEDE + REPLACE(SPACE(10 - LEN(@CNSIZSOLD))+LTRIM(RTRIM(@CNSIZSOLD)),SPACE(1),0)
			EXEC SPQ_GENSEQUENCE @SEDE=@SEDE,@PREFIJO='@IZSOLD', @NVOCONSEC=@CNSIZSOLD OUTPUT  
			
			SELECT TOP 1 @IDARTICULO = IDARTICULO, @CANTIDAD = CANTIDAD FROM #ARTICULOS
			SELECT @IDSERVICIO=IDSERVICIO FROM IART WHERE IDARTICULO=@IDARTICULO
			DELETE FROM #ARTICULOS WHERE IDARTICULO=@IDARTICULO
			SET @CANT_ITEMS = @CANT_ITEMS-1

			INSERT INTO IZSOLD(CNSIZSOL,CNSIZSOLD,IDARTICULO,CANTIDADSOL,ESTADO,CODOM,CANTIDAD,IDSERVICIO)
			SELECT @CNSIZSOL, @CNSIZSOLD, @IDARTICULO, @CANTIDAD, 0, '', 0, @IDSERVICIO

		END

		UPDATE IZSOL SET ESTADO=1 WHERE CNSIZSOL=@CNSIZSOL
		UPDATE IZSOLD SET ESTADO=1 WHERE CNSIZSOL=@CNSIZSOL

		RETURN
	END

	IF @METODO = 'CONSULTA'
	BEGIN
		SELECT @NOADMISION = NOADMISION
		FROM   OPENJSON (@PARAMETROS)
		WITH ( 
		NOADMISION VARCHAR(20)
		)
		SELECT USUSU.NOMBRE NOMBRESOL, CONVERT(VARCHAR,FECHASOL,103)+' '+CONVERT(VARCHAR,FECHASOL,108) FECHASOLFORMAT, ESTADO_STR = CASE IZSOL.ESTADO WHEN 0 THEN 'Abierta' WHEN 1 THEN 'Solicitada' WHEN 2 THEN 'Cerrada' END,IZSOL.* FROM IZSOL LEFT JOIN USUSU ON USUSU.USUARIO=IZSOL.USUARIOSOL WHERE NOADMISION=@NOADMISION AND CLASE<>'HTX' ORDER BY FECHASOL DESC
		SELECT IZSOLD.*,IART.DESCRIPCION FROM IZSOLD LEFT JOIN IART ON IART.IDARTICULO=IZSOLD.IDARTICULO WHERE CNSIZSOL IN (SELECT CNSIZSOL FROM IZSOL WHERE NOADMISION=@NOADMISION AND CLASE<>'HTX')
	END

	IF @METODO = 'DETALLES'
	BEGIN
		SELECT IZSOLD.*,IART.DESCRIPCION 
		FROM IZSOLD LEFT JOIN IART ON IART.IDARTICULO=IZSOLD.IDARTICULO 
		WHERE CNSIZSOL IN (
			SELECT CNSIZSOL
			FROM   OPENJSON (@PARAMETROS)
			WITH (   
					CNSIZSOL     VARCHAR(20)   '$.CNSIZSOL'
			)   
		)
		RETURN
	END

	IF @METODO = 'GUARDAR_SOLICITUD'
	BEGIN

		SELECT @CNSIZSOL = JSON_VALUE(@PARAMETROS,'$.CNSIZSOL')

		BEGIN TRY
			IF COALESCE(@CNSIZSOL, '') = ''
			BEGIN
				--EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,'@IZSOL', @CNSIZSOL OUTPUT  
				--SELECT @CNSIZSOL = @IDSEDE + REPLACE(SPACE(10 - LEN(@CNSIZSOL))+LTRIM(RTRIM(@CNSIZSOL)),SPACE(1),0)
				DECLARE @EXISTS BIT = 1
				WHILE @EXISTS = 1 OR COALESCE(@CNSIZSOL, '')=''
				BEGIN
					SET @EXISTS = 0
					EXEC SPQ_GENSEQUENCE @SEDE=@SEDE,@PREFIJO='@IZSOL', @NVOCONSEC=@CNSIZSOL OUTPUT  
					SELECT @EXISTS = 1 FROM IZSOL WHERE CNSIZSOL=@CNSIZSOL
				END

				INSERT INTO IZSOL (CNSIZSOL,FECHASOL,USUARIOSOL,ESTADO,IDBODEGASOLICITA
					,IDBODEGAATIENDE,SECTOR,CLASE,NOADMISION,SYS_COMPUTER
					,IDSEDE)
				SELECT 
					CNSIZSOL = @CNSIZSOL
					,DBO.FNK_FECHA_SIN_MLS(GETDATE()) AS FECHASOL
					,@USUARIO AS USUARIOSOL
					,ESTADO = 0
					,@IDBODEGA AS IDBODEGASOLICITA
					,IDBODEGAATIENDE
					,SECTOR = CCOSTO
					,CLASE = 'Consumo'
					,NOADMISION
					,SYS_COMPUTERNAME = @SYS_COMPUTERNAME
					,IDSEDE = @IDSEDE
				FROM OPENJSON(@PARAMETROS)
				WITH(
					CCOSTO VARCHAR(20) '$.CCOSTO'
					,IDBODEGAATIENDE VARCHAR(20) '$.IDBODEGAATIENDE'
					,NOADMISION VARCHAR(20) '$.NOADMISION'
				)
			END
			ELSE
			BEGIN
				UPDATE IZSOL
				SET SECTOR = #T.CCOSTO
					,IDBODEGAATIENDE = #T.IDBODEGAATIENDE
				--SELECT #T.*, IZSOL.* 
				FROM OPENJSON(@PARAMETROS)
				WITH(
					CCOSTO VARCHAR(20) '$.CCOSTO'
					,IDBODEGAATIENDE VARCHAR(20) '$.IDBODEGAATIENDE'
					--,NOADMISION VARCHAR(20) '$.NOADMISION'
				) AS #T INNER JOIN IZSOL ON IZSOL.CNSIZSOL = @CNSIZSOL
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK, '' CONSECUTIVO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT OK = 'OK', * 
		FROM IZSOL 
		WHERE CNSIZSOL = @CNSIZSOL 
		
	END
	
	IF @METODO = 'BORRAR_SOLICITUD'
	BEGIN

		SELECT @CNSIZSOL = JSON_VALUE(@PARAMETROS,'$.CNSIZSOL')
		IF EXISTS(SELECT 1 FROM IZSOLD WHERE CNSIZSOL=@CNSIZSOL )
		BEGIN
			SELECT 'KO'
			SELECT ERROR ='No puede eliminar una solicitud con detalles'
			RETURN
		END

		BEGIN TRY
			PRINT 'ANTES'
			DELETE FROM IZSOL WHERE CNSIZSOL=@CNSIZSOL
			PRINT 'DESPUES'
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK, '' CONSECUTIVO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT OK = 'OK'
		RETURN		
	END

	IF @METODO = 'CONFIRMAR_SOLICITUD'
	BEGIN
		SELECT @CNSIZSOL = JSON_VALUE(@PARAMETROS, '$.CNSIZSOL')
		BEGIN TRY

			UPDATE IZSOL SET ESTADO=1 WHERE CNSIZSOL=@CNSIZSOL

			UPDATE IZSOLD SET IDPRINCIPIO=IART.IDSERVICIO 
			FROM IZSOLD INNER JOIN IART ON IART.IDARTICULO=IZSOLD.IDARTICULO 
			WHERE CNSIZSOL=@CNSIZSOLD

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK, '' CONSECUTIVO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT OK = 'OK', CNSIZSOL = @CNSIZSOL 
	END

	IF @METODO = 'DESHACER_PEDIDO'
	BEGIN
		SELECT @CNSIZSOL = JSON_VALUE(@PARAMETROS, '$.CNSIZSOL')

		IF (SELECT COUNT(1) FROM IZSOLD WHERE CNSIZSOL=@CNSIZSOL AND COALESCE(ESTADO,0)=0)<>0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) 
			SELECT 'La solicitud ya fue respondida en farmacia/bodega. ¬°No es posible cancelar pedido!'
		END

		IF(SELECT COUNT(*) FROM @TBLERRORES) <= 0
		BEGIN TRY

			UPDATE IZSOL SET ESTADO=0 WHERE CNSIZSOL=@CNSIZSOL

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) > 0
		BEGIN
			SELECT 'KO' OK, '' CONSECUTIVO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT OK = 'OK', CNSIZSOL = @CNSIZSOL 
	END
	IF @METODO = 'ENTREGAR'
	BEGIN
		SELECT @CNSIZSOL =  CNSIZSOL, @NOLOTEPEDIDO = NOLOTEPEDIDO, @CANTIDAD = CANTIDAD, @COMPLETA = COMPLETA, @CNSIZSOLD = CNSIZSOLD, @NOLOTE = NOLOTE, @IDBODEGA = IDBODEGA
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
		,CNSIZSOLD				VARCHAR(20)			'$.CNSIZSOLD'
		,NOLOTEPEDIDO			VARCHAR(50)			'$.NOLOTEPEDIDO'
		,NOLOTE					VARCHAR(50)			'$.NOLOTE'
		,CANTIDAD				INT					'$.CANTIDAD'
		,COMPLETA				BIT					'$.COMPLETA'
		,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
		)

		
		SELECT TOP 1 @CNSMOV = CNSMOV FROM IMOV WHERE NODOCUMENTO = @CNSIZSOL AND ESTADO = 0
		SELECT @CANTIDAD_ENTREGA =  SUM (IZSOLDT.CANTIDADSOL) FROM IZSOLDT INNER JOIN IZSOLD ON IZSOLDT.CNSIZSOLD = IZSOLD.CNSIZSOLD
			WHERE IZSOLDT.CNSIZSOLD = @CNSIZSOLD
		SELECT @IDARTICULO = IDARTICULO, @CANTIDADSOL = CANTIDADSOL FROM IZSOLD WHERE CNSIZSOLD = @CNSIZSOLD
		SELECT @IDSEDE =  IDSEDE FROM IZSOL WHERE CNSIZSOL = @CNSIZSOL
		SELECT TOP 1 @IDARTICULO_REAL =  IDARTICULO FROM IEXI WHERE NOLOTE = @NOLOTE AND NOLOTEPEDIDO = @NOLOTEPEDIDO AND IEXI.IDBODEGA = @IDBODEGA

	
		IF COALESCE(@CNSMOV,'') = ''
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No cuenta con CNSMOV'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF @CANTIDAD_ENTREGA>= CAST( (SELECT SUM(CANTIDADSOL) FROM IZSOLD WHERE  CNSIZSOLD = @CNSIZSOLD ) AS INT)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Este Art√≠culo ya tiene La Cantidad Cumplida'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		
		IF @COMPLETA = 0 AND  (@CANTIDAD_ENTREGA + @CANTIDAD)>(SELECT SUM(CANTIDADSOL) FROM IZSOLD WHERE  CNSIZSOLD = @CNSIZSOLD )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Cantidad Supera el L√≠mite.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		--SELECT @CANTIDAD_ENTREGA
		--SELECT @CANTIDAD
		--SELECT @NOLOTE
		--SELECT @NOLOTEPEDIDO
		--SELECT EXISLOTE FROM IEXI WHERE NOLOTE = @NOLOTE AND NOLOTEPEDIDO = @NOLOTEPEDIDO AND  IEXI.IDBODEGA = @IDBODEGA 
		IF @COMPLETA = 0 AND  ( @CANTIDAD)>(SELECT EXISLOTE FROM IEXI WHERE NOLOTE = @NOLOTE AND NOLOTEPEDIDO = @NOLOTEPEDIDO AND  IEXI.IDBODEGA = @IDBODEGA  )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Se tiene menos articulos en Stock.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		
		
		
		BEGIN TRY 
			IF @COMPLETA = 1
			BEGIN
				SELECT @CANTIDAD = (SELECT @CANTIDADSOL- COALESCE(SUM(IZSOLDT.CANTIDADSOL),0) FROM  IZSOLD LEFT JOIN IZSOLDT ON IZSOLD.CNSIZSOLD = IZSOLDT.CNSIZSOLD
										WHERE IZSOLD.CNSIZSOLD = @CNSIZSOLD)
				
			END
			
			EXEC SPK_IZSOLDT_PROCESOS @IDARTICULO, @CNSIZSOLD, 'AGREGAR', @IDSEDE, @IDARTICULO_REAL, @NOLOTE,@CANTIDAD, @CANTIDADSOL,  @CNSMOV, ''

			IF @CANTIDADSOL = (SELECT SUM(COALESCE(CANTIDADSOL,0)) FROM IZSOLDT WHERE CNSIZSOLD= @CNSIZSOLD)
			BEGIN
				UPDATE IZSOLD SET ESTADO = 0 WHERE  CNSIZSOLD = @CNSIZSOLD
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END	
	IF @METODO = 'DEVOLVER'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL, @CNSMOV = CNSMOV, @CNSIZSOLDT = CNSIZSOLDT
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
		,CNSIZSOLDT				VARCHAR(20)			'$.CNSIZSOLDT'
		,CNSMOV					VARCHAR(20)			'$.CNSMOV'
		)

		SELECT @CANTIDAD= CANTIDADSOL,@CNSIZSOLD= CNSIZSOLD, @NOLOTE = NOLOTE  FROM IZSOLDT WHERE CNSIZSOLDT = @CNSIZSOLDT

		SELECT @IDARTICULO = IDARTICULO, @CANTIDADSOL = CANTIDADSOL FROM IZSOLD WHERE CNSIZSOLD = @CNSIZSOLD
		SELECT @IDSEDE =  IDSEDE FROM IZSOL WHERE CNSIZSOL = @CNSIZSOL
		SELECT TOP 1 @IDARTICULO_REAL =  IDARTICULO FROM IEXI WHERE NOLOTE = @NOLOTE


		BEGIN TRY 
	
			EXEC SPK_IZSOLDT_PROCESOS @IDARTICULO, @CNSIZSOLD, 'QUITAR', @IDSEDE, @IDARTICULO_REAL, @NOLOTE,@CANTIDAD, @CANTIDADSOL,  @CNSMOV, @CNSIZSOLDT
			UPDATE IZSOLD SET ESTADO=1 WHERE CNSIZSOLD =  @CNSIZSOLD AND IDARTICULO = @IDARTICULO

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END	
	IF @METODO = 'PROCESAR'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL, @CNSMOV = CNSMOV
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
		,CNSMOV					VARCHAR(20)			'$.CNSMOV'
		)
		SELECT @IDSEDE =  IDSEDE FROM IZSOL WHERE CNSIZSOL = @CNSIZSOL

		BEGIN TRY 
	
			EXEC SPK_PROCESA_IZSOLDT @CNSIZSOL, @CNSMOV, '01', @IDSEDE, @USUARIO
			UPDATE IZSOL SET SYS_ENTREGA = '', SYS_COMPUTER = '' WHERE CNSIZSOL = @CNSIZSOL
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END	
	IF @METODO = 'AGREGAR_TOMAR'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL, @IDBODEGA = IDBODEGA
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
		,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
		)
		UPDATE IZSOL SET SYS_ENTREGA = @SYS_COMPUTERNAME WHERE CNSIZSOL = @CNSIZSOL
		SELECT 'OK' OK
	END
	IF @METODO = 'AGREGAR'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL, @IDBODEGA = IDBODEGA
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
		,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
		)
	
		SELECT @CLASE =  IZSOL.CLASE,@NOADMISION = IZSOL.NOADMISION, @SYS_ENTREGA = COALESCE(IZSOL.SYS_ENTREGA,''), @IDSEDE = COALESCE(IZSOL.IDSEDE,@SEDE)  
		, @GRUPOABO = (SELECT GRUPOABO FROM DBO.FNK_GRUPOSANG_AFI(AFI.IDAFILIADO)), @GRUPORH = (SELECT GRUPORH FROM DBO.FNK_GRUPOSANG_AFI(AFI.IDAFILIADO)) 
		FROM  IZSOL
		LEFT JOIN HADM ON IZSOL.NOADMISION = HADM.NOADMISION
		LEFT JOIN AFI ON HADM.IDAFILIADO = AFI.IDAFILIADO
		WHERE  CNSIZSOL = @CNSIZSOL
		
		IF @SYS_ENTREGA <> '' AND @SYS_ENTREGA <> @SYS_COMPUTERNAME
		BEGIN
			SELECT 'TOMAR' DATO  ,  'Este Pedido esta siendo Atendido por otro Equipo. ' + @SYS_ENTREGA +' y el equipo de usted es  '+@SYS_COMPUTERNAME TEXTO
			RETURN
		END
		IF @CLASE NOT IN ('PROD','Consumo', 'CE','QXPGCX','HPRE') AND EXISTS (SELECT * FROM HADM WHERE  NOADMISION = @NOADMISION AND CERRADA IN (1,3)) 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La Admision se encuentra cerrada. No se puede generar movimientos'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		
		IF @CLASE NOT IN ('PROD','Consumo', 'CE','QXPGCX','HPRE') AND  DBO.FNK_VALORVARIABLE ('MVIGENCIAIZSOL') = 'SI'
		BEGIN
			IF (SELECT DATEDIFF(HH,FECHASOL, GETDATE()) FROM IZSOL WHERE  CNSIZSOL = @CNSIZSOL) > DBO.FNK_VALORVARIABLE ('HVIGENCIAIZSOL')
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La Solicitud se encuentra Vencida.... Ya no es posible su Entrega'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
		END
		IF @CLASE = 'CE' AND EXISTS (SELECT * FROM AUT WHERE  IDAUT = @NOADMISION AND ESTADO = 'Anulada')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT '¬°La Orden esta Anulada!, No se Pueden Generar Movimientos'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF @CLASE = 'CE' AND EXISTS (SELECT * FROM AUT WHERE  IDAUT = @NOADMISION AND GENEROCAJA = 1 AND TIPOCAJA = 'TFCJ') AND (SELECT DBO.FNK_VALORVARIABLE('IXCOUNTRY')) <> 'PERU'
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No se ha recuadado el Copago en Caja... por favor verifique.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		BEGIN TRY 
			IF @IDBODEGA <> DBO.FNK_VALORVARIABLE('IDBOD_HEMODERIVADOS')
			BEGIN
				IF NOT EXISTS (SELECT  * FROM IZSOLD WHERE IZSOLD.CNSIZSOL = @CNSIZSOL AND IZSOLD.ESTADO = 1)
				BEGIN
					SELECT 'OK' OK, 'NO' ABRE
					RETURN
				END
			END
			IF EXISTS (SELECT * FROM IZSOL WHERE  CNSIZSOL = @CNSIZSOL AND COALESCE(IDSEDE,'') = '' )
				UPDATE IZSOL SET IDSEDE = @SEDE WHERE CNSIZSOL = @CNSIZSOL

			IF NOT EXISTS (SELECT TOP 1 CNSMOV FROM IMOV WHERE IMOV.NODOCUMENTO = @CNSIZSOL AND IMOV.ESTADO = 0 )
			BEGIN
				BEGIN TRY 
					
					IF @CLASE <> 'Consumo'
					BEGIN
						SELECT @CLASE = 'ENTREGALOG'
					END

					EXEC SPK_CM_GENIMOV_SOL @CNSIZSOL, @IDSEDE, @USUARIO, @CLASE
					--EXEC SPQ_CM_GENIMOV_SOL 
					--	 @CNSIZSOL = @CNSIZSOL
					--	,@SEDE = @IDSEDE
					--	,@SYS_COMPUTERNAME = @SYS_COMPUTERNAME
					--	,@USUARIO = @USUARIO
					--	,@PROCESO = 'ENTREGALOG'
					--	,@IDBODEGA = @IDBODEGA
					 SELECT TOP 1 @CNSMOV= CNSMOV, @IDBODEGA = IMOV.IDBODEGA, @IDBODEGA_DESC = IBOD.DESCRIPCION  FROM IMOV
					 INNER JOIN IBOD ON IMOV.IDBODEGA = IBOD.IDBODEGA
					 WHERE IMOV.NODOCUMENTO = @CNSIZSOL AND IMOV.ESTADO = 0 ORDER BY IMOV.FECHAMOV ASC

				END TRY
				BEGIN CATCH
					INSERT INTO @TBLERRORES(ERROR)
					SELECT ERROR_MESSAGE()
				END CATCH
				IF EXISTS(SELECT 1 FROM @TBLERRORES)
				BEGIN
					SELECT 'KO' AS OK
					SELECT ERROR FROM @TBLERRORES
					RETURN
				END
			END
			ELSE
			BEGIN
				SELECT TOP 1 @CNSMOV= CNSMOV, @IDBODEGA = IMOV.IDBODEGA, @IDBODEGA_DESC = IBOD.DESCRIPCION  FROM IMOV
				INNER JOIN IBOD ON IMOV.IDBODEGA = IBOD.IDBODEGA
				WHERE IMOV.NODOCUMENTO = @CNSIZSOL AND IMOV.ESTADO = 0 ORDER BY IMOV.FECHAMOV ASC
			END

			UPDATE IZSOL SET SYS_ENTREGA = @SYS_COMPUTERNAME WHERE CNSIZSOL = @CNSIZSOL
			SELECT 'OK' OK , @CNSMOV CNSMOV, @IDBODEGA IDBODEGA, @IDBODEGA_DESC IDBODEGA_DESC, @GRUPOABO GRUPOABO ,@GRUPORH GRUPORH

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END	
	IF @METODO = 'VALIDA_CERRAR_IZSOL'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL, @IDBODEGA = IDBODEGA, @ACCION = ACCION
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
			CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
			,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
			,ACCION					VARCHAR(20)			'$.ACCION'
		)
	
		SELECT @CLASE =  CLASE,@NOADMISION = NOADMISION, @SYS_ENTREGA = COALESCE(SYS_ENTREGA,''), @IDSEDE = (COALESCE (IZSOL.IDSEDE,@SEDE)), @SECTOR = SECTOR  FROM  IZSOL WHERE  CNSIZSOL = @CNSIZSOL

		IF  NOT EXISTS (SELECT 1 FROM IBODS WHERE VALOR = @USUARIO AND UPPER(ACCESO) = 'SI' AND IDBODEGA = @IDBODEGA)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El Usuario No Tiene Privilegios para continuar'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		IF @ACCION = 'ABRIR' AND (DBO.FNK_VALORVARIABLE('MVIGENCIAIZSOL')) = 'SI' 
		BEGIN
			IF  (SELECT DATEDIFF(HH, IZSOL.FECHASOL,GETDATE()) FROM IZSOL WITH(NOLOCK) WHERE CNSIZSOL = @CNSIZSOL) > (DBO.FNK_VALORVARIABLE('HVIGENCIAIZSOL'))
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La Solicitud se encuentra Vencida.... Ya no es posible su Entrega'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
		END
		IF @ACCION = 'CERRAR' AND 
			EXISTS (SELECT * FROM IZSOL WITH(NOLOCK)
				INNER JOIN IMOV WITH(NOLOCK) ON IZSOL.CNSIZSOL = IMOV.NODOCUMENTO AND COALESCE(IMOV.ESTADO,0) = 0
				INNER JOIN IMOVH WITH(NOLOCK) ON IMOV.CNSMOV = IMOVH.CNSMOV
				AND IZSOL.CNSIZSOL = @CNSIZSOL)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La Solicitud tiene movimientos con detalle sin Confirmar.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		BEGIN TRY 
			IF @ACCION = 'CERRAR' AND EXISTS (SELECT CNSMOV, USUARIO FROM IMOV WHERE ESTADO=0 AND PROCEDENCIA='CM_SOL' AND NODOCUMENTO= @CNSIZSOL)
			BEGIN
				SELECT @CNSMOV = CNSMOV FROM IMOV WHERE ESTADO=0 AND PROCEDENCIA='CM_SOL' AND NODOCUMENTO= @CNSIZSOL
				EXEC SPK_PROCESA_IZSOLDT @CNSIZSOL, @CNSMOV, '01', @IDSEDE, @USUARIO
			END
			SELECT 'OK' OK

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'ABRIR_IZSOL'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL, @IDBODEGA = IDBODEGA, @ACCION = ACCION
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
		,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
		,ACCION					VARCHAR(20)			'$.ACCION'
		)
	
		SELECT @CLASE =  CLASE,@NOADMISION = NOADMISION, @SYS_ENTREGA = COALESCE(SYS_ENTREGA,''), @IDSEDE = (COALESCE (IZSOL.IDSEDE,@SEDE)), @SECTOR = SECTOR  FROM  IZSOL WHERE  CNSIZSOL = @CNSIZSOL

		IF  (SELECT COUNT(*) FROM IZSOLD WHERE  CNSIZSOL = @CNSIZSOL  AND IZSOLD.ESTADO = 1 ) = 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Esta Solicitud no tiene Item¬¥s Pendientes Por Confirmar'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		BEGIN TRY 
			UPDATE IZSOL SET ESTADO = 1 , USUARIOCIERRA = @USUARIO, F_CANCEL = DBO.FNK_FECHA_SIN_MLS(GETDATE())
			, SYS_COMPUTER = @SYS_COMPUTERNAME
			WHERE IZSOL.CNSIZSOL = @CNSIZSOL

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'CERRAR_IZSOL'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL, @IDBODEGA = IDBODEGA, @MOTIVO = MOTIVO, @OBSERVACION = OBSERVACION
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
		,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
		,MOTIVO					VARCHAR(20)			'$.MOTIVO'
		,OBSERVACION			VARCHAR(200)		'$.OBSERVACION'
		)
	
		BEGIN TRY 
			UPDATE IMOV SET ESTADO=2 WHERE PROCEDENCIA='CM_SOL' AND ESTADO=0 AND NODOCUMENTO= @CNSIZSOL
			AND NOT EXISTS (SELECT 1 FROM IMOVH WHERE IMOVH.CNSMOV=IMOV.CNSMOV)

			UPDATE IZSOL SET ESTADO = '2'
			, USUARIOCIERRA= @USUARIO
			,F_CANCEL= DBO.FNK_FECHA_SIN_MLS(GETDATE())
			,SYS_COMPUTER= @SYS_COMPUTERNAME, CODIGOCERRAR = @MOTIVO, DESCRIPCERRAR = @OBSERVACION
			WHERE CNSIZSOL = @CNSIZSOL

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	
	IF @METODO = 'CONF_MOVIMIENTO'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL, @IDBODEGA = IDBODEGA, @CNSMOV = CNSMOV
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (	CNSIZSOL	VARCHAR(20)		'$.CNSIZSOL'
					,IDBODEGA	VARCHAR(20)		'$.IDBODEGA'
					,CNSMOV		VARCHAR(20)		'$.CNSMOV' )
	
		SELECT @CLASE =  CLASE,@NOADMISION = NOADMISION, @SYS_ENTREGA = COALESCE(SYS_ENTREGA,''), @IDSEDE = (COALESCE (IZSOL.IDSEDE,@SEDE)), @SECTOR = SECTOR  FROM  IZSOL WHERE  CNSIZSOL = @CNSIZSOL

		IF  (SELECT ESTADO FROM IMOV WHERE CNSMOV = @CNSMOV) = 1
		BEGIN
			SELECT 'OK' OK
			--INSERT INTO @TBLERRORES(ERROR) SELECT 'El movimiento se encuentra Confirmado'
			--SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF @CLASE NOT IN ('PROD','Consumo', 'CE') AND @SECTOR <> 'FORMULA' AND EXISTS (SELECT * FROM HADM WHERE  NOADMISION = @NOADMISION AND CERRADA IN (1) AND FACTURABLE = 1) --STORRES 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La Admision se encuentra cerrada. No se puede generar movimientos'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		
		IF  (SELECT COUNT(1) FROM IMOVH WHERE CNSMOV = @CNSMOV)=0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No  Hay Ning√∫n Articulo Para Confirmar'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		BEGIN TRY 
			IF @CLASE IN ('OMEDICA','24HORAS') 
			BEGIN
				SELECT @IDTERCERO = IDTERCERO FROM HADM WHERE  NOADMISION = @NOADMISION
				SELECT @IDAREA = IDAREA,@CCOSTO = CCOSTO FROM HHAB WHERE NOADMISION = @NOADMISION

				UPDATE IMOV SET IDTERCERO = @IDTERCERO WHERE CNSMOV = @CNSMOV
				UPDATE IMOV SET IDAREA = @IDAREA, CCOSTO = @CCOSTO WHERE CNSMOV = @CNSMOV
			END
			IF @CLASE IN ('CE') 
			BEGIN
				SELECT @IDTERCERO = IDTERCEROCA FROM AUT WHERE IDAUT = @NOADMISION
				SELECT @IDAREA = IDAREA,@CCOSTO = CCOSTO FROM AUT WHERE NOADMISION = @NOADMISION

				UPDATE IMOV SET IDTERCERO = @IDTERCERO WHERE CNSMOV = @CNSMOV
				UPDATE IMOV SET IDAREA = @IDAREA, CCOSTO = @CCOSTO WHERE CNSMOV = @CNSMOV
			END
			
			EXEC SPK_CONFIRMASAL_CM @CNSMOV , @USUARIO, @IDSEDE, 'LOG_PROD'
			SELECT @ESTADO_IMOV = ESTADO FROM IMOV WHERE CNSMOV = @CNSMOV

			IF @ESTADO_IMOV = '1'
			BEGIN
				IF @CLASE NOT IN ('PROD','Consumo')
				BEGIN
					EXEC SPK_GENCOBRO_INSCENTRAL @CNSMOV, @NOADMISION, @SECTOR, @USUARIO, @IDSEDE
				END
			END

			IF (SELECT COUNT(*) FROM IZSOLD WHERE CNSIZSOL= @CNSIZSOL AND ESTADO = 1)=0
			BEGIN
				UPDATE IZSOL SET ESTADO = 2 WHERE CNSIZSOL= @CNSIZSOL 
			END

			IF DBO.FNK_VALORVARIABLE('IXCOUNTRY') = 'PERU' AND @CLASE = 'CE'
			BEGIN
				UPDATE AUT SET AUT.ESTADO = 'AnuladaPE' WHERE AUT.IDAUT = @NOADMISION

				PRINT 'Genero consecutivo IDAUT'
				EXEC SPK_GENCONSECUTIVO '01',@SEDE,'@AUT',@IDAUT OUTPUT
				SELECT @IDAUT = @SEDE + RIGHT('00000000'+CONVERT(VARCHAR(8),@IDAUT),8)
				PRINT @IDAUT

				PRINT 'Genero consecutivo NOAUT'
				EXEC SPK_GENCONSECUTIVO '01',@SEDE,'@AUTF',@NOAUT OUTPUT
				SELECT @NOAUT = @SEDE + RIGHT('00000000'+CONVERT(VARCHAR(8),@NOAUT),8)
				PRINT @NOAUT 
				--CNSMOV
				INSERT INTO AUT (IDAUT, NOAUT, FECHA, FECHAVENCE, IDAFILIADO, NUMCARNET, IDPLAN, PREFIJO, IDSEDE, TIPOAUTORIZACION, 
					ALTOCOSTO, ATENCION, IMPUTABLE_A, IDSOLICITANTE, IDPROVEEDOR, ESTADO, AUTORIZADOPOR, FECHAAUTORIZA, IDPESPECIAL, AUTORIZADO, 
					USUARIO, IDCAUSAEXT, AMBITO, FINALIDAD, PERSONAL_AT, DXPPAL, TIPOURGENCIA, SPD, IDCONTRATANTE, TIPOCOPAGO, 
					CLASECONT, FECHAGEN, PROCEDENCIA, IDAREAH, IDAREA, CCOSTO, NIVELATENCION, FACTURADA, FACTURABLE, IDIPS, 
					CLASECONTRATO, ENPAQUETE, SOAT, COBRARA, IDTERCEROCA, CONSECUTIVOHCA, SYS_COMPUTERNAME, TIPOUSUARIO, IDPLAN_AFI, IDTERCERO_AFI, 
					CLASEORDEN, URGENCIA, VALORBENEFICIO, VALOREXEDENTE, VALORTOTALCOSTO, VALORCOPAGOCOSTO, IMPRESO, CXPGEN, CXCGEN, PEDIDOINV,
					ESCONTINUACION, SEMANASCOT, LIQUIDAPC, ESDEINV, VFACTURAS, DESCUENTO, MARCAFAC, PERIODICIDAD, CONTINUACION, MARCAENV,
					COPAGOPROPIO, ESDELAB, ENLAB, PIDECCOSTO, RIESGO, NUMAUTORIZA, TIPOAFILIADO, MENTREGA, CNSMOV)
				SELECT @IDAUT, @NOAUT, DBO.FNK_GETDATE(), DBO.FNK_GETDATE(), IDAFILIADO, NUMCARNET, IDPLAN, PREFIJO, IDSEDE, TIPOAUTORIZACION, 
					ALTOCOSTO, ATENCION, IMPUTABLE_A, IDSOLICITANTE, IDPROVEEDOR, ESTADO, AUTORIZADOPOR, FECHAAUTORIZA, IDPESPECIAL, AUTORIZADO, 
					USUARIO, IDCAUSAEXT, AMBITO, FINALIDAD, PERSONAL_AT, DXPPAL, TIPOURGENCIA, SPD, IDCONTRATANTE, TIPOCOPAGO, 
					CLASECONT, FECHAGEN, PROCEDENCIA, IDAREAH, IDAREA, CCOSTO, NIVELATENCION, FACTURADA, FACTURABLE, IDIPS, 
					CLASECONTRATO, ENPAQUETE, SOAT, COBRARA, IDTERCEROCA, CONSECUTIVOHCA, SYS_COMPUTERNAME, TIPOUSUARIO, IDPLAN_AFI, IDTERCERO_AFI, 
					CLASEORDEN, URGENCIA, VALORBENEFICIO, VALOREXEDENTE, VALORTOTALCOSTO, VALORCOPAGOCOSTO, IMPRESO, CXPGEN, CXCGEN, PEDIDOINV,
					ESCONTINUACION, SEMANASCOT, LIQUIDAPC, ESDEINV, VFACTURAS, DESCUENTO, MARCAFAC, PERIODICIDAD, CONTINUACION, MARCAENV,
					COPAGOPROPIO, ESDELAB, ENLAB, PIDECCOSTO, RIESGO, NUMAUTORIZA, TIPOAFILIADO, MENTREGA, @CNSMOV
				FROM AUT WHERE AUT.IDAUT = @NOADMISION

				INSERT INTO AUTD ( IDAUT, NO_ITEM, IDSERVICIO, CANTIDAD, VALOR, VALORCOPAGO, VALORCOPAGOCOSTO, VALOREXCEDENTE, VALORTOTALCOSTO, IDPLAN, 
					IMPRESO, AUTORIZADO, COMENTARIOS, PCOBERTURA, OBS, NORDEN, CCOSTO, CODIGOCPCJ, MARCAPAGO, NOAUTORIZEXT, 
					ESDELAB, ENLAB, IDTERCEROCA, IDCONTRATO, FACTURADA, N_FACTURA, CNSFCT, AQUIENCOBRO, MARCACOPAGOORDEN, VALORPROV, 
					PCOSTO, ITFC, CNSITFC, SYS_COMPUTERNAME, NOCOBRABLE, MDOSIFICACION, CANTIDIA, DIAS, FRECUENCIA, CODCUPS, 
					POSOLOGIA, SINCRONIZADO, APOYODG_AMBITO, CITAAUTORIZADA, CLASEPOSOLOGIA, MARCA, USUARIOMARCA, 
					NUM_ORDEN, PROCESADA, PRIORIDAD)
				SELECT @IDAUT, ROW_NUMBER() OVER (ORDER BY IMOVH.IDARTICULO), IMOVH.IDARTICULO, IMOVH.CANTIDAD, IMOVH.PCOSTO, 0, 0, 0, IMOVH.PCOSTO*IMOVH.CANTIDAD, AUT.IDPLAN,
					0, 0, '', 100, '', '', AUT.CCOSTO, '', 0, @NOAUT, 
					0, 0, AUT.IDTERCEROCA, 'SIN_DEFINIR', 0, '', '', 'N', 0, NULL, 
					0, 0, NULL, @SYS_COMPUTERNAME, 0, 0, 0, 0, 0, SER.CODCUPS, 
					'', 0, SER.AMBITO, 0, 'Tomar', 0, '', 0, 0, 0
				FROM IMOVH 
				INNER JOIN AUT ON AUT.IDAUT = @IDAUT
				INNER JOIN SER ON IMOVH.IDARTICULO = SER.IDSERVICIO
				WHERE IMOVH.CNSMOV = @CNSMOV AND AUT.IDAUT = @IDAUT

				UPDATE IMOV SET NOCONSECUTIVO = @IDAUT WHERE  CNSMOV = @CNSMOV
				UPDATE AUT SET NO_ITEMES = (SELECT COUNT(*) FROM AUTD WHERE AUTD.IDAUT = @IDAUT ) WHERE AUT.IDAUT = @IDAUT

				SELECT  TOP 1 @PREFIJO =   SER.PREFIJO FROM IMOVH 
					INNER JOIN SER ON IMOVH.IDARTICULO = SER.IDSERVICIO
				WHERE CNSMOV = @CNSMOV
				GROUP BY SER.PREFIJO

				UPDATE AUT SET AUT.PREFIJO = @PREFIJO, AUT.CNSMOV = @CNSMOV  WHERE AUT.IDAUT = @IDAUT

			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'VALIDA_CODIGO_BARRA'
	BEGIN
		SELECT @IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULO')
		
		BEGIN TRY 
			SELECT 'OK' OK
			SELECT TABLA, CAMPO, CODIGO, DATO1 FROM TGEN WHERE  TABLA ='IART' AND CAMPO = 'CODEBAR' AND DATO1 = @IDARTICULO
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'AGREGA_CODIGO_BARRA'
	BEGIN
		SELECT @IDARTICULO = IDARTICULO, @CODIGO = CODIGO
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		IDARTICULO				VARCHAR(20)			'$.IDARTICULO'
		,CODIGO					VARCHAR(20)			'$.CODIGO'
		)
		IF  EXISTS (SELECT TOP 100   * FROM TGEN WHERE  CODIGO =@CODIGO AND TABLA ='IART' AND CAMPO = 'CODEBAR')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT '√âste codigo de barras ya lo tiene asignado el art√≠culo.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		BEGIN TRY 
			INSERT INTO TGEN (TABLA, CAMPO, CODIGO, DATO1)
			SELECT 'IART', 'CODEBAR', @CODIGO, @IDARTICULO
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'BORRA_CODIGO_BARRA'
	BEGIN
		SELECT @IDARTICULO = IDARTICULO, @CODIGO = CODIGO
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		IDARTICULO				VARCHAR(20)			'$.IDARTICULO'
		,CODIGO					VARCHAR(20)			'$.CODIGO'
		)

		BEGIN TRY 
			DELETE FROM TGEN WHERE TABLA ='IART' AND CAMPO = 'CODEBAR' AND CODIGO = @CODIGO
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'IMPRE_MOVIMIENTO'
	BEGIN
		SELECT @CNSMOV = CNSMOV
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSMOV				VARCHAR(20)			'$.CNSMOV'
		)
--query2
		BEGIN TRY 
			/* CABECERA */ --USUARIOSOL Solicitante
			SELECT 'OK'OK,IZSOL.USUARIOSOL , USUSU.NOMBRE, IZSOL.CNSIZSOL, IMOV.CNSMOV, IMOV.FECHAMOV, IMOV.CCOSTO, IMOV.IDAREA, IMOV.IDBODEGA, IBOD.DESCRIPCION [IDBODEGA_DESC], IMOV.IDTIPOMOV, ITMO.DESCRIPCION [IDTIPOMOV_DESC]
			, COALESCE(AUT.IDAUT,HADM.NOADMISION)NOADMISION

			,AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.TIPO_DOC, AFI.IDAFILIADO, COALESCE(AU.IDTERCERO,CI.IDTERCERO,HADM.IDTERCERO), COALESCE(AU.RAZONSOCIAL,CI.RAZONSOCIAL,TER.RAZONSOCIAL) RAZONSOCIAL, COALESCE(AUT.IDPLAN,CIT.IDPLAN,HADM.IDPLAN), COALESCE(PCIT.DESCPLAN, PAUT.DESCPLAN, PLN.DESCPLAN) DESCPLAN ,IMOV.IDITAR, ITAR.DESCRIPCION [IDITAR_DESC], CEN.DESCRIPCION [CCOSTO_DESC], AFU.DESCRIPCION [IDAREA_DESC], 
			IMOV.ESTADO, CASE WHEN IMOV.ESTADO = 0 THEN 'NO CONFIRMADO' WHEN IMOV.ESTADO = 1 THEN 'CONFIRMADO' END [ESTADO_DESC]
			,CASE IZSOL.CLASE WHEN 'QXPGCX' THEN  
					CASE WHEN LEN(IZSOL.CNSIZSOLM)<10 THEN  (SELECT IDAFILIADO FROM CXPS WHERE CXPS.NOPROGRAMACION = IZSOL.NOADMISION ) 
							ELSE (SELECT H.IDAFILIADO FROM QXPCX INNER JOIN HADM H ON QXPCX.NOADMISION = H.NOADMISION WHERE QXPCX.CONSECUTIVO = IZSOL.CNSIZSOLM)
							END
				ELSE (SELECT IDAFILIADO FROM HADM WHERE HADM.NOADMISION = IZSOL.NOADMISION) END
			FROM IMOV 
			INNER JOIN IZSOL ON IMOV.NODOCUMENTO = IZSOL.CNSIZSOL
			LEFT JOIN USUSU ON IZSOL.USUARIOSOL = USUSU.USUARIO
			LEFT JOIN ITMO ON IMOV.IDTIPOMOV = ITMO.IDTIPOMOV
			LEFT JOIN IBOD ON IMOV.IDBODEGA = IBOD.IDBODEGA
			LEFT JOIN HADM ON IZSOL.NOADMISION = HADM.NOADMISION
			
			LEFT JOIN QXPCX ON QXPCX.CONSECUTIVO = IZSOL.CNSIZSOLM  AND IZSOL.CLASE = 'QXPGCX'      
			LEFT JOIN HADM H ON QXPCX.NOADMISION = H.NOADMISION   AND IZSOL.CLASE = 'QXPGCX'     
			LEFT JOIN CXPS ON  CXPS.NOPROGRAMACION  = CASE WHEN IZSOL.CLASE = 'QXPGCX'  AND   LEN(IZSOL.NOADMISION)<10 THEN IZSOL.NOADMISION ELSE  '9999'  END
			LEFT JOIN CIT ON IZSOL.NOADMISION = CIT.CONSECUTIVO AND IZSOL.CLASE='ONCO' 
			LEFT JOIN AUT ON IZSOL.NOADMISION = AUT.IDAUT /*AND IZSOL.CLASE='CE'*/
			LEFT JOIN AFI ON AFI.IDAFILIADO = CASE  WHEN IZSOL.CLASE = 'QXPGCX' AND LEN(IZSOL.CNSIZSOLM)<10 THEN  CXPS.IDAFILIADO
										WHEN IZSOL.CLASE = 'QXPGCX' AND LEN(IZSOL.CNSIZSOLM)>=10 THEN  H.IDAFILIADO
										WHEN IZSOL.CLASE = 'CE'  THEN  AUT.IDAFILIADO
										WHEN IZSOL.CLASE = 'ONCO'  THEN  CIT.IDAFILIADO
										ELSE HADM.IDAFILIADO END

			LEFT JOIN PLN ON HADM.IDPLAN = PLN.IDPLAN
			LEFT JOIN TER ON HADM.IDTERCERO = TER.IDTERCERO
			LEFT JOIN TER CI ON CI.IDTERCERO = CIT.IDTERCEROCA
			LEFT JOIN TER AU ON AU.IDTERCERO = AUT.IDTERCEROCA		
			LEFT JOIN PLN PAUT ON PAUT.IDPLAN = AUT.IDPLAN								 
			LEFT JOIN PLN PCIT ON PCIT.IDPLAN = CIT.IDPLAN	
			LEFT JOIN ITAR ON IMOV.IDITAR = ITAR.IDITAR
			LEFT JOIN CEN ON IMOV.CCOSTO = CEN.CCOSTO
			LEFT JOIN AFU ON IMOV.IDAREA = AFU.IDAREA
			WHERE IMOV.CNSMOV = @CNSMOV

			/* IMOVH */
			SELECT IMOVH.CNSMOV, IMOVH.IDARTICULO, IART.DESCRIPCION, COALESCE(IART.IDUNIDAD,'')IDUNIDAD, COALESCE(IMOVH.CANTPEDIDA,0) CANTPEDIDA
			, COALESCE(IMOVH.PCOSTOANTES,0) PCOSTOANTES,IMOVH.PCOSTOANTES*IMOVH.CANTPEDIDA [PCOSTO]  ,IMOVH.PVENTA 
			,IMOVH.NOLOTE, IMOVH.NOLOTEPEDIDO, IMOVH.FECHAVENCE FROM IMOVH
			INNER JOIN IART ON IMOVH.IDARTICULO = IART.IDARTICULO
			WHERE IMOVH.CNSMOV = @CNSMOV

			/* TOTALES */
			SELECT SUM(CANTPEDIDA) TOTAL_CANTPEDIDA, SUM(PCOSTOANTES) TOTAL_PCOSTOANTES,SUM( IMOVH.PCOSTOANTES*IMOVH.CANTPEDIDA) TOTAL_PCOSTO FROM IMOVH WHERE CNSMOV = @CNSMOV

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'VALIDA_CODIGO'
	BEGIN
		SELECT @CODIGO = CODIGO, @CNSMOV = CNSMOV,  @IDARTICULO = IDARTICULO, @IDBODEGA = IDBODEGA, @CNSIZSOL = CNSIZSOL
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
			CODIGO					VARCHAR(20)			'$.CODIGO'
			,CNSMOV					VARCHAR(20)			'$.CNSMOV'
			,IDARTICULO				VARCHAR(20)			'$.IDARTICULO'
			,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
			,CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
		)
		BEGIN TRY 

			SELECT 
				@ERROR = A.ERROR
				,@IDARTICULO = LTRIM(RTRIM(A.IDARTICULO))
				,@IART_DESCRIPCION = LTRIM(RTRIM(IART.DESCRIPCION))
				,@NOLOTE = LTRIM(RTRIM(A.NOLOTE))
				,@FVENCE = A.FECHAVENCE 
				,@IDARTICULO_REAL = LTRIM(RTRIM(A.IDARTICULO_IMOVH))
			FROM FNK_VLIDABARCODE_IZSOL (@CODIGO, @CNSMOV) A
			 LEFT JOIN IART ON IART.IDARTICULO = A.IDARTICULO

			 PRINT '@ERROR:				' + CAST(@ERROR AS VARCHAR)
			 PRINT '@IDARTICULO:		' + COALESCE(@IDARTICULO, '')
			 PRINT '@IART_DESCRIPCION:	' + COALESCE(@IART_DESCRIPCION, '')
			 PRINT '@NOLOTE:			' + COALESCE(@NOLOTE, '')
			 PRINT '@FVENCE:			' + CONVERT(VARCHAR,@FVENCE)
			 PRINT '@IDARTICULO_REAL:	' + COALESCE(@IDARTICULO_REAL, '')

			 IF @ERROR = 0
			 BEGIN
				  SELECT @RAZONSOCIAL = LTRIM(RTRIM(TER.RAZONSOCIAL))
					,@CODCUM = LTRIM(RTRIM(IART.CODCUM))
					,@REGINVIMA = LTRIM(RTRIM(IART.REGINVIMA))
					,@IDUNIDAD  = LTRIM(RTRIM(IDUNIDAD))
					,@IDSERVICIO = LTRIM(RTRIM(IART.IDSERVICIO))
				  FROM IART INNER JOIN TER ON TER.IDTERCERO = IART.IDFABRICANTE 
				  WHERE IDARTICULO = @IDARTICULO

				  SELECT @CANTIDADSOL = CANTIDADSOL
					, @CANTIDAD_ENTREGA = (SELECT COALESCE(SUM(CANTIDADSOL),0) FROM IZSOLDT WHERE IZSOLDT.CNSIZSOLD = IZSOLD.CNSIZSOLD)
                    , @CANTIDAD_PENDIENTE = IZSOLD.CANTIDADSOL - (SELECT COALESCE(SUM(CANTIDADSOL),0) FROM IZSOLDT WHERE IZSOLDT.CNSIZSOLD = IZSOLD.CNSIZSOLD)
					FROM IZSOLD WHERE IZSOLD.CNSIZSOL = @CNSIZSOL AND IZSOLD.IDARTICULO = @IDARTICULO_REAL

				  SELECT OK = 'OK'
					,@ERROR AS CODMENSAJE
					,@IDARTICULO AS IDARTICULO
					,@IART_DESCRIPCION AS DESCRIPCION
					,@NOLOTE AS NOLOTE
					,@FVENCE AS FECHAVENCE 
					,@IDARTICULO_REAL AS IDARTICULO_IMOVH 
					,@RAZONSOCIAL AS RAZONSOCIAL
					,@CODCUM AS CODCUM
					,@REGINVIMA AS REGINVIMA
					,@IDUNIDAD  AS IDUNIDAD 
					,SUM(IEXI.EXISLOTE) EXISLOTE
					,@CANTIDADSOL AS CANTIDADSOL
					,@CANTIDAD_ENTREGA AS CANTIDAD_ENTREGA
					,@CANTIDAD_PENDIENTE AS CANTIDAD_PENDIENTE
					,CASE WHEN @CANTIDAD_PENDIENTE<= SUM(IEXI.EXISLOTE) THEN  @CANTIDAD_PENDIENTE
						WHEN @CANTIDAD_PENDIENTE > SUM(IEXI.EXISLOTE) THEN @CANTIDAD_PENDIENTE-SUM(IEXI.EXISLOTE) END
						 AS CANTIDAD_VALIDA
					FROM IEXI, IZSOLD WHERE IEXI.NOLOTE = @NOLOTE AND IEXI.IDARTICULO = @IDARTICULO
					AND IZSOLD.CNSIZSOL = @CNSIZSOL AND IZSOLD.IDARTICULO = @IDARTICULO_REAL


				SELECT TOP 1  IEXI.IDARTICULO,IEXI.NOLOTE
					,IEXI.FECHAVENCE
					,FECHAVENCE_DESCRITA=CONCAT(DATENAME(dw, IEXI.FECHAVENCE),' ',DATEPART(DAY,IEXI.FECHAVENCE),' de ', DATENAME(m,IEXI.FECHAVENCE), ' de ', YEAR(IEXI.FECHAVENCE))
					,TER.RAZONSOCIAL,IART.CODCUM
					,IART.REGINVIMA,IART.IDUNIDAD
					,CONVERT(INT,IEXI.EXISLOTE) AS EXISLOTE
					,IART.DESCRIPCION
					,NOLOTEPEDIDO = LTRIM(RTRIM(IEXI.NOLOTEPEDIDO))
				 FROM IEXI INNER JOIN IART ON IART.IDARTICULO = IEXI.IDARTICULO
				 INNER JOIN SER  ON SER.IDSERVICIO = IART.IDSERVICIO
				 LEFT JOIN TER  ON  TER.IDTERCERO = IART.IDFABRICANTE
				 WHERE EXISLOTE > 0 
				 AND IDBODEGA = @IDBODEGA
				 AND IART.IDSERVICIO = @IDSERVICIO
				 AND CONVERT(DATE,FECHAVENCE) < CONVERT(DATE, @FVENCE)
				 AND CONVERT(DATE,FECHAVENCE) >= CONVERT(DATE,GETDATE())
				 AND IEXI.NOLOTE <> @NOLOTE
				 ORDER BY FECHAVENCE

				RETURN
			 END
				
			SELECT 'OK' AS OK, @ERROR AS CODMENSAJE
		 
			 IF @ERROR = 1 -- ERROR EN FORMATO DE CODIGO DE BARRAS
				PRINT '1'
			 IF @ERROR = 2 -- NO HAY EXISTENCIA SUFICIENTE
				PRINT '2'
			 IF @ERROR = 3 -- ESTE ARTICULO NO FUE SOLICITADO
				PRINT '3'
			 IF @ERROR = 4 -- EL ARTICULO YA FUE SELECCIONADO PREVIAMENTE
				PRINT '4'
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		RETURN
	END	
	IF @METODO = 'VALIDA_TOTAL'
	BEGIN
		SELECT @CODIGO = CODIGO, @CNSMOV = CNSMOV,   @IDBODEGA = IDBODEGA, @CANTIDAD = CANTIDAD, @CNSIZSOL = CNSIZSOL
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CODIGO					VARCHAR(20)			'$.CODIGO'
		,CNSMOV					VARCHAR(20)			'$.CNSMOV'
		,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
		,CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
		,CANTIDAD				INT					'$.CANTIDAD'
		)

		SELECT 
				@ERROR = A.ERROR
				,@IDARTICULO = LTRIM(RTRIM(A.IDARTICULO))
				,@IART_DESCRIPCION = LTRIM(RTRIM(IART.DESCRIPCION))
				,@NOLOTE = LTRIM(RTRIM(A.NOLOTE))
				,@FVENCE = A.FECHAVENCE 
				,@IDARTICULO_REAL = LTRIM(RTRIM(A.IDARTICULO_IMOVH))
			FROM FNK_VLIDABARCODE_IZSOL (@CODIGO, @CNSMOV) A
			 LEFT JOIN IART ON IART.IDARTICULO = A.IDARTICULO

			 PRINT '@ERROR:				' + CAST(@ERROR AS VARCHAR)
			 PRINT '@IDARTICULO:		' + COALESCE(@IDARTICULO, '')
			 PRINT '@IART_DESCRIPCION:	' + COALESCE(@IART_DESCRIPCION, '')
			 PRINT '@NOLOTE:			' + COALESCE(@NOLOTE, '')
			 PRINT '@FVENCE:			' + CONVERT(VARCHAR,@FVENCE)
			 PRINT '@IDARTICULO_REAL:	' + COALESCE(@IDARTICULO_REAL, '')

			 SELECT @CANTIDADSOL = CANTIDADSOL, @IDSEDE  = IZSOL.IDSEDE, @CNSIZSOLD = IZSOLD.CNSIZSOLD
			, @CANTIDAD_ENTREGA = (SELECT COALESCE(SUM(CANTIDADSOL),0) FROM IZSOLDT WHERE IZSOLDT.CNSIZSOLD = IZSOLD.CNSIZSOLD)
            , @CANTIDAD_PENDIENTE = IZSOLD.CANTIDADSOL - (SELECT COALESCE(SUM(CANTIDADSOL),0) FROM IZSOLDT WHERE IZSOLDT.CNSIZSOLD = IZSOLD.CNSIZSOLD)
			FROM IZSOLD 
			INNER JOIN IZSOL ON IZSOLD.CNSIZSOL = IZSOLD.CNSIZSOL
			WHERE IZSOLD.CNSIZSOL = @CNSIZSOL AND IZSOLD.IDARTICULO = @IDARTICULO_REAL
	
		IF  (SELECT DBO.FNK_VALORVARIABLE('RECETARIO_MC_DIGITAL')) = 'SI' AND (SELECT COUNT(1) FROM IZSOLD
                                INNER JOIN IZSOL ON IZSOL.CNSIZSOL=IZSOLD.CNSIZSOL INNER JOIN IART ON IART.IDARTICULO=IZSOLD.IDARTICULO
                                WHERE IZSOLD.CNSIZSOLD= @CNSIZSOLD AND IART.CONT_ESPECIAL=1 
                                AND NOT EXISTS (SELECT 1 FROM HCATDMC A INNER JOIN HCATDMCD B ON A.ID=B.HCATDMC_ID
                                               WHERE A.NOADMISION=IZSOL.NOADMISION AND B.IDARTICULO=IZSOLD.IDARTICULO AND A.PROCEDENCIA='H'
                                                       AND A.ESTADO='ACTIVO' AND CAST(A.FECHA AS DATE)=CAST(IZSOL.FECHASOL AS DATE) )) > 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Este medicamento aun no presenta recetario de mediamentos de control'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		IF  @CANTIDADSOL  = @CANTIDAD_ENTREGA
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Este Art√≠culo ya tiene La Cantidad Cumplida.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF  @CANTIDADSOL < (COALESCE(@CANTIDAD_ENTREGA,0)+@CANTIDAD)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Cantidad es mayor a los solicitado.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT TOP 1  @NOLOTE = NOLOTE, @NOLOTEPEDIDO = NOLOTEPEDIDO  , @EXISLOTE = EXISLOTE, @IDARTICULO_REAL = IEXI.IDARTICULO
		FROM IEXI  
			INNER JOIN IART ON IEXI.IDARTICULO = IART.IDARTICULO 
		WHERE IEXI.EXISLOTE>0  AND IART.IDSERVICIO =  @IDARTICULO AND CONVERT(DATE,IEXI.FECHAVENCE) >= CONVERT(DATE,GETDATE())
		ORDER BY  IEXI.FECHAVENCE ASC 

		IF  @EXISLOTE < @CANTIDAD
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Cantidad Supera el L√≠mite de existencias.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		
		BEGIN TRY 
			EXEC SPK_IZSOLDT_PROCESOS @IDARTICULO_REAL, @CNSIZSOLD, 'AGREGAR', @IDSEDE, @IDARTICULO, @NOLOTE, @CANTIDAD, @CANTIDADSOL, @CNSMOV, ''

			IF @CANTIDADSOL = (SELECT SUM(COALESCE(CANTIDADSOL,0)) FROM IZSOLDT WHERE CNSIZSOLD= @CNSIZSOLD)
			BEGIN
				UPDATE IZSOLD SET ESTADO = 0 WHERE  CNSIZSOLD = @CNSIZSOLD
			END

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END	
	IF @METODO = 'ACTUALIZA_CARGO'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL, @IDBODEGA = IDBODEGA, @CNSMOV = CNSMOV
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSIZSOL				VARCHAR(20)			'$.CNSIZSOL'
		,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
		,CNSMOV					VARCHAR(20)			'$.CNSMOV'
		)
	
		SELECT @CLASE =  CLASE,@NOADMISION = NOADMISION, @SYS_ENTREGA = COALESCE(SYS_ENTREGA,''), @IDSEDE = IDSEDE, @SECTOR = SECTOR  FROM  IZSOL WHERE  CNSIZSOL = @CNSIZSOL
		SELECT @ESTADO_IMOV = ESTADO FROM IMOV WHERE CNSMOV = @CNSMOV

		BEGIN TRY 
		
		IF @CLASE NOT IN ('PROD','Consumo') 
		BEGIN
			IF @CLASE IN ('SENFER','APOYODX') 
			BEGIN
				EXEC SPK_GENCOBRO_INSCENTRAL  @CNSMOV, @NOADMISION, @SECTOR, @USUARIO, @IDSEDE
			END
			ELSE
			BEGIN
				IF (SELECT DBO.FNK_VALORVARIABLE('MODOCOBROMEDHBALI')) <> 'HBALI'
					EXEC SPK_GENCOBRO_INSCENTRAL  @CNSMOV, @NOADMISION, @SECTOR, @USUARIO, @IDSEDE
			END
		END

			

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'CORREGIR_IMOVH'
	BEGIN
		SELECT @IDARTICULO = IDARTICULO, @IDBODEGA = IDBODEGA, @CNSMOV = CNSMOV, @NOLOTE = NOLOTE, @NOLOTEPEDIDO = NOLOTEPEDIDO
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		IDARTICULO				VARCHAR(20)			'$.IDARTICULO'
		,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
		,CNSMOV					VARCHAR(20)			'$.CNSMOV'
		,NOLOTE					VARCHAR(20)			'$.NOLOTE'
		,NOLOTEPEDIDO			VARCHAR(20)			'$.NOLOTEPEDIDO'
		)

		SELECT  @CNSTRAN = IMOVH.CNSTRAN, @CNSIZSOL = IMOV.NODOCUMENTO FROM IMOVH
		INNER JOIN IMOV ON IMOVH.CNSMOV = IMOV.CNSMOV
		WHERE IMOVH.IDARTICULO = @IDARTICULO AND IMOVH.CNSMOV = @CNSMOV  AND IMOVH.NOLOTE = @NOLOTE

		IF (SELECT COALESCE(ESTADO,0) FROM IMOV WHERE  CNSMOV = @CNSMOV) = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro de movmiento, ya esta Confirmado'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT IDITAR FROM IART WHERE IDARTICULO = @IDARTICULO) = (SELECT DBO.FnK_ValorVariable('IDITARHEMODERIVADOS'))
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Este Articulo es de Banso de Sangre y la Pruebas Cruzadas Fueron Existosas No Se Puede Quitar de la Entrega'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		BEGIN TRY 
			UPDATE IEXI SET EXISLOTE=EXISLOTE+A.CANTIDAD 
            FROM IEXI INNER JOIN 
               (SELECT IDARTICULOREAL, NOLOTE, SUM(ISNULL(CANTIDADSOL,0)) CANTIDAD FROM IZSOLDT 
                WHERE CNSMOV= @CNSMOV AND IDARTICULOREAL = @IDARTICULO AND NOLOTE = @NOLOTE
                GROUP BY IDARTICULOREAL, NOLOTE 
                ) A ON A.IDARTICULOREAL=IEXI.IDARTICULO AND A.NOLOTE=IEXI.NOLOTE 
            WHERE IEXI.IDBODEGA = @IDBODEGA

			UPDATE ISAL SET CANTIDAD=ISAL.CANTIDAD-A.CANTIDAD 
            FROM ISAL INNER JOIN 
               (SELECT CNSMOV, IDARTICULOREAL, NOLOTE, SUM(ISNULL(CANTIDADSOL,0)) CANTIDAD FROM IZSOLDT 
                WHERE CNSMOV= @CNSMOV AND IDARTICULOREAL= @IDARTICULO AND NOLOTE= @NOLOTE
                GROUP BY CNSMOV, IDARTICULOREAL, NOLOTE 
                ) A ON A.IDARTICULOREAL=ISAL.IDARTICULO AND A.NOLOTE=ISAL.NOLOTE AND A.CNSMOV=ISAL.CNSMOV 

			DELETE ISAL WHERE CANTIDAD<=0 AND CNSMOV = @CNSMOV

			DELETE IZSOLDT WHERE CNSMOV = @CNSMOV AND IDARTICULOREAL = @IDARTICULO AND NOLOTE = @NOLOTE

			DELETE IMOVH WHERE CNSMOV= @CNSMOV AND IDARTICULO = @IDARTICULO AND NOLOTE = @NOLOTE AND CNSTRAN = @CNSTRAN

			UPDATE IZSOLD SET ESTADO=A.ESTADO, TIPOENT=IIF(A.ESTADO=1,NULL,TIPOENT) 
            FROM IZSOLD INNER JOIN 
               (SELECT A.CNSIZSOL, A.CNSIZSOLD, (CASE WHEN SUM(ISNULL(B.CANTIDADSOL,0)) < SUM(A.CANTIDADSOL) THEN 1 ELSE 0 END) ESTADO 
                FROM IZSOLD A LEFT JOIN IZSOLDT B ON A.CNSIZSOLD=B.CNSIZSOLD 
                WHERE A.CNSIZSOL= @CNSIZSOL GROUP BY A.CNSIZSOL, A.CNSIZSOLD) A 
                ON A.CNSIZSOL=IZSOLD.CNSIZSOL AND A.CNSIZSOLD=IZSOLD.CNSIZSOLD AND A.ESTADO<>IZSOLD.ESTADO


		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'CONF_ENTRADA'
	BEGIN
		SELECT @CNSMOV = CNSMOV, @IDBODEGA = IDBODEGA
		FROM OPENJSON (@PARAMETROS)
		WITH (
			CNSMOV			VARCHAR(20)		'$.CNSMOV'
			,IDBODEGA		VARCHAR(20)		'$.IDBODEGA'
			)

		--SELECT TOP 100 IDTIPOMOV,ESTRANSITO,CNSITRA,ESTADO, * FROM IMOV WHERE CNSMOV = '0100001252'
		SELECT @NODOCUMENTO = NODOCUMENTO, @IDTERCERO = IDTERCERO FROM IMOV WHERE  CNSMOV = @CNSMOV
		IF NOT EXISTS (SELECT  * FROM IMOVH WHERE CNSMOV = @CNSMOV AND COALESCE(ESTADO,0) = 0)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro no cuenta con Detalle, para confirmar'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT DBO.FNK_VALORVARIABLE ('IDINVMOV_COMPRAS')) = (SELECT IDTIPOMOV FROM IMOV WHERE CNSMOV = @CNSMOV)  OR(SELECT DBO.FNK_VALORVARIABLE ('IDINVMOV_REMISION_EN')) = (SELECT IDTIPOMOV FROM IMOV WHERE CNSMOV = @CNSMOV)
		BEGIN
			IF (SELECT COUNT(*) FROM IMOV WHERE IMOV.NODOCUMENTO= @NODOCUMENTO AND IMOV.IDTERCERO= @IDTERCERO AND IMOV.CNSMOV <> @CNSMOV AND COALESCE(IMOV.ESTADO,0) <> 2  ) >=1
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'N√∫mero de Factura Duplicado.... revisar'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			IF EXISTS (SELECT * FROM IMOV WHERE CNSMOV = @CNSMOV AND (COALESCE(F_FACTURA,'') ='' OR COALESCE(F_VENCE,'') = '') ) 
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La Fecha de Factura y/o Fecha Vence Factura esta En Blanco...'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
		END
		IF (SELECT COUNT(*) FROM IMOVH WHERE CNSMOV = @CNSMOV AND COALESCE(PCOSTO,0)<=0) > 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Uno o Varios Lotes Ingresados no tienen precio de costo registrado en la base de datos...'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT ESTADO FROM IMOV WHERE CNSMOV= @CNSMOV) <> 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El Movimiento de Inventario No esta Preparado para Confirmar Revise'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT COUNT(1) FROM IMOVH INNER JOIN IMOV ON IMOV.CNSMOV = IMOVH.CNSMOV INNER JOIN IART ON IART.IDARTICULO=IMOVH.IDARTICULO INNER JOIN ITAR ON ITAR.IDITAR=IART.IDITAR 
			WHERE IMOVH.CNSMOV= @CNSMOV AND ISNULL(ITAR.MPRINCIPAL,0)=1 AND IART.PRINCIPAL=1 AND IMOV.IDTIPOMOV NOT IN (@IDTE )) > 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El movimiento no puede ser confirmado porque existen articulos los cuales no se puede lotear el principal. Debe escoger un articulo hijo.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		BEGIN TRY 
			EXEC SPK_CONFIRMARENTRADAS @IDBODEGA, @CNSMOV, @USUARIO, @COMPANIA, @IDSEDE, @SYS_COMPUTERNAME
			IF EXISTS(SELECT * FROM IMOV WHERE CNSMOV = @CNSMOV AND COALESCE(ESTRANSITO, 0) = 1)
			BEGIN
				PRINT 'MARCADO EN CAMPO ESTRANSITO'
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'TRASLADO_ENTRADA'
	BEGIN
		SELECT @CNSMOV = CNSMOV, @IDBODEGA = IDBODEGA, @IDITAR = IDITAR
		FROM OPENJSON (@PARAMETROS)
		WITH (
			CNSMOV			VARCHAR(20)		'$.CNSMOV'
			,IDBODEGA		VARCHAR(20)		'$.IDBODEGA'
			,IDITAR			VARCHAR(20)		'$.IDITAR'
			)

		IF (SELECT COUNT(*) FROM IBODS WHERE IDBODEGA= @IDBODEGA AND 
					TIPO='ITAR' AND VALOR=@IDITAR AND ACCESO='Si') = 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'ERROR: La Bodega Destino No Tiene Permisos para usar el Tipo de Articulo.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		
		BEGIN TRY 
			UPDATE IMOV SET IDBODEGA = @IDBODEGA WHERE CNSMOV = @CNSMOV
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'AGREGAR_CANASTA'
	BEGIN
		SELECT @CNSMOV = CNSMOV, @IDBODEGA = IDBODEGA, @PROCEDENCIA = PROCEDENCIA
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSMOV					VARCHAR(20)			'$.CNSMOV'
		,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
		,PROCEDENCIA				VARCHAR(20)			'$.PROCEDENCIA'
		)

		IF (SELECT  DBO.FNK_VALORVARIABLE('INVE_CIRU_TIPO_MOV')) IS NULL
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene la variable ''INVE_CIRU_TIPO_MOV'' configurada'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF NOT EXISTS (SELECT * FROM ITMO WHERE TIPO = 'Debito' AND IDTIPOMOV = (SELECT  DBO.FNK_VALORVARIABLE('INVE_CIRU_TIPO_MOV')))
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La variable configurada no es de tipo salida. ''Debito'''
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		BEGIN TRY 
			IF UPPER(@PROCEDENCIA) = 'NUEVO'
			BEGIN
				SELECT @SYS_ComputerName = SYS_ComputerName, @IDSEDE=IDSEDE, @IDBODEGASOL=IDBODEGA FROM USUSU WHERE USUARIO=@USUARIO
				SELECT @TIPO_USUARIO = TIPO_USUARIO FROM MED INNER JOIN USUSU ON USUSU.IDMEDICO=MED.IDMEDICO WHERE USUARIO=@USUARIO
				SELECT @IDBODEGACONSUMO = IDBODEGA, @CCOSTO=CCOSTO FROM UBEQ WHERE SYS_COMPUTERNAME = @SYS_ComputerName

				EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE,@PREFIJO='@IZSOL', @NVOCONSEC=@CNSIZSOL OUTPUT  

				--EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@IZSOL', @CNSIZSOL OUTPUT  
				--SELECT @CNSIZSOL = @IDSEDE + REPLACE(SPACE(10 - LEN(@CNSIZSOL))+LTRIM(RTRIM(@CNSIZSOL)),SPACE(1),0)

				INSERT INTO IZSOL(CNSIZSOL,FECHASOL,USUARIOSOL,ESTADO,IDSEDE,SECTOR,IDBODEGASOLICITA,IDBODEGAATIENDE,CLASE,NOADMISION,SYS_COMPUTER,IDPLAN, SYS_ENTREGA)
				SELECT @CNSIZSOL,DBO.FNK_FECHA_SIN_MLS(GETDATE()),@USUARIO,1,@IDSEDE,'CANASTA',@IDBODEGA,@IDBODEGA,'Consumo', NULL, @SYS_ComputerName,NULL, @SYS_COMPUTERNAME


				EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE,@PREFIJO='@MOV',  @NVOCONSEC=@NVOCONSEC OUTPUT  
				--EXEC SPK_GENCONSECUTIVO '01', @IDSEDE,'@MOV',@NVOCONSEC OUTPUT  
				--SELECT @NVOCONSEC = @IDSEDE + REPLACE(SPACE(8 - LEN(@NVOCONSEC))+LTRIM(RTRIM(@NVOCONSEC)),SPACE(1),0)
				INSERT INTO IMOV (CNSMOV, IDBODEGA, IDTIPOMOV, NODOCUMENTO, FECHAMOV, CCOSTO, IDSOLICITA, IDFUNCIONARIO,
									ESTADO, OBSERVACION, SUBIOCOMPRA, IDAREA, CONTABILIZADA, PROCEDENCIA, USUARIO, PARCIAL, 
									SYS_ComputerName, TIENECAMBIO, IDITAR, ESTRANSITO, IDBODEGAEXTERNA,IDTERCERO,IDPLAN,GENFACTURA,FACTURADA)
				SELECT @NVOCONSEC, @IDBODEGA, DBO.FNK_VALORVARIABLE('INVE_CIRU_TIPO_MOV'), @CNSIZSOL, 
					DBO.FNK_FECHA_SIN_MLS(GETDATE()), 
					@CCOSTO, @USUARIO, @USUARIO, '0', '', 0, NULL,0, 'Consumo', @USUARIO, 0, @SYS_COMPUTERNAME, 0, '01', 0, @IDBODEGA,NULL,
					NULL,0,NULL

				UPDATE IZSOL SET CNSMOV = @NVOCONSEC WHERE CNSIZSOL = @CNSIZSOL
			
				SELECT TOP 1 @CNSMOV= CNSMOV, @IDBODEGA = IMOV.IDBODEGA, @IDBODEGA_DESC = IBOD.DESCRIPCION,@CNSIZSOL =NODOCUMENTO   FROM IMOV
				INNER JOIN IBOD ON IMOV.IDBODEGA = IBOD.IDBODEGA
				WHERE IMOV.NODOCUMENTO = @CNSIZSOL

				SELECT 'OK' OK , @CNSMOV CNSMOV, @IDBODEGA IDBODEGA, @IDBODEGA_DESC IDBODEGA_DESC, @CNSIZSOL CNSIZSOL
			END
			IF UPPER(@PROCEDENCIA) = 'EDITAR'
			BEGIN
				SELECT TOP 1 @CNSMOV= CNSMOV, @IDBODEGA = IMOV.IDBODEGA, @IDBODEGA_DESC = IBOD.DESCRIPCION,@CNSIZSOL =NODOCUMENTO  FROM IMOV
				INNER JOIN IBOD ON IMOV.IDBODEGA = IBOD.IDBODEGA
				WHERE IMOV.CNSMOV = @CNSMOV

				SELECT 'OK' OK , @CNSMOV CNSMOV, @IDBODEGA IDBODEGA, @IDBODEGA_DESC IDBODEGA_DESC, @CNSIZSOL CNSIZSOL
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END		
	IF @METODO = 'AGREGAR_ARTICULO'
	BEGIN
		SELECT @CNSMOV = CNSMOV, @IDBODEGA = IDBODEGA, @IDARTICULO = IDARTICULO, @PROCEDENCIA = PROCEDENCIA , @CANTIDAD = CANTIDAD
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CNSMOV					VARCHAR(20)			'$.CNSMOV'
		,IDBODEGA				VARCHAR(20)			'$.IDBODEGA'
		,PROCEDENCIA			VARCHAR(20)			'$.PROCEDENCIA'
		,IDARTICULO				VARCHAR(20)			'$.IDARTICULO'
		,CANTIDAD				INT					'$.CANTIDAD'
		)
		
		BEGIN TRY 
			IF UPPER(@PROCEDENCIA) = 'NUEVO'
			BEGIN
				
				--EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@IZSOLD', @CNSIZSOLD OUTPUT  
				--SELECT @CNSIZSOLD = @IDSEDE + REPLACE(SPACE(10 - LEN(@CNSIZSOLD))+LTRIM(RTRIM(@CNSIZSOLD)),SPACE(1),0) 
				EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE,@PREFIJO='@IZSOLD', @NVOCONSEC=@CNSIZSOLD OUTPUT  

				SELECT @CNSIZSOL = NODOCUMENTO FROM IMOV WHERE  CNSMOV = @CNSMOV
				SELECT @IDSERVICIO=IDSERVICIO FROM IART WHERE IDARTICULO=@IDARTICULO			

				INSERT INTO IZSOLD(CNSIZSOL,CNSIZSOLD,IDARTICULO,CANTIDADSOL,ESTADO,CODOM,CANTIDAD,IDSERVICIO)
				SELECT @CNSIZSOL, @CNSIZSOLD, @IDARTICULO, @CANTIDAD, 1, '', 0, @IDSERVICIO
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END	
	IF @METODO = 'VALIDA_VERIFICA'
	BEGIN
		SELECT @CNSITRA = CNSITRA
		FROM OPENJSON (@PARAMETROS)
		WITH (CNSITRA VARCHAR(20) '$.CNSITRA')

		SELECT @IDBODEGA = IDBODEGADES FROM ITRA WHERE CNSITRA = @CNSITRA
		IF EXISTS (
			SELECT 1 
			FROM IBOD INNER JOIN ITBOD ON IBOD.IDTBODEGA = ITBOD.IDTBODEGA 
			WHERE IDBODEGA = @IDBODEGA
			AND COALESCE(VERIFDOC, 'NO') <> 'Si'
		)
		BEGIN
			SELECT 'OK' OK, TIPODOC = 'NO'
				,IIF(COALESCE(FCOM.N_FACTURA,'') = '', 'ESREMISION', 'ESFACTURA')[ESFACT] 
			FROM ITRA LEFT JOIN FCOM ON ITRA.CNSFCOM = FCOM.CNSFCOM 
			WHERE  ITRA.CNSITRA = @CNSITRA 
			RETURN


		END

		BEGIN TRY 
			IF EXISTS (SELECT * FROM  ITRA 
					INNER JOIN FCOM ON ITRA.CNSFCOM = FCOM.CNSFCOM
					INNER JOIN VERIF ON FCOM.CNSFCOM = VERIF.REFERENCIA1
				WHERE ITRA.CNSITRA = @CNSITRA)
				BEGIN
					SELECT 'OK' OK, 'SI' TIPODOC, 'YA TIENE' ESFACT
				END
			ELSE 
				BEGIN
					SELECT 'OK' OK, 'NO' TIPODOC, CASE WHEN COALESCE(FCOM.N_FACTURA,'') = '' THEN 'ESREMISION' ELSE 'ESFACTURA' END [ESFACT] 
					FROM ITRA LEFT JOIN FCOM ON ITRA.CNSFCOM = FCOM.CNSFCOM WHERE  ITRA.CNSITRA = @CNSITRA 
					RETURN
				END

				SELECT @CNSFCOM =  FCOM.CNSFCOM FROM  ITRA 
					INNER JOIN FCOM ON ITRA.CNSFCOM = FCOM.CNSFCOM
				WHERE ITRA.CNSITRA = @CNSITRA


				SELECT 'OK' OK,
					DATOS = (SELECT COALESCE(TGEN.DESCRIPCION,'')DESCRIPCION, VERIF.CNSVERIF
					,VERIF.TIPO
					,VERIF.REFERENCIA1, VERIF.REFERENCIA2, CAST(VERIF.CUMPLE AS BIT) CUMPLE, VERIF.OBS
				FROM ITRA 
					INNER JOIN FCOM ON ITRA.CNSFCOM = FCOM.CNSFCOM
					INNER JOIN VERIF ON FCOM.CNSFCOM = VERIF.REFERENCIA1
					LEFT JOIN TGEN ON VERIF.REFERENCIA2 = TGEN.CODIGO AND TGEN.TABLA = 'VERIFICA' AND CAMPO = 'COMPRAS'
				WHERE ITRA.CNSFCOM = @CNSFCOM AND ITRA.CNSITRA = @CNSITRA
				FOR JSON PATH)

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'PROCESAR_VERIFICACION'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @COMPLETA = COMPLETA
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
		CNSITRA				VARCHAR(20)			'$.CNSITRA'
		,COMPLETA			BIT					'$.COMPLETA'
		)
		BEGIN TRY 
			SELECT @CNSFCOM =  FCOM.CNSFCOM FROM  ITRA 
				INNER JOIN FCOM ON ITRA.CNSFCOM = FCOM.CNSFCOM
			WHERE ITRA.CNSITRA = @CNSITRA

			IF (SELECT @COMPLETA) = 0
			BEGIN 
				INSERT INTO VERIF (FECHA, TIPO, REFERENCIA1, REFERENCIA2, CUMPLE, OBS)
				SELECT DBO.FNK_FECHA_SIN_MLS(GETDATE()), 'COMPRAS', @CNSFCOM, TGEN.CODIGO, 0, ''
				FROM TGEN WHERE TGEN.CAMPO = 'COMPRAS' AND TGEN.TABLA = 'VERIFICA'
			END
			IF (SELECT @COMPLETA) = 1
			BEGIN 
				INSERT INTO VERIF (FECHA, TIPO, REFERENCIA1, REFERENCIA2, CUMPLE, OBS)
				SELECT DBO.FNK_FECHA_SIN_MLS(GETDATE()), 'COMPRAS', @CNSFCOM, 'REMI', 0, 'Orden de Compra Con Remisi√≥n'
			END

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK, @CNSITRA CNSITRA
		RETURN
	END
	IF @METODO = 'GUARDAR'
	BEGIN
		SELECT @DATOS =  DATOS
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
					DATOS			NVARCHAR(MAX) AS JSON
					)

		SELECT  * INTO #DATOS FROM OPENJSON (@DATOS) 
		WITH(
			 CNSVERIF	INT					'$.CNSVERIF'
			 ,CUMPLE	BIT					'$.CUMPLE'
			 ,OBS		VARCHAR(500)		'$.OBS'
		)  
		
		BEGIN TRY 
			UPDATE VERIF SET VERIF.CUMPLE = #DATOS.CUMPLE, VERIF.OBS = #DATOS.OBS FROM VERIF,#DATOS WHERE VERIF.CNSVERIF = #DATOS.CNSVERIF
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'DISTRIBUIR_MASIVO' --MLOTEO
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDBODEGA = IDBODEGA
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
		CNSITRA				VARCHAR(20)			'$.CNSITRA'
		,IDBODEGA			VARCHAR(20)			'$.IDBODEGA'
		)
		SELECT @CNSFCOM =  FCOM.CNSFCOM FROM  ITRA 
				INNER JOIN FCOM ON ITRA.CNSFCOM = FCOM.CNSFCOM
			WHERE ITRA.CNSITRA = @CNSITRA
		
		IF NOT EXISTS( SELECT * FROM ITRAH WHERE CNSITRA = @CNSITRA AND COALESCE(ITRAH.INICIAL,0)=0 )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No cuenta con registros para Lotear.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF EXISTS(SELECT  FCOM.CNSFCOM FROM  ITRA 
				INNER JOIN FCOM ON ITRA.CNSFCOM = FCOM.CNSFCOM
			WHERE ITRA.CNSITRA = @CNSITRA AND COALESCE(FCOM.CNSFCOM ,'') = '')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No existe CNSFCOM'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT COALESCE(VERIFDOC,'') FROM IBOD INNER JOIN ITBOD ON IBOD.IDTBODEGA=ITBOD.IDTBODEGA 
			 WHERE IBOD.IDBODEGA=@IDBODEGA) <> 'No' 
			 AND (SELECT COUNT(*) FROM VERIF WHERE TIPO='COMPRAS' AND REFERENCIA1 = @CNSFCOM) <= 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No se Ha Diligenciado el Formato de Verificaci√≥n de Factura, Se debe Realizar la Verificaci√≥n Para Continuar.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT COALESCE(VERIFDOC,'') FROM IBOD INNER JOIN ITBOD ON IBOD.IDTBODEGA=ITBOD.IDTBODEGA 
			 WHERE IBOD.IDBODEGA=@IDBODEGA) <> 'No' 
			 AND (SELECT COUNT(*) FROM VERIF WHERE TIPO='COMPRAS' AND REFERENCIA1 = @CNSFCOM AND CUMPLE = 0 ) > 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Existen Requisitos De la Verificaci√≥n de Factura Que no se Cumple... No se puede Continuar.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		
		BEGIN TRY 
			PRINT '**********************************'
			
			SELECT @CNSRPDX = NULL
			--EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@RPDX',@CNSRPDX OUTPUT
			--SELECT @CNSRPDX = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)
			EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE,@PREFIJO='@RPDX', @LONGITUD = 8, @NVOCONSEC=@CNSRPDX OUTPUT  


			SELECT @CNSRPDX_2 = NULL
			--EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@RPDX',@CNSRPDX_2 OUTPUT
			--SELECT @CNSRPDX_2 = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSRPDX_2))+LTRIM(RTRIM(@CNSRPDX_2)),SPACE(1),0)
			EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE,@PREFIJO='@RPDX', @LONGITUD = 8, @NVOCONSEC=@CNSRPDX_2 OUTPUT  
			--PCSINIVA,PCOSTO,IVA
			DELETE FROM RPDX WHERE CNS = @CNSRPDX
			INSERT INTO RPDX (CNS,ID1,ID2,VALOR1,VALOR2,STRINGMEDIO1,ID3,STRINGGRANDE1,CANTIDAD,ID4,CANTIDAD1,CANTIDAD2
				,STRINGGRANDE2 -- ESTANTE
				)
			 SELECT @CNSRPDX,CNSITRA,IART.IDITAR,COALESCE(IVA,0) IVA,COALESCE(PCSINIVA,0) PCSINIVA,ITAR.DESCRIPCION,ITRAH.IDARTICULO,IART.DESCRIPCION,ITRAH.CANTIDADORI,IART.IDSERVICIO,CASE WHEN COALESCE(INICIAL,0)=0 THEN 0 ELSE ITRAH.CANTIDADDES END 
			,CASE WHEN COALESCE(INICIAL,0)=0 THEN ITRAH.CANTIDADORI ELSE (ITRAH.CANTIDADORI-ITRAH.CANTIDADDES) END
			,ESTANTE = (
				SELECT TOP 1 IARTE.ESTANTE
					,IDESTANTE = E.CODIGO
					,DESCESTANTE = E.DESCRIPCION
					,IDGRUPOEST = G.CODIGO
					,DESCGRUPOEST = G.DESCRIPCION
				FROM [dbo].[IARTE]
				INNER JOIN IART ON IARTE.IDARTICULO = IART.IDARTICULO
				INNER JOIN TGEN AS E ON E.CAMPO = 'ESTANTE' AND E.TABLA = IARTE.IDBODEGA AND CODIGO = IARTE.ESTANTE
				INNER JOIN TGEN AS G ON G.CAMPO = 'ESTANTE_P' AND E.TABLA = IARTE.IDBODEGA AND G.CODIGO = E.DATO1
				WHERE IARTE.IDBODEGA = @IDBODEGA
				AND IARTE.IDARTICULO = ITRAH.IDARTICULO
				ORDER BY E.DESCRIPCION
				FOR JSON PATH
			)
			 FROM ITRAH INNER JOIN IART ON ITRAH.IDARTICULO=IART.IDARTICULO 
						INNER JOIN ITAR ON IART.IDITAR=ITAR.IDITAR
			 WHERE ITRAH.CNSITRA= @CNSITRA
			 AND COALESCE(ITRAH.INICIAL,0)=0


		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK, @CNSRPDX CNSRPDX, @CNSRPDX_2 CNSRPDX_2

		RETURN
	END
	IF @METODO = 'SEL_RPDX'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDBODEGA = IDBODEGA, @CNSRPDX = CNSRPDX
		FROM OPENJSON (@PARAMETROS)
		WITH	(
			 CNSITRA	VARCHAR(20)		'$.CNSITRA'
			,IDBODEGA	VARCHAR(20)		'$.IDBODEGA'
			,CNSRPDX	VARCHAR(20)		'$.CNSRPDX'
		)
		--IDARTICULOORI
		SELECT @CNSFCOM =  FCOM.CNSFCOM 
		FROM  ITRA INNER JOIN FCOM ON ITRA.CNSFCOM = FCOM.CNSFCOM
		WHERE ITRA.CNSITRA = @CNSITRA
		
		SELECT 'OK' AS OK

		IF @IDBODEGA = DBO.FNK_VALORVARIABLE('IDBOD_HEMODERIVADOS')  
		BEGIN
			SELECT CNS, ITEM, ID1, ID2, ID3, ID4, CANTIDAD, CANTIDAD1, CANTIDAD2, STRINGMEDIO1, STRINGGRANDE1, FECHAREGISTRO 
				,IART.CODCUM,IART.REGINVIMA,IART.F_VIGENCIAINV,IART.CODBARRA,  COALESCE(RPDX.VALOR1,0)VALOR1 , COALESCE(RPDX.VALOR2,0) VALOR2 
				,ITRAH.PCOSTO, COALESCE(ITAR.MLOTEO,0) MLOTEO
			FROM RPDX 
				INNER JOIN IART ON RPDX.ID3 = IART.IDARTICULO
				INNER JOIN ITAR ON IART.IDITAR = ITAR.IDITAR 
				INNER JOIN ITRAH ON RPDX.ID1 = ITRAH.CNSITRA AND RPDX.ID3 = ITRAH.IDARTICULO AND RPDX.ID4 = IART.IDSERVICIO --AND ITRAH.INICIAL = 1
			WHERE CNS = @CNSRPDX
			ORDER BY  ITEM  ASC

		END
		ELSE
		BEGIN
			
			SELECT CNS, ITEM, ID1, ID2, ID3, ID4, CANTIDAD, CANTIDAD1, CANTIDAD2, STRINGMEDIO1, STRINGGRANDE1, FECHAREGISTRO 
				,IART.CODCUM,IART.REGINVIMA,IART.F_VIGENCIAINV,IART.CODBARRA,  COALESCE(RPDX.VALOR1,0)VALOR1 , COALESCE(RPDX.VALOR2,0) VALOR2 
				,ITRAH.PCOSTO, MLOTEO = COALESCE(ITAR.MLOTEO,0) 
				,ESTANTE = STRINGGRANDE2
			FROM RPDX 
				INNER JOIN IART ON RPDX.ID3 = IART.IDARTICULO
				INNER JOIN ITAR ON IART.IDITAR = ITAR.IDITAR 
				INNER JOIN ITRAH ON RPDX.ID1 = ITRAH.CNSITRA AND RPDX.ID3 = ITRAH.IDARTICULO AND RPDX.ID4 = IART.IDSERVICIO --AND ITRAH.INICIAL = 1
			WHERE CNS = @CNSRPDX
			GROUP BY CNS, ITEM, ID1, ID2, ID3, ID4, CANTIDAD, CANTIDAD1, CANTIDAD2, STRINGMEDIO1, STRINGGRANDE1, FECHAREGISTRO 
				,IART.CODCUM,IART.REGINVIMA,IART.F_VIGENCIAINV,IART.CODBARRA,  VALOR1 ,  VALOR2 
				,ITRAH.PCOSTO, COALESCE(ITAR.MLOTEO,0), STRINGGRANDE2  
			ORDER BY  ITEM  ASC

		END
		
		RETURN
	END
	IF @METODO = 'SEL_IART'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDBODEGA = IDBODEGA, @CNSRPDX = CNSRPDX, @ITEM = ITEM
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
		CNSITRA				VARCHAR(20)					'$.CNSITRA'
		,IDBODEGA			VARCHAR(20)					'$.IDBODEGA'
		,CNSRPDX			VARCHAR(20)					'$.CNSRPDX'
		,ITEM				INT							'$.ITEM'
		)
			
		BEGIN TRY 
			SELECT 'OK' AS OK
			SELECT @IDARTICULO = ID3 FROM RPDX WHERE ITEM = @ITEM
			IF @IDBODEGA = DBO.FNK_VALORVARIABLE('IDBOD_HEMODERIVADOS')  
			BEGIN
				SELECT IART.IDARTICULO, IART.DESCRIPCION, IART.REGINVIMA, IART.F_VIGENCIAINV,DBO.FNK_SEMAFORO_TRANSITO(IART.F_VIGENCIAINV) PRIORIDAD , IART.CODCUM, IART.IDALTERNA , IART.IDSERVICIO, COALESCE(IART.PRINCIPAL,0) PRINCIPAL
					,IART.CODBARRA, IART.IDITAR, ITAR.MFECHAVENCIMIENTO, COALESCE(ITAR.MPRINCIPAL,0) MPRINCIPAL
				FROM IART 
					LEFT JOIN ITAR ON IART.IDITAR = ITAR.IDITAR
				WHERE IART.IDARTICULO = @IDARTICULO		
				ORDER BY  COALESCE(PRINCIPAL,0) DESC ,IART.F_VIGENCIAINV  ASC
			END
			ELSE
			BEGIN

				IF NOT EXISTS(SELECT 1 FROM IART WHERE IDSERVICIO = @IDARTICULO AND PRINCIPAL=1) -- EZ PERU COMPRA FABRICANTES EN LUGAR DE PRINCIPAL
					SELECT @IDARTICULO  = IDSERVICIO FROM IART WHERE IDARTICULO = @IDARTICULO


				SELECT IART.IDARTICULO	,IART.DESCRIPCION	,IART.REGINVIMA
					,IART.F_VIGENCIAINV	
					,PRIORIDAD = CASE COALESCE(IART.PRINCIPAL, 0) 
						WHEN 0 THEN DBO.FNK_SEMAFORO_TRANSITO(IART.F_VIGENCIAINV)
						ELSE NULL END 
					,PRIORIDAD_DESC = CASE WHEN COALESCE(IART.PRINCIPAL, 0) = 0 AND DBO.FNK_SEMAFORO_TRANSITO(IART.F_VIGENCIAINV) = 1 THEN 'INVIMA vencido' 
						WHEN COALESCE(IART.PRINCIPAL, 0) = 0 AND DBO.FNK_SEMAFORO_TRANSITO(IART.F_VIGENCIAINV) = 2 THEN 'INVIMA Vigente'
						WHEN COALESCE(IART.PRINCIPAL, 0) = 0 AND DBO.FNK_SEMAFORO_TRANSITO(IART.F_VIGENCIAINV) = 3 THEN 'INVIMA por Vencer'
						ELSE NULL END
					,IART.CODCUM	,IART.IDALTERNA			,IART.IDSERVICIO	
					,COALESCE(IART.PRINCIPAL, 0) PRINCIPAL	,IART.CODBARRA
					,IART.IDITAR	,ITAR.MFECHAVENCIMIENTO ,COALESCE(ITAR.MPRINCIPAL, 0) MPRINCIPAL
					
				FROM IART
				LEFT JOIN ITAR ON IART.IDITAR = ITAR.IDITAR
				WHERE IART.IDSERVICIO = @IDARTICULO
				--AND (COALESCE(ITAR.MPRINCIPAL, 0) = 0 OR (COALESCE(ITAR.MPRINCIPAL, 0) = 1 AND COALESCE(IART.PRINCIPAL, 0)=0))
				ORDER BY COALESCE(PRINCIPAL, 0) DESC, IART.F_VIGENCIAINV ASC
				
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
--QUERY 3
	IF @METODO = 'AGREGAR_IART'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDBODEGA = IDBODEGA, @CNSRPDX = CNSRPDX, @CNSRPDX_2 = CNSRPDX_2, @ITEM = ITEM, @IDARTICULO = IDARTICULO, @NOLOTE = NOLOTE, @CANTIDAD = CANTIDAD
		,@FECHAVENCE = FECHAVENCE, @PC_SINIVA = PC_SINIVA, @TEMPERATURA = TEMPERATURA, @CANTIDADREV = CANTIDADREV
		,@PIVA = PIVA	, @CUMPLE = CUMPLE , @APROBADO = APROBADO, @VALIDA_STOCKS = VALIDA_STOCKS
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
					CNSITRA				VARCHAR(20)					'$.CNSITRA'
					,IDBODEGA			VARCHAR(20)					'$.IDBODEGA'
					,CNSRPDX			VARCHAR(20)					'$.CNSRPDX'
					,CNSRPDX_2			VARCHAR(20)					'$.CNSRPDX_2'
					,ITEM				INT							'$.ITEM'
					,IDARTICULO			VARCHAR(20)					'$.IDARTICULO'
					,NOLOTE				VARCHAR(20)					'$.NOLOTE'
					,CANTIDAD			INT							'$.CANTIDAD'
					,FECHAVENCE			DATE						'$.FECHAVENCE'
					,PC_SINIVA			DECIMAL(14,2)				'$.PC_SINIVA'
					,TEMPERATURA		DECIMAL(14,2)				'$.TEMPERATURA'
					,CANTIDADREV		DECIMAL(14,2)				'$.CANTIDADREV'
					,PIVA				DECIMAL(14,2)				'$.PIVA'
					,CUMPLE				BIT							'$.CUMPLE'
					,APROBADO			BIT							'$.APROBADO'
					,VALIDA_STOCKS		VARCHAR(200)				'$.VALIDA_STOCKS'
					)
		SELECT  @REGINVIMA =  REGINVIMA,@F_VIGENCIAINV = F_VIGENCIAINV  FROM IART WHERE  IDARTICULO = @IDARTICULO
		IF @IDBODEGA <> (SELECT DBO.FNK_VALORVARIABLE('IDBOD_HEMODERIVADOS')) AND COALESCE(@NOLOTE,'') = ''
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Debe de ingresar un NOLOTE.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT ID2 FROM RPDX WHERE RPDX.CNS = @CNSRPDX AND RPDX.ITEM = @ITEM ) = (SELECT DBO.FNK_VALORVARIABLE('IDBOD_HEMODERIVADOS')) 
		BEGIN
			IF COALESCE(@TEMPERATURA,0) = 0
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'Ingrese Temperatura.'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
		END
	
		IF (SELECT ID2 FROM RPDX WHERE RPDX.CNS = @CNSRPDX AND RPDX.ITEM = @ITEM ) <> (SELECT DBO.FNK_VALORVARIABLE('IDBOD_HEMODERIVADOS')) 
		BEGIN
			IF @FECHAVENCE < ( GETDATE() +  COALESCE(DBO.FNK_VALORVARIABLE ('IDINVDIASPARAVENCER'),0) )
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'Producto Vencido no se puede Ingresar a la Bodega.'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			IF @FECHAVENCE < ( GETDATE() +  COALESCE(DBO.FNK_VALORVARIABLE ('NDIASANTESVENCE'),0) ) AND (SELECT ID2 FROM RPDX WHERE RPDX.CNS = @CNSRPDX AND RPDX.ITEM = @ITEM ) <> (SELECT DBO.FNK_VALORVARIABLE('IDITARHEMODERIVADOS')) 
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'El Nro de D√≠as Faltantes Por Vencer Es Menor Al Configurado.'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
		END
		IF @FECHAVENCE < CONVERT(DATE, GETDATE())
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Producto Vencido no se puede Ingresar a la Bodega.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT MFECHAVENCIMIENTO FROM  ITAR WHERE  IDITAR = (SELECT ID2 FROM RPDX WHERE RPDX.CNS = @CNSRPDX AND RPDX.ITEM = @ITEM) ) = 1
		BEGIN
			IF @REGINVIMA = '' OR @F_VIGENCIAINV ='' OR @F_VIGENCIAINV < (CONVERT(DATE,GETDATE()))
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'Debe Actualizar el Registro Invima antes de Continuar.'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
		END

		WHILE COALESCE(@CODIGOBARRA,'') = ''
		BEGIN
			SELECT @CODIGOBARRA = NULL
			EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,'@ICBU',@CODIGOBARRA OUTPUT
			SELECT @CODIGOBARRA = @IDSEDE + 'L' + REPLACE(SPACE(8 - LEN(@CODIGOBARRA))+LTRIM(RTRIM(@CODIGOBARRA)),SPACE(1),0)
			SELECT @CODIGOBARRA = COALESCE(@CODIGOBARRA,'')
		END

		IF @CANTIDAD > (SELECT CANTIDAD2 FROM RPDX WHERE RPDX.CNS = @CNSRPDX AND RPDX.ITEM = @ITEM )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede ingresar m√°s de lo que est√° pedido.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		BEGIN TRY 
			SELECT 'OK' AS OK

			IF @PC_SINIVA>0
			BEGIN
				IF @PIVA>0
					SELECT @PCOSTO = @PC_SINIVA + ((@PC_SINIVA*@PIVA )/ 100)
				ELSE
					SELECT @PCOSTO = @PC_SINIVA 
			END
			ELSE
			BEGIN
				--SELECT @PCOSTO = 0
				SELECT TOP 1 @PCOSTO = ITRAH.PCOSTO
				FROM RPDX 
					INNER JOIN IART ON RPDX.ID3 = IART.IDARTICULO
					INNER JOIN ITRAH ON RPDX.ID1 = ITRAH.CNSITRA AND RPDX.ID3 = ITRAH.IDARTICULO AND RPDX.ID4 = ITRAH.IDARTICULO
				WHERE CNS = @CNSRPDX
			END

			INSERT INTO RPDX  (CNS, ID1, ID2,ID3,ID4,CANTIDAD,VALOR1, FECHA1, ID5, VALOR27,ID10  , ID11, ID12, ID13, ID14, ID15, ID16, ID17
			, FECHA2, ID9, VALOR5, VALOR11, CANTIDAD3, CANTIDAD4, CANTIDAD5, ID18,CANTIDAD1, CANTIDAD2, STRINGMEDIO1, STRINGGRANDE1, STRINGMEDIO3, ID19   )
			SELECT @CNSRPDX_2, R.ID1, @IDARTICULO, @CODIGOBARRA, @NOLOTE, @CANTIDAD, @PCOSTO, @FECHAVENCE,  '', @TEMPERATURA, R.ID4, R.ID3
			, '', '', '', '', '','', '', @REGINVIMA, 0, R.ITEM, @CANTIDADREV,@CUMPLE, @APROBADO, '',  0, 0, '', ''
			, JSON_VALUE(@PARAMETROS,'$.OBSERVACION'), JSON_VALUE(@PARAMETROS, '$.ESTANTE')
			FROM RPDX R WHERE R.CNS = @CNSRPDX AND R.ITEM = @ITEM

			SELECT CNS, ITEM, ID1, ID2, ID3, ID4, CANTIDAD, CANTIDAD1, CANTIDAD2
			, STRINGMEDIO1, STRINGGRANDE1, FECHAREGISTRO,ID9, ID10, ID11, ID15, VALOR1, VALOR11, FECHA1,VALOR27, CANTIDAD3, CANTIDAD4, CANTIDAD5 
			FROM RPDX WHERE RPDX.CNS = @CNSRPDX_2

			--SELECT RPDX.ID3 FROM RPDX WHERE  RPDX.ITEM = @ITEM AND RPDX.CNS = @CNSRPDX
			--SELECT SUM(CANTIDAD) FROM RPDX R WHERE R.ID1 = @CNSITRA AND R.ID11 = 'MED0721'

			SELECT @CANTIDAD_TOTAL = (SELECT SUM(CANTIDAD) FROM RPDX R WHERE  R.CNS = @CNSRPDX_2 AND R.ID11 = (SELECT RPDX.ID3 FROM RPDX WHERE  RPDX.ITEM = @ITEM AND RPDX.CNS = @CNSRPDX) )
			--SELECT @CANTIDAD_TOTAL
			UPDATE RPDX SET CANTIDAD1 = @CANTIDAD_TOTAL, CANTIDAD2 = (RPDX.CANTIDAD-@CANTIDAD_TOTAL) WHERE RPDX.ITEM = @ITEM


		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'GUARDA_CUM'
	BEGIN
		SELECT @IDARTICULO = IDARTICULO, @CODCUM = CODCUM
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
		IDARTICULO				VARCHAR(20)					'$.IDARTICULO'
		,CODCUM					VARCHAR(20)					'$.CODCUM'
		)
			
		BEGIN TRY 
			UPDATE IART SET CODCUM = @CODCUM WHERE IDARTICULO = @IDARTICULO
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'ON_CERRAR'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @CNSRPDX = CNSRPDX, @IDBODEGA = IDBODEGA, @CNSRPDX_2 = CNSRPDX_2
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
		CNSITRA						VARCHAR(20)					'$.CNSITRA'
		,CNSRPDX					VARCHAR(20)					'$.CNSRPDX'
		,CNSRPDX_2					VARCHAR(20)					'$.CNSRPDX_2'
		,IDBODEGA					VARCHAR(20)					'$.IDBODEGA'
		)
			
		BEGIN TRY 
			DELETE FROM RPDX WHERE RPDX.CNS = @CNSRPDX
			DELETE FROM RPDX WHERE RPDX.CNS = @CNSRPDX_2
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'ON_ELIMINAR'
	BEGIN
		SELECT @ITEM = ITEM, @CNSRPDX_2 = CNSRPDX_2
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
		ITEM			INT					'$.ITEM'
		,CNSRPDX_2		VARCHAR(20)			'$.CNSRPDX_2'
		)
			
		BEGIN TRY 
			SELECT @ITEM_2 = VALOR11 FROM RPDX WHERE  ITEM = @ITEM
			SELECT @CNSRPDX = CNS, @CNSITRA = ID1 FROM RPDX WHERE ITEM = @ITEM_2
			DELETE FROM RPDX WHERE RPDX.ITEM = @ITEM

			SELECT @CANTIDAD_TOTAL = (SELECT SUM(CANTIDAD) FROM RPDX R WHERE  R.CNS = @CNSRPDX_2 AND R.ID11 = (SELECT RPDX.ID3 FROM RPDX WHERE  RPDX.ITEM = @ITEM_2 AND RPDX.CNS = @CNSRPDX) )
			--SELECT @CANTIDAD_TOTAL
			UPDATE RPDX SET CANTIDAD1 = @CANTIDAD_TOTAL, CANTIDAD2 = (RPDX.CANTIDAD-COALESCE(@CANTIDAD_TOTAL,0)) WHERE RPDX.ITEM = @ITEM_2

			SELECT 'OK' AS OK

			SELECT CNS, ITEM, ID1, ID2, ID3, ID4, CANTIDAD, CANTIDAD1, CANTIDAD2
			, STRINGMEDIO1, STRINGGRANDE1, FECHAREGISTRO,ID9, ID10, ID11, ID15, VALOR1, VALOR11, FECHA1,VALOR27, CANTIDAD3, CANTIDAD4, CANTIDAD5 
			FROM RPDX WHERE RPDX.CNS = @CNSRPDX_2
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'ON_PROCESAR'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDBODEGA = IDBODEGA, @CNSRPDX = CNSRPDX, @CNSRPDX_2 = CNSRPDX_2
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
			CNSITRA				VARCHAR(20)					'$.CNSITRA'
			,IDBODEGA			VARCHAR(20)					'$.IDBODEGA'
			,CNSRPDX			VARCHAR(20)					'$.CNSRPDX'
			,CNSRPDX_2			VARCHAR(20)					'$.CNSRPDX_2'
			)
			
		BEGIN TRY 
			EXEC SPK_INSERT_ITRAH @CNSRPDX_2
			DELETE FROM RPDX WHERE RPDX.CNS = @CNSRPDX
			DELETE FROM RPDX WHERE RPDX.CNS = @CNSRPDX_2
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'VALIDAR_PROCESO'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @CNSFCOM = CNSFCOM, @IDBODEGA = IDBODEGA
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
			CNSITRA				VARCHAR(20)					'$.CNSITRA'
			,CNSFCOM			VARCHAR(20)					'$.CNSFCOM'
			,IDBODEGA			VARCHAR(20)					'$.IDBODEGA'
			)
		IF EXISTS (SELECT * FROM ITRA WHERE ( IDTIPOMOV = DBO.FNK_VALORVARIABLE('IDINVMOV_COMPRAS') OR IDTIPOMOV = DBO.FNK_VALORVARIABLE('IDINVMOV_COMPRAS')) AND CNSITRA = @CNSITRA )
		BEGIN
			IF (SELECT COALESCE(VERIFDOC,'')  FROM IBOD INNER JOIN ITBOD ON IBOD.IDTBODEGA=ITBOD.IDTBODEGA WHERE IBOD.IDBODEGA = @IDBODEGA ) <> 'No'
			BEGIN
				IF (SELECT COUNT(*) FROM VERIF WHERE TIPO='COMPRAS' AND REFERENCIA1 = @CNSFCOM ) <= 0
				BEGIN
					INSERT INTO @TBLERRORES(ERROR) SELECT 'No se Ha Diligenciado el Formato de Verificaci√≥n de Factura, Se debe Realizar la Verificaci√≥n Para Continuar.'
					SELECT 'KO' OK
					SELECT ERROR FROM @TBLERRORES
					RETURN
				END	
				ELSE
				BEGIN
					IF (SELECT COUNT(*) FROM VERIF WHERE TIPO='COMPRAS' AND REFERENCIA1=@CNSFCOM AND CUMPLE=0 ) > 0
					BEGIN
						INSERT INTO @TBLERRORES(ERROR) SELECT 'Existen Requisitos De la Verificaci√≥n de Factura Que no se Cumple... No se puede Continuar.'
						SELECT 'KO' OK
						SELECT ERROR FROM @TBLERRORES
						RETURN
					END	
				END	
			END	
		END	
		IF (SELECT COUNT(*) FROM IMOV WHERE IMOV.CNSITRA = @CNSITRA AND IMOV.ESTADO = 0) <> 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Este Transito ya Fue Traido en otra Estaci√≥n y esta en proceso de Entrada No se puede Continuar.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END	
		IF EXISTS (SELECT * FROM IART INNER JOIN ITAR ON IART.IDITAR = ITAR.IDITAR WHERE IART.IDARTICULO IN (SELECT ITRAH.IDARTICULO FROM ITRAH WHERE  ITRAH.CNSITRA = @CNSITRA AND COALESCE(INICIAL,0)=1 ) AND COALESCE(ITAR.MLOTEO,0) = 1  )
		BEGIN
			IF (SELECT COUNT(*) FROM ITRAH WHERE ITRAH.CNSITRA = @CNSITRA AND COALESCE(INICIAL,0)=1 ) = 0
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'No Se Ha Realizado La Distribuci√≥n de Lotes, Necesarias Para El Ingreso.'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END	
		END		
		BEGIN TRY 
		
			UPDATE ITRAH SET CANTIDADDES = 0  WHERE  ITRAH.CNSITRA = @CNSITRA AND COALESCE(INICIAL,0)=0
			IF (SELECT COUNT(1) FROM ITRAH WHERE CNSITRA=@CNSITRA AND COALESCE(INICIAL,0)=0) >=1
			AND EXISTS (SELECT * FROM [dbo].[ITRAH]
						WHERE  ITRAH.CNSITRA = @CNSITRA AND COALESCE(ITRAH.INICIAL,0)=0   
						AND ITRAH.CANTIDADORI - (SELECT COALESCE(SUM(TRA.CANTIDADORI),0) FROM ITRAH TRA WHERE TRA.CNSITRA = ITRAH.CNSITRA AND TRA.IDARTICULOORI = ITRAH.IDARTICULOORI AND TRA.INICIAL = 1)>0     )
				SELECT 'OK'OK, 'SI' VENTANA
			ELSE
				SELECT 'OK'OK, 'NO' VENTANA

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'ON_ACEPTA_TRANSITO'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @CNSFCOM = CNSFCOM, @IDBODEGA = IDBODEGA
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
			CNSITRA				VARCHAR(20)					'$.CNSITRA'
			,CNSFCOM			VARCHAR(20)					'$.CNSFCOM'
			,IDBODEGA			VARCHAR(20)					'$.IDBODEGA'
			)
		
		IF (SELECT COUNT(*) FROM ITRAH INNER JOIN IART ON ITRAH.IDARTICULO = IART.IDARTICULO INNER JOIN ITAR ON IART.IDITAR = ITAR.IDITAR 
			WHERE CNSITRA=@CNSITRA AND COALESCE(ITRAH.INICIAL,0)=0 AND COALESCE(ITRAH.IDCAUSAL,'')='' AND COALESCE(ITAR.MLOTEO,0) = 1
			AND ITRAH.CANTIDADORI - (SELECT SUM(TRA.CANTIDADORI) FROM ITRAH TRA WHERE TRA.CNSITRA = ITRAH.CNSITRA AND TRA.IDARTICULOORI = ITRAH.IDARTICULOORI AND TRA.INICIAL = 1)>0
			) <> 0

		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Aceptar, hasta no Colocar las causas de Inconsistencias en los articulos incompletos.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END	
		BEGIN TRY 
			SELECT @IDTIPOMOV = IDTIPOMOV FROM ITRA WHERE CNSITRA = @CNSITRA
			IF (SELECT DBO.FNK_VALORVARIABLE('IDTS') ) = @IDTIPOMOV
				SELECT @IDTIPOMOV = (SELECT DBO.FNK_VALORVARIABLE('IDTE') )
			
			PRINT 'ENTRA A SPK_INSERTENTTRANSITO'
			EXEC SPK_INSERTENTTRANSITO @CNSITRA, @USUARIO,@IDBODEGA,@IDTIPOMOV,@SYS_COMPUTERNAME,@COMPANIA,@SEDE

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'GUARDA_CAUSA'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDARTICULO = IDARTICULO, @NOLOTE = NOLOTE, @IDCAUSA = IDCAUSA
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
			CNSITRA				VARCHAR(20)					'$.CNSITRA'
			,IDARTICULO			VARCHAR(20)					'$.IDARTICULO'
			,NOLOTE			VARCHAR(20)					'$.NOLOTE'
			,IDCAUSA			VARCHAR(20)					'$.IDCAUSA'
			)
	
		BEGIN TRY 
			UPDATE ITRAH SET IDCAUSAL = @IDCAUSA WHERE ITRAH.CNSITRA = @CNSITRA AND ITRAH.IDARTICULO = @IDARTICULO AND ITRAH.NOLOTE = @NOLOTE
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'ON_CAUSA'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @CNSFCOM = CNSFCOM, @IDBODEGA = IDBODEGA, @IDCAUSA = IDCAUSA
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
			CNSITRA				VARCHAR(20)					'$.CNSITRA'
			,CNSFCOM			VARCHAR(20)					'$.CNSFCOM'
			,IDBODEGA			VARCHAR(20)					'$.IDBODEGA'
			,IDCAUSA			VARCHAR(20)					'$.IDCAUSA'
			)
	
		BEGIN TRY 
			UPDATE ITRAH SET IDCAUSAL = @IDCAUSA WHERE ITRAH.CNSITRA = @CNSITRA AND COALESCE(ITRAH.INICIAL,0)=0
			AND ITRAH.CANTIDADORI - (SELECT SUM(TRA.CANTIDADORI) FROM ITRAH TRA WHERE TRA.CNSITRA = ITRAH.CNSITRA AND TRA.IDARTICULOORI = ITRAH.IDARTICULOORI AND TRA.INICIAL = 1)>0
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'GUARDA_INV'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDBODEGA = IDBODEGA, @CNSRPDX = CNSRPDX, @IDARTICULO = IDARTICULO
		, @REGINVIMA = REGINVIMA, @F_VIGENCIAINV = F_VIGENCIAINV, @CODBARRA = CODBARRA, @CODCUM = CODCUM
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
		CNSITRA				VARCHAR(20)					'$.CNSITRA'
		,IDBODEGA			VARCHAR(20)					'$.IDBODEGA'
		,CNSRPDX			VARCHAR(20)					'$.CNSRPDX'
		,IDARTICULO			VARCHAR(20)					'$.IDARTICULO'
		,REGINVIMA			VARCHAR(20)					'$.REGINVIMA'
		,F_VIGENCIAINV		DATE						'$.F_VIGENCIAINV'
		,CODBARRA			VARCHAR(20)					'$.CODBARRA'
		,CODCUM				VARCHAR(20)					'$.CODCUM'
		)
		IF COALESCE(@REGINVIMA,'')<>'' AND LEN(@REGINVIMA)<10
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Codigo no valido... debe tener m√≠nimo 10 caracteres.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END	
		IF (SELECT REGINVIMA FROM IART WHERE  IDARTICULO = @IDARTICULO) = @REGINVIMA AND DBO.FNK_VALORVARIABLE('VALIDA_INVI') = 'SI'
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Para guardar por favor modifique el registro INVIMA.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END	
		IF @F_VIGENCIAINV < CONVERT(DATE,GETDATE())
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Fecha de vigencia no valida, no puede ser inferior a la actual.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END	
		BEGIN TRY 
			UPDATE IART SET CODBARRA = @CODBARRA ,REGINVIMA = @REGINVIMA,F_VIGENCIAINV = @F_VIGENCIAINV WHERE IART.IDARTICULO = @IDARTICULO 

			IF NOT EXISTS (SELECT * FROM  RINVIM WHERE IDARTICULO =  @IDARTICULO 
			AND NREGISTRO = @REGINVIMA )
			BEGIN
				SELECT @CNSRINVIMA = NULL
				--EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,'@RINVIM',@CNSRINVIMA OUTPUT
				--SELECT @CNSRINVIMA = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSRINVIMA))+LTRIM(RTRIM(@CNSRINVIMA)),SPACE(1),0)
				EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE,@PREFIJO='@RINVIM', @LONGITUD=8, @NVOCONSEC=@CNSRINVIMA OUTPUT  

				INSERT INTO RINVIM (CNSRINVIMA, IDARTICULO, FINGRESO, NREGISTRO, FVENCE)
				SELECT @CNSRINVIMA, @IDARTICULO, DBO.FNK_GETDATE(), @REGINVIMA, @F_VIGENCIAINV

			END
			SELECT 'OK' AS OK
			SELECT CNSRINVIMA, IDARTICULO, FINGRESO, NREGISTRO, FVENCE FROM RINVIM WHERE IDARTICULO = @IDARTICULO
			ORDER BY  RINVIM.FINGRESO  DESC

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'SEL_RINVIM'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDBODEGA = IDBODEGA, @CNSRPDX = CNSRPDX, @IDARTICULO = IDARTICULO
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
		CNSITRA				VARCHAR(20)					'$.CNSITRA'
		,IDBODEGA			VARCHAR(20)					'$.IDBODEGA'
		,CNSRPDX			VARCHAR(20)					'$.CNSRPDX'
		,IDARTICULO			VARCHAR(20)					'$.IDARTICULO'
		)
			
		BEGIN TRY 
			SELECT 'OK' AS OK
			SELECT CNSRINVIMA, IDARTICULO, FINGRESO, NREGISTRO, FVENCE FROM RINVIM WHERE IDARTICULO = @IDARTICULO
			ORDER BY  RINVIM.FINGRESO  DESC
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'CANCELAR_TRANSITO'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDBODEGA = IDBODEGA, @CNSFCOM = CNSFCOM
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
		CNSITRA				VARCHAR(20)					'$.CNSITRA'
		,IDBODEGA			VARCHAR(20)					'$.IDBODEGA'
		,CNSFCOM			VARCHAR(20)					'$.CNSFCOM'
		)

		BEGIN TRY 
			IF (  SELECT IDTIPOMOV FROM ITRA WHERE ITRA.CNSITRA = @CNSITRA) = (SELECT DBO.FNK_VALORVARIABLE ('IDINVMOV_COMPRAS')) OR
				(  SELECT IDTIPOMOV FROM ITRA WHERE ITRA.CNSITRA = @CNSITRA) = (SELECT DBO.FNK_VALORVARIABLE ('IDTS'))
			BEGIN
				IF (SELECT COUNT(*) FROM IMOV WHERE CNSFCOM = @CNSFCOM)>0 OR (SELECT DBO.FNK_VALORVARIABLE('ANULA_TRANSITO_SINEN')) = 'SI' 
				BEGIN
					SELECT 'OK' AS OK, '1' PASO
				END	
				ELSE
				BEGIN
					SELECT 'OK' AS OK, '2' PASO
				END
			END	
			ELSE
				SELECT 'OK' AS OK, '2' PASO
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'CANCELA_1'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDBODEGA = IDBODEGA, @CNSFCOM = CNSFCOM
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
		CNSITRA				VARCHAR(20)					'$.CNSITRA'
		,IDBODEGA			VARCHAR(20)					'$.IDBODEGA'
		,CNSFCOM			VARCHAR(20)					'$.CNSFCOM'
		)

		BEGIN TRY 
			UPDATE ITRA SET ESTADO = 3, USUARIOANU = @USUARIO , F_ANULA = DBO.FNK_GETDATE() WHERE ITRA.CNSITRA = @CNSITRA

			IF (  SELECT IDTIPOMOV FROM ITRA WHERE ITRA.CNSITRA = @CNSITRA) = (SELECT DBO.FNK_VALORVARIABLE ('IDTS'))
			BEGIN
				SELECT @DATO = (SELECT DBO.FNK_VALORVARIABLE ('IDTE'))
				EXEC SPK_INSERTENTTRANSITO @CNSITRA, @USUARIO,@IDBODEGA,@DATO,@SYS_COMPUTERNAME,@COMPANIA,@SEDE
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'QUITAR_LOTE'
	BEGIN
		SELECT @CNSITRA = CNSITRA, @IDBODEGA = IDBODEGA, @IDARTICULOORI = IDARTICULOORI
			,@NOLOTE = NOLOTE
		FROM OPENJSON (@PARAMETROS)
		WITH (
			 CNSITRA		VARCHAR(20)		'$.CNSITRA'
			,IDBODEGA		VARCHAR(20)		'$.IDBODEGA'
			,IDARTICULOORI	VARCHAR(20)		'$.IDARTICULOORI'
			,NOLOTE			VARCHAR(20)		'$.NOLOTE'
		)

		BEGIN TRY 
			SELECT @CNSFCOM = CNSFCOM FROM ITRA WHERE  CNSITRA = @CNSITRA

			DELETE FROM ITRAH WHERE CNSITRA = @CNSITRA AND IDARTICULOORI = @IDARTICULOORI

			INSERT INTO ITRAH (CNSITRA,IDARTICULO,NOLOTE,CANTIDADORI,CANTIDADDES,IDCAUSAL,ESTADO,PCOSTO,NOLOTEPEDIDO,FECHAVENCE,DETALLE,IDARTICULOORI) 
			SELECT @CNSITRA,IDARTICULO AS IDARTICULO, NOLOTE, CANTIDAD AS CANTIDADORI,0 AS CANTIDADDES, '' AS IDCAUSAL,0 AS ESTADO, 
			CASE TER.TIPOREGIMEN                                                                
				WHEN 'C' THEN CASE FCOM.DECONSUMO                                            
									WHEN 0 THEN FCOMD.VLR_UNITARIO                              
									ELSE FCOMD.VR_UNITMASIVA                                    
								END                                                              
				ELSE VR_UNITMASIVA                                                             
			END,                                                                                
			FCOMD.NOLOTE, FCOMD.FECHAVENCE, FCOMD.DETALLE,@IDARTICULOORI       
			FROM FCOMD INNER JOIN FCOM ON FCOMD.CNSFCOM=FCOM.CNSFCOM                            
						INNER JOIN TER  ON FCOM.IDTERCERO=TER.IDTERCERO                          
			WHERE FCOMD.CNSFCOM= @CNSFCOM                                       
			AND FCOMD.IDARTICULO= @IDARTICULOORI

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
END

