CREATE OR ALTER PROCEDURE DBO.SPQ_ORDEN_PAGO
@JSON  NVARCHAR(MAX) 
WITH
ENCRYPTION
AS
DECLARE  @PARAMETROS   NVARCHAR(MAX)                  ,@MODELO           VARCHAR(100)                  ,@METODO           VARCHAR(100)  
        ,@USUARI       VARCHAR(12)                    ,@GRUPO            VARCHAR(8)                    ,@SYS_COMPUTERNAME VARCHAR(254) 
        ,@IDSEDE       VARCHAR(5)                     ,@USUNOMBRE        VARCHAR(100)                  ,@SEDE             VARCHAR(5)
        ,@FECHA        DATE                           ,@IDEMEDICA        VARCHAR(4)	                   ,@FECHA1           DATETIME		
        ,@SQL          VARCHAR(MAX)                   ,@CODCAJERO		    VARCHAR(20)                   ,@COMPANIA		     VARCHAR(10)	
        ,@IDAFILIADO   VARCHAR(20)	                  ,@IDMEDICO	       VARCHAR(20)	                ,@FECHAINI         DATE	
        ,@FECHAFIN	  DATE	                        ,@CONSECUTIVOS	    NVARCHAR(MAX)	                ,@MARCAR           BIT	   
        ,@NOAUTORIZACION VARCHAR(50)	               ,@CONSECUTIVO      VARCHAR(20)                   ,@OBSERVACION	     VARCHAR (200)	
        ,@IDCAUSAL     VARCHAR(20)	                  ,@IDSERVICIO       VARCHAR(20)	                ,@DATO             INT		
        ,@CNSIZSOL     VARCHAR(20)            		   ,@CONSECUTIVOCAN   VARCHAR(20)	                ,@GRUPAL           BIT	
        ,@IDAUT        VARCHAR(20)		               ,@VR_TOTAL         DECIMAL(14,2)                 ,@VLRDEPOSITOS     DECIMAL(14,2) 
		  ,@MENSAJE      VARCHAR(500)		               ,@PROCESO          VARCHAR(50)	                ,@PROCEDENCIA      VARCHAR(20)
        ,@ITEM         INT		                        ,@TIPOFAC          VARCHAR(20)                   ,@LIMITE           INT
		  ,@CNSFCXPPM    VARCHAR(20)		               ,@CNSFACJ          VARCHAR(20)	                ,@CODCAJA          VARCHAR(20)	
        ,@CNSFCXPP     VARCHAR(20)                    ,@CNSFCXP          VARCHAR(20)                   ,@ITEM_CANT        INT
		  ,@ESTADO       VARCHAR (20)	                  ,@F_FACTURAREF     DATE	                         ,@CONTABILIZADA    INT	
        ,@VALOR        DECIMAL(14,2)	               ,@VLR_ABONO        DECIMAL(14,2)	                ,@CNSFCOM          VARCHAR(20)
		  ,@VLR_ANTICIPO DECIMAL(14,2)	               ,@SALDOANTE        DECIMAL(14,2)	                ,@IDTERCERO        VARCHAR(20)	
        ,@dataFCXPPM_Sel NVARCHAR(MAX)                ,@FECHA_TIME       DATETIME                      ,@ANIO             VARCHAR(20)	
        ,@MES         INT	                           ,@ABONO            DECIMAL(14,2)	                ,@FECHAPPAGO       DATETIME	
        ,@VALORPPAGO DECIMAL(14,2)                    ,@WHERE_DATA       VARCHAR(MAX)                  ,@sqlCommand       Nvarchar(max)
		  ,@LINEA AS VARCHAR(MAX)                       ,@NROLINEAS        INT                           ,@CNSRPDX          VARCHAR(20)
        ,@ERROR VARCHAR(120)                          ,@INDICE           INT                           ,@DATOS            VARCHAR(MAX)     
		  ,@SICXP INT                                   ,@ENPRESUPUESTO    INT                           ,@CNSRP            VARCHAR(20)
        ,@CNSPPTO VARCHAR(20)                         ,@CNSCDP           VARCHAR(20)                   ,@NROCOMPROBANTE   VARCHAR(50)
		  ,@ESTADO_FCXP VARCHAR(20)                     ,@USUARIO          VARCHAR(20)                   ,@VLR_ANTICIPOS_LIQ    DECIMAL(14,2) --20250611 STORRES Se crea variable para
        ,@VLR_ORIGEN_LIQ    DECIMAL(14,2)                                                                                                   --20250611 STORRES Calcular saldo de la cxp
        DECLARE @TABLA AS TABLE(	ITEM INT IDENTITY(1,1),	VALOR VARCHAR(MAX))                           
        DECLARE @TABLERRR		TABLE (ERROR VARCHAR(200))

BEGIN 
	SET LANGUAGE Spanish;  
	SET DATEFORMAT dmy
	SELECT *
	INTO #JSON
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)  AS JSON
	)

	SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
	FROM #JSON
	--DEFINICION DE TABLA DE ERRORES
	DECLARE @TBLERRORES TABLE(ERROR VARCHAR(200));
	SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO), @USUNOMBRE = NOMBRE FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME, @COMPANIA = COMPANIA, @CODCAJERO= CODCAJERO FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @IDSEDE = IDSEDE, @SEDE = IDSEDE FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME
	PRINT '@USUARIO='+@USUARIO

	IF @METODO = 'AUTORIZAR'
	BEGIN
		SELECT @CNSFCXPPM = CNSFCXPPM
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSFCXPPM			VARCHAR(20)		'$.CNSFCXPPM'
		)

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF (SELECT DBO.FNK_VALORVARIABLE('FECHAORDENPAGO')) = 'CONTABLE'
				BEGIN
					UPDATE FCXPPM SET F_CONTABLE = DBO.FNK_GETDATE() WHERE CNSFCXPPM = @CNSFCXPPM
				END
					EXEC SPK_CONFIRMAR_PAGOSMASIVO @CNSFCXPPM, @COMPANIA, @IDSEDE, @SYS_COMPUTERNAME, @USUARIO
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'DESAUTORIZAR'
	BEGIN
		SELECT @CNSFCXPPM = CNSFCXPPM
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSFCXPPM			VARCHAR(20)		'$.CNSFCXPPM'
		)
		IF EXISTS (SELECT  * FROM FCXPP INNER JOIN FCJ ON FCXPP.CODCAJA=FCJ.CODCAJA AND FCXPP.CNSFACJ=FCJ.CNSFACJ 
		WHERE  FCXPP.CNSFCXPPM = @CNSFCXPPM AND FCJ.ESTADO = 'P' AND FCXPP.ESTADO <> 'A' AND FCJ.CERRADA = 1)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'items de la orden de pago ya se encuentran confirmados en Caja'
		END
		SELECT TOP 1 @CNSFACJ = FCJ.CNSFACJ, @CODCAJA = FCJ.CODCAJA  FROM FCXPP 
		INNER JOIN FCJ ON FCXPP.CODCAJA=FCJ.CODCAJA AND FCXPP.CNSFACJ=FCJ.CNSFACJ 
		WHERE  FCXPP.CNSFCXPPM = @CNSFCXPPM 
		IF (SELECT COALESCE(FCJ.CERRADA,0) FROM FCJ WHERE FCJ.CNSFACJ = @CNSFACJ AND FCJ.CODCAJA = @CODCAJA ) = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede desechar/utilizar un recibo confirmado.'
		END
		IF EXISTS (SELECT * FROM PCJ WHERE PCJ.CNSFACJ = @CNSFACJ AND PCJ.CODCAJA = @CODCAJA )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No Se Puede Desechar Un Recibo Con Registros En Forma De Pago.'
		END
		IF EXISTS (SELECT * FROM FCJD WHERE FCJD.CNSFACJ = @CNSFACJ AND FCJD.CODCAJA = @CODCAJA )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No Se Puede Desechar Un Recibo Con Registros En Conceptos.'
		END
		IF (SELECT ESTADO FROM FCJ WHERE FCJ.CNSFACJ = @CNSFACJ AND FCJ.CODCAJA = @CODCAJA ) = 'A'
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No Se Puede Desechar/Utilizar Un Recibo Anulado.'
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				DELETE FCJD WHERE CNSFACJ = @CNSFACJ AND CODCAJA = @CODCAJA

				IF (SELECT ESTADO FROM FCJ WHERE FCJ.CNSFACJ = @CNSFACJ AND FCJ.CODCAJA = @CODCAJA ) IN ('P', 'D')
				BEGIN
					UPDATE FCJ SET FECHA = DBO.FNK_GETDATE(), ESTADO = 'P', IDAFILIADO = NULL, IDTERCERO = NULL, PROCEDENCIA = 'CAJA', NOMBRECLIENTE = NULL, TIPO = 'INTERNO'
							,USUARIO = @USUARIO, SYS_ComputerName = @SYS_COMPUTERNAME, OBSERVACION = NULL, DEAPERTURA = 0, NOADMISION = NULL, CNSACJ = NULL, ARCHIVADO = 0
							,DEVUELTO = 0, CERRADA = 0 WHERE FCJ.CNSFACJ = @CNSFACJ AND FCJ.CODCAJA = @CODCAJA 
				END
				EXEC SPK_DESCONFIRMAR_PAGOSMASIVO @CNSFCXPPM, @COMPANIA , @IDSEDE, @SYS_COMPUTERNAME, @USUARIO
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'ANULA_INIDIVIDUAL'
	BEGIN
		SELECT @CNSFCXPPM = CNSFCXPPM, @CNSFCXPP = CNSFCXPP
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSFCXPPM			VARCHAR(20)		'$.CNSFCXPPM', CNSFCXPP			VARCHAR(20)		'$.CNSFCXPP' )

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				SELECT @CNSFCXP= FCXPP.CNSFCXP  FROM  FCXPP WHERE CNSFCXPPM = @CNSFCXPPM AND CNSFCXPP = @CNSFCXPP
				EXEC SPK_ADMIN_PAGOMASIVO @CNSFCXPP, @CNSFCXPPM, 'ANULAR', @SYS_COMPUTERNAME, @USUARIO

				EXEC SPK_CALCULOVALORESCXP @CNSFCXP
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'ANULA_MASIVO'
	BEGIN
		SELECT @CNSFCXPPM = CNSFCXPPM
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSFCXPPM			VARCHAR(20)		'$.CNSFCXPPM')
		IF NOT EXISTS (SELECT * FROM FCXPP WHERE CNSFCXPPM = @CNSFCXPPM AND ESTADO <> 'A' )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No existen registros para anular.'
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				SELECT ROW_NUMBER() OVER(ORDER BY FCXPP.CNSFCXPP ASC) AS FILA_CITA, FCXPP.CNSFCXPP, FCXPP.CNSFCXP INTO #FCXPP FROM FCXPP  WHERE CNSFCXPPM = @CNSFCXPPM AND ESTADO <> 'A' 
				
				SELECT @ITEM_CANT=1,@LIMITE=0
				SELECT @LIMITE=COUNT(*) FROM  FCXPP  WHERE CNSFCXPPM = @CNSFCXPPM AND ESTADO <> 'A' 
				WHILE @ITEM_CANT<=@LIMITE
				BEGIN
					SELECT @CNSFCXPP =  #FCXPP.CNSFCXPP , @CNSFCXP= #FCXPP.CNSFCXP FROM #FCXPP WHERE FILA_CITA = @ITEM_CANT
					EXEC SPK_ADMIN_PAGOMASIVO @CNSFCXPP, @CNSFCXPPM, 'ANULAR', @SYS_COMPUTERNAME, @USUARIO
					EXEC SPK_CALCULOVALORESCXP @CNSFCXP
					SELECT @ITEM_CANT = @ITEM_CANT+1 
				END
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'PAGO_TOTAL'
	BEGIN
		SELECT @CNSFCXP = CNSFCXP, @CNSFCXPPM = CNSFCXPPM
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSFCXP			VARCHAR(20)		'$.CNSFCXP', CNSFCXPPM			VARCHAR(20)		'$.CNSFCXPPM'  )


		SELECT @SICXP = 0
		SELECT @ENPRESUPUESTO = ENPRESUPUESTO, @CNSRP = CNSRP,@CNSPPTO = CNSPPTO, @CNSCDP = CNSCDP, @F_FACTURAREF = F_FACTURAREF , @CONTABILIZADA = COALESCE(CONTABILIZADA,0)
			,@NROCOMPROBANTE = NROCOMPROBANTE, @ESTADO_FCXP = ESTADO, @PROCEDENCIA = PROCEDENCIA, @CNSFCOM = CNSFCOM, @IDTERCERO = IDTERCERO
		FROM FCXP WHERE FCXP.CNSFCXP = @CNSFCXP
		SELECT @FECHA = FECHA FROM FCXPPM WHERE CNSFCXPPM = @CNSFCXPPM
		--     CMT FCXP,CONTABILIZADA
		IF DBO.FNK_VALORVARIABLE('PRESUP_CXP_ACTIVADO') = 'SI'
		BEGIN
			IF DBO.FNK_VALORVARIABLE('PPTO_CONSICXP') = 'NO' AND DBO.FNK_VALORVARIABLE('DATOCXPSI') <> ''
			BEGIN 
				SELECT @SICXP = (SELECT CASE WHEN CNSFCXP LIKE DBO.FNK_VALORVARIABLE('DATOCXPSI') THEN 1 ELSE 0 END FROM FCXP WHERE CNSFCXP = @CNSFCXP)
			END
			ELSE
			BEGIN
				SELECT @SICXP = 0
			END
		END
		IF @ENPRESUPUESTO = 1 AND @SICXP = 0
		BEGIN
			SELECT @ESTADO = ESTADO FROM PTCXP WHERE CONSECUTIVO=@CNSPPTO AND CDP= @CNSCDP AND RP= @CNSRP AND CNSCXP= @CNSFCXP AND ESTADO<>'Anulado'
			IF @ESTADO = 'NoConfirmado'
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La Cuenta por Pagar No se Encuentra Confirmada en Presupuesto... Se Debe Confirmar Primero.'
			END
			IF @ESTADO = '' -- YCARRILLO se retira la condicion de =confirmado a ''
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La Cuenta por Pagar No se Encuentra  en Presupuesto o Esta Anulada Revisar...'
			END
		END
		IF CONVERT(DATE,@F_FACTURAREF) > CONVERT(DATE,@FECHA)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La Fecha de orden de pago no puede ser Menor a la fecha  del documento,  Revise'
		END
		IF @CONTABILIZADA <> 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No puede seleccionar CxP que no esten enviadas a Contabilidad'
		END
		IF @CONTABILIZADA = 1 
		BEGIN
			IF (SELECT COUNT(1) FROM MCP WHERE NROCOMPROBANTE = @NROCOMPROBANTE) > 0
			BEGIN
				SELECT @DATO = (SELECT COALESCE(ESTADO,0) FROM MCP WHERE NROCOMPROBANTE = @NROCOMPROBANTE)
				IF DBO.FNK_VALORVARIABLE('BD_HISTORICAS') = 'SI'
				BEGIN
					INSERT INTO @TBLERRORES(ERROR) SELECT 'La CxP NO se encuentra enviada a Contabilidad'
				END
				IF @DATO = 0
				BEGIN
					INSERT INTO @TBLERRORES(ERROR) SELECT 'La CxP se encuentra enviada a Contabilidad pero presenta Errores.'
				END
				IF @DATO = 1
				BEGIN
					INSERT INTO @TBLERRORES(ERROR) SELECT 'La CxP se encuentra enviada a Contabilidad y está en estado Preparada.'
				END
				IF @DATO = 2
				BEGIN
					IF @ESTADO_FCXP IN ('N','C')
					BEGIN
						PRINT 'ENTRA 11'
                  -- 20250611 -- STORRES -- se agrega la busqueda de anticipos legalizados para poder tenerlo en cuenta en valores abonados
                  SELECT @VLR_ANTICIPOS_LIQ=SUM(COALESCE(VALORCXP,0)),@VLR_ORIGEN_LIQ=COALESCE(SUM(VALOR_LEG),0)
                  FROM  ANT 
                  WHERE CNSFCXP=@CNSFCXP AND ESTADO = 'L'

						SELECT @VALOR = (SELECT FCXP.VLR_NETO - FCXP.VLR_IMPUESTOS - FCXP.VLR_NOTASDEBITO + FCXP.VLR_NOTASCREDITO FROM FCXP WHERE CNSFCXP = @CNSFCXP)
						SELECT @VLR_ABONO = (SELECT COALESCE(SUM(ABONO),0)+@VLR_ORIGEN_LIQ FROM FCXPP WHERE ESTADO<>'A' AND CNSFCXP=@CNSFCXP ) -- 202506 SE AGREGA LOS VALORES DE LOS ANTECEDENTES
						IF @PROCEDENCIA = 'Anticipos'
						BEGIN
							SELECT  @VLR_ANTICIPO = (SELECT ISNULL(SUM(VALOR),0) FROM FCXP WHERE ESTADO<>'A' AND CNSFCXP <> @CNSFCXP AND CNSFCOM = @CNSFCOM)
							SELECT @VLR_ABONO = @VLR_ABONO + @VLR_ANTICIPO
						END
						IF (@VALOR - @VLR_ABONO )<= 0
						BEGIN
							print '2222'
							INSERT INTO @TBLERRORES(ERROR) SELECT 'Ya están hechas las Autorizaciones Necesarias para completar el Pago.'
						END
					END
				END
				ELSE
				BEGIN
					INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Marcar esta CXP se encuentra en estado: ' + @DATO
				END
				SELECT @VALOR - @VLR_ABONO
			END
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK 
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@FCXPP', @CNSFCXPP OUTPUT  
				SELECT @CNSFCXPP = @IDSEDE +  REPLACE(SPACE(8 - LEN(@CNSFCXPP))+LTRIM(RTRIM(@CNSFCXPP)),SPACE(1),0)   
            

				SELECT @VALOR = COALESCE(@VALOR,0)
				SELECT @VLR_ABONO = COALESCE(@VLR_ABONO,0)
				SELECT @SALDOANTE = @VALOR-@VLR_ABONO

				INSERT INTO FCXPP ( CNSFCXPP, CNSFCXP, CNSFCXPPM, SALDOANTERIOR, ABONO, VLR_NETO, SALDONUEVO, IDTERCERO, FECHA, USUARIO, USUARIOCONF, FECHACONF
				,SYS_COMPUTERNAME, ESTADO, N_RECIBO, CODCAJA, CNSFACJ, PROCEDENCIA, VLR_IMPUESTOS, VALORPPAGO)
				SELECT @CNSFCXPP, @CNSFCXP, @CNSFCXPPM, @SALDOANTE, @VALOR-@VLR_ABONO, @VALOR, (@VALOR-@VLR_ABONO)- @SALDOANTE,@IDTERCERO, DBO.FNK_GETDATE(), @USUARIO,NULL , NULL -- 20250611 -- STORRES -- SE CAMBIA SITIO LAS VARIABLES @SALDOANTE Y @VALOR YA QUE ESTABAN EN CAMPOS DIFERNETES EN EL INSERT
				,@SYS_COMPUTERNAME, 'N', '','','','CXP', 0, 0

				IF (SELECT COUNT(*) FROM FCXPP WHERE ESTADO<>'A' AND CNSFCXP= @CNSFCXP) >0 
				BEGIN
					UPDATE FCXP SET ESTADO = 'C', USUARIOMARCA = @USUARIO WHERE CNSFCXP = @CNSFCXP
				END
				ELSE
				BEGIN
					UPDATE FCXP SET ESTADO = 'N', USUARIOMARCA = @USUARIO WHERE CNSFCXP = @CNSFCXP
				END
            EXEC SPK_CALCULOVALORESCXP @CNSFCXP
				SELECT @ABONO=SUM(ABONO)  FROM FCXPP WHERE CNSFCXPPM = @CNSFCXPPM AND ESTADO <> 'A'
            UPDATE FCXPPM SET VALOR=@ABONO WHERE CNSFCXPPM = @CNSFCXPPM
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK, SUM(ABONO) ABONO  FROM FCXPP WHERE CNSFCXPPM = @CNSFCXPPM AND ESTADO <> 'A'
		END 
	END

	IF @METODO = 'CRUD_FCXPPM'
	BEGIN
		SELECT @dataFCXPPM_Sel = dataFCXPPM_Sel
		FROM OPENJSON(@PARAMETROS)
		WITH( dataFCXPPM_Sel NVARCHAR(MAX) AS JSON)

		SELECT @PROCESO =UPPER( JSON_VALUE(@dataFCXPPM_Sel,'$.PROCESO'))

		SELECT * INTO #dataFCXPPM_Sel FROM OPENJSON(@dataFCXPPM_Sel)
		WITH(
		CNSFCXPPM			VARCHAR(20)		'$.CNSFCXPPM'		,CODUNG				VARCHAR(20)		'$.CODUNG'
		,OBSERVACION		VARCHAR(255)	'$.OBSERVACION'		,FECHA				DATE			'$.FECHA'
		,CODPRG				VARCHAR(20)		'$.CODPRG'			,CODCAJA			VARCHAR(20)		'$.CODCAJA'
		,IDTERCERO_AFAVOR	VARCHAR(20)		'$.IDTERCERO_AFAVOR',CUENTA_RUBRO		VARCHAR(20)		'$.CUENTA_RUBRO'
		,MVARIOS			BIT)

		
		IF @PROCESO = 'NUEVO' AND NOT EXISTS (SELECT * FROM PRI,#dataFCXPPM_Sel WHERE ANO = YEAR(#dataFCXPPM_Sel.FECHA) AND MES = MONTH(#dataFCXPPM_Sel.FECHA) )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Periodo Contable NO Existe Para La Fecha Indicada.'
		END
		IF @PROCESO = 'NUEVO' AND (SELECT PRI.CERRADO FROM PRI,#dataFCXPPM_Sel WHERE ANO = YEAR(#dataFCXPPM_Sel.FECHA) AND MES = MONTH(#dataFCXPPM_Sel.FECHA) ) = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Periodo Contable Para La Fecha Indicada, Se Encuentra Cerrado.'
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF @PROCESO = 'NUEVO'
				BEGIN
					EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@FCXPPM', @CNSFCXPPM OUTPUT  
					SELECT @CNSFCXPPM = @IDSEDE +  REPLACE(SPACE(8 - LEN(@CNSFCXPPM))+LTRIM(RTRIM(@CNSFCXPPM)),SPACE(1),0)   

					INSERT INTO FCXPPM (CNSFCXPPM
					, FECHA
					, OBSERVACION, USUARIO, SYS_COMPUTERNAME, ESTADO, VALOR, PROCEDENCIA, CODCAJA, IDTERCERO_AFAVOR, CODUNG, CODPRG, RUBRO_ID, MVARIOS)
					SELECT @CNSFCXPPM
					--, FECHA
					, (SELECT DATEADD(HOUR,(datepart(hh, GETDATE())),DATEADD(minute,(datepart(mi, GETDATE())),DATEADD(SECOND,(datepart(ss, GETDATE())), REPLACE(FECHA,'-','')  )))) 
					, OBSERVACION, @USUARIO, @SYS_COMPUTERNAME, 'N', 0, 'CXP', CODCAJA, IDTERCERO_AFAVOR,  CODUNG, CODPRG, 0, MVARIOS
					FROM #dataFCXPPM_Sel
					IF DBO.FNK_VALORVARIABLE('MMCORPORATIVO') = 'SI' AND DBO.FNK_VALORVARIABLE('CUF_CPF_DE_SEDE') = 'SI' 
					BEGIN
						UPDATE FCXPPM SET FCXPPM.CODUNG = SED.CODUNG  , FCXPPM.CODPRG= SED.CODPRG FROM FCXPPM,SED WHERE  SED.IDSEDE = @IDSEDE AND FCXPPM.CNSFCXPPM = @CNSFCXPPM
					END
				END
				IF @PROCESO = 'EDITAR'
				BEGIN
					SELECT @FECHA_TIME =  (SELECT DATEADD(HOUR,(datepart(hh, FCXPPM.FECHA)),DATEADD(minute,(datepart(mi, FCXPPM.FECHA)),DATEADD(SECOND,(datepart(ss, FCXPPM.FECHA)),   REPLACE(#dataFCXPPM_Sel.FECHA,'-','')   ))))
					FROM FCXPPM, #dataFCXPPM_Sel WHERE FCXPPM.CNSFCXPPM = #dataFCXPPM_Sel.CNSFCXPPM

					UPDATE FCXPPM SET FCXPPM.FECHA = @FECHA_TIME , FCXPPM.CODUNG = #dataFCXPPM_Sel.CODUNG , FCXPPM.CODPRG = #dataFCXPPM_Sel.CODPRG, FCXPPM.MVARIOS = #dataFCXPPM_Sel.MVARIOS
					, FCXPPM.OBSERVACION = #dataFCXPPM_Sel.OBSERVACION,  FCXPPM.IDTERCERO_AFAVOR = #dataFCXPPM_Sel.IDTERCERO_AFAVOR,CODCAJA= #dataFCXPPM_Sel.CODCAJA
					FROM FCXPPM, #dataFCXPPM_Sel WHERE FCXPPM.CNSFCXPPM = #dataFCXPPM_Sel.CNSFCXPPM
				END
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK, @CNSFCXPPM CNSFCXPPM
		END 
	END
	IF @METODO = 'CERRAR_CUENTA'
	BEGIN
		SELECT @ANIO = ANIO, @MES = MES
		FROM OPENJSON(@PARAMETROS)
		WITH( ANIO	VARCHAR(20)		'$.ANIO', MES	INT		'$.MES' )
		IF EXISTS (SELECT * FROM MCPE WHERE PROCEDENCIA IN ('CXC','RAD CXC','NOTDBCR','FACTURA','RGLO', 'CONCI') AND MES = @MES AND ANO = @ANIO AND ISNULL(CLASECONTB,'')<>'NIIF' )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Existen Comprobantes errados de procedencia Cartera y/o Facturación No se Puede Continuar.'
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				EXEC SPK_CIERRA_CARTERA @ANIO, @MES, @USUARIO, 'CXP'
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'ABRIR_CUENTA'
	BEGIN
		SELECT @ANIO = ANIO, @MES = MES
		FROM OPENJSON(@PARAMETROS)
		WITH( ANIO	VARCHAR(20)		'$.ANIO', MES	INT		'$.MES' )
		IF (SELECT DATEDIFF(DAY,DBO.FNK_DIA_DEL_MES(@ANIO,@MES,'ULTIMO'),GETDATE()) FROM PRI  WHERE ANO = @ANIO AND MES = @MES AND COMPANIA = '01')>= 25
		BEGIN
			SELECT @MENSAJE = DATEDIFF(DAY,DBO.FNK_DIA_DEL_MES(@ANIO,@MES,'ULTIMO'),GETDATE()) FROM PRI  WHERE ANO = @ANIO AND MES = @MES AND COMPANIA = '01'
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Ya pasaron ' + @MENSAJE +'  Dias ya no es posible la Apertura de la Cartera; ya paso un perido Contable'
		END

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				UPDATE PRI SET CERRADO_CARTERA=0 WHERE ANO= @ANIO AND MES= @MES AND COMPANIA= '01'
				DELETE FCARTH WHERE ANO=@ANIO AND MES=@MES AND PROCEDENCIA='CARTERA'
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'EDITA_ABONO_FORM'
	BEGIN
		SELECT @CNSFCXP = CNSFCXP, @CNSFCXPPM = CNSFCXPPM
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSFCXP	VARCHAR(20) '$.CNSFCXP',  CNSFCXPPM	VARCHAR(20) '$.CNSFCXPPM')
		
		SELECT @ENPRESUPUESTO = ENPRESUPUESTO, @CNSRP = CNSRP,@CNSPPTO = CNSPPTO, @CNSCDP = CNSCDP, @F_FACTURAREF = F_FACTURAREF , @CONTABILIZADA = COALESCE(CONTABILIZADA,0)
			,@NROCOMPROBANTE = NROCOMPROBANTE, @ESTADO_FCXP = ESTADO, @PROCEDENCIA = PROCEDENCIA, @CNSFCOM = CNSFCOM, @IDTERCERO = IDTERCERO
		FROM FCXP WHERE FCXP.CNSFCXP = @CNSFCXP
		SELECT @FECHA = FECHA FROM FCXPPM WHERE CNSFCXPPM = @CNSFCXPPM

		IF DBO.FNK_VALORVARIABLE('PRESUP_CXP_ACTIVADO') = 'SI'
		BEGIN
			IF DBO.FNK_VALORVARIABLE('PPTO_CONSICXP') = 'NO' AND DBO.FNK_VALORVARIABLE('DATOCXPSI') <> ''
			BEGIN 
				SELECT @SICXP = (SELECT CASE WHEN CNSFCXP LIKE DBO.FNK_VALORVARIABLE('DATOCXPSI') THEN 1 ELSE 0 END FROM FCXP WHERE CNSFCXP = @CNSFCXP)
			END
			ELSE
			BEGIN
				SELECT @SICXP = 0
			END
		END
		IF @ENPRESUPUESTO = 1 AND @SICXP = 0
		BEGIN
			SELECT @ESTADO = ESTADO FROM PTCXP WHERE CONSECUTIVO=@CNSPPTO AND CDP= @CNSCDP AND RP= @CNSRP AND CNSCXP= @CNSFCXP AND ESTADO<>'Anulado'
			IF @ESTADO = 'NoConfirmado'
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La Cuenta por Pagar No se Encuentra Confirmada en Presupuesto... Se Debe Confirmar Primero.'
			END
			IF @ESTADO = 'Confirmado'
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La Cuenta por Pagar No se Encuentra  en Presupuesto o Esta Anulada Revisar...'
			END
		END
		IF CONVERT(DATE,@F_FACTURAREF) > CONVERT(DATE,@FECHA)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La Fecha de orden de pago no puede ser Menor a la fecha  del documento,  Revise'
		END
		IF (SELECT COUNT(1) FROM MCP WHERE NROCOMPROBANTE = @NROCOMPROBANTE) > 0
		BEGIN
			SELECT @DATO = (SELECT COALESCE(ESTADO,0) FROM MCP WHERE NROCOMPROBANTE = @NROCOMPROBANTE)
			IF DBO.FNK_VALORVARIABLE('BD_HISTORICAS') = 'SI'
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La CxP NO se encuentra enviada a Contabilidad'
			END
			IF @DATO = 0
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La CxP se encuentra enviada a Contabilidad pero presenta Errores.'
			END
			IF @DATO = 1
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La CxP se encuentra enviada a Contabilidad y está en estado Preparada.'
			END
			IF @DATO = 2
			BEGIN
				INSERT INTO FCXPP (CNSFCXPP, CNSFCXP, FECHA, OBSERVACION, SALDOANTERIOR, ABONO, SALDONUEVO, FECHAPPAGO, VALORPPAGO, USUARIO, SYS_COMPUTERNAME, ESTADO, IDTERCERO, IDCLASEIMP, VLR_IMPUESTOS, VLR_NETO, PROCEDENCIA, CNSFCXPPM)
				SELECT '', @CNSFCXP, DBO.FNK_GETDATE(), NULL, FCXP.SALDO, (FCXP.VLR_NETO - FCXP.VLR_IMPUESTOS - FCXP.VLR_NOTASDEBITO + FCXP.VLR_NOTASCREDITO) - (SELECT SUM(ABONO) FROM FCXPP WHERE ESTADO<>'A' AND FCXPP.CNSFCXP=FCXP.CNSFCXP) , 0, NULL, 0, 'INSERTCANCEL', @SYS_COMPUTERNAME, 'N', FCXP.IDTERCERO, NULL, 0, FCXP.VALOR-COALESCE(SUM(FCXPP.ABONO),0), 'CXP', @CNSFCXPPM
				FROM FCXP
				LEFT JOIN FCXPP ON FCXP.CNSFCXP = FCXPP.CNSFCXP AND FCXPP.ESTADO = 'N'
				WHERE  FCXP.CNSFCXP = @CNSFCXP
				  GROUP BY   FCXP.VALOR      ,FCXP.IDTERCERO , FCXP.SALDO, FCXP.CNSFCXP, FCXP.VLR_NETO, FCXP.VLR_IMPUESTOS, FCXP.VLR_NOTASDEBITO, FCXP.VLR_NOTASCREDITO

				SELECT 'OK' OK
				SELECT CNSFCXPP, CNSFCXP, FECHA, OBSERVACION, SALDOANTERIOR, ABONO, SALDONUEVO, FECHAPPAGO, VALORPPAGO, USUARIO, SYS_COMPUTERNAME, ESTADO, IDTERCERO, IDCLASEIMP, VLR_IMPUESTOS, VLR_NETO, PROCEDENCIA, CNSFCXPPM 
				FROM FCXPP  WHERE CNSFCXP = @CNSFCXP
				RETURN
			END
			ELSE
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Marcar esta CXP se encuentra en estado: ' + @DATO
			END
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		
	END
	IF @METODO = 'PAGO_PARCIAL'
	BEGIN
		SELECT @CNSFCXP = CNSFCXP, @ABONO = ABONO,@FECHAPPAGO = FECHAPPAGO,@VALORPPAGO = VALORPPAGO, @OBSERVACION = OBSERVACION
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSFCXP		VARCHAR(20)		'$.CNSFCXP'		, ABONO			DECIMAL(14,2)	'$.ABONO'
			, VALORPPAGO	DECIMAL(14,2)	'$.VALORPPAGO'	, FECHAPPAGO	DATETIME		'$.FECHAPPAGO'
			, OBSERVACION	VARCHAR(200)	'$.OBSERVACION'	)

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@FCXPP', @CNSFCXPP OUTPUT  
				SELECT @CNSFCXPP = @IDSEDE +  REPLACE(SPACE(8 - LEN(@CNSFCXPP))+LTRIM(RTRIM(@CNSFCXPP)),SPACE(1),0)   

				UPDATE FCXPP SET FCXPP.USUARIO = @USUARIO, FCXPP.OBSERVACION = @OBSERVACION , FCXPP.ABONO = @ABONO, FCXPP.SALDONUEVO = FCXPP.SALDOANTERIOR - @ABONO
				,FCXPP.FECHAPPAGO = @FECHAPPAGO, FCXPP.VALORPPAGO = @VALORPPAGO, FCXPP.CNSFCXPP = @CNSFCXPP
				FROM FCXPP WHERE FCXPP.CNSFCXP = @CNSFCXP AND  FCXPP.USUARIO = 'INSERTCANCEL' AND ESTADO = 'N' AND PROCEDENCIA = 'CXP'
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'CIERRA_PARCIAL'
	BEGIN
		SELECT @CNSFCXP = CNSFCXP
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSFCXP		VARCHAR(20)		'$.CNSFCXP'		)

		SELECT 'OK' OK
		DELETE FROM FCXPP WHERE  CNSFCXP = @CNSFCXP AND USUARIO = 'INSERTCANCEL'  AND ESTADO = 'N' AND PROCEDENCIA = 'CXP'

	END
	IF @METODO = 'REPORTE_OP'
	BEGIN
		SELECT @CNSFCXPPM = CNSFCXPPM
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSFCXPPM		VARCHAR(20)		'$.CNSFCXPPM'		)

		SELECT 'OK' OK
		SELECT     FCXPPM.CNSFCXPPM, FCXPPM.FECHA, FCXPPM.OBSERVACION, FCXPPM.USUARIO
		, USUCREA.NOMBRE [USUCREA_DESC]       ,   FCXPPM.USUARIOCONF, USUCONF.NOMBRE [USUCONF_DESC]
		, FCXPPM.FECHACONF, FCXPPM.RESOLUCION, FCXPPM.CUENTA_RUBRO, FCXPPM.SYS_COMPUTERNAME, FCXPPM.N_RECIBO      
		,   FCXPPM.ESTADO, FCXPPM.VALOR, FCXPPM.PROCEDENCIA, FCXPPM.CODCAJA, FCXPPM.IDTERCERO_AFAVOR, TER.RAZONSOCIAL
		, FCXPPM.CODUNG, FCXPPM.CODPRG,  FCXPPM.F_CONTABLE       ,   FCXPPM.RUBRO_ID, FCXPPM.CNSRESOLPAG
		,  CAST(COALESCE(FCXPPM.MVARIOS,0) AS BIT) MVARIOS  
		FROM [dbo].[FCXPPM]
			INNER JOIN  USUSU USUCREA ON FCXPPM.USUARIO = USUCREA.USUARIO                 
			LEFT JOIN TER ON FCXPPM.IDTERCERO_AFAVOR = TER.IDTERCERO               
			LEFT JOIN USUSU USUCONF ON FCXPPM.USUARIOCONF = USUCONF.USUARIO
		WHERE  FCXPPM.CNSFCXPPM = @CNSFCXPPM

		SELECT ROW_NUMBER() OVER(ORDER BY FCXPP.CNSFCXPP ASC) AS FILA,  FCXPP.CNSFCXPP, FCXPP.CNSFCXP, FCXPP.FECHA, FCXP.NOREFERENCIA, FCXP.F_FACTURAREF, FCXP.F_VENCE, FCXP.IDTERCERO, TER.NIT, TER.RAZONSOCIAL, FCXP.VLR_GLOSAS,FCXPP.ABONO , FCXPP.SALDONUEVO,  FCXPP.SALDOANTERIOR, FCXP.VLR_NETO  , FCXPP.CODCAJA, FCXPP.CNSFACJ, FCXPP.ESTADO, FCJ.CNSACJ, ACJ.ABIERTA , FCXPP.CNSFCXPPM 
			,FCXP.CUECREDITO, FCXP.VLR_IMPUESTOS
		FROM [dbo].[FCXPP] 
			INNER JOIN  FCXP ON FCXPP.CNSFCXP = FCXP.CNSFCXP   
			LEFT JOIN TER ON FCXP.IDTERCERO = TER.IDTERCERO  
			LEFT JOIN FCJ ON FCXPP.CNSFACJ = FCJ.CNSFACJ AND FCXPP.CODCAJA = FCJ.CODCAJA   
			LEFT JOIN ACJ ON FCJ.CNSACJ = ACJ.CNSACJ   
		WHERE   FCXPP.CNSFCXPPM = @CNSFCXPPM AND FCXPP.USUARIO <> 'INSERTCANCEL' AND  FCXPP.ESTADO = 'P'
		ORDER BY FCXPP.CNSFCXPP ASC  

		SELECT SUM( FCXP.VLR_GLOSAS) VLR_GLOSAS ,SUM(FCXPP.ABONO) ABONO , SUM(FCXPP.SALDONUEVO) SALDONUEVO
			,  SUM(FCXPP.SALDOANTERIOR) SALDOANTERIOR, SUM(FCXP.VLR_NETO ) VLR_NETO
			, SUM(FCXP.VLR_IMPUESTOS) VLR_IMPUESTOS
		FROM [dbo].[FCXPP] 
			INNER JOIN  FCXP ON FCXPP.CNSFCXP = FCXP.CNSFCXP   
			LEFT JOIN TER ON FCXP.IDTERCERO = TER.IDTERCERO  
			LEFT JOIN FCJ ON FCXPP.CNSFACJ = FCJ.CNSFACJ AND FCXPP.CODCAJA = FCJ.CODCAJA   
			LEFT JOIN ACJ ON FCJ.CNSACJ = ACJ.CNSACJ   
		WHERE   FCXPP.CNSFCXPPM = @CNSFCXPPM AND FCXPP.USUARIO <> 'INSERTCANCEL' AND  FCXPP.ESTADO = 'P'


	END
	IF @METODO = 'GENERAR_EXCEL'
	BEGIN
		SELECT  @WHERE_DATA = WHERE_DATA
		FROM OPENJSON(@PARAMETROS)
		WITH( WHERE_DATA		NVARCHAR(MAX)	'$.WHERE_DATA'	)

		SELECT 'OK'OK

		SET @sqlCommand = '
			SELECT     FCXPPM.CNSFCXPPM, FCXPPM.FECHA, FCXPPM.OBSERVACION, FCXPPM.USUARIO, USUCREA.NOMBRE [USUCREA_DESC]       ,   FCXPPM.USUARIOCONF, USUCONF.NOMBRE [USUCONF_DESC], FCXPPM.FECHACONF
			, FCXPPM.RESOLUCION, FCXPPM.CUENTA_RUBRO, FCXPPM.SYS_COMPUTERNAME, FCXPPM.N_RECIBO       ,   FCXPPM.ESTADO, FCXPPM.VALOR, FCXPPM.PROCEDENCIA, FCXPPM.CODCAJA, FCXPPM.IDTERCERO_AFAVOR, TER.RAZONSOCIAL
			, FCXPPM.CODUNG, FCXPPM.CODPRG,  FCXPPM.F_CONTABLE       ,   FCXPPM.RUBRO_ID, FCXPPM.CNSRESOLPAG,  CAST(COALESCE(FCXPPM.MVARIOS,0) AS BIT) MVARIOS        
			FROM [dbo].[FCXPPM] 
			INNER JOIN  USUSU USUCREA ON FCXPPM.USUARIO = USUCREA.USUARIO        
			LEFT JOIN TER ON FCXPPM.IDTERCERO_AFAVOR = TER.IDTERCERO          
			LEFT JOIN USUSU USUCONF ON FCXPPM.USUARIOCONF = USUCONF.USUARIO
			WHERE '+ @WHERE_DATA

		EXEC sys.sp_executesql @sqlCommand

		SET @sqlCommand = '
		SELECT   FCXPP.CNSFCXPPM , FCXPP.CNSFCXPP, FCXPP.CNSFCXP, FCXPP.FECHA, FCXP.NOREFERENCIA, FCXP.F_FACTURAREF, FCXP.F_VENCE, FCXP.IDTERCERO, TER.NIT, TER.RAZONSOCIAL, FCXP.VLR_GLOSAS,FCXPP.ABONO 
		, FCXPP.SALDONUEVO,  FCXPP.SALDOANTERIOR, FCXP.VLR_NETO  , FCXPP.CODCAJA, FCXPP.CNSFACJ, FCXPP.ESTADO, FCJ.CNSACJ, ACJ.ABIERTA  
		FROM [dbo].[FCXPP]
		INNER JOIN  FCXP ON FCXPP.CNSFCXP = FCXP.CNSFCXP   
		LEFT JOIN TER ON FCXP.IDTERCERO = TER.IDTERCERO   
		LEFT JOIN FCJ ON FCXPP.CNSFACJ = FCJ.CNSFACJ AND FCXPP.CODCAJA = FCJ.CODCAJA 
		LEFT JOIN ACJ ON FCJ.CNSACJ = ACJ.CNSACJ   
		WHERE  FCXPP.CNSFCXPPM IN ( SELECT FCXPPM.CNSFCXPPM  FROM FCXPPM WHERE '+ @WHERE_DATA+ '   ) '

		EXEC sys.sp_executesql @sqlCommand

	END
   IF @METODO='EXPORT_LISTA'     
   BEGIN         
      SELECT @DATOS=WHEREF        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      WHEREF  VARCHAR(MAX)   '$.WHEREF'
      )

      SELECT 'OK'OK
      SELECT @SQL=' SELECT FCXP.CNSFCXP,FCXP.NOREFERENCIA,FCXP.IDTERCERO,B.NIT,B.RAZONSOCIAL,FCXP.SALDO
                   FROM FCXP INNER JOIN TER B ON FCXP.IDTERCERO=B.IDTERCERO 
                   WHERE '+@DATOS

      PRINT @SQL
      EXEC(@SQL)
      RETURN
   END  
	IF @METODO='CARGAR_CXP'
	BEGIN
	   
      SELECT  @NROLINEAS=COUNT(*)
		FROM OPENJSON(@PARAMETROS, '$.LINEAS') 

      IF @NROLINEAS>0
      BEGIN

		   SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA),
		   @SYS_COMPUTERNAME=COALESCE(USUSU.SYS_ComputerName,HOST_NAME())
		   FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
		   WHERE USUSU.USUARIO=@USUARIO

		   PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE='+COALESCE(@IDSEDE,'SIN SEDE')   
         SELECT @CNSRPDX=''
		   EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@RPDX', @CNSRPDX OUTPUT  
		   SELECT @CNSRPDX = @IDSEDE+REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)
		   PRINT '@CNSRPDX='+COALESCE(@CNSRPDX,'') 

         SELECT @INDICE=0
		   DECLARE SUBIR_CURSOR CURSOR FOR   
	      SELECT VALUE 
		   FROM OPENJSON(@PARAMETROS, '$.LINEAS')		  
		   OPEN SUBIR_CURSOR  
		   FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
		   WHILE @@FETCH_STATUS = 0  
		   BEGIN  	  
			   DELETE FROM @TABLA WHERE 1=1

			   INSERT INTO @TABLA(VALOR)
			   SELECT VALUE FROM string_split(@LINEA,',')


            SELECT @CNSFCXP=VALOR FROM @TABLA WHERE ITEM=1+@INDICE
            SELECT @ABONO=CONVERT(DECIMAL(14,2),VALOR) FROM @TABLA WHERE ITEM=2+@INDICE

            SET @ERROR=''
            IF NOT EXISTS(SELECT * FROM FCXP WHERE CNSFCXP=@CNSFCXP AND ESTADO<>'A' AND (SALDO >0 OR SALDO>=@ABONO) AND CONTABILIZADA=1 )
            BEGIN
               SET @ERROR = 'la cuenta por pagar no esta preparada para pago. Verifique el Saldo, Estado o sin esta correctamente contabilizada, no se puede procesar'
               INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
               SELECT @CNSRPDX,@CNSFCXP,'No Valida',@ERROR,1
               SET @INDICE +=2
               FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
               CONTINUE
            END

            IF EXISTS(SELECT * FROM FCXP WHERE CNSFCXP=@CNSFCXP AND MARCACONT=1 AND CONVERT(DATE,FECHAMARCA)=CONVERT(DATE,DBO.FNK_GETDATE()) AND COALESCE(USUARIOMARCA,'') <> @USUARIO )
            BEGIN
               SET @ERROR = 'Cuenta por pagar marcada por otro usuario, no se puede continuar'
               INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
               SELECT @CNSRPDX,@CNSFCXP,'MARCA_CONT',@ERROR,1
               SET @INDICE +=2
               FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
               CONTINUE
            END

		      SELECT @ENPRESUPUESTO = ENPRESUPUESTO, @CNSRP = CNSRP,@CNSPPTO = CNSPPTO, @CNSCDP = CNSCDP, @F_FACTURAREF = F_FACTURAREF , @CONTABILIZADA = COALESCE(CONTABILIZADA,0)
			         ,@NROCOMPROBANTE = NROCOMPROBANTE, @ESTADO_FCXP = ESTADO, @PROCEDENCIA = PROCEDENCIA, @CNSFCOM = CNSFCOM, @IDTERCERO = IDTERCERO
		      FROM FCXP WHERE FCXP.CNSFCXP = @CNSFCXP

		      SELECT @FECHA = FECHA FROM FCXPPM WHERE CNSFCXPPM = @CNSFCXPPM

		      IF DBO.FNK_VALORVARIABLE('PRESUP_CXP_ACTIVADO') = 'SI'
		      BEGIN
			      IF DBO.FNK_VALORVARIABLE('PPTO_CONSICXP') = 'NO' AND DBO.FNK_VALORVARIABLE('DATOCXPSI') <> ''
			      BEGIN 
				      SELECT @SICXP = (SELECT CASE WHEN CNSFCXP LIKE DBO.FNK_VALORVARIABLE('DATOCXPSI') THEN 1 ELSE 0 END FROM FCXP WHERE CNSFCXP = @CNSFCXP)
			      END
			      ELSE
			      BEGIN
				      SELECT @SICXP = 0
			      END
		      END
		      IF @ENPRESUPUESTO = 1 AND @SICXP = 0
		      BEGIN
			      SELECT @ESTADO = ESTADO FROM PTCXP WHERE CONSECUTIVO=@CNSPPTO AND CDP= @CNSCDP AND RP= @CNSRP AND CNSCXP= @CNSFCXP AND ESTADO<>'Anulado'
			      IF @ESTADO = 'NoConfirmado'
			      BEGIN
                  SET @ERROR = 'La Cuenta por Pagar No se Encuentra Confirmada en Presupuesto... Se Debe Confirmar Primero.'
                  INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
                  SELECT @CNSRPDX,@CNSFCXP,'PRESUPUESTO',@ERROR,1
                  SET @INDICE +=2
                  FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
                  CONTINUE
			      END
			      IF @ESTADO = 'Confirmado'
			      BEGIN
				      SET @ERROR ='La Cuenta por Pagar No se Encuentra  en Presupuesto o Esta Anulada Revisar...'
                  INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
                  SELECT @CNSRPDX,@CNSFCXP,'PRESUPUESTO',@ERROR,1
                  SET @INDICE +=2
                  FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
                  CONTINUE
			      END
		      END
		      IF CONVERT(DATE,@F_FACTURAREF) > CONVERT(DATE,@FECHA)
		      BEGIN
				   SET @ERROR ='La Fecha de orden de pago no puede ser Menor a la fecha  del documento,  Revise'
               INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
               SELECT @CNSRPDX,@CNSFCXP,'ORDEN_PAGO',@ERROR,1
               SET @INDICE +=2
               FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
               CONTINUE
		      END
		      IF @CONTABILIZADA <> 1
		      BEGIN
               SET @ERROR ='No puede seleccionar CxP que no esten enviadas a Contabilidad'
               INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
               SELECT @CNSRPDX,@CNSFCXP,'CONTABILIDAD',@ERROR,1
               SET @INDICE +=2
               FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
               CONTINUE
		      END
		      IF @CONTABILIZADA = 1 
		      BEGIN
			      IF (SELECT COUNT(1) FROM MCP WHERE NROCOMPROBANTE = @NROCOMPROBANTE) > 0
			      BEGIN
				      SELECT @DATO = (SELECT COALESCE(ESTADO,0) FROM MCP WHERE NROCOMPROBANTE = @NROCOMPROBANTE)
				      IF DBO.FNK_VALORVARIABLE('BD_HISTORICAS') = 'SI'
				      BEGIN
                     SET @ERROR ='La CxP NO se encuentra enviada a Contabilidad'
                     INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
                     SELECT @CNSRPDX,@CNSFCXP,'CONTABILIDAD',@ERROR,1
                     SET @INDICE +=2
                     FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
                     CONTINUE
				      END
				      IF @DATO = 0
				      BEGIN
                     SET @ERROR ='La CxP se encuentra enviada a Contabilidad pero presenta Errores.'
                     INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
                     SELECT @CNSRPDX,@CNSFCXP,'CONTABILIDAD',@ERROR,1
                     SET @INDICE +=2
                     FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
                     CONTINUE
				      END
				      IF @DATO = 1
				      BEGIN
                     SET @ERROR ='La CxP se encuentra enviada a Contabilidad y está en estado Preparada.'
                     INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
                     SELECT @CNSRPDX,@CNSFCXP,'ORDEN_PAGO',@ERROR,1
                     SET @INDICE +=2
                     FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
                     CONTINUE
				      END
				      IF @DATO = 2
				      BEGIN
					      IF @ESTADO_FCXP IN ('N','C')
					      BEGIN
						      PRINT 'ENTRA 11'
						      SELECT @VALOR = FCXP.VLR_NETO -(COALESCE(FCXP.VLR_IMPUESTOS,0) + COALESCE(FCXP.VLR_NOTASDEBITO,0)) + COALESCE(FCXP.VLR_NOTASCREDITO,0)
                        FROM FCXP WHERE CNSFCXP = @CNSFCXP
						      SELECT @VLR_ABONO =SUM(COALESCE(ABONO,0)) FROM FCXPP WHERE ESTADO<>'A' AND CNSFCXP=@CNSFCXP
						      IF @PROCEDENCIA = 'Anticipos'
						      BEGIN
							      SELECT  @VLR_ANTICIPO = SUM(VALOR) FROM FCXP WHERE ESTADO<>'A' AND CNSFCXP <> @CNSFCXP AND CNSFCOM = @CNSFCOM
							      SELECT @VLR_ABONO = @VLR_ABONO + COALESCE(@VLR_ANTICIPO,0)
						      END
						      IF (COALESCE(@VALOR,0) - COALESCE(@VLR_ABONO,0) )<= 0
						      BEGIN
                           PRINT '@CNSFCXP='+@CNSFCXP+ 'VALORCXP'+ STR(COALESCE(@VALOR,0))+'VLE ABONO'+STR( COALESCE(@VLR_ABONO,0))
                           SET @ERROR ='Ya están hechas las Autorizaciones Necesarias para completar el Pago.'
                           INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
                           SELECT @CNSRPDX,@CNSFCXP,'ANTICIPOS',@ERROR,1
                           SET @INDICE +=2
                           FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
                           CONTINUE
						      END
					      END
				      END
				      ELSE
				      BEGIN
                     SET @ERROR ='No se puede Marcar esta CXP se encuentra en estado: ' + @DATO
                     INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
                     SELECT @CNSRPDX,@CNSFCXP,'ANTICIPOS',@ERROR,1
                     SET @INDICE +=2
                     FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
                     CONTINUE
				      END
			      END
            END
            IF EXISTS(SELECT * FROM RPDX WHERE CNS=@CNSRPDX AND ID1=@CNSFCXP)
            BEGIN
               SET @ERROR ='Cuenta por Pagar Duplicada, verique : ' + @CNSFCXP
               INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,CANTIDAD)
               SELECT @CNSRPDX,@CNSFCXP,'DUPLICIDAD',@ERROR,1
               
               SET @INDICE +=2
               FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
               CONTINUE
            END
            INSERT INTO RPDX(CNS,ID1,ID2,NOMBRE,VALOR1,VALOR2)
            SELECT @CNSRPDX,FCXP.CNSFCXP,TER.NIT,TER.RAZONSOCIAL,FCXP.SALDO,@ABONO
            FROM FCXP INNER JOIN TER ON FCXP.IDTERCERO=TER.IDTERCERO
            WHERE FCXP.CNSFCXP=@CNSFCXP

            UPDATE FCXP SET MARCACONT=1,FECHAMARCA=DBO.FNK_GETDATE(),USUARIOMARCA=@USUARIO WHERE CNSFCXP=@CNSFCXP

            SET @INDICE +=2
		      FETCH NEXT FROM SUBIR_CURSOR INTO @LINEA
		   END  
		  
		   CLOSE SUBIR_CURSOR  
		   DEALLOCATE SUBIR_CURSOR  
         
         DELETE RPDX WHERE CNS=@CNSRPDX AND COALESCE(ID1,'')=''

         SELECT @NROLINEAS=COUNT(*) FROM RPDX WHERE CNS=@CNSRPDX AND CANTIDAD=1


         SELECT 'OK' OK,@CNSRPDX CNSRPDX,@NROLINEAS ERRADOS
         RETURN

      END
      ELSE
      BEGIN
         SELECT 'KO','No se encontraron Datos para Procesar, Verfique e intente de nuevo' ERROR
         RETURN
      END
	END
   IF @METODO='BORRAR_IRPDX'     
   BEGIN         
      SELECT @CNSRPDX=CNSRPDX,@ITEM=ITEM        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         CNSRPDX  VARCHAR(20)   '$.CNSRPDX',
         ITEM  VARCHAR(20)   '$.ITEM'
      )
      SELECT @CNSFCXP=ID1 FROM RPDX WHERE CNS=@CNSRPDX AND ITEM=@ITEM
      BEGIN TRY           
           DELETE RPDX WHERE CNS=@CNSRPDX AND ITEM=@ITEM  
           UPDATE FCXP SET MARCACONT=0,USUARIOMARCA=NULL, FECHAMARCA=NULL WHERE CNSFCXP=@CNSFCXP
      END TRY
      BEGIN CATCH
              INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN                   
   END  
   IF @METODO='BORRAR_RPDX'     
   BEGIN         
      SELECT @CNSRPDX=CNSRPDX       
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         CNSRPDX  VARCHAR(20)   '$.CNSRPDX'
      )
      BEGIN TRY           
           UPDATE FCXP SET MARCACONT=0,USUARIOMARCA=NULL, FECHAMARCA=NULL 
           FROM FCXP INNER JOIN RPDX ON FCXP.CNSFCXP=RPDX.ID1
           WHERE CNSFCXP=@CNSFCXP
           DELETE RPDX WHERE CNS=@CNSRPDX 
      END TRY
      BEGIN CATCH
              INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN                   
   END  
   IF @METODO='PROCESA_RPDX'     
   BEGIN         
      SELECT @CNSRPDX=CNSRPDX,@CNSFCXPPM=CNSFCXPPM     
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSRPDX  VARCHAR(20)   '$.CNSRPDX', 
      CNSFCXPPM  VARCHAR(20)   '$.CNSFCXPPM'
      )
      IF EXISTS(SELECT * FROM RPDX WHERE CNS=@CNSRPDX) AND EXISTS(SELECT * FROM FCXPPM WHERE CNSFCXPPM=@CNSFCXPPM AND ESTADO='N')
      BEGIN
         DECLARE RPDX_CURSOR CURSOR FOR 
         SELECT ID1,VALOR2  FROM  RPDX
         WHERE CNS=@CNSRPDX AND COALESCE(CANTIDAD,0)=0
         ORDER BY ITEM
         OPEN RPDX_CURSOR    
         FETCH NEXT FROM RPDX_CURSOR    
         INTO @CNSFCXP,@ABONO
         WHILE @@FETCH_STATUS = 0    
         BEGIN
            PRINT 'PROCESNADO @CNSFCXP='+@CNSFCXP
            EXEC SPK_CALCULOVALORESCXP @CNSFCXP
            IF EXISTS (SELECT * FROM FCXP WHERE CNSFCXP=@CNSFCXP AND SALDO>=@ABONO)
            BEGIN
			      BEGIN TRY
				      EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@FCXPP', @CNSFCXPP OUTPUT  
				      SELECT @CNSFCXPP = @IDSEDE +  REPLACE(SPACE(8 - LEN(@CNSFCXPP))+LTRIM(RTRIM(@CNSFCXPP)),SPACE(1),0)   

				      INSERT INTO FCXPP ( CNSFCXPP, CNSFCXP, CNSFCXPPM, SALDOANTERIOR, ABONO, VLR_NETO, SALDONUEVO, IDTERCERO, FECHA, USUARIO, USUARIOCONF, FECHACONF
				                          ,SYS_COMPUTERNAME, ESTADO, N_RECIBO, CODCAJA, CNSFACJ, PROCEDENCIA, VLR_IMPUESTOS, VALORPPAGO)
				      SELECT @CNSFCXPP, @CNSFCXP, @CNSFCXPPM, VLR_NETO-VLR_ABONOS ,@ABONO ,@ABONO ,SALDO-@ABONO,IDTERCERO, DBO.FNK_GETDATE(), @USUARIO,NULL , NULL
				      ,@SYS_COMPUTERNAME, 'N', '','','','CXP', 0, 0
                  FROM FCXP WHERE CNSFCXP=@CNSFCXP

				      IF (SELECT COUNT(*) FROM FCXPP WHERE ESTADO<>'A' AND CNSFCXP= @CNSFCXP) >0 
				      BEGIN
					      UPDATE FCXP SET ESTADO = 'C', USUARIOMARCA = @USUARIO WHERE CNSFCXP = @CNSFCXP
				      END
				      ELSE
				      BEGIN
					      UPDATE FCXP SET ESTADO = 'N', USUARIOMARCA = @USUARIO WHERE CNSFCXP = @CNSFCXP
				      END
                  EXEC SPK_CALCULOVALORESCXP @CNSFCXP
				      DELETE RPDX WHERE CNS=@CNSRPDX AND ID1=@CNSFCXP
			      END TRY  
			      BEGIN CATCH 
				      INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			      END CATCH 
            END
            FETCH NEXT FROM RPDX_CURSOR    
            INTO @CNSFCXP,@ABONO
         END
         CLOSE RPDX_CURSOR
         DEALLOCATE RPDX_CURSOR
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'Proceso no valido, vefique la orden de pago que ya fue cerrada y/o Listado con errores' ; 
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT  @NROLINEAS= COUNT(*) FROM RPDX WHERE CNS=@CNSRPDX
      SELECT 'OK' OK,@NROLINEAS ERRADOS
      RETURN 
   END 
   IF @METODO='EXPORTAR_ORDEN'     
   BEGIN         
      SELECT @CNSFCXPPM=CNSFCXPPM          
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSFCXPPM  VARCHAR(20)   '$.CNSFCXPPM'
      )
    SELECT 'OK'OK            
    SET @SQL=' SELECT FCXPP.CNSFCXPP,FCXPP.CNSFCXP,FCXPP.FECHACONF,FCXP.IDTERCERO,TER.NIT,TER.RAZONSOCIAL,FCXP.NOREFERENCIA AS N_FACTURA,DBO.FNK_FECHA_DDMMAA(FCXP.F_FACTURAREF) AS F_FACTURA,
         FCXPP.SALDOANTERIOR,FCXPP.ABONO,FCXPP.SALDONUEVO,FCXP.VLR_IMPUESTOS,CASE FCXPP.ESTADO WHEN  ''P'' THEN ''Pagado''  WHEN ''C'' THEN ''Autorizado'' WHEN ''N'' THEN ''Sin Autorizar''  ELSE ''Anulado'' END ESTADO 
         FROM FCXPP INNER JOIN FCXP ON FCXPP.CNSFCXP=FCXP.CNSFCXP 
                    INNER JOIN TER  ON FCXP.IDTERCERO=TER.IDTERCERO 
         WHERE FCXPP.CNSFCXPPM='''+@CNSFCXPPM+''''

     EXEC(@SQL) 
   END  
END










