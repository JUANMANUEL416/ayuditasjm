CREATE OR ALTER PROCEDURE DBO.SPQ_HCA @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
DECLARE   @PARAMETROS       NVARCHAR(MAX)	,@MODELO         VARCHAR(100)	,@METODO          VARCHAR(100)		,@QUERY			NVARCHAR(MAX)
         ,@USUARIO          VARCHAR(20)		,@MARCO          VARCHAR(100)	,@FILTRO          VARCHAR(250)		,@ORDEN			VARCHAR(100)	
         ,@PAGINA           INT				,@FILASXPAG      INT			,@DEFCOLUMNS      BIT				,@NOADMISION	VARCHAR(16)
         ,@CONSECUTIVO      VARCHAR(13)		,@UNICO          INT			,@SQL             NVARCHAR(MAX)		,@DESCRIPCION	VARCHAR(500)
         ,@PARAM            NVARCHAR(500)	,@FECHAHCA       DATETIME		,@CNSWEB          VARCHAR(100)		,@CLASE			VARCHAR(10)
         ,@PREFIJO          VARCHAR(20)		,@CLASEPLANTILLA VARCHAR(8)		,@AMBITO          VARCHAR(2)
         ,@DAALTA           INT = 0			,@ITEMRED        INT			,@IDAFILIADO      VARCHAR(20)		,@TIPODX		VARCHAR(20)
         ,@IDDX             VARCHAR(10)		,@IDMEDICO       VARCHAR(20)	,@PROCEDENCIA     VARCHAR(100)
         ,@SYS_COMPUTERNAME VARCHAR(200)	,@IDAREA         VARCHAR(20)	,@CCOSTO          VARCHAR(20)
         ,@AUX              NVARCHAR(MAX)	,@CNSHCAAP       VARCHAR(20)	,@ANTECEDENTE     VARCHAR(MAX)
         ,@CNSTGANTOP       VARCHAR(20)		,@CNSTGANT       VARCHAR(20)	,@NUMERICO        VARCHAR(20)		,@FECHAHCAAP	DATETIME
         ,@FECHA            DATETIME		,@MPLDL          NVARCHAR(MAX)	,@CAMPO           VARCHAR(12)		,@TIPO_CAMPO	VARCHAR(12)
         ,@ALFANUMERICO     VARCHAR(120)	,@SECUENCIA      SMALLINT		,@VALOR           VARCHAR(MAX)		,@VALORLISTA	VARCHAR(120)
         ,@AUX1             INT				,@CHECKM         VARCHAR(10)	,@VALORLISTAHCADL VARCHAR(80)
         ,@CONSECUTIVOCIT   VARCHAR(20)		,@IDPLAN         VARCHAR(20)	,@IDPLAN_HADM     VARCHAR(20)
         ,@CODOMS           VARCHAR(150)	,@CONSECUTIVOS   VARCHAR(8000)	,@CONSECUTIVOHCA  VARCHAR(20)
         ,@IDEMEDICA        VARCHAR(4)		,@INTERPRETACION VARCHAR(200)	,@ITEMHCSEGD      INT				,@HCADCP		    NVARCHAR(MAX)
         ,@IXCOUNTRY	       VARCHAR(120)	,@DIASPRORROGA   INT			,@NOMBREAFI       VARCHAR(120)		,@IDTERCERO     VARCHAR(20)	
         ,@PASASEGCOV       INT = 0			,@EDITAFECHA     TINYINT		,@FECHA_1         VARCHAR(20)		,@HORA_1        VARCHAR(10)		
         ,@DATOS            NVARCHAR(MAX)	,@IDSERVICIO     VARCHAR(20)	,@DESCSERVICIO    VARCHAR(100)      ,@CANTIDAD      VARCHAR(10)
DECLARE  @EVOLUCION        VARCHAR(20)		,@TIPOALTA       VARCHAR(20)	,@DETRASLADO      VARCHAR(20)       ,@FECHAEGRESO   DATE  
         ,@DXPRINCIPAL        VARCHAR(20)	,@DXSECUNDARIO   VARCHAR(20)	,@ADICIONAL   NVARCHAR(MAX)			,@DONDETRASLADO VARCHAR(100)
         ,@NOADMISIONALTA     VARCHAR(20)	,@ALTASLECCION	 BIT           ,@TIPOLLAMADA     VARCHAR(20)       ,@MOTIVOLLAMADA      VARCHAR(50)
		 ,@IDSEDE			VARCHAR(20)		,@COMPANIA		VARCHAR(2)
         
BEGIN
	--SELECT @JSON
	SET DATEFORMAT dmy
	SET NOCOUNT ON
	DECLARE @TBLERRORES TABLE(ERROR VARCHAR(200));
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
		MODELO VARCHAR(100) '$.MODELO'
		,METODO VARCHAR(100) '$.METODO'
		,DEFCOLUMNS BIT '$.DEFCOLUMNS'
		,USUARIO VARCHAR(100) '$.USUARIO'
		,CNSWEB VARCHAR(100) '$.CNSWEB'
		,PARAMETROS NVARCHAR(MAX) AS JSON
		,ADICIONAL NVARCHAR(MAX) AS JSON
	)

	SELECT @MODELO       = MODELO
		   ,@METODO       = METODO
		   ,@PARAMETROS   = PARAMETROS
		   ,@DEFCOLUMNS   = DEFCOLUMNS
		   ,@USUARIO      = USUARIO
		   ,@CNSWEB       = CNSWEB
         ,@ADICIONAL    = ADICIONAL
	FROM #JSON

	--SELECT @DEFCOLUMNS, @MODELO, @METODO
	IF @METODO = 'CONSULTAR'
	BEGIN

		SELECT @IXCOUNTRY = DATO FROM USVGS WHERE IDVARIABLE = 'IXCOUNTRY'

		SELECT @FILTRO = FILTRO
			,@PAGINA = PAGINA
			,@FILASXPAG = FILASXPAG
			,@ORDEN = ORDEN
			,@CONSECUTIVO = CONSECUTIVO
			,@CONSECUTIVOS = CONSECUTIVOS
		FROM OPENJSON(@PARAMETROS) WITH (
				FILTRO VARCHAR(250) '$.FILTRO'
				,PAGINA INT '$.PAGINA'
				,FILASXPAG INT '$.FILASXPAG'
				,ORDEN VARCHAR(100) '$.ORDEN'
				,CONSECUTIVO VARCHAR(13) '$.CONSECUTIVO'
				,CONSECUTIVOS VARCHAR(8000) '$.CONSECUTIVOS'
			)

		DECLARE @CONSECUTIVOS_TABLA AS TABLE(
		ITEM INT IDENTITY(1,1) PRIMARY KEY
		,CONSECUTIVO VARCHAR(20)
		)

		INSERT INTO @CONSECUTIVOS_TABLA (CONSECUTIVO)
		SELECT @CONSECUTIVO UNION ALL
		SELECT WORD FROM DBO.FNK_EXPLODE(@CONSECUTIVOS, ',') WHERE COALESCE(WORD,'')<>''

		SELECT @NOADMISION = NOADMISION
			,@FECHAHCA = FECHA
			,@CLASEPLANTILLA = CLASEPLANTILLA
		FROM HCA
		WHERE CONSECUTIVO = (SELECT TOP 1 HCA.CONSECUTIVO FROM HCA INNER JOIN @CONSECUTIVOS_TABLA AS CN  ON HCA.CONSECUTIVO=CN.CONSECUTIVO ORDER BY FECHA DESC)

		BEGIN -- 1.- Datos de la Historia Cl√≠nica
			DECLARE @ASI_UTILIZAFIRMA_HC VARCHAR(2) = DBO.FNK_VALORVARIABLE('ASI_UTILIZAFIRMA_HC')
			DECLARE @_CNSFUAT VARCHAR(7), @_CNSFAT VARCHAR(7)
			SELECT HCA.CONSECUTIVO
            	,HCA.FECHA
				,HCA.IDAFILIADO
				,HCA.IDMEDICO
				,HCA.TIPODX
				,HCA.IDDX
				,MDX.DESCRIPCION DXPRINCIPAL
				,HCA.DX1
				,DX1.DESCRIPCION DIAG1
				,HCA.DX2
				,DX2.DESCRIPCION DIAG2
				,HCA.DX3
				,DX3.DESCRIPCION DIAG3
				,HCA.DX4
				,DX4.DESCRIPCION DIAG4
				,UTILIZAFIRMA = CASE WHEN @ASI_UTILIZAFIRMA_HC <> 'SI' THEN 0 ELSE 1 END 
				,NOMBREMEDICODIL = CASE WHEN @ASI_UTILIZAFIRMA_HC <> 'SI' THEN '' ELSE MED.NOMBRE END 
				,CMPMEDICODIL = CASE WHEN @ASI_UTILIZAFIRMA_HC <> 'SI' THEN '' ELSE MED.NO_REGISTRO END
				,ESPECIALIDADMEDDIL = CASE WHEN @ASI_UTILIZAFIRMA_HC <> 'SI' THEN '' ELSE MES.DESCRIPCION END
				,RMMEDICODIL = MED.BEEPER
				,FIRMA = CASE WHEN @ASI_UTILIZAFIRMA_HC <> 'SI' THEN NULL ELSE (SELECT DICOM FROM ARCHIVOS WHERE ID = MED.IDFIRMA) END
				,HCA.CLASEPLANTILLA,MPL.DESCPLANTILLA
				,TER.RAZONSOCIAL CONTRATANTE
				,HADM.IDPLAN
				,PLN.DESCPLAN
				,HADM.NOAUTORIZACION
				,HCA.NOADMISION
				,FECHAINGRESO = CONVERT(VARCHAR,HADM.FECHA,103)
				,VIADEINGRESO.DESCRIPCION VIAINGRESO
				,CAUSAEXTERNA.DESCRIPCION CAUSAEXTERNA
				,FECHAALTA = CONVERT(VARCHAR,HADM.FECHAALTA,103)+' '+CONVERT(VARCHAR,HADM.FECHAALTA,108)
				,MEDT.NOMBRE  [MEDICOTRATANTE]
				, MEDING.NOMBRE MEDICOINGRESA
				, IDXINGRESO = (SELECT TOP 1 DX FROM VWK_DX WHERE NOADMISION=HADM.NOADMISION ORDER BY FECHA,TIPO)
				,DXINGRESO = (SELECT TOP 1 DESCRIPCION FROM VWK_DX WHERE NOADMISION=HADM.NOADMISION ORDER BY FECHA,TIPO) 
				,HADM.URG_NOMBRE
				,HADM.URG_VINCULO
				,HADM.URG_TELE
				,HADM.URG_DIR
				,HADM.NOMBRERESPO
				,HADM.PARENTESCORESPO
				,HADM.TELEFONORESPO
				,IMPRIMEOM=COALESCE(MPL.IMPRIMEOM,0)
				,RNE = MED.BEEPER
				,(SELECT TOP 1 DESCRIPCION FROM TGEN WHERE TABLA='MED' AND CAMPO='CLASE_REGISTRO' AND CODIGO=MED.CLASE_REGISTRO) CLASE_REGISTRO_MEDICO
				,COALESCE(HCA.IDPLAN,CIT.IDPLAN) IDPLAN_CIT
				,PLN2.DESCPLAN DESCPLAN_CIT
				, RIGHT('0000000'+CAST( IIF(HCA.CLASEPLANTILLA = 'FUAT', (SELECT COUNT(1)+1 FROM HCA AS X WHERE COALESCE(ANULADA,0)=0
																		AND X.CLASEPLANTILLA = 'FUAT' AND X.FECHA < HCA.FECHA)
																		, 0)AS VARCHAR), 7)CONSECUTIVOFUAT 
				, RIGHT('0000000'+CAST( IIF(HCA.CLASEPLANTILLA = 'FAT', (SELECT COUNT(1)+1 FROM HCA AS X WHERE COALESCE(ANULADA,0)=0
																		AND X.CLASEPLANTILLA = 'FAT' AND X.FECHA < HCA.FECHA)
																		, 0)AS VARCHAR), 7)CONSECUTIVOFAT
			,HCA.CHECK1,HCA.CHECK2,HCA.CHECK3
			,SER.DESCSERVICIO
			, IIF(HCA.FECHA > '20210824', 'SI','NO') OCULPAPROGRAMAS
			FROM HCA
			INNER JOIN MED ON HCA.IDMEDICO = MED.IDMEDICO
			LEFT JOIN HADM ON HADM.NOADMISION = HCA.NOADMISION
			LEFT JOIN MED MEDT ON HADM.IDMEDICOING = MED.IDMEDICO
			LEFT JOIN MED MEDING ON MEDING.IDMEDICO = HADM.IDMEDICOING
			LEFT JOIN TER ON TER.IDTERCERO = HADM.IDTERCERO
			LEFT JOIN MPL ON MPL.CLASEPLANTILLA=HCA.CLASEPLANTILLA
			LEFT JOIN PLN ON PLN.IDPLAN=HADM.IDPLAN
			LEFT JOIN MES ON MED.IDEMEDICA = MES.IDEMEDICA
			LEFT JOIN MDX ON HCA.IDDX = MDX.IDDX
			LEFT JOIN MDX DX1 ON HCA.DX1 = DX1.IDDX
			LEFT JOIN MDX DX2 ON HCA.DX2 = DX2.IDDX
			LEFT JOIN MDX DX3 ON HCA.DX3 = DX3.IDDX
			LEFT JOIN MDX DX4 ON HCA.DX4 = DX4.IDDX
			LEFT JOIN TGEN VIADEINGRESO ON VIADEINGRESO.TABLA='General' AND VIADEINGRESO.CAMPO='VIADEINGRESO' AND VIADEINGRESO.CODIGO = HADM.VIAINGRESO
			LEFT JOIN TGEN CAUSAEXTERNA ON CAUSAEXTERNA.TABLA='General' AND CAUSAEXTERNA.CAMPO='CAUSAEXTERNA' AND CAUSAEXTERNA.CODIGO = HADM.CAUSAEXTERNA
			LEFT JOIN CIT ON CIT.CONSECUTIVO=HCA.CONSECUTIVOCIT
			LEFT JOIN PLN PLN2 ON PLN2.IDPLAN=COALESCE(HCA.IDPLAN,CIT.IDPLAN,HADM.IDPLAN)
			LEFT JOIN SER ON SER.IDSERVICIO=CIT.IDSERVICIO
			WHERE HCA.CONSECUTIVO IN (SELECT CONSECUTIVO FROM @CONSECUTIVOS_TABLA)
		END
		BEGIN -- 2.- Signos Vitales
			SELECT HCASV.CONSECUTIVO 
			,HCASV.CODIGOSV
				,TGSV.DESCRIPCION
				,HCASV.GRUPO
				,ISNULL(DATO,'')DATO
				,HCASV.CLASESV
				,VALOR
				,ORDENSV
				,TGSV.UNIDAD
			FROM HCASV
			LEFT JOIN TGSV ON TGSV.CODIGOSV = HCASV.CODIGOSV
				AND TGSV.GRUPO = HCASV.GRUPO
				AND TGSV.CLASESV = HCASV.CLASESV
			WHERE HCASV.CONSECUTIVO IN (SELECT CONSECUTIVO FROM @CONSECUTIVOS_TABLA)
			ORDER BY CONSECUTIVO, ORDENSV
		END 
		BEGIN -- 3.- Cuerpo de la Historia HCAD
			SELECT HCAD.CONSECUTIVO
				,HCAD.CAMPO
				,HCAD.SECUENCIA
				,CASE WHEN HCAD.TIPOCAMPO = '' THEN MPLD.TIPO_CAMPO ELSE HCAD.TIPOCAMPO END TIPOCAMPO
				,MPLD.DESCCAMPO
				,DEFAULT1
				,HCAD.ALFANUMERICO
				,HCAD.FECHA
				,HCAD.MEMO
				,HCAD.NUMERICO
				,CASE HCAD.TIPOCAMPO
					WHEN 'Lista'
						THEN (
								SELECT TOP 1 MPLDL.DESCRIPCION
								FROM MPLDL
								WHERE MPLD.CLASEPLANTILLA = MPLDL.CLASEPLANTILLA
									AND MPLD.CAMPO = MPLDL.CAMPO
									AND MPLDL.VALOR = HCAD.NUMERICO
								)
					ELSE ''
					END MPLDLDESCRIPCION
				,MPLD.C_KRYSTALOS
				,MPLD.D_KRYSTALOS
				,MPLD.F_KRYSTALOS
				,MPLD.O_KRYSTALOS
				,MPLD.T_KRYSTALOS
				,'SELECT @DESCRIPCION_OUT= ' + MPLD.D_KRYSTALOS + ' FROM ' + MPLD.T_KRYSTALOS + ' WHERE ' + MPLD.C_KRYSTALOS + ' = ''' + HCAD.ALFANUMERICO + ''' AND ' + CASE WHEN COALESCE(MPLD.F_KRYSTALOS,'') = '' THEN '1=1' ELSE  COALESCE(MPLD.F_KRYSTALOS,'') END K1
				,'' HCADCP
			INTO #hcad_C
			FROM HCAD
			INNER JOIN MPLD ON HCAD.CLASEPLANTILLA = MPLD.CLASEPLANTILLA
				AND HCAD.CAMPO = MPLD.CAMPO
			WHERE HCAD.CONSECUTIVO IN (SELECT CONSECUTIVO FROM @CONSECUTIVOS_TABLA)
			ORDER BY MPLD.SECUENCIA

			ALTER TABLE #hcad_C ADD UNICO INT IDENTITY

			ALTER TABLE #hcad_C ADD KRYSTALOSDESC VARCHAR(500)

			SET @PARAM = N'@DESCRIPCION_OUT VARCHAR(500) OUTPUT'

			DECLARE HCAD_c CURSOR FOR
				SELECT k1,UNICO
				FROM #hcad_C
				WHERE TIPOCAMPO = 'Krystalos'

			OPEN HCAD_c

			FETCH NEXT
			FROM HCAD_c
			INTO @QUERY
				,@UNICO

			WHILE @@FETCH_STATUS = 0
			BEGIN
            
			    BEGIN TRY  
				    EXEC sp_executesql @QUERY
						    ,@PARAM
						    ,@DESCRIPCION_OUT = @DESCRIPCION OUTPUT

					    UPDATE #hcad_C
					    SET KRYSTALOSDESC = @DESCRIPCION
					    WHERE UNICO = @UNICO
			    END TRY  
			    BEGIN CATCH  
				    UPDATE #hcad_C
					    SET KRYSTALOSDESC = ''
					    WHERE UNICO = @UNICO 
			    END CATCH

				SELECT @DESCRIPCION = NULL

				FETCH NEXT
				FROM HCAD_c
				INTO @QUERY
					,@UNICO
			END

			CLOSE HCAD_c

			DEALLOCATE HCAD_c
         --IDDX
			IF @IXCOUNTRY = 'PERU' AND @CLASEPLANTILLA = 'COVID19'
			BEGIN
				DECLARE @TELEFONO VARCHAR(100), @FNACIMIENTO DATE, @EDAD VARCHAR(20)
					,@EDADD VARCHAR(50), @SEXO VARCHAR(20) , @DOCIDAFILIADO VARCHAR(20)
				SELECT @NOMBREAFI = NOMBREAFI,@TELEFONO=CASE WHEN COALESCE(CELULAR,'')<>'' THEN CELULAR ELSE COALESCE(TELEFONORES,TELEFONOLAB) END
					,@FNACIMIENTO = AFI.FNACIMIENTO, @EDAD=EDAD, @EDADD = (SELECT CONCAT(ANO,'|',MES,'|',DIA) FROM DBO.FNK_EDAD_ANO_MES_DIA(AFI.FNACIMIENTO,GETDATE()))
					,@SEXO = AFI.SEXO ,@DOCIDAFILIADO = AFI.DOCIDAFILIADO
				FROM HADM INNER JOIN AFI ON AFI.IDAFILIADO=HADM.IDAFILIADO
				WHERE NOADMISION=@NOADMISION
				UPDATE #HCAD_C SET ALFANUMERICO=@NOMBREAFI WHERE SECUENCIA=450
				UPDATE #HCAD_C SET ALFANUMERICO=@TELEFONO WHERE SECUENCIA=500
				UPDATE #HCAD_C SET ALFANUMERICO=CONVERT(VARCHAR,@FNACIMIENTO,103), FECHA=@FNACIMIENTO WHERE SECUENCIA=550
				UPDATE #HCAD_C SET ALFANUMERICO=CONVERT(VARCHAR,@FNACIMIENTO,103), FECHA=@FNACIMIENTO WHERE SECUENCIA=550
				UPDATE #HCAD_C SET ALFANUMERICO=@EDAD, MEMO=@EDADD WHERE SECUENCIA=600
				UPDATE #HCAD_C SET ALFANUMERICO=@SEXO WHERE SECUENCIA=650
				UPDATE #HCAD_C SET ALFANUMERICO=@DOCIDAFILIADO WHERE SECUENCIA=700

				IF EXISTS (SELECT 1 FROM HCADL WHERE SECUENCIA=855 AND CHECKM=1 AND CONSECUTIVO=@CONSECUTIVO)
				BEGIN
					UPDATE #HCAD_C SET ALFANUMERICO=
						(SELECT TOP 1 DESCRIPCION FROM HCADL WHERE SECUENCIA=855 AND CHECKM=1 AND CONSECUTIVO=@CONSECUTIVO)
					WHERE SECUENCIA=855
				END

				UPDATE #HCAD_C SET ALFANUMERICO = CASE WHEN FECHA IS NULL THEN '      /      /     ' ELSE CONVERT(VARCHAR,FECHA,103) END WHERE TIPOCAMPO='Fecha' -- SECUENCIA IN (1350,1400)

			END

			SELECT
				 CONSECUTIVO
				,CAMPO
				,DEFAULT1
				,SECUENCIA
				,TIPOCAMPO
				,DESCCAMPO
				,ALFANUMERICO
				,FECHA
				,MEMO
				,NUMERICO
				,MPLDLDESCRIPCION
				,C_KRYSTALOS
				,D_KRYSTALOS
				,F_KRYSTALOS
				,O_KRYSTALOS
				,T_KRYSTALOS
				,KRYSTALOSDESC
				,IIF(TIPOCAMPO = 'Krystalos', (SELECT DESCRIPCION FROM MDX AS X WHERE X.IDDX=ALFANUMERICO), '')KRYSTALOSDESC2
				,IIF(TIPOCAMPO = 'Permanente',
				            (SELECT M.ID, M.NOMBRECAMPO, M.CAMPO, M.TIPO_CAMPO, M.DESCCAMPO, M.ORDEN, M.CODIGOOP, M.EDITABLE
							  ,M.R_ID, M.R_IDAFILIADO, M.R_NOMBRECAMPO, M.R_CAMPO, M.R_ALFANUMERICO, CAST(M.R_FECHA AS DATE)R_FECHA , M.R_MEMO 
							  ,MPLOP.CODIGOOP, MPLOP.OPCION, MPLOP.VALOR
							FROM (  SELECT MPLCPD.ID, MPLCPD.NOMBRECAMPO, MPLCPD.CAMPO, MPLCPD.TIPO_CAMPO, MPLCPD.DESCCAMPO, MPLCPD.ORDEN, MPLCPD.CODIGOOP, MPLCPD.EDITABLE
										  ,HCADCP.ID R_ID, HCADCP.IDAFILIADO R_IDAFILIADO, HCADCP.NOMBRECAMPO R_NOMBRECAMPO, HCADCP.CAMPO R_CAMPO
										  ,HCADCP.ALFANUMERICO R_ALFANUMERICO, HCADCP.FECHA R_FECHA, HCADCP.MEMO R_MEMO
									FROM MPLD 
									LEFT JOIN MPLCPD ON MPLD.DEFAULT1 =  MPLCPD.NOMBRECAMPO
									LEFT JOIN HCADCP ON HCADCP.NOMBRECAMPO = MPLCPD.NOMBRECAMPO AND HCADCP.CAMPO = MPLCPD.CAMPO AND HCADCP.IDAFILIADO = @IDAFILIADO
									WHERE CLASEPLANTILLA = @CLASEPLANTILLA 
									AND MPLD.DEFAULT1 = #HCAD_C.DEFAULT1 
							) M
							LEFT JOIN MPLOP  ON M.CODIGOOP = MPLOP.CODIGOOP
							ORDER BY M.ORDEN
							FOR JSON AUTO )
							,'NO')HCADCP
			FROM #HCAD_C ORDER BY CONSECUTIVO, SECUENCIA

		END
		BEGIN -- 4.- Items lista de HCAD
			SELECT 
			HCADL.CONSECUTIVO  
			,HCADL.SECUENCIA
				,HCADL.ITEM
				,HCADL.VALORLISTA
				,HCADL.CHECKM
				,HCADL.DESCRIPCION
			FROM HCADL
			WHERE HCADL.CONSECUTIVO IN (SELECT CONSECUTIVO FROM @CONSECUTIVOS_TABLA)
				--AND COALESCE(HCADL.CHECKM, 0) = 1
		END
		BEGIN -- 5.- Ordenes m√©dicas HCATD
			DECLARE @CODIGO_MED VARCHAR(20) = DBO.FNK_VALORVARIABLE('OMCODMEDICAMENTOS')
			SELECT HCATD.CONSECUTIVO 
			,HCATD.ITEMRED
				,HCATD.CODOM
				,HCCOM.DESCRIPCION
				,HCATD.IDSERVICIO
				,SER.DESCSERVICIO
				,HCATD.CANTIDAD
				,HCATD.CLASE
				,HCATD.FRECUENCIA
				,HCATD.DURACION
				,HCATD.OBSERVACION
				,HCATD.PRIMER
				,CASE WHEN @CODIGO_MED=HCATD.CODOM THEN 1 ELSE CASE WHEN SER.MEDICAMENTOS>0 THEN 1 ELSE 0 END END MEDICAMENTO
				,SER.EQUICC
				,SER.PRESUNI
				,HCATD.IDTIPOCONC
				,CASE WHEN HCATD.DURACION>24 THEN 'D' ELSE 'H' END TIPODURACION
				,HCATD.VIA
				
				,HCATD.QAM CANTIDADAM
				,HCATD.QPM CANTIDADPM
			,HCATD.HORAAM
			,HCATD.HORAPM
			,HCATD.RAZONNEC
			FROM HCATD
			INNER JOIN SER ON HCATD.IDSERVICIO = SER.IDSERVICIO
			LEFT JOIN HCCOM ON HCATD.CODOM = HCCOM.CODOM
			WHERE HCATD.CONSECUTIVO IN (SELECT CONSECUTIVO FROM @CONSECUTIVOS_TABLA) --consecutivo de la HC
			ORDER BY HCATD.CODOM
				,HCATD.PRIMER
		END
		BEGIN -- 6.- Antecedentes HCAAP
			SELECT X.CNSHCAAP
				,X.CNSTGANT
				,X.IDAFILIADO
				,X.CNSHCAAPD
				,X.TIPOANT
				,X.CLASEANT
				,X.SEXO
				,X.TIPOCAMPO
				,NOMBRE
				,X.FINGRESO
				,X.CONSECUTIVOHCA
				,X.ANTECEDENTE
				,X.NUMERICO
				,X.FECHA
				,X.CNSTGANTOP
				,X.OPCION
			FROM (
				SELECT HCAAP.CNSHCAAP
					,HCAAP.CNSTGANT
					,HCAAP.IDAFILIADO
					,HCAAPD.CNSHCAAPD
					,TGANT.TIPOANT
					,TGANT.CLASEANT
					,TGANT.SEXO
					,TGANT.TIPOCAMPO
					,TGANT.NOMBRE
					,CONVERT(VARCHAR, HCAAPD.FINGRESO, 103) + ' ' + CONVERT(VARCHAR, HCAAPD.FINGRESO, 108) FINGRESO
					,HCAAPD.CONSECUTIVOHCA
					,HCAAPD.ANTECEDENTE
					,HCAAPD.NUMERICO
					,HCAAPD.FECHA
					,HCAAPD.CNSTGANTOP
					,TGANTOP.OPCION
				FROM HCAAP
				INNER JOIN HCAAPD ON HCAAP.CNSHCAAP = HCAAPD.CNSHCAAP
				INNER JOIN TGANT ON HCAAP.CNSTGANT = TGANT.CNSTGANT
				LEFT JOIN TGANTOP ON HCAAPD.CNSTGANTOP = TGANTOP.CNSTGANTOP
				INNER JOIN AFI ON HCAAP.IDAFILIADO = AFI.IDAFILIADO
				INNER JOIN HADM ON AFI.IDAFILIADO = HADM.IDAFILIADO
				WHERE HADM.NOADMISION = @NOADMISION
					AND (
						TGANT.SEXO = AFI.SEXO
						OR TGANT.SEXO = 'Ambos'
						)
					AND HCAAPD.CONSECUTIVOHCA IS NOT NULL
					AND (
						HCAAPD.FINGRESO <= @FECHAHCA
						OR HCAAPD.CONSECUTIVOHCA IN (SELECT CONSECUTIVO FROM @CONSECUTIVOS_TABLA)
						)
					--order by TIPOANT,CLASEANT,NOMBRE,FINGRESO desc
				) X
			INNER JOIN (
				SELECT HCAAP.CNSTGANT
					,MAX(HCAAPD.FINGRESO) FINGRESO
					,MAX(HCAAPD.CNSHCAAPD) CNSHCAAPD
				FROM HCAAP
				INNER JOIN HCAAPD ON HCAAP.CNSHCAAP = HCAAPD.CNSHCAAP
				INNER JOIN TGANT ON HCAAP.CNSTGANT = TGANT.CNSTGANT
				LEFT JOIN TGANTOP ON HCAAPD.CNSTGANTOP = TGANTOP.CNSTGANTOP
				INNER JOIN AFI ON HCAAP.IDAFILIADO = AFI.IDAFILIADO
				INNER JOIN HADM ON AFI.IDAFILIADO = HADM.IDAFILIADO
				WHERE HADM.NOADMISION = @NOADMISION
					AND (
						TGANT.SEXO = AFI.SEXO
						OR TGANT.SEXO = 'AMBOS'
						)
					AND HCAAPD.CONSECUTIVOHCA IS NOT NULL
					AND (
						HCAAPD.FINGRESO <= @FECHAHCA
						OR HCAAPD.CONSECUTIVOHCA = @CONSECUTIVO
						)
				GROUP BY HCAAP.CNSTGANT
				) Y ON X.CNSHCAAPD = Y.CNSHCAAPD
			ORDER BY X.TIPOANT
				,X.CLASEANT
				,X.NOMBRE
				,X.FINGRESO DESC
		END
		BEGIN -- 7.- Diagn√≥sticos diligenciados en la Historia		
			DECLARE @DXS AS TABLE(CONSECUTIVO VARCHAR(20), IDAFILIADO VARCHAR(20), NOADMISION VARCHAR(20), PROCEDENCIA VARCHAR(20),FECHA DATETIME,TIPO VARCHAR(20),DX VARCHAR(20),TIPODX VARCHAR(20),ESTADO VARCHAR(20),DESCRIPCION VARCHAR(MAX))
			
			INSERT INTO @DXS(CONSECUTIVO,NOADMISION,IDAFILIADO,PROCEDENCIA,FECHA,DX,TIPO,TIPODX,ESTADO,DESCRIPCION)
			SELECT P.CONSECUTIVO, NOADMISION, IDAFILIADO, PROCEDENCIA, FECHA, DX, (CASE CAMPO WHEN 'IDDX' THEN 'Principal' ELSE 'Relacionado' END) AS TIPO
			,CASE CAMPO WHEN 'IDDX' THEN P.TIPODX ELSE HCADX.TIPODX END TIPODX
			,MDX.ESTADO,MDX.DESCRIPCION
			FROM (
				SELECT CONSECUTIVO, NOADMISION, IDAFILIADO, PROCEDENCIA, CLASE, FECHA, IDDX, DX1, DX2, DX3, DX4, COALESCE(TIPODX,'Definitivo') TIPODX
				FROM HCA WHERE ISNULL(ANULADA,0)=0 
				AND CONSECUTIVO IN (SELECT CONSECUTIVO FROM @CONSECUTIVOS_TABLA)
			) SOURCE UNPIVOT (
				DX FOR CAMPO IN ([IDDX],[DX1],[DX2],[DX3],[DX4])
			) P
			INNER JOIN MDX ON MDX.IDDX=P.DX
			LEFT JOIN HCADX ON P.CONSECUTIVO = HCADX.CONSECUTIVO AND P.DX =HCADX.IDDX 
			WHERE ISNULL(DX,'')<>''
			


			DECLARE @CONSECUTIVO_HCADX VARCHAR(20)
			DECLARE _CURSOR CURSOR FOR   
				SELECT CONSECUTIVO FROM @CONSECUTIVOS_TABLA
  
			OPEN _CURSOR  
			FETCH NEXT FROM _CURSOR INTO @CONSECUTIVO_HCADX
  

			WHILE @@FETCH_STATUS = 0  
			BEGIN  
				INSERT INTO @DXS(CONSECUTIVO,NOADMISION,IDAFILIADO,PROCEDENCIA,FECHA,DX,TIPO,TIPODX,ESTADO,DESCRIPCION)
				SELECT HCA.CONSECUTIVO,HCA.NOADMISION,HCA.IDAFILIADO,HCA.PROCEDENCIA,HCA.FECHA,HCADX.IDDX,TIPO,HCADX.TIPODX,HCADX.ESTADO,MDX.DESCRIPCION
				FROM HCADX 
				INNER JOIN MDX ON MDX.IDDX = HCADX.IDDX
				INNER JOIN HCA ON HCA.CONSECUTIVO = @CONSECUTIVO_HCADX
				WHERE HCADX.CONSECUTIVO=@CONSECUTIVO_HCADX
				AND HCADX.IDDX NOT IN (SELECT DX FROM @DXS WHERE CONSECUTIVO=@CONSECUTIVO_HCADX)
  
				FETCH NEXT FROM _CURSOR INTO @CONSECUTIVO_HCADX
			END  
			CLOSE _CURSOR  
			DEALLOCATE _CURSOR  

			IF (SELECT COUNT(*) FROM @DXS)<1 -- Si la plantilla no tiene diagn√≥sticos se debe enviar al menos los ultimos diagn√≥sticos
			BEGIN
				SELECT * FROM ( -- se ingresa en una subcolsulta para organizar por tipo y que sala primero el Principal.
                     SELECT * FROM VWK_DX
				         WHERE CONSECUTIVO =(
					         SELECT TOP 1 CONSECUTIVO FROM VWK_DX 
					         WHERE NOADMISION=@NOADMISION 
					         ORDER BY FECHA DESC)
                     )A ORDER BY A.TIPO
			END
			ELSE
			BEGIN
				SELECT ROW_NUMBER() OVER(ORDER BY TIPO DESC,CONSECUTIVO,IDAFILIADO,DX ASC) AS ITEM,* FROM @DXS order by tipo asc
			END
		END
		BEGIN -- 8.- Determinar si el usuario puede editar la historia cl√≠nica
			DECLARE @EDITAR BIT = 0
			DECLARE @RAZONNOEDITA VARCHAR(MAX) = ''
			DECLARE @IDMEDICO_HCA VARCHAR(20)
			DECLARE @MINUTOSCAMBIO BIGINT
			SELECT @IDMEDICO_HCA=IDMEDICO, @FECHAHCA=FECHA,@CLASEPLANTILLA=CLASEPLANTILLA FROM HCA WHERE CONSECUTIVO=@CONSECUTIVO
			SELECT @IDMEDICO = IDMEDICO FROM USUSU WHERE USUARIO=@USUARIO
			IF @IDMEDICO = @IDMEDICO_HCA
			BEGIN
				SELECT @MINUTOSCAMBIO = COALESCE(MINUTOSCAMBIO,0) FROM MPL WHERE CLASEPLANTILLA=@CLASEPLANTILLA
				IF COALESCE(@MINUTOSCAMBIO,0) <= 0 -- Si en MPL no tiene configurado minutos busca en MED (MPL Prevalece por encima de MED)
					SELECT @MINUTOSCAMBIO = MINUTOSCAMBIO FROM USUSU INNER JOIN MED ON MED.IDMEDICO=USUSU.IDMEDICO AND USUSU.USUARIO=@USUARIO
				IF COALESCE(@MINUTOSCAMBIO,0) >= DATEDIFF( minute, @FECHAHCA, DBO.FNK_FECHA_SIN_MLS(DBO.FNK_GETDATE()) ) SET @EDITAR = 1
				IF @EDITAR = 0 SET @RAZONNOEDITA = 'Ha superado el tiempo de edici√≥n de esta atenci√≥n ('+CAST(@MINUTOSCAMBIO AS VARCHAR)+' minutos)'
			END
			ELSE SET @RAZONNOEDITA = 'Esta atenci√≥n ha sido diligenciada por otro profesional'

			SELECT @EDITAR AS EDITAR, @RAZONNOEDITA AS RAZONNOEDITA
		END
		BEGIN -- 9.- Firmas relacionadas a la historia
			
			SELECT CONSECUTIVOHCA, FECHA, FIRMA, TITULOFIRMA, SUBTITULOFIRMA
			INTO #HCAF
			FROM HCAF 
			WHERE CONSECUTIVOHCA = @CONSECUTIVO

			ALTER TABLE #HCAF ADD FIRMABLOB VARCHAR(MAX)

			DECLARE @IDFIRMA UNIQUEIDENTIFIER
			DECLARE @FIRMA VARBINARY(MAX)
			DECLARE @FIRMABLOB VARCHAR(MAX)
			DECLARE _CURSOR CURSOR FOR   
			SELECT FIRMA FROM #HCAF
			  
			OPEN _CURSOR  
			FETCH NEXT FROM _CURSOR INTO @IDFIRMA
			  
			  
			WHILE @@FETCH_STATUS = 0  
			BEGIN  
				
				SELECT @FIRMA = DOCFS FROM DOCS WHERE DocumentoID=@IDFIRMA
				

				SELECT @FIRMABLOB = CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("bin")))', 'VARCHAR(MAX)')  
				FROM (SELECT @FIRMA AS bin) AS bin_sql_server_temp;

				UPDATE #HCAF SET FIRMABLOB = @FIRMABLOB WHERE FIRMA=@IDFIRMA

			    FETCH NEXT FROM _CURSOR INTO @IDFIRMA
			    END  
			CLOSE _CURSOR  
			DEALLOCATE _CURSOR  

			SELECT * FROM #HCAF
		END
		DROP TABLE #hcad_C
		BEGIN -- 10. -Preexistencias
			SELECT @IDAFILIADO = IDAFILIADO FROM HCA WHERE CONSECUTIVO = @CONSECUTIVO
			SELECT AFIDX.IDDX, AFIDX.FECHA, AFIDX.USUARIO, MDX.DESCRIPCION
			FROM   AFIDX  INNER JOIN MDX ON AFIDX.IDDX = MDX.IDDX
			WHERE  IDAFILIADO = @IDAFILIADO AND CONVERT(DATE,AFIDX.FECHA) <= CONVERT(DATE, (SELECT FECHA FROM HCA WHERE  CONSECUTIVO = @CONSECUTIVO))
		END
		RETURN
	END
	IF @METODO = 'DILIGENCIAR'
	BEGIN
      SELECT @EVOLUCION    = EVOLUCION, @TIPOALTA = TIPOALTA, @DETRASLADO = DETRASLADO, @DONDETRASLADO = DONDETRASLADO, @FECHAEGRESO = FECHAEGRESO
         , @DXPRINCIPAL = DXPRINCIPAL, @DXSECUNDARIO = DXSECUNDARIO,@NOADMISIONALTA = NOADMISIONALTA, @ALTASLECCION = ALTASLECCION, @TIPOLLAMADA = TIPOLLAMADA
         , @MOTIVOLLAMADA = MOTIVOLLAMADA
      FROM OPENJSON(@ADICIONAL)WITH(
	   EVOLUCION               VARCHAR(20)       '$.EVOLUCION' ,
	   TIPOALTA                VARCHAR(20)       '$.TIPOALTA' ,
	   DETRASLADO              VARCHAR(20)       '$.DETRASLADO' ,
	   DONDETRASLADO           VARCHAR(20)       '$.DONDETRASLADO' ,
	   FECHAEGRESO             DATE              '$.FECHAEGRESO' ,
	   DXPRINCIPAL             VARCHAR(20)       '$.DXPRINCIPAL' ,
	   DXSECUNDARIO            VARCHAR(20)       '$.DXSECUNDARIO' ,
	   NOADMISIONALTA          VARCHAR(20)       '$.NOADMISIONALTA' ,
	   ALTASLECCION            BIT               '$.ALTASLECCION' ,
	   TIPOLLAMADA             VARCHAR(20)       '$.TIPOLLAMADA' ,
	   MOTIVOLLAMADA           VARCHAR(50)       '$.MOTIVOLLAMADA' 

      )

		PRINT 'DILIGENCIAR'
		SELECT @IXCOUNTRY = DATO FROM USVGS WHERE IDVARIABLE = 'IXCOUNTRY'
		DECLARE @NECPAL BIT = 0
		
		SELECT @NOADMISION = NOADMISION, @CONSECUTIVOCIT = CONSECUTIVOCIT, @CONSECUTIVOHCA = CONSECUTIVOHCA
			  ,@FECHA_1 = FECHA, @HORA_1 = HORA, @EDITAFECHA = EDITAFECHA
		FROM OPENJSON(@PARAMETROS) WITH (
				 NOADMISION     VARCHAR(20) '$.NOADMISION'
				,CONSECUTIVOCIT VARCHAR(20) '$.CONSECUTIVOCIT'
				,CONSECUTIVOHCA VARCHAR(20) '$.CONSECUTIVOHCA'
				,FECHA			 VARCHAR(20) '$.FECHA'
				,HORA			    VARCHAR(10) '$.HORA'
				,EDITAFECHA		 TINYINT     '$.EDITAFECHA'
		)
		SELECT @FECHAHCA = CONVERT(SMALLDATETIME,GETDATE())

		IF @EDITAFECHA = 1
		BEGIN
			SELECT @FECHAHCA = CONVERT(DATETIME, CONCAT(SUBSTRING(@FECHA_1,1,4),'-',SUBSTRING(@FECHA_1,9,2),'-',SUBSTRING(@FECHA_1,6,2),' ', @HORA_1))
		END

		IF COALESCE(@NOADMISION,'')='' AND COALESCE(@CONSECUTIVOCIT,'')<>''
		BEGIN
			SELECT @NOADMISION=NOADMISION FROM CIT WHERE CONSECUTIVO=@CONSECUTIVOCIT
			IF @IXCOUNTRY <> 'PERU' AND DBO.FNK_VALORVARIABLE('CIT_CREA_HADM') <> 'SI'
			BEGIN
				SELECT @NOADMISION = @CONSECUTIVOCIT
			END
		END

		PRINT 'SEGUIMIENTO 004'
      IF (SELECT DBO.FNK_VALORVARIABLE('IXCOUNTRY')) = 'PERU'
		   INSERT  LOG_KRY..HCAW_LOG([JSON])VALUES(@JSON) --SELECT TOP 1000 * FROM HCAW_LOG ORDER BY FECHA DESC
      ELSE
         INSERT  HCAW_LOG([JSON])VALUES(@JSON) --SELECT TOP 1000 * FROM HCAW_LOG ORDER BY FECHA DESC

		-- Evitar la duplicaci√≥n de HCA si se intenta registrar dos veces.
		IF COALESCE(@CONSECUTIVOHCA,'')='' AND EXISTS (
				SELECT CONSECUTIVO
				FROM   HCA
				WHERE  NOADMISION = @NOADMISION
					AND @CNSWEB IS NOT NULL
					AND CNSWEB = @CNSWEB
				)
			RETURN
       
		-- Datos del medico
		SELECT @IDMEDICO = IDMEDICO
			,@SYS_COMPUTERNAME = COALESCE(SYS_COMPUTERNAME, @@SERVERNAME)
		FROM USUSU
		WHERE USUARIO = @USUARIO

		-- Area funcional y centro de costo donde se origina la HC
		SELECT @IDAREA = IDAREA
			,@CCOSTO = CCOSTO
			,@IDSEDE = IDSEDE
			,@COMPANIA=COMPANIA
		FROM UBEQ
		WHERE SYS_COMPUTERNAME = @SYS_COMPUTERNAME
      PRINT 'SEGUIMIENTO 005'
		SELECT *
		INTO #HCA
		FROM OPENJSON(@PARAMETROS) WITH (
			 CLASEPLANTILLA VARCHAR(8) '$.CLASEPLANTILLA'
			,TIPODX VARCHAR(10) '$.TIPODX'
			,IDDX VARCHAR(10) '$.IDDX'
			,CONSECUTIVOCIT VARCHAR(20) '$.CONSECUTIVOCIT'
			,NOADMISION VARCHAR(20) '$.NOADMISION'
			,IDAFILIADO VARCHAR(20) '$.IDAFILIADO'
			,PROCEDENCIA VARCHAR(10) '$.PROCEDENCIA'
			,TAS VARCHAR(10) '$.TAS'
			,TAD VARCHAR(10) '$.TAD'
			,FC VARCHAR(10) '$.FC'
			,FR VARCHAR(10) '$.FR'
			,TEMP VARCHAR(10) '$.TEMP'
			,TALLA VARCHAR(10) '$.TALLA'
			,PULSO VARCHAR(10) '$.PULSO'
			,PESO VARCHAR(10) '$.PESO'
			,GLASGOW VARCHAR(11) '$.GLASGOW'
			,TIPOGLASGOW VARCHAR(20) '$.TIPOGLASGOW'
			,HIDRATACION VARCHAR(10) '$.HIDRATACION'
			,TAM VARCHAR(10) '$.TAM'
			,DIURESIS VARCHAR(10) '$.DIURESIS'
			,IDPLAN VARCHAR(10) '$.IDPLAN'
			,MED_ESPEC VARCHAR(4) '$.MED_ESPEC'
			,CODAZUL SMALLINT '$.CODAZUL'
			,COVID SMALLINT '$.COVID'
			,ITEMHCSEGD INT '$.ITEMHCSEGD'
			,DIASPRORROGA INT '$.DIASPRORROGA'
			,CHECK1 BIT '$.CHECK1'
			,CHECK2 BIT '$.CHECK2'
			,CHECK3 BIT '$.CHECK3'
			,NECPAL BIT '$.NECPAL'
			,S1 BIT '$.S1'
			,S2 BIT '$.S2'
			,S3 BIT '$.S3'
			,S4 BIT '$.S4'
			,S5 BIT '$.S5'
			,S6 BIT '$.S6'
			,MDX NVARCHAR(MAX) AS JSON
			,TGANT NVARCHAR(MAX) AS JSON
			,HCATD NVARCHAR(MAX) AS JSON
			,MPLD NVARCHAR(MAX) AS JSON
			,MPLSV NVARCHAR(MAX) AS JSON
			,HCADCP NVARCHAR(MAX) AS JSON
		)

		SELECT @CLASEPLANTILLA = CLASEPLANTILLA
			,@TIPODX = TIPODX
			,@IDDX = IDDX
			,@CONSECUTIVOCIT = CONSECUTIVOCIT
			,@IDAFILIADO = IDAFILIADO
			,@PROCEDENCIA = PROCEDENCIA
			,@IDPLAN = IDPLAN
			,@ITEMHCSEGD = ITEMHCSEGD
			,@DIASPRORROGA = DIASPRORROGA
			,@NECPAL = NECPAL
		FROM #HCA

		IF @PROCEDENCIA IS NULL
			SET @PROCEDENCIA = 'QX'

		IF @PROCEDENCIA = 'QX' AND COALESCE(@CONSECUTIVOCIT,'')<>'' AND @IXCOUNTRY<>'PERU'
		BEGIN
			SELECT @PROCEDENCIA = 'IPS'
		END

		IF COALESCE(@CONSECUTIVOCIT,'')<>''
		BEGIN
			SELECT @IDEMEDICA=IDEMEDICA, @IDPLAN = COALESCE(@IDPLAN,IDPLAN) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVOCIT
		END

		IF COALESCE(@IDEMEDICA,'')='' AND COALESCE(@IDMEDICO,'')<>''
		BEGIN
			SELECT @IDEMEDICA = MED.IDEMEDICA FROM MED WHERE IDMEDICO=@IDMEDICO
		END
		
		SELECT @CLASE = CLASE
			   ,@AMBITO = AMBITO
			   ,@DAALTA = DAALTA
		FROM MPL
		WHERE CLASEPLANTILLA = @CLASEPLANTILLA

      PRINT 'SEGUIMIENTO 006'
		SELECT @PREFIJO = '@' + CASE @CLASE
				WHEN 'HC'
					THEN 'HC'
				WHEN 'NE'
					THEN 'HCNE'
				WHEN 'NA'
					THEN 'HCNA'
				ELSE 'HCON'
				END

		IF COALESCE(@CONSECUTIVOHCA,'')<>'' SET @CONSECUTIVO=@CONSECUTIVOHCA
		ELSE
		BEGIN
			EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,@PREFIJO,@CONSECUTIVO OUTPUT

			SELECT @CONSECUTIVO = CASE 
					WHEN @PREFIJO <> '@HC'
						THEN RIGHT(@PREFIJO, 2)
					ELSE ''
					END + @IDSEDE + REPLACE(SPACE(8 - LEN(@CONSECUTIVO)) + LTRIM(RTRIM(@CONSECUTIVO)), SPACE(1), 0)
		   
			SELECT @ITEMRED = MAX(ITEMRED) + 1
			FROM HCA
			WHERE NOADMISION = NOADMISION
		   
			IF @ITEMRED IS NULL SET @ITEMRED = 1
		END
--query2
		SELECT @IDAFILIADO = IDAFILIADO FROM #HCA
		SELECT @IDPLAN_HADM = IDPLAN, @IDPLAN=COALESCE(@IDPLAN,IDPLAN), @IDTERCERO = IDTERCERO FROM HADM WHERE NOADMISION=@NOADMISION

		IF COALESCE(@IDPLAN,'')<>''
			SELECT @IDAREA=IDAREA,@CCOSTO=CCOSTO FROM CEN WHERE CCOSTO=(SELECT CCOSTO FROM PLN WHERE IDPLAN=@IDPLAN)
		
		IF @CCOSTO IS NULL  AND COALESCE(@IDPLAN_HADM,'')<>''
			SELECT @IDAREA=IDAREA,@CCOSTO=CCOSTO FROM CEN WHERE CCOSTO=(SELECT CCOSTO FROM PLN WHERE IDPLAN=@IDPLAN_HADM)
         
		DECLARE @IDPLAN_NUEVAHCA VARCHAR(20)
		IF COALESCE(@CONSECUTIVOHCA,'')=''
		BEGIN

			SELECT @CONSECUTIVOCIT = CONSECUTIVOCIT FROM #HCA WHERE COALESCE(CONSECUTIVOCIT,'')<>''

			-- EZERPA 29/01/2021 Para evitar las historias cl√≠nicas sin planes
			SELECT @NOADMISION = COALESCE(@NOADMISION, NOADMISION) FROM #HCA
         
			--EZERPA 11/02/2021 ERROR GRAVISIMO EN AGENDAMIENTO DE CITAS TOMA EL IDAFILIADO CORRECTO PERO LA ADMISI√ìN TOMA LA PRIMERA QUE SELECCIONA EN LA GRILLA
			IF @CONSECUTIVOCIT IS NOT NULL -- Tiene cita asignada
			BEGIN
				IF NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND IDAFILIADO=@IDAFILIADO) -- Es una cita mala
				BEGIN
					SELECT @NOADMISION = NOADMISION FROM HADM WHERE IDAFILIADO=@IDAFILIADO AND COALESCE(CERRADA,0)=0 AND COALESCE(FACTURABLE,1)=1 ORDER BY FECHA DESC
				END
			END
			--END

			-- SELECT @NOADMISION AS NOADMISION

			SELECT @IDPLAN_NUEVAHCA = CASE WHEN COALESCE(IDPLAN,'')='COVID19' THEN COALESCE((SELECT TOP 1 IDPLAN FROM CIT WHERE CONSECUTIVO=#HCA.CONSECUTIVOCIT), @IDPLAN_HADM) ELSE COALESCE(IDPLAN,@IDPLAN,@IDPLAN_HADM) END FROM #HCA
			IF @IDPLAN_NUEVAHCA IS NULL OR @IDPLAN_NUEVAHCA = '' SELECT @IDPLAN_NUEVAHCA = IDPLAN FROM HADM WHERE NOADMISION = @NOADMISION
			-- EZERPA END

			PRINT 'EN REVISION 007'

			INSERT INTO HCA (CONSECUTIVO,ITEMRED,CLASEPLANTILLA,AMBITO,FECHA,NOADMISION,IDAFILIADO,TIPODX
							,IDDX,IDMEDICO,IDMEDICODILIGENCIA,PROCEDENCIA,ALTA,CLASE,IDAREA,CCOSTO,USUARIO,TAS,TAD
							,FC,FR,TEMP,TALLA,PULSO,PESO,GLASGOW,TIPOGLASGOW,HIDRATACION,TAM,DIURESIS,CONSECUTIVOCIT
							,IDPLAN,MED_ESPEC,CODAZUL,COVID,CNSWEB,CHECK1,CHECK2,CHECK3,NECPAL,N_S1,N_S2,N_S3,N_S4,N_S5,N_S6)
			SELECT @CONSECUTIVO CONSECUTIVO
				,@ITEMRED ITEMRED
				,CLASEPLANTILLA
				,@AMBITO AMBITO
				,@FECHAHCA FECHA
				,@NOADMISION
				,COALESCE(@IDAFILIADO,IDAFILIADO)
				,TIPODX
				,IDDX
				,@IDMEDICO IDMEDICO
				,@IDMEDICO IDMEDICODILIGENCIA
				,@PROCEDENCIA PROCEDENCIA
				,COALESCE(@DAALTA,0) ALTA
				,@CLASE CLASE
				,@IDAREA IDAREA
				,@CCOSTO CCOSTO
				,@USUARIO USUARIO
				,TAS
				,TAD
				,FC
				,FR
				,TEMP
				,TALLA
				,PULSO
				,PESO
				,GLASGOW
				,TIPOGLASGOW
				,HIDRATACION
				,TAM
				,DIURESIS
				,CONSECUTIVOCIT
				,@IDPLAN_NUEVAHCA
				,COALESCE(MED_ESPEC, @IDEMEDICA)
				,COALESCE(CODAZUL,0)
				,COALESCE(COVID,0)
				,@CNSWEB
				,CHECK1
				,CHECK2
				,CHECK3
				,NECPAL
				,S1,S2,S3,S4,S5,S6
			FROM #HCA

		END
		ELSE
		BEGIN
      PRINT 'EN REVISION 008'
			-- EZERPA 29/01/2021 Para evitar las historias cl√≠nicas sin planes
			--SELECT @NOADMISION = COALESCE(@NOADMISION, NOADMISION) FROM #HCA
			--SELECT @IDPLAN_NUEVAHCA = CASE WHEN COALESCE(IDPLAN,'')='COVID19' THEN COALESCE((SELECT TOP 1 IDPLAN FROM CIT WHERE CONSECUTIVO=#HCA.CONSECUTIVOCIT), @IDPLAN_HADM) ELSE COALESCE(IDPLAN,@IDPLAN,@IDPLAN_HADM) END FROM #HCA
			--IF @IDPLAN_NUEVAHCA IS NULL OR @IDPLAN_NUEVAHCA = '' SELECT @IDPLAN_NUEVAHCA = IDPLAN FROM HADM WHERE NOADMISION = @NOADMISION
			-- EZERPA END

			UPDATE HCA SET 
				TIPODX = #HCA.TIPODX		,IDDX = #HCA.IDDX		,IDMEDICO = @IDMEDICO
				,USUARIO = @USUARIO		,TAS = #HCA.TAS			,TAD = #HCA.TAD			,FC = #HCA.FC			
				,FR = #HCA.FR			,TEMP = #HCA.TEMP		,TALLA = #HCA.TALLA		,PULSO = #HCA.PULSO		
				,PESO = #HCA.PESO		,GLASGOW = #HCA.GLASGOW ,TIPOGLASGOW = #HCA.TIPOGLASGOW
				,HIDRATACION = #HCA.HIDRATACION					,TAM = #HCA.TAM
				,DIURESIS = #HCA.DIURESIS						
				-- ,IDPLAN = @IDPLAN_NUEVAHCA
				,CODAZUL = COALESCE(#HCA.CODAZUL,0)
				,COVID = COALESCE(#HCA.COVID,0)
				,FECHA = CASE WHEN @EDITAFECHA=1 THEN @FECHAHCA ELSE FECHA END
			FROM HCA INNER JOIN #HCA ON HCA.CONSECUTIVO = @CONSECUTIVOHCA
		END
		--SELECT * FROM HCADX
		-- diagn√≥sticos relacionados
		BEGIN
			
			SELECT @AUX = MDX
			FROM #HCA
			--SELECT @AUX
         PRINT 'EN REVISION 009'
			IF @AUX IS NOT NULL
			BEGIN
				SELECT IDDX,TIPODX
				INTO #MDX
				FROM OPENJSON(@AUX) WITH (
					IDDX VARCHAR(10) '$.IDDX',
					TIPODX VARCHAR(10) '$.TIPODX'
				)
		--		SELECT * FROM #MDX
				DELETE FROM HCADX WHERE CONSECUTIVO=@CONSECUTIVOHCA
				AND IDDX NOT IN (SELECT IDDX FROM #MDX)

				INSERT INTO HCADX (
					CONSECUTIVO
					,IDDX
					,TIPO
					,ESTADO
					,TIPODX
					)
				SELECT @CONSECUTIVO
					,MDX.IDDX
					,'Relacionado'
					,'Activo'
					,#MDX.TIPODX
				FROM #MDX
				INNER JOIN MDX ON MDX.IDDX = #MDX.IDDX
				WHERE MDX.IDDX NOT IN (SELECT IDDX FROM HCADX WHERE CONSECUTIVO = @CONSECUTIVOHCA)

			--	SELECT * FROM HCADX WHERE CONSECUTIVO = @CONSECUTIVO

				DECLARE @DX1 VARCHAR(20), @DX2 VARCHAR(20), @DX3 VARCHAR(20), @DX4 VARCHAR(20)
				DECLARE @ITEM INT = 0, @CURRENTCNS VARCHAR(20)=''

				DECLARE _CURSOR CURSOR FOR   
				  SELECT CONSECUTIVO,IDDX FROM HCADX WHERE CONSECUTIVO=@CONSECUTIVO ORDER BY ITEM
				OPEN _CURSOR  
				FETCH NEXT FROM _CURSOR INTO @CONSECUTIVO,@IDDX
  
				WHILE @@FETCH_STATUS = 0  
				BEGIN  
					IF @CURRENTCNS<>@CONSECUTIVO
					BEGIN
						SET @ITEM = 1
						SET @CURRENTCNS = @CONSECUTIVO
						SELECT @DX1=DX1,@DX2=DX2,@DX3=DX3,@DX4=DX4 FROM HCA WHERE CONSECUTIVO=@CONSECUTIVO
					END
					ELSE SET @ITEM+=1

					IF @ITEM=1 AND COALESCE(@DX1,'')='' UPDATE HCA SET DX1=@IDDX WHERE CONSECUTIVO=@CONSECUTIVO
					IF @ITEM=2 AND COALESCE(@DX2,'')='' UPDATE HCA SET DX2=@IDDX WHERE CONSECUTIVO=@CONSECUTIVO
					IF @ITEM=3 AND COALESCE(@DX3,'')='' UPDATE HCA SET DX3=@IDDX WHERE CONSECUTIVO=@CONSECUTIVO
					IF @ITEM=4 AND COALESCE(@DX4,'')='' UPDATE HCA SET DX4=@IDDX WHERE CONSECUTIVO=@CONSECUTIVO
  
					FETCH NEXT FROM _CURSOR INTO @CONSECUTIVO,@IDDX
					END  
				CLOSE _CURSOR  
				DEALLOCATE _CURSOR  
		--		SELECT * FROM HCADX WHERE CONSECUTIVO = @CONSECUTIVO
			END
		END

		-- Dar de alta cuando son admisiones
		--IF @DAALTA > 0
		--BEGIN
		--	UPDATE HADM
		--		SET IDMEDICOALTA = @IDMEDICOALTA,
		--		ESTADOPSALIDA = @ESTADOPSALIDA,
		--		DESTINO = @DESTINO,
		--		CAUSABMUERTE = @CAUSABMUERTE,
		--		ACTADEFUNCION = @ACTADEFUNCION,
		--		FECHAALTAMED = COALESCE(@FECHAALTAMED,DBO.FNK_GETDATE())
		--	WHERE NOADMISION=@NOADMISION
		--END
		-- Antecedentes
		BEGIN
			
			IF COALESCE(@CONSECUTIVOHCA,'')='' AND NOT EXISTS (
					SELECT 1
					FROM HCAAP
					WHERE IDAFILIADO = @IDAFILIADO
					)
				AND @IDAFILIADO IS NOT NULL
			BEGIN
				EXEC SPK_CREA_ANTECEDENTESHC @IDAFILIADO
			END


			SELECT @AUX = TGANT
			FROM #HCA
         PRINT 'EN REVISION 010'
			SELECT *
			INTO #HCAAP
			FROM OPENJSON(@AUX) WITH (
				ANTECEDENTE VARCHAR(MAX) '$.ANTECEDENTE'
				,CNSTGANTOP VARCHAR(20) '$.CNSTGANTOP'
				,CNSTGANT VARCHAR(20) '$.CNSTGANT'
				,NUMERICO VARCHAR(20) '$.NUMERICO'
				,FECHAHCAAP DATETIME '$.FECHA'
			)

			DECLARE HCAAPCUR CURSOR
			FOR
			SELECT ANTECEDENTE
				,CNSTGANTOP
				,CNSTGANT
				,NUMERICO
				,FECHAHCAAP
			FROM #HCAAP

			OPEN HCAAPCUR

			FETCH NEXT
			FROM HCAAPCUR
			INTO @ANTECEDENTE
				,@CNSTGANTOP
				,@CNSTGANT
				,@NUMERICO
				,@FECHAHCAAP

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SELECT @CNSHCAAP = CNSHCAAP
				FROM HCAAP
				WHERE IDAFILIADO = @IDAFILIADO
					AND CNSTGANT = @CNSTGANT
               PRINT 'EN REVISION 011'
				-- print 'CNSHCAAP: '+ISNULL(@CNSHCAAP,'')
				INSERT INTO HCAAPD (CNSHCAAP,FINGRESO,CONSECUTIVOHCA,ANTECEDENTE,NUMERICO,FECHA,CNSTGANTOP,ORDEN)
				SELECT @CNSHCAAP,@FECHA,@CONSECUTIVO,@ANTECEDENTE,@NUMERICO,@FECHAHCAAP,@CNSTGANTOP,0
				FROM TGANT
				WHERE CNSTGANT = @CNSTGANT
					AND @CNSTGANT IS NOT NULL
					AND @CNSHCAAP IS NOT NULL

				FETCH NEXT
				FROM HCAAPCUR
				INTO @ANTECEDENTE,@CNSTGANTOP,@CNSTGANT,@NUMERICO,@FECHAHCAAP
			END

			CLOSE HCAAPCUR

			DEALLOCATE HCAAPCUR
		END

      
		-- Detalles de la plantilla e historia clinica
		BEGIN
      PRINT 'EN REVISION 012'
			DELETE FROM HCADL WHERE CONSECUTIVO=@CONSECUTIVOHCA
			DELETE FROM HCAD WHERE CONSECUTIVO=@CONSECUTIVOHCA

			SELECT @AUX = MPLD
			FROM #HCA

			SELECT #T.CAMPO
				,#T.SECUENCIA
				,#T.TIPO_CAMPO
				,CASE 
					WHEN #T.VALOR IS NULL
						THEN CASE WHEN #T.TIPO_CAMPO IN ('Titulo','Subtitulo','Informativo') THEN MPLD.DESCCAMPO ELSE NULL END
					ELSE #T.VALOR
					END VALOR
				,#T.VALORLISTA
				,#T.MPLDL
				,#T.INTERPRETACION
			INTO #MPLD
			FROM OPENJSON(@AUX) WITH (
					CAMPO VARCHAR(12) '$.CAMPO'
					,SECUENCIA SMALLINT '$.SECUENCIA'
					,TIPO_CAMPO VARCHAR(20) '$.TIPO_CAMPO'
					,VALOR VARCHAR(MAX) '$.VALOR'
					,VALORLISTA VARCHAR(120) '$.VALORLISTA'
					,INTERPRETACION VARCHAR(200) '$.INTERPRETACION'
					,MPLDL NVARCHAR(MAX) AS JSON
					) AS #T
			INNER JOIN MPLD ON MPLD.CLASEPLANTILLA = @CLASEPLANTILLA
				AND MPLD.CAMPO = #T.CAMPO
				AND MPLD.SECUENCIA = #T.SECUENCIA

			-- SELECT #MPLD.*
			-- FROM #MPLD INNER JOIN MPLD ON MPLD.CLASEPLANTILLA=@CLASEPLANTILLA AND MPLD.CAMPO=#MPLD.CAMPO AND MPLD.SECUENCIA=#MPLD.SECUENCIA
			-- SELECT * INTO #HCAD
			-- SELECT CONSECUTIVO,CLASEPLANTILLA,CAMPO,SECUENCIA,TIPOCAMPO,ALFANUMERICO,FECHA,MEMO,OBS,LISTA,NUMERICO FROM HCAD WHERE 1=2

			DECLARE HCADCUR CURSOR
			FOR
				SELECT CAMPO,SECUENCIA,VALOR,VALORLISTA,MPLDL,INTERPRETACION
				FROM #MPLD
PRINT 'EN REVISION 013'
			OPEN HCADCUR

			FETCH NEXT
			FROM HCADCUR
				INTO @CAMPO,@SECUENCIA,@VALOR,@VALORLISTA,@MPLDL,@INTERPRETACION

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SELECT @TIPO_CAMPO = TIPO_CAMPO
				FROM MPLD
				WHERE CLASEPLANTILLA = @CLASEPLANTILLA
					AND SECUENCIA = @SECUENCIA

				-- PRINT '@CAMPO: '+COALESCE(@CAMPO,'')+', @TIPO_CAMPO: ' + COALESCE(@TIPO_CAMPO,'')+', @VALOR: '+COALESCE(CAST(@VALOR AS VARCHAR),'')
            --IDSERVICIO

				INSERT INTO HCAD (CONSECUTIVO,CLASEPLANTILLA,CAMPO,SECUENCIA,TIPOCAMPO,ALFANUMERICO,FECHA,MEMO,OBS,LISTA,NUMERICO)
				SELECT @CONSECUTIVO,@CLASEPLANTILLA,@CAMPO,@SECUENCIA,@TIPO_CAMPO
					,CASE @TIPO_CAMPO
						WHEN 'Alfanumerico'
							THEN LEFT(@VALOR, 120)
						WHEN 'Numerico'
							THEN NULL
						WHEN 'Calculado'
							THEN LEFT(@VALOR, 120)
						WHEN 'Krystalos'
							THEN LEFT(@VALOR, 120)
						WHEN 'RadioButton'
							THEN LEFT(@VALORLISTA, 120)
						WHEN 'Lista'
							THEN LEFT(@VALORLISTA, 120)
						WHEN 'Memo'
							THEN NULL
						WHEN 'Informativo'
							THEN NULL
						WHEN 'Fecha'
							THEN NULL
						WHEN 'MultiCheck'
							THEN NULL
						ELSE LEFT(@VALOR, 120)
						END ALFANUMERICO
					--  ,CASE @TIPO_CAMPO WHEN 'Fecha'  THEN CASE WHEN ISDATE(@VALOR)>0 THEN dbo.FNK_FORMATEAR_FECHA(LTRIM(RTRIM(@VALOR))) ELSE NULL END ELSE NULL END FECHA
					,CASE @TIPO_CAMPO
						WHEN 'Fecha'
							THEN CASE 
									--WHEN ISDATE(CONVERT(DATETIME,@VALOR,110)) > 0
									WHEN ISDATE(REPLACE(@VALOR,'-','')) > 0 --EZERPA 18.01.2020 Daba error cuando no diligencian la fecha porque no es obligatoria en la plantilla y viene en formato yyyy-dd-mm
										THEN CONVERT(DATETIME,@VALOR,110)
									ELSE NULL
									END
						ELSE NULL
						END FECHA
					,CASE @TIPO_CAMPO
						WHEN 'Memo'
							THEN @VALOR
						WHEN 'Informativo'
							THEN @VALOR
						ELSE @INTERPRETACION
						END MEMO
					,NULL
					,NULL
					,CASE @TIPO_CAMPO
						WHEN 'Numerico'
							THEN CASE 
									WHEN @VALOR IS NULL
										OR ISNUMERIC(@VALOR) < 1
										THEN NULL
									ELSE CONVERT(DECIMAL(14, 2), @VALOR)
									END
						WHEN 'Escala'
							THEN CASE 
									WHEN @VALOR IS NULL
										OR ISNUMERIC(@VALOR) < 1
										THEN NULL
									ELSE CONVERT(DECIMAL(14, 2), @VALOR)
									END
						WHEN 'RadioButton'
							THEN CASE 
									WHEN @VALOR IS NULL
										OR ISNUMERIC(@VALOR) < 1
										THEN NULL
									ELSE CONVERT(DECIMAL(14, 2), @VALOR)
									END
						WHEN 'Lista'
							THEN CASE 
									WHEN @VALOR IS NULL
										OR ISNUMERIC(@VALOR) < 1
										THEN NULL
									ELSE CONVERT(DECIMAL(14, 2), RTRIM(LTRIM(@VALOR)))
									END
						WHEN 'Check'
							THEN CASE 
									WHEN @VALOR IS NULL
										OR ISNUMERIC(@VALOR) < 1
										THEN NULL
									ELSE CONVERT(DECIMAL(14, 2), RTRIM(LTRIM(@VALOR)))
									END
						ELSE NULL
						END NUMERICO

				--NULL
				SELECT @AUX1 = 0
            PRINT 'EN REVISION 014'

				--EZERPA 05/02/2021 Notificar por telegram a las personas responsables de programar a los m√©dicos para una atenci√≥n inmediata cuando sea notificado por la enfermera
				IF @IXCOUNTRY = 'PERU'
				BEGIN
					IF @CLASEPLANTILLA='COV19F' AND @CAMPO = '0685' AND @SECUENCIA = 685 AND ISNUMERIC(@VALOR)>0 
					BEGIN
						IF @VALOR > 0
						BEGIN
							DECLARE @ROWS INT, @USUARIOTELEGRAM VARCHAR(20), @NOMBREPROFESIONAL VARCHAR(1000), @MENSAJE VARCHAR(1000)
						
							SELECT @NOMBREAFI = NOMBREAFI, @NOMBREPROFESIONAL=MED.NOMBRE
							FROM HADM 
							INNER JOIN AFI ON AFI.IDAFILIADO=HADM.IDAFILIADO
							LEFT JOIN USUSU ON USUSU.USUARIO=@USUARIO
							LEFT JOIN MED ON MED.IDMEDICO=USUSU.IDMEDICO
							WHERE HADM.NOADMISION=@NOADMISION

							SELECT @MENSAJE = 'El profesional '+COALESCE(@NOMBREPROFESIONAL,'')+' ha indicado que el paciente '+COALESCE(@NOMBREAFI,'')+' de admisi√≥n '+@NOADMISION+' necesita atenci√≥n m√©dica con urgencia'
						
							SELECT ROW_NUMBER() OVER(ORDER BY TABLA ASC) AS ITEM, CODIGO INTO #NOTI FROM TGEN WHERE TABLA='NOTIFICACION' AND CAMPO='COVID_URG'

							SELECT @ROWS = @@ROWCOUNT

							WHILE @ROWS > 0
							BEGIN

								SELECT @USUARIOTELEGRAM = CODIGO FROM #NOTI WHERE ITEM = @ROWS

								EXEC SPK_SEND_TELEGRAM @USUARIO, @MENSAJE

								SET @ROWS = @ROWS - 1
							
							END
							DROP TABLE #NOTI
						

						END
					END

					/* EZERPA 04/03/2021 */
					/* 
						1.- Si la enfermera indica sugiere el alta del paciente (COV19F => SECUENCIA (290) => VALOR = 4) suspender las programaciones futuras, excepto el dia siquiente, y actualizar la fecha de finalizaci√≥n del programa
						2.- Si la enfermera indica que el paciente esthospitalizado (COV19F => SECUENCIA (290) => VALOR = 2) SACAR EL PACIENTE DEL PROGRAMA
						3.- Si la enfermera indica que el paciente falleci(COV19F => SECUENCIA (290) => VALOR = 2) suspender todo las programaciones futuras
						4.- Si el m√©dico indica el alta del paciente (COV19 => SECUENCIA (290) => VALOR = 4) indica que falleciel paciente (COV19 => SECUENCIA (290) => VALOR = 3) indica que el paciente fue hospitalizado (COV19 => SECUENCIA (290) => VALOR = 2) suspenderlo del programa de seguimiento
						5.- Si el m√©dico indica que el paciente no contesta (COV19 => SECUENCIA (290) => VALOR = 5) prorrogarlo un d√≠a
						6.- Si el m√©dico estatendiendo el √∫ltimo d√≠a e indica que el paciente continr√° en el programa de seguimiento (COV19 => SECUENCIA (290) => VALOR = 1), debe de preguntarle al m√©dico los d√≠as de prorroga y crear estos si no existen en la programaci√≥n, si existen entonces debe de habilitarlos (ANULADA=0)
						7.- Si la enfermera indica alta administrativa (COV19F => SECUENCIA (290) => VALOR = 6) hacer lo mismo que el punto 2
					*/
					IF @CLASEPLANTILLA IN ('COV19','COV19F') AND @CAMPO='SALIDA' AND @SECUENCIA=290  AND ISNUMERIC(@VALOR)>0
					BEGIN
						
						IF @CLASEPLANTILLA = 'COV19F' -- Plantilla que diligencia el personal de enfermer√≠a
						BEGIN
							-- Punto (1)
							IF CAST(@VALOR AS INT) IN (4) 
                        UPDATE HCSEG SET FECHAFIN=CAST(GETDATE()+1 AS DATE), FECHAALTA=CAST(GETDATE()+1 AS DATE) WHERE CNSHCSEG = (SELECT CNSHCSEG FROM HCSEGD WHERE ITEM=@ITEMHCSEGD)
							-- Punto (2)
							IF CAST(@VALOR AS INT) IN (2,3,6,7) 
							BEGIN
								UPDATE HCSEG SET FECHAALTA=CAST(GETDATE() AS DATE) WHERE CNSHCSEG = (SELECT CNSHCSEG FROM HCSEGD WHERE ITEM=@ITEMHCSEGD)
								UPDATE HADM
									SET IDMEDICOALTA = @IDMEDICO, ESTADOPSALIDA = CASE WHEN CAST(@VALOR AS INT) = 2 THEN '0' ELSE '1' END, DESTINO = '4',
									CAUSABMUERTE = '', ACTADEFUNCION = '', FECHAALTAMED = DBO.FNK_GETDATE()
									,CERRADA = 2
								WHERE NOADMISION=@NOADMISION
							END
							-- Punto (3)
							--IF CAST(@VALOR AS INT) = 3 UPDATE HCSEG SET FECHAFIN=CAST(GETDATE() AS DATE),FECHAALTA=CAST(GETDATE() AS DATE) WHERE CNSHCSEG = (SELECT CNSHCSEG FROM HCSEGD WHERE ITEM=@ITEMHCSEGD)
						END

						IF @CLASEPLANTILLA = 'COV19'
						BEGIN
							-- Punto (4)
							IF CAST(@VALOR AS INT) in (2,3,4) 
							BEGIN
								UPDATE HCSEG SET FECHAFIN=CAST(GETDATE() AS DATE),FECHAALTA=CAST(GETDATE() AS DATE) WHERE CNSHCSEG = (SELECT CNSHCSEG FROM HCSEGD WHERE ITEM=@ITEMHCSEGD)
								UPDATE HADM
									SET IDMEDICOALTA = @IDMEDICO, ESTADOPSALIDA = CASE WHEN CAST(@VALOR AS INT) = 3 THEN '0' ELSE '1' END, DESTINO = '4',
									CAUSABMUERTE = '', ACTADEFUNCION = '', FECHAALTAMED = DBO.FNK_GETDATE()
									,CERRADA = 2
								WHERE NOADMISION=@NOADMISION
							END
							-- Punto (5)
							IF CAST(@VALOR AS INT) = 5 
							BEGIN
								--DECLARE @DIA INT, @CNSHCSEG INT
								--SELECT @DIA=DIA, @CNSHCSEG=CNSHCSEG FROM HCSEGD WHERE ITEM=@ITEMHCSEGD
								
								--INSERT INTO HCSEGD(CNSHCSEG,FECHA,DIA)
								--SELECT @CNSHCSEG, CAST(GETDATE()+1 AS DATE), @DIA+1
								--WHERE NOT EXISTS(SELECT 1 FROM HCSEGD WHERE CNSHCSEG=@CNSHCSEG AND FECHA=CAST(GETDATE()+1 AS DATE))

								--UPDATE HCSEGD SET ANULADA=0 WHERE CNSHCSEG=@CNSHCSEG AND FECHA=CAST(GETDATE()+1 AS DATE)

								--UPDATE HCSEG SET FECHAFIN=CAST(GETDATE()+1 AS DATE), FECHAALTA=CAST(GETDATE()+1 AS DATE) 
								--WHERE CNSHCSEG=@CNSHCSEG
								SET @DIASPRORROGA = 1
							END
							
							-- Punto (6)
							-- IF CAST(@VALOR AS INT) = 1
							IF COALESCE(@DIASPRORROGA, 0) > 0
							BEGIN
								UPDATE HCSEGD SET DIASPRORROGA = @DIASPRORROGA, CONSECUTIVOHCA=@CONSECUTIVO, FECHACUMPLIDA=GETDATE()  WHERE ITEM = @ITEMHCSEGD

							END
						END
					END
				END
				--HCADL
            
				SELECT *
				INTO #HCADL
				FROM OPENJSON(@MPLDL) WITH (
					CHECKM VARCHAR(10) '$.CHECK'
					,DESCRIPCION VARCHAR(MAX) '$.DESCRIPCION'
					,VALORLISTA VARCHAR(80) '$.VALORLISTA'
				)

			IF @@ROWCOUNT>0
			BEGIN
				--SELECT * FROM #HCADL
					DECLARE HCADLCUR CURSOR
					FOR
						SELECT CHECKM
							,DESCRIPCION
							,VALORLISTA
						FROM #HCADL

					OPEN HCADLCUR

					FETCH NEXT
					FROM HCADLCUR
					INTO @CHECKM
						,@DESCRIPCION
						,@VALORLISTAHCADL

					WHILE @@FETCH_STATUS = 0
					BEGIN
						-- PRINT 'Secuencia: '+COALESCE(CAST(@SECUENCIA AS VARCHAR),'')+', CHECKM: '+COALESCE(CAST(@CHECKM AS VARCHAR),'')+', ValorLista: '+COALESCE(@VALORLISTAHCADL,'')
						INSERT INTO HCADL (
							CONSECUTIVO
							,SECUENCIA
							,ITEM
							,VALORLISTA
							,CHECKM
							,DESCRIPCION
							)
						SELECT @CONSECUTIVO
							,@SECUENCIA
							,0
							,@VALORLISTAHCADL
							,CASE @CHECKM
								WHEN 'True'
									THEN 1
								WHEN 'true'
									THEN 1
								ELSE 0
								END
							,@DESCRIPCION


						FETCH NEXT
						FROM HCADLCUR
						INTO @CHECKM
							,@DESCRIPCION
							,@VALORLISTAHCADL
					END

					CLOSE HCADLCUR

					DEALLOCATE HCADLCUR

			END
				DROP TABLE #HCADL

				FETCH NEXT
				FROM HCADCUR
				INTO @CAMPO
					,@SECUENCIA
					,@VALOR
					,@VALORLISTA
					,@MPLDL
					,@INTERPRETACION
			END

			CLOSE HCADCUR

			DEALLOCATE HCADCUR


			-- Imagenes cargadas mientras se diligenciaba la plantilla
			DECLARE _cursor CURSOR
			FOR
			SELECT CAMPO
				,SECUENCIA
			FROM HCAD
			WHERE TIPOCAMPO = 'Imagen'
				AND CONSECUTIVO = @CONSECUTIVO

			OPEN _cursor

			FETCH NEXT
			FROM _cursor
			INTO @CAMPO
				,@SECUENCIA

			WHILE @@FETCH_STATUS = 0
			BEGIN
				INSERT INTO HCADL (
					CONSECUTIVO
					,SECUENCIA
					,ITEM
					,VALORLISTA
					,CHECKM
					,DESCRIPCION
					,SINCRONIZADO
					)
				SELECT @CONSECUTIVO
					,@SECUENCIA
					,ROW_NUMBER() OVER (
						ORDER BY DocumentoID ASC
						) AS ITEM
					,DocumentoID
					,1
					,NULL
					,0
				FROM DOCS
				WHERE DocUsuario = @USUARIO
					AND DocTipo = @CLASEPLANTILLA
					AND DocConsecutivo = @IDAFILIADO
					AND DocCnsAuxiliar = @CAMPO

				UPDATE DOCS
				SET DocCnsAuxiliar = @CONSECUTIVO
				WHERE DocumentoID IN (
						SELECT VALORLISTA
						FROM HCADL
						WHERE CONSECUTIVO = @CONSECUTIVO
							AND SECUENCIA = @SECUENCIA
						)

				FETCH NEXT
				FROM _cursor
				INTO @CAMPO
					,@SECUENCIA
			END

			CLOSE _cursor

			DEALLOCATE _cursor
		END

		-- Ordenes m√©dicas
		IF COALESCE(@CONSECUTIVOHCA,'')=''
		BEGIN
         PRINT 'ENTRAAA APOR ACAAAAAAAAA'
			SELECT @AUX = HCATD
			FROM #HCA

			SELECT *
			INTO #HCATD
			FROM OPENJSON(@AUX) WITH (
				CODOM VARCHAR(10) '$.OM'
				,IDSERVICIO VARCHAR(20) '$.IDSERVICIO'
				,OBSERVACION NVARCHAR(MAX) '$.OBSERVACION'
				,FRECUENCIA DECIMAL(14, 2) '$.FRECUENCIA'
				,DURACION DECIMAL(14, 2) '$.DURACION'
				,TIPODURACION VARCHAR(1) '$.TIPODURACION'
				,CANTIDAD DECIMAL(18, 6) '$.CANTIDAD'
				,CLASE VARCHAR(1) '$.CLASE'
				,VIA VARCHAR(13) '$.VIA'
				,CODPAQUETE VARCHAR(20) '$.CODPAQUETE'
				,LUNES SMALLINT '$.LUNES'
				,MARTES SMALLINT '$.MARTES'
				,MIERCOLES SMALLINT '$.MIERCOLES'
				,JUEVES SMALLINT '$.JUEVES'
				,VIERNES SMALLINT '$.VIERNES'
				,SABADO SMALLINT '$.SABADO'
				,DOMINGO SMALLINT '$.DOMINGO'
				,RAZONNEC SMALLINT '$.RAZONNEC'
				,DOSISUNICA SMALLINT '$.DOSISUNICA'
				,TIPO VARCHAR(15) '$.TIPO'
				,CANTIDADBOLO DECIMAL(14, 2) '$.BOLO'
				,IDSERVICIOMEZCLA VARCHAR(20) '$.IDSERVICIOMEZCLA'
				,QMEZCLA DECIMAL(14, 2) '$.QMEZCLA'
				,HORAAM SMALLINT '$.HORAAM'
				,HORAPM SMALLINT '$.HORAPM'
				,QAM DECIMAL(14,2) '$.CANTIDADAM'
				,QPM DECIMAL(14,2) '$.CANTIDADPM'
			)

			INSERT INTO HCATD (CONSECUTIVO,ITEMRED,CODOM,IDSERVICIO,CANTIDAD,VIA,OBSERVACION,CLASE,ENCARGOS,FRECUENCIA,DURACION,TIPO
			,AVISADOENF,PRIMER,CODPAQUETE,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,RAZONNEC,DOSISUNICA,CANTIDADBOLO
			,IDSERVICIOMEZCLA,QMEZCLA,IDTIPOCONC,HORAAM,HORAPM,QAM,QPM)
		--,ORDEN
		SELECT @CONSECUTIVO
			,@ITEMRED
			,CASE 
				WHEN CODOM IS NOT NULL
					THEN CODOM
				ELSE (
						SELECT TOP 1 HCCOM.CODOM
						FROM HCCOMD
						INNER JOIN hccom ON hccom.CODOM = hccomd.CODOM
							AND PREFIJO = (
								SELECT PREFIJO
								FROM SER
								WHERE IDSERVICIO = #HCATD.IDSERVICIO
								)
						)
				END
			,#HCATD.IDSERVICIO
			,#HCATD.CANTIDAD
			,#HCATD.VIA
			,OBSERVACION
			,CLASE
			,0
			,COALESCE(FRECUENCIA,24)
			,COALESCE((DURACION * CASE 
				WHEN CLASE = 'C'
					THEN 1
				ELSE CASE 
						WHEN TIPODURACION = 'D'
							THEN 24
						ELSE 1
						END
				END),24)
			,ISNULL(TIPO, 'Horaria')
			,0
			,CASE ROW_NUMBER() OVER (
					PARTITION BY #HCATD.CODOM ORDER BY #HCATD.CODOM
					)
				WHEN 1
					THEN 1
				ELSE 0
				END
			,CODPAQUETE
			,LUNES
			,MARTES
			,MIERCOLES
			,JUEVES
			,VIERNES
			,SABADO
			,DOMINGO
			,RAZONNEC
			,DOSISUNICA
			,CANTIDADBOLO
			,IDSERVICIOMEZCLA
			,QMEZCLA
			,SER.PRESUNI
		   ,HORAAM,HORAPM,QAM,QPM
		   FROM #HCATD
		   LEFT JOIN SER ON SER.IDSERVICIO = #HCATD.IDSERVICIO

		END
      PRINT 'EN REVISION 016'
		-- Signos Vitales
		BEGIN
			DELETE FROM HCASV WHERE CONSECUTIVO=@CONSECUTIVOHCA

			SELECT @AUX = MPLSV
			FROM #HCA

			SELECT ROW_NUMBER() OVER (
					ORDER BY ORDENSV ASC
					) ITEM
				,*
			INTO #HCASV
			FROM OPENJSON(@AUX) WITH (
					CODIGOSV VARCHAR(20) '$.CODIGOSV'
					,GRUPO VARCHAR(20) '$.GRUPO'
					,DATO VARCHAR(20) '$.DATO'
					,CLASESV VARCHAR(20) '$.CLASESV'
					,SINCRONIZADO SMALLINT '$.SINCRONIZADO'
					,ORDENSV SMALLINT '$.ORDENSV'
			)

			UPDATE #HCASV
			SET GRUPO = TGSV.GRUPO
			FROM #HCASV
			LEFT JOIN TGSV ON TGSV.CODIGOSV = #HCASV.CODIGOSV

			INSERT INTO HCASV (
				CONSECUTIVO
				,CODIGOSV
				,GRUPO
				,DATO
				,CLASESV
				,SINCRONIZADO
				,ORDENSV
				)
			SELECT @CONSECUTIVO
				,CODIGOSV
				,GRUPO
				,DATO
				,CLASESV
				,SINCRONIZADO
				,ORDENSV
			FROM #HCASV
		END
--query3
		IF COALESCE(@CONSECUTIVOHCA,'')='' -- COALESCE(@CONSECUTIVOCIT,'')<>'' AND 
		BEGIN
			-- EZERPA 14/07/2020 Cuando el m√©dico indica que el plan es covid19 se guarda un registro en HADMAUT y el plan queda tal cual como esten la cita
			IF  @IDPLAN = 'COVID19'
				OR COALESCE(@IDPLAN_HADM,'') = 'COVID'
				OR EXISTS (SELECT 1 FROM HCADX WHERE CONSECUTIVO=@CONSECUTIVO AND IDDX IN ('U07.1','U07.2'))
				OR EXISTS (SELECT 1 FROM HCA WHERE CONSECUTIVO=@CONSECUTIVO AND IDDX IN ('U07.1','U07.2'))
				-- OR EXISTS (SELECT 1 FROM HCATD WHERE CONSECUTIVO=@CONSECUTIVO AND IDSERVICIO=DBO.FNK_VALORVARIABLE('SER_COVID'))
				OR EXISTS (SELECT 1 FROM HCATD WHERE CONSECUTIVO=@CONSECUTIVO AND IDSERVICIO IN (
					SELECT DBO.FNK_VALORVARIABLE('SER_COVID') UNION ALL
					SELECT IDSERVICIO FROM SER WHERE DESCSERVICIO LIKE '%COVID%' -- AND AMBITO='LX' -- OJO, EN EXPERTTA NO TIENEN CONFIGURADO LOS SERVICIOS DE LX
				))
				OR EXISTS(SELECT 1 FROM #HCA WHERE COALESCE(COVID,0)>0) -- EZERPA 29/01/2021 Caracterizaci√≥n de COVID >> 0: No Covid, 1: Automonitoreo, 2: Seguimiento Covid
			BEGIN
				SELECT @IDPLAN = IDPLAN FROM CIT WHERE CONSECUTIVO=@CONSECUTIVOCIT
				-- IF	@IDPLAN IN ('PAQ027','PAQ028','COVID','PAQ025') -- Solo se incluye en Seguimiento COVID cuando es TELECONSULTA AGUDO, CRONICO y COVID
				--	OR COALESCE(@IDPLAN_HADM,'') = 'COVID' SELECT * FROM HADM WHERE NOADMISION ='0100444180'
				--	OR @IDTERCERO IN ('20523470761','0100083637')

            IF @IDTERCERO = '20523470761' AND @IDPLAN IN ('PAQ027','PAQ028','COVID','PAQ025')			 --SANITAS
                  SELECT @PASASEGCOV = 1
            ELSE IF @IDTERCERO IN( '0100115315','0100083637') AND @IDPLAN IN ('PAQ028','COVID','PAQ025')  --RIMAC
                  SELECT @PASASEGCOV = 1
            ELSE IF COALESCE(@IDPLAN_HADM,'') = 'COVID'
                  SELECT @PASASEGCOV = 1

            IF @PASASEGCOV = 1
				BEGIN
				   IF NOT EXISTS(SELECT 1 FROM HCSEGD INNER JOIN HCSEG ON HCSEG.CNSHCSEG=HCSEGD.CNSHCSEG WHERE IDAFILIADO=@IDAFILIADO AND FECHA=CONVERT(DATE,GETDATE()))
				   BEGIN
					   IF DBO.FNK_VALORVARIABLE('AUT_SEGUIMIENTOS')='SI'
					   BEGIN
						   DECLARE @JSON_STR VARCHAR(MAX) = '{"MODELO":"HCSEGD","METODO":"GENERAR_SEGUIMIENTO","USUARIO":"'+@USUARIO+'","PARAMETROS":{"NOADMISION":"'+@NOADMISION+'","CONSECUTIVOHCA":"'+@CONSECUTIVO+'"}}'
						   EXEC SPQ_JSON @JSON_STR
						END
						ELSE 
						   EXEC SPK_HADMAUT_COVID @CONSECUTIVO --@CONSECUTIVOCIT
					END
				END
			END

			UPDATE CIT SET CUMPLIDA=1,FECHAATENCION = DBO.FNK_FECHA_SIN_MLS(DBO.FNK_GETDATE())
				--,IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')='' THEN IDPLAN ELSE @IDPLAN END
			WHERE CONSECUTIVO = @CONSECUTIVOCIT

       

			IF (SELECT PROCEDENCIA FROM CIT WHERE CONSECUTIVO = @CONSECUTIVOCIT) = 'OMT' AND DBO.FNK_VALORVARIABLE('IXCOUNTRY') = 'PERU'
			BEGIN
				UPDATE MED SET NO_CONSULTAS = 0 
				FROM MED INNER JOIN USUSU ON MED.IDMEDICO = USUSU.IDMEDICO
				WHERE USUARIO = @USUARIO
			END

         --AQUI SE DA DE ALTA MEDICA A LAS ADMISIONES QUE SE DEBEN CERRAR AUTOMATICAMENTE
         IF @IXCOUNTRY = 'PERU'
            IF (SELECT COALESCE(PLN.CIERRAAUT,0) FROM HADM INNER JOIN PLN ON HADM.IDPLAN = PLN.IDPLAN WHERE NOADMISION = @NOADMISION) = 1
               UPDATE HADM SET CERRADA = 2 WHERE NOADMISION = @NOADMISION AND CERRADA IN (0,4)

			IF @IXCOUNTRY <> 'PERU' AND DBO.FNK_VALORVARIABLE('CIT_CREA_HADM') = 'SI'
			BEGIN
				EXEC SPK_CIT_CREA_HADM @CONSECUTIVOCIT, @CONSECUTIVO, @USUARIO
			END
		END
 
		IF COALESCE(@CONSECUTIVOHCA,'') = ''-- EZERPA 27/06/2020 Para generar servicios autom√©dicos configurados en la plantilla
			EXEC SPK_HCASER_SERTOT @CONSECUTIVO, @NOADMISION, @CLASEPLANTILLA 


		-- Marcar cumplido el seguimiento 
		IF @ITEMHCSEGD IS NOT NULL
		BEGIN
			UPDATE HCSEGD SET FECHACUMPLIDA=GETDATE(), CONSECUTIVOHCA=@CONSECUTIVO 
			WHERE ITEM = @ITEMHCSEGD AND (COALESCE(CONSECUTIVOHCA,'')='' AND FECHACUMPLIDA IS NULL)
		END

		--Inserto en b√∫squeda activa --20220228 JLL
		IF @NECPAL = 1
		BEGIN
			INSERT INTO AFIBUSAC(IDAFILIADO, F_REG, CONSECUTIVO_HCA, CLASE, TIPO)
			SELECT @IDAFILIADO, CONVERT(SMALLDATETIME,GETDATE()), @CONSECUTIVO,'NECPAL','PROPIO' 
		END
		--Guardar Campos Permanentes:
		SELECT @HCADCP = HCADCP FROM #HCA
		--SELECT @HCADCP
		SELECT * INTO #HCADCP FROM OPENJSON(@HCADCP) 
		WITH ( 
			  TIPO_CAMPO	VARCHAR(99)		'$.TIPO_CAMPO' 
			 ,CAMPO			VARCHAR(99)		'$.CAMPO' 
			 ,NOMBRECAMPO	VARCHAR(99)		'$.NOMBRECAMPO' 
			 ,DESCCAMPO		VARCHAR(99)		'$.DESCCAMPO' 
			 ,VALOR			VARCHAR(2000)	'$.VALOR' 
			 ,FECHA			VARCHAR(20)		'$.FECHA' 
			 ,MEMO			VARCHAR(2000)	'$.MEMO' 
		)
		ALTER TABLE #HCADCP ADD ITEM INT IDENTITY

		DECLARE @I INT = 1, @I_TO INT, @CANT INT = 0
		SELECT @I_TO = (SELECT COUNT(1) FROM #HCADCP)
		
		WHILE @I <= @I_TO
		BEGIN
			SELECT @CANT = COUNT(*) FROM HCADCP H INNER JOIN #HCADCP T ON H.NOMBRECAMPO = T.NOMBRECAMPO AND H.CAMPO = T.CAMPO
								    WHERE T.ITEM = @I AND H.IDAFILIADO = @IDAFILIADO
			IF @CANT >0
			BEGIN
				UPDATE HCADCP 
				SET ALFANUMERICO = LEFT(T.VALOR,200)
				   ,FECHA = IIF(ISDATE(CONCAT(SUBSTRING(T.FECHA,1,4),'-',SUBSTRING(T.FECHA,9,2),'-',SUBSTRING(T.FECHA,6,2) ))= 1,CONCAT(SUBSTRING(T.FECHA,1,4),'-',SUBSTRING(T.FECHA,9,2),'-',SUBSTRING(T.FECHA,6,2) ), NULL)
				   ,MEMO = T.MEMO
				FROM HCADCP 
				INNER JOIN #HCADCP T ON HCADCP.NOMBRECAMPO = T.NOMBRECAMPO AND HCADCP.CAMPO = T.CAMPO
				WHERE T.ITEM = @I AND HCADCP.IDAFILIADO = @IDAFILIADO 
			END
			ELSE 
			BEGIN
				INSERT INTO HCADCP(IDAFILIADO, NOMBRECAMPO, CAMPO, ALFANUMERICO, FECHA, MEMO)
				SELECT @IDAFILIADO, NOMBRECAMPO,CAMPO, VALOR,
						IIF(ISDATE(CONCAT(SUBSTRING(FECHA,1,4),'-',SUBSTRING(FECHA,9,2),'-',SUBSTRING(FECHA,6,2) ))= 1,CONCAT(SUBSTRING(FECHA,1,4),'-',SUBSTRING(FECHA,9,2),'-',SUBSTRING(FECHA,6,2) ), NULL)
						,MEMO
				FROM #HCADCP WHERE ITEM = @I
			END

		    SELECT @I = @I + 1
		END
		SELECT @CONSECUTIVO AS CONSECUTIVO


      IF OBJECT_ID('tempdb..#HCATD') IS NOT NULL 
      BEGIN
         IF (SELECT COUNT(1)  FROM CROVIGD 
                  INNER JOIN CROVIGPER ON CROVIGD.IDCROVIG = CROVIGPER.IDCROVIG AND CROVIGPER.ANIO = YEAR(GETDATE()) AND CROVIGPER.MES = MONTH(GETDATE())
                  INNER JOIN SER ON CROVIGD.IDSERVICIO = SER.IDSERVICIO AND SER.PREFIJO = 005
               WHERE  CROVIGD.IDAFILIADO = @IDAFILIADO AND   convert(date,CROVIGD.FECHAMAX) <= GETDATE()
                  AND CROVIGD.CUMPLIDA = 0 AND CROVIGD.IDSERVICIO NOT IN (SELECT CROVIGD.IDSERVICIO FROM #HCATD)) >0  
         BEGIN
         UPDATE HCA SET PROTOCOLO = 'No' WHERE   CONSECUTIVO = @CONSECUTIVO
         END
      END
      IF OBJECT_ID('tempdb..#HCATD') IS NOT NULL 
      BEGIN
         IF OBJECT_ID('tempdb..#HCATD') IS NOT NULL  
         AND NOT EXISTS (SELECT * FROM HCA INNER JOIN PLN ON HCA.IDPLAN = PLN.IDPLAN WHERE HCA.CONSECUTIVO = @CONSECUTIVO AND PLN.HCSINCIT = 1 )
         AND EXISTS (SELECT  * FROM #HCATD INNER JOIN SER ON #HCATD.IDSERVICIO = SER.IDSERVICIO WHERE SER.PREFIJO = (SELECT DATO FROM USVGS WHERE IDVARIABLE = 'OMCODHOSPITALIZAR'))
         BEGIN
            INSERT INTO HADMHOSP ( NOADMISION, CONSECUTIVO_HCA, CONSECUTIVO_CIT, OBSERVACION, USUARIO_CREA, FECHA, ESTADO)
            SELECT @NOADMISION,@CONSECUTIVO,@CONSECUTIVOCIT,'',@USUARIO,GETDATE(),'Ingresado'
         END
      END
      

      IF (SELECT PROCEDENCIA FROM CIT WHERE CONSECUTIVO = @CONSECUTIVOCIT )  = 'TERAPIA'
      BEGIN
         UPDATE HCA SET FECHA = (SELECT FECHA FROM CIT WHERE CONSECUTIVO = @CONSECUTIVOCIT) WHERE CONSECUTIVO = @CONSECUTIVO
      END

      IF @ALTASLECCION = 1
      BEGIN
         UPDATE HADM SET DXEGRESO      = @DXPRINCIPAL
                        ,DXSALIDA1     = @DXSECUNDARIO
                        ,DXSALIDA2     = @EVOLUCION
                        ,DXSALIDA3     = @TIPOALTA
                        ,FECHAALTAMED  = @FECHAEGRESO
                        ,
                        IDMEDICOALTA  = @USUARIO
                        ,USUALTAMED    = @USUARIO
                        ,
                        CERRADA       = 2
                        WHERE HADM.NOADMISION =  @NOADMISIONALTA
                     
         UPDATE HCA SET ALTA = 1 WHERE CONSECUTIVO = @CONSECUTIVO

      END
      UPDATE HCA SET TIPOLLAMADA = @TIPOLLAMADA,MOTIVOLLAMADA = @MOTIVOLLAMADA WHERE CONSECUTIVO = @CONSECUTIVO
		RETURN
	END
	IF @METODO = 'ORDENES'
	BEGIN
		SELECT @NOADMISION=NOADMISION, @IDAFILIADO=IDAFILIADO
		FROM OPENJSON(@PARAMETROS) WITH (
			IDAFILIADO VARCHAR(20) '$.IDAFILIADO'
			,NOADMISION VARCHAR(20) '$.NOADMISION'
		)
		SELECT HCA.CONSECUTIVO,CONVERT(VARCHAR,FECHA,103) FECHA, MPL.DESCPLANTILLA, MED.NOMBRE PROFESIONAL
		FROM HCA INNER JOIN MPL ON MPL.CLASEPLANTILLA=HCA.CLASEPLANTILLA
		INNER JOIN MED ON MED.IDMEDICO=HCA.IDMEDICO
		WHERE (IDAFILIADO=@IDAFILIADO OR NOADMISION=@NOADMISION)
		AND CONSECUTIVO IN (SELECT DISTINCT CONSECUTIVO FROM HCATD)
		ORDER BY HCA.FECHA DESC

		RETURN
	END
	IF @METODO = 'IMPRESIONMASIVA'
	BEGIN
		SELECT @CLASE=CLASE, @IDAFILIADO=IDAFILIADO, @CODOMS = CODOMS,@DESCRIPCION=CNSHCAS
		FROM OPENJSON(@PARAMETROS) WITH (
				IDAFILIADO    VARCHAR(20)  '$.IDAFILIADO'
			,CLASE         VARCHAR(10)  '$.CLASE'
			,CODOMS        VARCHAR(150) '$.CODOMS'
			,CNSHCAS       VARCHAR(500) '$.CNSHCAS'
		)
		SELECT TOP 1 @NOADMISION = NOADMISION  FROM HADM WHERE IDAFILIADO = @IDAFILIADO
		IF @CLASE = 'CODOMS' -- Consulta los CODOM e HC
			BEGIN 
			SELECT DISTINCT(HCATD.CODOM), HCCOM.DESCRIPCION
					,HCA.CONSECUTIVO --, HCA.CLASEPLANTILLA, HCA.FECHA
						FROM HCATD 
						INNER JOIN HCCOM ON HCATD.CODOM     =  HCCOM.CODOM
						INNER JOIN HCA   ON HCA.CONSECUTIVO =  HCATD.CONSECUTIVO  
						WHERE IDAFILIADO = @IDAFILIADO
						ORDER BY (CONSECUTIVO)

			SELECT HCA.CONSECUTIVO,HCA.FECHA,MPL.DESCPLANTILLA, MED.NOMBRE MEDICO, HCA.NOADMISION FROM HCA
					INNER JOIN MPL ON MPL.CLASEPLANTILLA=HCA.CLASEPLANTILLA 
					INNER JOIN MED ON MED.IDMEDICO=HCA.IDMEDICO
					WHERE 1=1 AND COALESCE(ANULADA,0)=0 AND IDAFILIADO=@IDAFILIADO
					ORDER BY HCA.FECHA DESC

			--     Datos de la admisi√≥n
			SELECT HADM.NOADMISION, AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.SEXO, AFI.FNACIMIENTO, AFI.DIRECCION,
				AFI.ZONA, CIU.NOMBRE DESCCIUDAD,TGEN1.DESCRIPCION CORREGIMIENTO, OCU.DESCRIPCION OCUPACION,
				TER.RAZONSOCIAL CONTRATANTE, HADM.IDPLAN, PLN.TIPOSISTEMA REGIMEN, AFI.TELEFONORES,AFI.CIUDAD,
				CASE AFI.TIPOAFILIADO WHEN 'B' THEN 'Beneficiario' WHEN 'C' THEN 'Cotizante' END [TIPOVINCULACION],
				HADM.NOAUTORIZACION, CONVERT(VARCHAR,HADM.FECHA,103) FECHAINGRESO, HHAB.DESCRIPCION UBICACION, VIAING.DESCRIPCION AS VIAINGRESO, CAUEX.DESCRIPCION AS CAUSAEXTERNA, MED.NOMBRE  [MEDICOINGRESO],
				MEDT.NOMBRE  [MEDICOTRATANTE], HADM.DXINGRESO, MDX.DESCRIPCION [DIAGNOSTICO],
				HADM.NOMBRERESPO, HADM.PARENTESCORESPO, HADM.TELEFONORESPO,
				HADM.URG_VINCULO, HADM.URG_NOMBRE, HADM.URG_DIR, HADM.URG_TELE,
				FECHAALTA = CONVERT(VARCHAR,HADM.FECHAALTA,103)+' '+CONVERT(VARCHAR,HADM.FECHAALTA,108), 
				TELEFONO=DBO.FNK_PrimerMovilTercero(AFI.IDAFILIADO), AFI.EDAD, AFI.CELULAR
				,floor((cast(convert(varchar(8),DBO.FNK_FECHA_SIN_MLS(DBO.FNK_getdate()),112) as int)-cast(convert(varchar(8),AFI.FNACIMIENTO,112) as int) ) / 10000) as EDAD_LIMPIA
				,AFI.NOMBREAFI
				, STUFF((SELECT DISTINCT ', '+DX FROM DBO.VWK_HCA_DX WHERE NOADMISION=HADM.NOADMISION FOR XML PATH('')),1,1,'') DIAGNOSTICOS
				, PLN.DESCPLAN
				, AFI.IDAFILIADO
				, AFI.PLANSALUD
		FROM   HADM INNER JOIN AFI      ON HADM.IDAFILIADO = AFI.IDAFILIADO
					LEFT JOIN CIU      ON AFI.CIUDAD      = CIU.CIUDAD
					LEFT JOIN (SELECT CODIGO, DESCRIPCION FROM TGEN WHERE TABLA = 'CORREGIMIENTOS')TGEN1
										ON TGEN1.CODIGO  = AFI.CORREGIMIENTO
					LEFT JOIN (SELECT CODIGO, DESCRIPCION FROM TGEN WHERE TABLA ='General' AND CAMPO = 'CAUSAEXTERNA')CAUEX
										ON CAUEX.CODIGO = HADM.CAUSAEXTERNA
					LEFT JOIN (SELECT CODIGO, DESCRIPCION FROM TGEN WHERE TABLA ='General' AND CAMPO = 'VIADEINGRESO')VIAING
										ON VIAING.CODIGO = HADM.VIAINGRESO
					LEFT JOIN OCU      ON AFI.IDOCUPACION = OCU.OCUPACION
					LEFT JOIN HHAB     ON HADM.HABCAMA   = HHAB.HABCAMA
					LEFT JOIN TER      ON  HADM.IDTERCERO = TER.IDTERCERO
					LEFT JOIN PLN      ON  HADM.IDPLAN    = PLN.IDPLAN
					LEFT JOIN MED      ON HADM.IDMEDICOING = MED.IDMEDICO
					LEFT JOIN MED MEDT ON HADM.IDMEDICOING = MED.IDMEDICO
					LEFT JOIN MDX      ON HADM.DXINGRESO   = MDX.IDDX
                   
		WHERE EXISTS ( SELECT * FROM (
                                       SELECT DISTINCT HCA.NOADMISION 
                                       FROM   HCA INNER JOIN MPL ON MPL.CLASEPLANTILLA=HCA.CLASEPLANTILLA 
					                                    INNER JOIN MED ON MED.IDMEDICO=HCA.IDMEDICO
					                        WHERE  1=1 
                                       AND   COALESCE(ANULADA,0)=0 
                                       AND   IDAFILIADO=@IDAFILIADO 
                                   ) X
                      WHERE  X.NOADMISION = HADM.NOADMISION
                     
                   )
      
    --  WHERE HADM.NOADMISION = @NOADMISION
    --DATOS DEL AFILIADO
    SELECT '' NOADMISION, AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.SEXO, AFI.FNACIMIENTO, AFI.DIRECCION,
				AFI.ZONA, CIU.NOMBRE DESCCIUDAD,TGEN1.DESCRIPCION CORREGIMIENTO, OCU.DESCRIPCION OCUPACION,
				'' CONTRATANTE, '' IDPLAN, '' REGIMEN, AFI.TELEFONORES,AFI.CIUDAD,
				CASE AFI.TIPOAFILIADO WHEN 'B' THEN 'Beneficiario' WHEN 'C' THEN 'Cotizante' END [TIPOVINCULACION],
				'' NOAUTORIZACION, '' FECHAINGRESO, '' UBICACION, '' AS VIAINGRESO, '' CAUSAEXTERNA, ''  [MEDICOINGRESO],
				''  [MEDICOTRATANTE], '' DXINGRESO, '' [DIAGNOSTICO],
				'' NOMBRERESPO, '' PARENTESCORESPO, '' TELEFONORESPO,
				'' URG_VINCULO, '' URG_NOMBRE, '' URG_DIR, '' URG_TELE,
				FECHAALTA = '', 
				TELEFONO=DBO.FNK_PrimerMovilTercero(AFI.IDAFILIADO), AFI.EDAD, AFI.CELULAR
				,floor((cast(convert(varchar(8),DBO.FNK_FECHA_SIN_MLS(DBO.FNK_getdate()),112) as int)-cast(convert(varchar(8),AFI.FNACIMIENTO,112) as int) ) / 10000) as EDAD_LIMPIA
				,AFI.NOMBREAFI
				, '' DIAGNOSTICOS
				, '' DESCPLAN
				, AFI.IDAFILIADO
				, AFI.PLANSALUD
		FROM   AFI LEFT JOIN CIU      ON AFI.CIUDAD      = CIU.CIUDAD
					LEFT JOIN (SELECT CODIGO, DESCRIPCION FROM TGEN WHERE TABLA = 'CORREGIMIENTOS')TGEN1
										ON TGEN1.CODIGO  = AFI.CORREGIMIENTO
					LEFT JOIN OCU      ON AFI.IDOCUPACION = OCU.OCUPACION
               WHERE AFI.IDAFILIADO = @IDAFILIADO


	END
	END
	IF @METODO = 'VALIDA_ATENCION'
	BEGIN
		DECLARE @EDITANDO VARCHAR(2)
		DECLARE @INICIAL VARCHAR(1)

		SELECT @FECHA_1 = FECHA
			  ,@HORA_1 = HORA
			  ,@IDAFILIADO = IDAFILIADO
			  ,@IDMEDICO = IDMEDICO
			  ,@CLASEPLANTILLA = CLASEPLANTILLA
			  ,@EDITANDO = EDITANDO
			  ,@CONSECUTIVOHCA = CONSECUTIVOHCA
			FROM OPENJSON(@PARAMETROS) WITH (
					 IDAFILIADO     VARCHAR(20)	'$.IDAFILIADO'
					,FECHA			VARCHAR(20) '$.FECHA'
					,HORA			VARCHAR(10) '$.HORA'
					,IDMEDICO		VARCHAR(20) '$.IDMEDICO'
					,CLASEPLANTILLA	VARCHAR(20) '$.CLASEPLANTILLA'
					,EDITANDO	    VARCHAR(2)  '$.EDITANDO'
					,CONSECUTIVOHCA	VARCHAR(20)  '$.CONSECUTIVOHCA'
			)
		SELECT @FECHAHCA = CONVERT(DATETIME, CONCAT(SUBSTRING(@FECHA_1,1,4),'-',SUBSTRING(@FECHA_1,9,2),'-',SUBSTRING(@FECHA_1,6,2),' ', @HORA_1))

		DECLARE @CANT_CIT INT = 0, @CANT_HCA INT =0
		
		IF DBO.FNK_VALORVARIABLE('HC_INGRESO_OBLIGA')='SI'
		BEGIN
			SELECT @INICIAL=COALESCE(TIPOESP,'') FROM MPL WHERE CLASEPLANTILLA=@CLASEPLANTILLA

			IF (SELECT COUNT(1) FROM HCA 
				INNER JOIN MPL ON MPL.CLASEPLANTILLA=HCA.CLASEPLANTILLA AND MPL.TIPOESP='I'
				WHERE IDAFILIADO=@IDAFILIADO AND FECHA<@FECHAHCA AND @INICIAL<>'I'
				)=0 AND @INICIAL<>'I'
			BEGIN
				SELECT 'KO'OK
				SELECT 'No puede diligenciar esta plantilla, primero debe realizar la Historia Inicial.'ERROR
			END
			ELSE
			BEGIN
				SELECT 'OK'OK
			END

			RETURN
		END

		SELECT @CANT_CIT = COUNT(*) 
		FROM CIT 
		WHERE IDAFILIADO = @IDAFILIADO 
		AND IDMEDICO = @IDMEDICO
		AND CONVERT(DATE,CIT.FECHA) = CONVERT(DATE,@FECHAHCA) 

		SELECT @CANT_HCA = COUNT(*) 
		FROM HCA
		WHERE IDAFILIADO = @IDAFILIADO 
		AND IDMEDICO = @IDMEDICO
		AND CONVERT(DATE,HCA.FECHA) = CONVERT(DATE,@FECHAHCA) 
		AND CLASEPLANTILLA = @CLASEPLANTILLA

		IF @EDITANDO = 'NO'
		BEGIN
			IF (@CANT_HCA >= @CANT_CIT)
			BEGIN
				BEGIN
					SELECT 'KO'OK
					SELECT 'No puede diligenciar esta plantilla porque el paciente no tiene citas disponibles.'ERROR
				END
			END
			ELSE
				SELECT 'OK'OK
				RETURN
		END

		IF @EDITANDO = 'SI'
		BEGIN
			SELECT @CANT_HCA = COUNT(*) 
			FROM HCA
			WHERE IDAFILIADO = @IDAFILIADO 
			AND IDMEDICO = @IDMEDICO
			AND CONVERT(DATE,HCA.FECHA) = CONVERT(DATE,@FECHAHCA) 
			AND CLASEPLANTILLA = @CLASEPLANTILLA AND HCA.CONSECUTIVO <> @CONSECUTIVOHCA

			IF @CANT_CIT > @CANT_HCA
			BEGIN
				SELECT 'OK'OK
				RETURN
			END
			ELSE
			BEGIN
				SELECT 'KO'OK
				SELECT 'No se puede guardar en la fecha selecionada. No hay cita disponible para guardar esta historia cl√≠nica.'ERROR
			END
		END
	END
	IF @METODO = 'VALIDA_PROTOCOLO'
	BEGIN
		SELECT @DATOS = DATOS, @IDAFILIADO = IDAFILIADO, @NOADMISION = NOADMISION, @PROCEDENCIA = PROCEDENCIA FROM OPENJSON(@PARAMETROS) 
		WITH  (DATOS NVARCHAR(MAX) AS JSON,
				IDAFILIADO VARCHAR(20)   '$.IDAFILIADO',
            NOADMISION VARCHAR(16)   '$.NOADMISION',
            PROCEDENCIA VARCHAR(100)   '$.PROCEDENCIA')

		SELECT    @IDSERVICIO          =   IDSERVICIO,
				   @CANTIDAD            =   CANTIDAD,
				   @DESCSERVICIO        =   DESCSERVICIO  
		FROM OPENJSON(@DATOS) 
		WITH (	
			IDSERVICIO              VARCHAR(30)   '$.IDSERVICIO' ,
			CANTIDAD                DECIMAL(14,2)   '$.CANTIDAD' , 
			DESCSERVICIO            VARCHAR(100)  '$.DESCSERVICIO'  )

		SELECT * INTO #SERVICIOS FROM OPENJSON(@DATOS)  WITH (	
			IDSERVICIO           VARCHAR(30)    '$.IDSERVICIO' ,
			CANTIDAD             DECIMAL(14,2)    '$.CANTIDAD' , 
			DESCSERVICIO         VARCHAR(100)   '$.DESCSERVICIO'  )

		--INSERT
		--SELECT * FROM #SERVICIOS
      IF @PROCEDENCIA = 'cit'
      BEGIN
         SELECT @IDPLAN = (SELECT IDPLAN FROM CIT WHERE  CONSECUTIVO = @NOADMISION)
         SELECT @NOADMISION = (SELECT NOADMISION FROM CIT WHERE  CONSECUTIVO = @NOADMISION)
      END
      IF @PROCEDENCIA = 'hadm'
      BEGIN
         SELECT @IDPLAN = (SELECT IDPLAN FROM HADM WHERE  NOADMISION = @NOADMISION)
      END
		
		IF (SELECT COUNT(1)  FROM CROVIGD 
			INNER JOIN CROVIGPER ON CROVIGD.IDCROVIG = CROVIGPER.IDCROVIG AND CROVIGPER.ANIO = YEAR(GETDATE()) AND CROVIGPER.MES = MONTH(GETDATE())
			INNER JOIN SER ON CROVIGD.IDSERVICIO = SER.IDSERVICIO AND SER.PREFIJO = '005'
			WHERE  CROVIGD.IDAFILIADO = @IDAFILIADO AND   convert(date,CROVIGD.FECHAMAX) <= GETDATE()
			AND CROVIGD.CUMPLIDA = 0 AND CROVIGD.IDSERVICIO NOT IN (SELECT #SERVICIOS.IDSERVICIO FROM #SERVICIOS)) >0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'el paciente tiene Protocolos pendientes por realizar.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
         
		END
		BEGIN TRY
         IF EXISTS (SELECT  * FROM #SERVICIOS INNER JOIN SER ON #SERVICIOS.IDSERVICIO = SER.IDSERVICIO WHERE SER.PREFIJO = (SELECT DATO FROM USVGS WHERE IDVARIABLE = 'OMCODHOSPITALIZAR'))
            AND NOT EXISTS (SELECT * FROM PLN WHERE  HCSINCIT = 1 AND IDPLAN = @IDPLAN)
         BEGIN
            SELECT 'OK' OK, 'SI_HOSP' HOSP
         END
         ELSE 
         BEGIN
            SELECT 'OK' OK, 'NO_HOSP' HOSP
         END

			SELECT 'OK' OK,CROVIGD.IDAFILIADO, CROVIGD.CUMPLIDA, CROVIGD.FECHACUMPLE, CONVERT(DATE, CROVIGD.FECHAMAX) FECHAMAX, CROVIGD.IDSERVICIO, SER.DESCSERVICIO FROM CROVIGD 
				INNER JOIN CROVIGPER ON CROVIGD.IDCROVIG = CROVIGPER.IDCROVIG AND CROVIGPER.ANIO = YEAR(GETDATE()) AND CROVIGPER.MES = MONTH(GETDATE())
				INNER JOIN SER ON CROVIGD.IDSERVICIO = SER.IDSERVICIO AND SER.PREFIJO = '005'
			WHERE  CROVIGD.IDAFILIADO = @IDAFILIADO AND   convert(date,CROVIGD.FECHAMAX) <= GETDATE()
				AND CROVIGD.CUMPLIDA = 0  AND CROVIGD.IDSERVICIO NOT IN (SELECT IDSERVICIO FROM #SERVICIOS)


		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
			SELECT 'OK' OK
		RETURN

	END
	IF @METODO = 'AGREGAR_ALTA'
	BEGIN
    SELECT @EVOLUCION    = EVOLUCION, @TIPOALTA = TIPOALTA, @DETRASLADO = DETRASLADO, @DONDETRASLADO = DONDETRASLADO, @FECHAEGRESO = FECHAEGRESO
         , @DXPRINCIPAL = DXPRINCIPAL, @DXSECUNDARIO = DXSECUNDARIO
      FROM OPENJSON(@PARAMETROS)WITH(
	   EVOLUCION         VARCHAR(20)       '$.EVOLUCION' ,
	   TIPOALTA          VARCHAR(20)       '$.TIPOALTA' ,
	   DETRASLADO        VARCHAR(100)       '$.DETRASLADO' , 
	   DONDETRASLADO     VARCHAR(100)       '$.DONDETRASLADO' ,
	   FECHAEGRESO       DATE              '$.FECHAEGRESO' ,
	   DXPRINCIPAL       VARCHAR(20)       '$.DXPRINCIPAL' ,
	   DXSECUNDARIO      VARCHAR(20)       '$.DXSECUNDARIO' 
      )
      

      IF (SELECT DBO.FNK_DESCIFRAR(USUSU.GRUPO) FROM USUSU WHERE  USUARIO = @USUARIO)  NOT IN ('PPAL')
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'No cuenta con los permisos para eliminar el registro.'
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      
      BEGIN TRY
            DELETE FROM ANEXO WHERE  ITEM = @ITEM
      END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN
   END
END