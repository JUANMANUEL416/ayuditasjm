CREATE OR ALTER PROCEDURE DBO.SPQ_FCXC_COL @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
SET DATEFORMAT dmy
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)			,@MODELO VARCHAR(100)			   ,@METODO VARCHAR(100)
		,@USUARIO VARCHAR(12)				   ,@COMPANIA VARCHAR(2)		      ,@IDSEDE      VARCHAR(5)		
      ,@SYS_COMPUTERNAME VARCHAR(200)     ,@DATOS    VARCHAR(MAX)
DECLARE @CNSENTREGA VARCHAR(20)           ,@PROCESO  VARCHAR(20)           ,@REQSEDE BIT
        ,@DEP_RECIBE VARCHAR(20)          ,@IDSEDEF  VARCHAR(5)            ,@N_FACTURA VARCHAR(20)
        ,@F_INICIAL DATE                  ,@F_FINAL  DATE                  ,@IDTERCERO VARCHAR(20)
        ,@PROCEDENCIA VARCHAR(20)         ,@IDPLAN      VARCHAR(20)
        ,@MSEDE BIT                       ,@CNSCXC VARCHAR(20)             ,@OBSERVACION VARCHAR(2048)
        ,@COORFACTURACION VARCHAR(20)     ,@COORCARTERA VARCHAR(20)        ,@PIDEADICION VARCHAR(20)
        ,@MODALIDAD VARCHAR(20)          ,@ATENCION VARCHAR(20)           ,@MES      VARCHAR(20)
        ,@ANO      VARCHAR(20)           ,@REGIMEN  VARCHAR(20)           ,@VALORCXC  DECIMAL(14,2)
        ,@FECHARAD DATE                  ,@QRECIBE VARCHAR(50)            ,@NRORADICA VARCHAR(20)
        ,@NROGUIA   VARCHAR(20)          ,@CNSRPDX  VARCHAR(20)           ,@VLLETRAS VARCHAR(1024)
        ,@NROLETRAS SMALLINT
BEGIN
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			MODELO VARCHAR(100) '$.MODELO'
			,METODO VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
	)

	SELECT   @MODELO = MODELO			,@METODO = METODO
			,@PARAMETROS = PARAMETROS	,@USUARIO = USUARIO
	FROM #JSON

   IF @METODO='TRAER_DEF'     
   BEGIN         
      SELECT @OBSERVACION=OBSERVACION FROM USVGS WHERE IDVARIABLE='FCXC_OBSERVACION_DEF'
      SELECT 'OK'OK ,@OBSERVACION AS OBSERVACION
      RETURN
   END   
   IF @METODO='TRAER_TTEC'     
   BEGIN           
      SELECT 'OK'OK 
      SELECT TIPO value,DETALLE label FROM TTEC
      RETURN
   END 
   IF @METODO='CRUD_FCXC'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         DATOS NVARCHAR(MAX) AS JSON 
            )           
         
         SELECT @CNSCXC=CNSCXC,@IDTERCERO=IDTERCERO,@OBSERVACION=OBSERVACION,@MSEDE=CONVERT(INT,REQSEDE),@IDSEDEF=IDSEDEF,@MODALIDAD=MODALIDAD,
                @ATENCION=ATENCION,@MES=CONVERT(INT,MES),@ANO=ANO,@REGIMEN=REGIMEN
         FROM   OPENJSON (@DATOS)
         WITH   (  
         CNSCXC VARCHAR(20)       '$.CNSCXC',
         IDTERCERO VARCHAR(20)    '$.IDTERCERO',
         OBSERVACION VARCHAR(512) '$.OBSERVACION',
         REQSEDE     BIT          '$.REQSEDE',
         IDSEDEF     VARCHAR(6)   '$.IDSEDE',
         MODALIDAD   VARCHAR(20)  '$.MODALIDAD',
         ATENCION   VARCHAR(20)   '$.ATENCION',
         MES         VARCHAR(20)  '$.MES',
         ANO         VARCHAR(20)  '$.ANO',
         REGIMEN     VARCHAR(20)  '$.REGIMEN'
         ) 
       IF COALESCE(@CNSCXC,'')=''
       BEGIN
          IF DBO.FNK_VALORVARIABLE('USUARIOJEFECARTERA')=''
         BEGIN
            SELECT 'KO' KO, 'Debe llenar la variable USUARIOJEFECARTERA con el usuario del jefe de Cartera, Verifique e Intente de nuevo' ERROR
            RETURN
         END
         IF NOT EXISTS(SELECT * FROM USUSU WHERE USUARIO=RTRIM(RTRIM(DBO.FNK_VALORVARIABLE('USUARIOJEFECARTERA'))))
         BEGIN
            SELECT 'KO' KO, 'El dato de la Variable USUARIOJEFECARTERA no es Valido, Valide e Intente de nuevo ' ERROR
            RETURN
         END
         IF DBO.FNK_VALORVARIABLE('USUARIOJEFEFACTURA')=''
         BEGIN
            SELECT 'KO' KO,'Debe llenar la variable USUARIOJEFEFACTURA con el usuario del jefe de Cartera, Verifique e Intente de nuevo' ERROR
            RETURN
         END
         IF NOT EXISTS(SELECT * FROM USUSU WHERE USUARIO=RTRIM(RTRIM(DBO.FNK_VALORVARIABLE('USUARIOJEFEFACTURA'))))
         BEGIN
            SELECT 'KO' KO, 'El dato de la Variable USUARIOJEFEFACTURA no es Valido, Valide e Intente de nuevo ' ERROR
            RETURN
         END
         PRINT 'Creando la CXC'

         SELECT @IDSEDE= COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=UBEQ.COMPANIA FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
         WHERE USUARIO=@USUARIO
         SELECT @OBSERVACION=LTRIM(RTRIM(OBSERVACION)) FROM USVGS WHERE IDVARIABLE='FCXC_OBSERVACION_DEF'
         SELECT @COORFACTURACION= DBO.FNK_VALORVARIABLE('USUARIOJEFEFACTURA'),@COORCARTERA=DBO.FNK_VALORVARIABLE('USUARIOJEFECARTERA')
         SELECT TOP 1 @IDTERCERO=FTR.IDTERCERO FROM FTR INNER JOIN ENTD ON FTR.N_FACTURA=ENTD.NODOCUMENTO
         WHERE ENTD.CNSENTREGA=@CNSENTREGA
         IF @MSEDE=1 AND COALESCE(@IDSEDEF,'')<>''
         BEGIN
            SELECT @IDSEDE=@IDSEDEF
         END
         IF EXISTS(SELECT * FROM FCXC WHERE IDTERCERO=@IDTERCERO AND CERRADA=0 AND INDRECIBIDO=0 AND IDSEDE=@IDSEDE AND USUARIO=@USUARIO 
                   AND COALESCE(CONTABILIZADA,0) = 0 AND COALESCE(VALORCXC,0) = 0) -- STORRES Valida si no esta contabilizada y valor de la CXC deve ser cero
         BEGIN 
            SELECT 'KO' KO, 'Existe una CXC para este Tercero, Esta Sede y Este usuario, Es necesario Definir la Anterior , Valide e Intente de nuevo ' ERROR
            RETURN
         END
         BEGIN TRY
            PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE='+COALESCE(@IDSEDE,'SIN SEDE')  +COALESCE(@COMPANIA,'CIA') 
            SELECT @CNSCXC=''
		      EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@CXC', @CNSCXC OUTPUT  
            PRINT '@CNSCXC='+COALESCE(@CNSCXC,'')   
		      SELECT @CNSCXC = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSCXC))+LTRIM(RTRIM(@CNSCXC)),SPACE(1),0)
		      PRINT '@CNSCXC='+COALESCE(@CNSCXC,'')                    
         END TRY
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            SELECT ERROR AS ERROR FROM  @TBLERRORES 
            RETURN
         END CATCH

         BEGIN TRY
            INSERT INTO FCXC(CNSCXC, FECHACXC, IDTERCERO, IDMENSAJERO, F_VENCE, INDRECIBIDO, F_RECIBIDO, QUIENRECIBIO, NOREFERENCIAEXT, USUARIO, COMPANIA, VALORDEVUELTO, CERRADA, TIENEGLOSAS, TIENEDEVOLUCION, CNSANT, 
                              ANTIGUA, VALORCXC, DEDUCCIONES, VALORCXCNETO, VLRPAGOS, VLRNOTADB, VLRNOTACR, SALDO, SALDONETO, VLRGLOSAS, VLRGLOSAS_R, VLREXTRA, OBSERVACION, NROCOMPROBANTE, PROCEDENCIA, 
                              ENPRESUPUESTO, MARCAFAC, ITFC, CNSITFC, CONTABILIZADA, OBSCARTA, IDSEDE, MODALIDAD, ATENCION, MES, ANO, REGIMEN, NROGUIA, USUCIERRA, F_CIERRA, ESTADO, COORFACTURACION, COORCARTERA, 
                              NOPOS, FRADICAEPS, FENVIO, SUCURSAL, MSEDE)
            SELECT @CNSCXC, DBO.FNK_GETDATE(), @IDTERCERO, NULL, NULL, 0, NULL, NULL, NULL, @USUARIO,@COMPANIA, 0, 0, 0, 0, NULL,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,@OBSERVACION, NULL, 'CARTERA', 
            0, 0, 0, NULL, 0, NULL, @IDSEDE, @MODALIDAD, @ATENCION, @MES, @ANO, @REGIMEN, NULL, NULL, NULL, 'Activa',@COORFACTURACION,@COORCARTERA,0, NULL, NULL, NULL, @MSEDE                    
            END TRY
         BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
               SELECT ERROR AS ERROR FROM  @TBLERRORES 
               RETURN
         END CATCH
         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK, ERROR FROM @TBLERRORES
            RETURN
         END
         SELECT 'OK' OK,@CNSCXC CNSCXC
         RETURN 
      END
      ELSE
      BEGIN
         PRINT 'VOY A ACTUALIZAR'
         DECLARE @IDTERCEROA VARCHAR(20)
         SELECT @IDTERCEROA=IDTERCERO FROM FCXC WHERE CNSCXC=@CNSCXC
         IF @IDTERCEROA<>@IDTERCERO AND EXISTS(SELECT * FROM FCXCD WHERE CNSCXC=@CNSCXC)
         BEGIN
            SELECT 'KO' KO,'Cuenta de Cobro con Detalle, No se puede Actualizar el Responsable de Pago' ERROR
            RETURN
         END
         IF EXISTS(SELECT * FROM FCXC WHERE CNSCXC=@CNSCXC AND INDRECIBIDO=1)
         BEGIN
            SELECT 'KO' KO,'Cuenta de Cobro Radicada, No se pueden Realizar Cambios' ERROR
            RETURN
         END
      END   
      PRINT 'Pase las Validaciones'
      BEGIN TRY           
          UPDATE FCXC SET IDTERCERO=@IDTERCERO,OBSERVACION=@OBSERVACION,MODALIDAD=@MODALIDAD,ATENCION=@ATENCION,
                          ANO=@ANO,MES=@MES,REGIMEN=@REGIMEN
          WHERE CNSCXC=@CNSCXC
      END TRY
      BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK,@CNSCXC CNSCXC
      RETURN 
   END
   IF @METODO='MARCAR_FACT'
   BEGIN 
      SELECT @N_FACTURA=N_FACTURA
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         N_FACTURA VARCHAR(20)  '$.N_FACTURA'
      ) 
      IF COALESCE(@N_FACTURA,'')<>''
      BEGIN
         SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME()) FROM USUSU WHERE USUARIO=@USUARIO
         BEGIN TRY
            UPDATE FTR SET MARCA=CASE COALESCE(MARCA,0) WHEN 1 THEN 0 ELSE 1 END,EQUIMARCA=CASE COALESCE(MARCA,0) WHEN 1 THEN '' ELSE @SYS_COMPUTERNAME END  WHERE N_FACTURA=@N_FACTURA        
         END TRY
         BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'Documento No Encontrado' 
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
    END  

   IF @METODO='ASIGNAR_FACT'
   BEGIN 
      SELECT @CNSCXC=CNSCXC
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         CNSCXC VARCHAR(20) '$.CNSCXC'
      ) 
      PRINT 'Cuenta de Cobro='+COALESCE(@CNSCXC,'SIN CXC')
      IF COALESCE(@CNSCXC,'')<>''
      BEGIN
         IF EXISTS(SELECT * FROM FCXC WHERE CNSCXC=@CNSCXC AND CERRADA=0 AND INDRECIBIDO= 0) -- STORRES SE QUITA VALIDACIONES DE MAS
         BEGIN
            PRINT 'VOY A INSERTAR'
            SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME()),@COMPANIA=COALESCE(COMPANIA,'01') FROM USUSU WHERE USUARIO=@USUARIO
            BEGIN TRY           
               INSERT INTO FCXCD(CNSCXC, N_FACTURA, USUARIO, COMPANIA, VALORFACTURA, DEDUCCIONES, VALORFACTURANETO, VLRPAGOS, VLRNOTADB, VLRNOTACR, 
                                 SALDO, SALDONETO, CERRADA, TIENEGLOSAS, TIENEDEVOLUCION, MARCAPAGO,  NT_MARCAP, VLRGLOSAS, VLRGLOSAS_R, VLREXTRA, 
                                 NROCOMPROBANTE, CUENTA, DESCRIPCION, NOREFERENCIAEXT, ENCOBROJUR, IDPLAN, ITFC, CNSITFC, VLRFCES, VLRLEVANTADO, 
                                 MARCA, USURESP, RESPUESTA,  RAZONDEVOL)
               SELECT @CNSCXC, N_FACTURA, @USUARIO, @COMPANIA, VR_TOTAL, 0, VR_TOTAL, 0, 0, 0, VR_TOTAL, VR_TOTAL,
                        0, 0, 0, 0,  NULL, 0, 0, 0, NULL, CUENTACXC,'Traida desde Quasar', null, 0, IDPLAN, 0, NULL, 0, 0, 0, NULL, NULL,  NULL
               FROM FTR
               WHERE MARCA=1
               AND COALESCE(EQUIMARCA,'')=@SYS_COMPUTERNAME
               AND FTR.ESTADO='P' 
               AND COALESCE(CLASEANULACION,'')<>'NC' 
               AND COALESCE(VR_TOTAL,0)>0 
               AND COALESCE(CONTABILIZADA,0)<>0
               AND NOT EXISTS(SELECT * FROM FCXCD WHERE FCXCD.N_FACTURA=FTR.N_FACTURA)
               AND COALESCE(INDCARTERA,0)=1 
               AND INDCXC=0 
               AND INDASIGCXC=0  
               AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPCARTERA')  
               
               UPDATE FTR SET MARCA=0, EQUIMARCA=NULL,INDASIGCXC=1,INDCXC=1
               FROM FTR INNER JOIN FCXCD ON FTR.N_FACTURA=FCXCD.N_FACTURA
               WHERE FTR.MARCA=1 AND EQUIMARCA=@SYS_COMPUTERNAME
               AND FCXCD.CNSCXC=@CNSCXC

               EXEC SPK_RELIQUIDACXCQX @CNSCXC 
         
            END TRY
            BEGIN CATCH
                  INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
         END
         ELSE
         BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'Facturas no Agregadas a la Cuenta de Cobro, Valide e intente de nuevo'
         END
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'Cuenta de Cobro Cerrada  o Presenta inconsistencias en su Creacion, Valide e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      PRINT 'ACTUALIZO VALORES'
      EXEC SPK_RELIQUIDACXCQX @CNSCXC
      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='MARCAR_TODAS'
   BEGIN 
      SELECT @DATOS=DATOS
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         DATOS NVARCHAR(MAX) AS JSON
      ) 
      SELECT @F_INICIAL=F_INICIAL,@F_FINAL=DATEADD(DAY,1,F_FINAL),@IDTERCERO=IDTERCERO, @PROCEDENCIA=PROCEDENCIA,
      @IDSEDEF=IDSEDEF,@IDPLAN=IDPLAN,@CNSENTREGA=CNSENTREGA
      FROM   OPENJSON (@DATOS)
      WITH   (
      F_INICIAL DATE         '$.F_INICIAL',
      F_FINAL   DATE         '$.F_FINAL',
      IDTERCERO VARCHAR(20)  '$.IDTERCERO',
      PROCEDENCIA VARCHAR(20) '$.PROCEDENCIA',
      IDSEDEF     VARCHAR(5)  '$.IDSEDE',
      IDPLAN      VARCHAR(6)  '$.IDPLAN',
      CNSENTREGA  VARCHAR(20)  '$.CNSENTREGA'
      )
      SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME()) FROM USUSU WHERE USUARIO=@USUARIO
      UPDATE FTR SET MARCA=1, EQUIMARCA=@SYS_COMPUTERNAME 
      WHERE MARCA=0 
      AND COALESCE(EQUIMARCA,'')=''
      AND F_FACTURA>=@F_INICIAL
      AND F_FACTURA<@F_FINAL
      AND IDTERCERO=CASE WHEN COALESCE(@IDTERCERO,'')<>'' THEN @IDTERCERO ELSE IDTERCERO END
      AND IDPLAN=CASE WHEN COALESCE(@IDPLAN,'')<>'' THEN @IDPLAN ELSE IDPLAN END
      AND IDSEDE=CASE WHEN COALESCE(@IDSEDEF,'Todas')<>'Todas' THEN @IDSEDEF ELSE IDSEDE END
      AND PROCEDENCIA=CASE WHEN COALESCE(@PROCEDENCIA,'Todas')<>'Todas' THEN @PROCEDENCIA ELSE PROCEDENCIA END
      AND FTR.ESTADO='P' 
      AND COALESCE(CLASEANULACION,'')<>'NC' 
      AND COALESCE(VR_TOTAL,0)>0 
      AND COALESCE(CONTABILIZADA,0)<>0
      AND NOT EXISTS(SELECT * FROM FCXCD WHERE FCXCD.N_FACTURA=FTR.N_FACTURA)
      AND COALESCE(INDCARTERA,0)=1 
      AND INDCXC=0 
      AND INDASIGCXC=0  
      AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPCARTERA') 
      AND 1=CASE WHEN COALESCE(@CNSENTREGA,'')<>'' THEN CASE WHEN  EXISTS(SELECT * FROM ENTD WHERE  FTR.N_FACTURA=ENTD.NODOCUMENTO AND PROCESO='FACTURAS' AND COALESCE(ENDEVO,0)<>1  AND ENTD.CNSENTREGA=@CNSENTREGA)  THEN 1 ELSE 0 END ELSE 1 END

      SELECT 'OK' OK
      RETURN 
   END 
   IF @METODO='LIMPIAR_FACT'
   BEGIN 
      
      SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME()) FROM USUSU WHERE USUARIO=@USUARIO

      UPDATE FTR SET MARCA=0, EQUIMARCA=NULL WHERE MARCA=1 AND EQUIMARCA=@SYS_COMPUTERNAME 
      AND FTR.ESTADO='P' 
      AND COALESCE(CLASEANULACION,'')<>'NC' 
      AND COALESCE(VR_TOTAL,0)>0 
      AND COALESCE(CONTABILIZADA,0)<>0
      AND NOT EXISTS(SELECT * FROM FCXCD WHERE FCXCD.N_FACTURA=FTR.N_FACTURA)
      AND COALESCE(INDCARTERA,0)=1 
      AND INDCXC=0 
      AND INDASIGCXC=0  
      AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPCARTERA') 

      SELECT 'OK' OK, COALESCE(CONVERT(VARCHAR,MIN(F_FACTURA),103),CONVERT(VARCHAR,GETDATE(),103)) F_FACTURA FROM FTR 
      WHERE FTR.ESTADO='P' 
      AND COALESCE(CLASEANULACION,'')<>'NC' 
      AND COALESCE(VR_TOTAL,0)>0 
      AND COALESCE(CONTABILIZADA,0)<>0
      AND NOT EXISTS(SELECT * FROM FCXCD WHERE FCXCD.N_FACTURA=FTR.N_FACTURA)
      AND COALESCE(INDCARTERA,0)=1 
      AND INDCXC=0 
      AND INDASIGCXC=0  
      AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPCARTERA') 
      RETURN 
   END  
   IF @METODO='QUITAFACT_FCXC'     
   BEGIN         
      SELECT @CNSCXC=CNSCXC,@N_FACTURA=N_FACTURA,@OBSERVACION=MOTIVO      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         CNSCXC VARCHAR(20)     '$.CNSCXC',
         N_FACTURA VARCHAR(20) '$.N_FACTURA',
         MOTIVO  VARCHAR(512)  '$.MOTIVO'
            )           
      
      IF EXISTS(SELECT * FROM FCXC WHERE CNSCXC=@CNSCXC AND (CERRADA=1 OR INDRECIBIDO=1))
      BEGIN
         SELECT 'KO' KO,'La Cuenta de Cobro se Encuentra Cerrada o ya Fue Radicada, No se Permiten Hacer Cambios' ERROR
         RETURN
      END
      IF EXISTS(SELECT * FROM FCXCD WHERE CNSCXC=@CNSCXC AND N_FACTURA=@N_FACTURA)
      BEGIN
         BEGIN TRY           
            INSERT INTO FCXCR(CNSCXC, N_FACTURA, COMPANIA, VALORFACTURA, OBSERVACION, USUARIO, FECHA, ITFC, CNSITFC, CONTABILIZADA, NROCOMPROBANTE,
                              USURESP, RESPUESTA, ESTADO, PROCESO, MOTIVO1, MOTIVO2, COD_RESPUESTA,  COD_REP1, COD_REP2)
            SELECT @CNSCXC, @N_FACTURA,'01', VALORFACTURA, @OBSERVACION, @USUARIO, DBO.FNK_GETDATE(), 0, NULL, 0, NULL, NULL,
                   NULL, NULL, 'Retirada', NULL, NULL,  NULL,  NULL, NULL
            FROM FCXCD WHERE CNSCXC=@CNSCXC
            AND FCXCD.N_FACTURA=@N_FACTURA

            UPDATE FTR SET INDCXC=0,INDASIGCXC=0  WHERE N_FACTURA=@N_FACTURA  

            DELETE FCXCD WHERE CNSCXC=@CNSCXC AND FCXCD.N_FACTURA=@N_FACTURA                               
         END TRY
         BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK, ERROR FROM @TBLERRORES
            RETURN
         END
         EXEC SPK_RELIQUIDACXCQX @CNSCXC
         SELECT 'OK' OK
         RETURN 
      END
      ELSE
      BEGIN
         SELECT 'KO' KO,'No Fue encontrada la Factura en la Cuenta de Cobro, Verifique e intente de nuevo' Error
         RETURN         
      END
   END 
   IF @METODO='CIERRA_FCXC'     
   BEGIN         
      SELECT @CNSCXC=CNSCXC      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         CNSCXC VARCHAR(20)  '$.CNSCXC'
            )   
      IF NOT EXISTS(SELECT * FROM FCXCD WHERE CNSCXC=@CNSCXC)
      BEGIN
         SELECT 'KO' KO,'Cuenta de Cobro Sin detalles, No se Puede Continuar' ERROR
         RETURN
      END
      IF EXISTS(SELECT * FROM FCXC WHERE CNSCXC=@CNSCXC AND CERRADA=0 AND INDRECIBIDO=0)
      BEGIN
         BEGIN TRY           
            UPDATE FCXC SET CERRADA=1,USUCIERRA=@USUARIO WHERE CNSCXC=@CNSCXC                    
         END TRY
         BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'Cuenta de Cobro ya Cerrada o Esta Radicada No se Permiten Cambios'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END      
   IF @METODO='ABRIR_FCXC'     
   BEGIN         
      SELECT  @CNSCXC=CNSCXC      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         CNSCXC VARCHAR(20)  '$.CNSCXC'
            )           
      IF EXISTS(SELECT * FROM FCXC WHERE CNSCXC=@CNSCXC AND CERRADA=1 AND INDRECIBIDO=0)
      BEGIN
         BEGIN TRY           
            UPDATE FCXC SET CERRADA=0,USUCIERRA=NULL WHERE CNSCXC=@CNSCXC                    
         END TRY
         BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      ELSE
      BEGIN
          INSERT INTO @TBLERRORES(ERROR) SELECT 'Cuenta de Cobro ya Abierta o Esta Radicada No se Permiten Cambios'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END 
   IF @METODO='RADICA_FCXC'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         DATOS NVARCHAR(MAX) AS JSON 
            )           
      
      SELECT @CNSCXC=CNSCXC,@FECHARAD=CONVERT(DATE,FECHARAD),@QRECIBE=QRECIBE,@NRORADICA=NRORADICA,@NROGUIA=NROGUIA
      FROM   OPENJSON (@DATOS)
      WITH   (
            CNSCXC VARCHAR(20)  '$.CNSCXC',
            FECHARAD DATE        '$.FECHARAD',
            QRECIBE VARCHAR(50)  '$.QRECIBE',
            NRORADICA VARCHAR(20) '$.NRORADICA',
            NROGUIA   VARCHAR(20) '$.NROGUIA'
         ) 

       IF EXISTS(SELECT * FROM FCXC WHERE CNSCXC=@CNSCXC AND INDRECIBIDO=0)
       BEGIN
          IF @FECHARAD>CONVERT(DATE,DBO.FNK_GETDATE())
          BEGIN
              INSERT INTO @TBLERRORES(ERROR) SELECT 'Fecha de Radicación Mayor a la Fecha Actual'
          END
          IF @FECHARAD<(DBO.FNK_GETDATE()-30) AND DBO.FNK_VALORVARIABLE ('RAD_MAS2MESES') = 'SI'
          BEGIN
              INSERT INTO @TBLERRORES(ERROR) SELECT 'Fecha de Radicación Menor a Dos periodos Contables'
          END
          IF NOT EXISTS(SELECT * FROM PRI WHERE CONVERT(DATE,FECHA_INI)<=@FECHARAD AND CONVERT(DATE,FECHA_FIN)>=@FECHARAD  AND CERRADO=0 )
          BEGIN
              INSERT INTO @TBLERRORES(ERROR) SELECT 'Periodo Contable  Cerrado, Radicación no Permitida'
          END
          IF NOT EXISTS(SELECT * FROM PRI WHERE CONVERT(DATE,FECHA_INI)<=@FECHARAD AND CONVERT(DATE,FECHA_FIN)>=@FECHARAD  AND CERRADO_CARTERA=0 )
          BEGIN
              INSERT INTO @TBLERRORES(ERROR) SELECT 'Cartera Cerrada, Radicación no Permitida'
          END
          IF EXISTS(SELECT * FROM FNOT INNER JOIN FCXCD ON FNOT.N_FACTURA=FCXCD.N_FACTURA WHERE FCXCD.CNSCXC=@CNSCXC AND FNOT.ESTADO<>'A' AND FNOT.CERRADA=0)
          BEGIN
              INSERT INTO @TBLERRORES(ERROR) SELECT 'Una o Varias Facturas De Esta CXC Tienen Notas Pendientes Por Aplicar, Debe Aplicarlas Primero'
          END
          IF EXISTS(SELECT * FROM FTR INNER JOIN FCXCD ON FTR.N_FACTURA=FCXCD.N_FACTURA WHERE  FCXCD.CNSCXC=@CNSCXC AND CONVERT(DATE,FTR.F_FACTURA)>@FECHARAD)
          BEGIN
             INSERT INTO @TBLERRORES(ERROR) SELECT 'La fecha de radicación es menor a la ultima fecha de las facturas relacionadas'
          END
         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK, ERROR FROM @TBLERRORES
            RETURN
         END
         SELECT @IDSEDE= COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=UBEQ.COMPANIA 
         FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
         WHERE USUARIO=@USUARIO
         SELECT @MSEDE=MSEDE,@IDSEDEF=IDSEDE FROM FCXC WHERE CNSCXC=@CNSCXC
         IF @MSEDE=1 AND COALESCE(@IDSEDEF,'')<>''
         BEGIN
            SELECT @IDSEDE=@IDSEDEF
         END
         BEGIN TRY
            PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE='+COALESCE(@IDSEDE,'SIN SEDE')  +COALESCE(@COMPANIA,'CIA') 
            SELECT @CNSRPDX=''
		      EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@RPDX', @CNSRPDX OUTPUT   
		      SELECT @CNSRPDX = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)
		      PRINT '@CNSRPDX='+COALESCE(@CNSRPDX,'')                               
         END TRY
         BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK, ERROR FROM @TBLERRORES
            RETURN
         END
         BEGIN TRY           
            EXEC SPK_ENTREGA_CXC @CNSCXC,@QRECIBE,@FECHARAD,@NRORADICA,@CNSRPDX,@IDSEDE,@NROGUIA
         END TRY
         BEGIN CATCH
               INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK, ERROR FROM @TBLERRORES
            RETURN
         END
         IF DBO.FNK_VALORVARIABLE('CONTABCXC')='SI'
         BEGIN
            BEGIN TRY           
                 EXEC SPK_CONTAB_RADICACXC @CNSCXC,@COMPANIA,@IDSEDE,@USUARIO,@SYS_COMPUTERNAME,''
            END TRY
            BEGIN CATCH
                  INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH   
         END
       END
       ELSE
       BEGIN
          INSERT INTO @TBLERRORES(ERROR) SELECT 'Cuenta de Cobro ya Radicada o Presneta Inconsistencias'  
       END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END 
   IF @METODO='CONTAB_FCXC'     
   BEGIN         
      SELECT @CNSCXC = CNSCXC        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
           CNSCXC VARCHAR(20) '$.CNSCXC'
      )                 
      IF NOT EXISTS(SELECT  * FROM FCXC WHERE COALESCE(CONTABILIZADA,0)=0 AND CNSCXC=@CNSCXC)
      BEGIN
         SELECT 'KO'KO,'Cuenta por cobrar no encontrada o ya esta en contabilidad'ERROR
         RETURN
      END
      SELECT @IDSEDE=IDSEDE FROM FCXC WHERE CNSCXC=@CNSCXC
      SELECT @SYS_COMPUTERNAME=COALESCE(USUSU.SYS_ComputerName,UBEQ.SYS_ComputerName,HOST_NAME()),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA,'01')
      FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
      WHERE USUSU.USUARIO=@USUARIO
      BEGIN TRY           
         EXEC SPK_CONTAB_RADICACXC @CNSCXC,@COMPANIA,@IDSEDE,@USUARIO,@SYS_COMPUTERNAME,''
      END TRY
      BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END
   IF @METODO='IMPRIMIR_FCXC'
   BEGIN 
      SELECT @CNSCXC=CNSCXC
      FROM   OPENJSON (@PARAMETROS)
      WITH (
        CNSCXC VARCHAR(20)  '$.CNSCXC'
      ) 
      IF EXISTS(SELECT * FROM FCXC WHERE CNSCXC=@CNSCXC)
      BEGIN
         
         SELECT @VLLETRAS=LTRIM(RTRIM(TRIM(DBO.FNK_DE_VALORES_A_LETRAS(FCXC.VALORCXC))))
         FROM FCXC WHERE CNSCXC=@CNSCXC

         IF CHARINDEX('/100',@NROLETRAS,1)>0
         BEGIN 
            SELECT @NROLETRAS=LEN(@VLLETRAS)-9
            SELECT @VLLETRAS=SUBSTRING(@VLLETRAS,0,@NROLETRAS)
         END
         ELSE
         BEGIN 
            IF LEN(@VLLETRAS)<4
            BEGIN
               SELECT @VLLETRAS='Cero.'
            END
         END

         SELECT 'OK' OK,CNSCXC,FCXC.IDTERCERO,TER.NIT,TER.DV,TER.RAZONSOCIAL,FCXC.VALORCXC,
			 @VLLETRAS+' PESOS M/CTE. ' AS LETRAS,DBO.FNK_VALORVARIABLE('IDCARGOCARTERA') CARGO1,
			 USUSU.NOMBRE,UPPER(CONVERT(VARCHAR,FCXC.FECHACXC,6))  AS FECHACXC,
			 CASE WHEN EXISTS(SELECT DICOM FROM ARCHIVOS WHERE ID = USU.IDFIRMA ) 
			 THEN  (SELECT DICOM FROM ARCHIVOS WHERE ID = USU.IDFIRMA)
			 ELSE '' END DICOM
			 ,DBO.FNK_VALORVARIABLE('IDJEFECARTERA') CARGO2,USU.NOMBRE AS NOMBRE2,
			 CASE WHEN EXISTS(SELECT DICOM FROM ARCHIVOS WHERE ID = USUSU.IDFIRMA ) 
			 THEN  (SELECT DICOM FROM ARCHIVOS WHERE ID = USUSU.IDFIRMA)
			 ELSE '' END DICOM1,(SELECT COUNT(*) FROM FCXCD WHERE CNSCXC=FCXC.CNSCXC)CANT,
			 LTRIM(RTRIM(COALESCE(DBO.FNK_RTF(FCXC.OBSERVACION),'')))OBSERVACION
         FROM FCXC INNER JOIN TER ON FCXC.IDTERCERO=TER.IDTERCERO
                   LEFT  JOIN USUSU ON FCXC.COORCARTERA=USUSU.USUARIO
                   LEFT  JOIN USUSU USU ON FCXC.COORFACTURACION =USU.USUARIO
         WHERE FCXC.CNSCXC=@CNSCXC

         
		 SELECT  FCXCD.N_FACTURA,CONCAT(COALESCE(AFI.DOCIDAFILIADO,''),'-',COALESCE(AFI.NOMBREAFI,''))NOMBREAFI,CONVERT(VARCHAR,FTR.F_FACTURA,103)F_FACTURA,
         FTR.VR_TOTAL,COALESCE(FTR.VIVA,0)VIVA,FTR.VALORSERVICIOS,FTR.VALORCOPAGO,FTR.VALORPCOMP
         FROM FCXCD INNER JOIN FTR ON FCXCD.N_FACTURA=FTR.N_FACTURA
                    LEFT  JOIN AFI ON FTR.IDAFILIADO=AFI.IDAFILIADO
         WHERE FCXCD.CNSCXC=@CNSCXC
		 ORDER BY DBO.FNK_LIMPIATEXTO(FCXCD.N_FACTURA,'0-9')

         IF EXISTS(SELECT * FROM FCXC WHERE CNSCXC=@CNSCXC AND COALESCE(MSEDE,0)=1)
         BEGIN
            SELECT @IDSEDE=IDSEDE FROM FCXC WHERE CNSCXC=@CNSCXC
            PRINT 'BUSCO SEDE'
            SELECT TER.RAZONSOCIAL,TER.NIT,TER.DIRECCION,TER.TELEFONOS,CIU.NOMBRE CIUDAD,TER.EMAIL,DEP.NOMBRE AS NDPTO
            FROM SED INNER JOIN TER ON SED.NIT=TER.NIT
                       INNER JOIN CIU ON TER.CIUDAD=CIU.CIUDAD
                       INNER JOIN DEP ON CIU.DPTO=DEP.DPTO
            WHERE IDSEDE=@IDSEDE
         END
         ELSE
         BEGIN
            SELECT TER.RAZONSOCIAL,TER.NIT,TER.DIRECCION,TER.TELEFONOS,CIU.NOMBRE CIUDAD,TER.EMAIL,DEP.NOMBRE AS NDPTO
            FROM TER INNER JOIN CIU ON TER.CIUDAD=CIU.CIUDAD
                     INNER JOIN DEP ON CIU.DPTO=DEP.DPTO
            WHERE TER.IDTERCERO=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')
         END
         RETURN
      END
      ELSE
      BEGIN
         SELECT 'KO' OK,' Erro al Cargar los Datos'
         RETURN         
      END
   END     

   IF @METODO='NRORAD_FCXCD'     
   BEGIN       
      DECLARE @CONTINUA BIT
      SELECT @CNSCXC=CNSCXC,@N_FACTURA=N_FACTURA,@NRORADICA=NRORADICA,@CONTINUA=CONTINUA      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         CNSCXC VARCHAR(20) '$.CNSCXC',
         N_FACTURA VARCHAR(20) '$.N_FACTURA',
         NRORADICA VARCHAR(20) '$.NRORADICA',
         CONTINUA  BIT '$.CONTINUA'
            )   
            
      IF EXISTS(SELECT  * FROM FCXCD WHERE CNSCXC=@CNSCXC AND N_FACTURA=@N_FACTURA)
      BEGIN TRY           
            UPDATE FCXCD SET NOREFERENCIAEXT=@NRORADICA  WHERE CNSCXC=@CNSCXC AND N_FACTURA=@N_FACTURA
            IF @CONTINUA=1
            BEGIN
               IF EXISTS(SELECT * FROM FCXCD WHERE  CNSCXC=@CNSCXC AND COALESCE(NOREFERENCIAEXT,'')='' )
               BEGIN
                  SELECT TOP 1 @N_FACTURA=COALESCE(N_FACTURA,'') FROM FCXCD WHERE  CNSCXC=@CNSCXC AND COALESCE(NOREFERENCIAEXT,'')=''
               END
               ELSE
               BEGIN
                  SELECT @N_FACTURA=''
               END
            END  
            ELSE
            BEGIN
               SELECT @N_FACTURA=''
            END
      END TRY
      BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK,@N_FACTURA N_FACTURA
      RETURN 
   END
   IF @METODO='LISTA_ENTREGA'     
   BEGIN         
      SELECT @CNSCXC=CNSCXC        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSCXC VARCHAR(20) '$.CNSCXC'
      )

      SELECT @IDTERCERO=IDTERCERO FROM FCXC WHERE CNSCXC=@CNSCXC

      SELECT 'OK' OK

      SELECT 'Todas' value, 'Todas las Entregas' label
      UNION ALL 
      SELECT DISTINCT ENT.CNSENTREGA,ENT.CNSENTREGA
      FROM ENT INNER JOIN ENTD ON ENT.CNSENTREGA=ENTD.CNSENTREGA
               INNER JOIN FTR  ON ENTD.NODOCUMENTO=FTR.N_FACTURA
               LEFT  JOIN USUSU ON ENT.USUARIOENTREGA=USUSU.USUARIO
      WHERE ENT.PROCESO='FACTURAS'
      AND ENT.ESTADO=1
      AND FTR.IDTERCERO=@IDTERCERO
      AND COALESCE(ENTD.ENDEVO,0)=0
      AND NOT EXISTS(SELECT * FROM FCXCD WHERE FCXCD.N_FACTURA=FTR.N_FACTURA)
      RETURN              
   END
   IF @METODO='BORRAR_MARCADAS'     
   BEGIN         
      SELECT @CNSCXC=CNSCXC,@OBSERVACION=MOTIVO
      FROM   OPENJSON (@PARAMETROS)
      WITH (
         CNSCXC VARCHAR(20) '$.CNSCXC',
         MOTIVO  VARCHAR(512)  '$.MOTIVO'
      ) 
      PRINT 'Cuenta de Cobro='+COALESCE(@CNSCXC,'SIN CXC')
      IF COALESCE(@CNSCXC,'')<>'' 
      BEGIN
         BEGIN TRY    
         
            INSERT INTO FCXCR(CNSCXC, N_FACTURA, COMPANIA, VALORFACTURA, OBSERVACION, USUARIO, FECHA, ITFC, CNSITFC, CONTABILIZADA, NROCOMPROBANTE,
                              USURESP, RESPUESTA, ESTADO, PROCESO, MOTIVO1, MOTIVO2, COD_RESPUESTA,  COD_REP1, COD_REP2)
            SELECT @CNSCXC, @N_FACTURA,'01', VALORFACTURA, @OBSERVACION, @USUARIO, DBO.FNK_GETDATE(), 0, NULL, 0, NULL, NULL,
                   NULL, NULL, 'Retirada', NULL, NULL,  NULL,  NULL, NULL
            FROM FCXCD WHERE CNSCXC=@CNSCXC
            AND FCXCD.N_FACTURA=@N_FACTURA
            AND COALESCE(FCXCD.MARCA,0)=1

            UPDATE FTR SET MARCA=0, EQUIMARCA=NULL,INDASIGCXC=0,INDCXC=0
            FROM FTR INNER JOIN FCXCD ON FTR.N_FACTURA=FCXCD.N_FACTURA
            WHERE FCXCD.CNSCXC=@CNSCXC
            AND COALESCE(FCXCD.MARCA,0)=1
            
            DELETE FCXCD WHERE CNSCXC=@CNSCXC AND COALESCE(FCXCD.MARCA,0)=1

            EXEC SPK_RELIQUIDACXCQX @CNSCXC 

         END TRY
         BEGIN CATCH
                 INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'No se encontro la cuenta de cobro, verifique e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 

   END  
   IF @METODO='MARCAR_FACTU'     
   BEGIN         
      SELECT @CNSCXC=CNSCXC,@N_FACTURA=N_FACTURA        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSCXC VARCHAR(20) '$.CNSCXC',
      N_FACTURA VARCHAR(20) '$.N_FACTURA'
      )
      IF EXISTS(SELECT  * FROM FCXCD WHERE CNSCXC=@CNSCXC AND N_FACTURA=@N_FACTURA)
      BEGIN
         UPDATE FCXCD SET MARCA=1-MARCA WHERE CNSCXC=@CNSCXC AND N_FACTURA=@N_FACTURA
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Cuenta de cobro y factura no encontrada, verifique e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='SALIR_FCXCD'     
   BEGIN         
      SELECT @CNSCXC=CNSCXC       
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSCXC VARCHAR(20) '$.CNSCXC'
      )
      PRINT '@CNSCXC ='+@CNSCXC
      IF EXISTS(SELECT  * FROM FCXCD WHERE CNSCXC=@CNSCXC)
      BEGIN
         UPDATE FCXCD SET MARCA= 0 WHERE CNSCXC=@CNSCXC
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN    
   END  
END


