CREATE OR ALTER PROCEDURE DBO.SPQ_CIT_VALIDA
@JSON  NVARCHAR(MAX) 
WITH ENCRYPTION AS
DECLARE  @PARAMETROS   NVARCHAR(MAX)	,@MODELO			VARCHAR(100)	,@METODO		VARCHAR(100)	,@USUARIO		VARCHAR(12)		,@CNSFACJ		VARCHAR(20)
		,@GRUPO			  VARCHAR(8)		,@SYS_COMPUTERNAME	VARCHAR(254)	,@IDSEDE		VARCHAR(5)		,@USUNOMBRE     VARCHAR(100)	,@SEDE			VARCHAR(5)
		,@FECHA			  VARCHAR(20)		,@IDEMEDICA			VARCHAR(4)		,@FECHA1		DATETIME		,@SQL           VARCHAR(MAX)	,@NOADMISION	VARCHAR(20)
		,@CODCAJERO		  VARCHAR(20)		,@COMPANIA			VARCHAR(10)		,@IDMEDICO		VARCHAR(20)		,@FECHAINI		DATE			,@NO_ITEM			SMALLINT
		,@FECHAFIN		  DATE			   ,@CONSECUTIVOS		NVARCHAR(MAX)	,@MARCA			BIT				,@NOAUTORIZACION VARCHAR(50)	,@CONSECUTIVO	VARCHAR(20)		,@FECHA2			DATE
		,@OBSERVACION	  VARCHAR (200)	,@IDCAUSAL			VARCHAR(20)		,@IDSERVICIO	VARCHAR(20)		,@CONT			INT				,@CNSIZSOL		VARCHAR(20)		,@IDPROVEEDOR		VARCHAR(20)
		,@CONSECUTIVOCAN VARCHAR(20)	   ,@GRUPAL			BIT				,@IDAUT			VARCHAR(20)		,@VR_TOTAL		DECIMAL(14,2)   ,@VLRDEPOSITOS	DECIMAL(14,2)	,@VLR_ANTERIOR		DECIMAL(14,2)
		,@PROCESO		  VARCHAR(50)		,@PROCEDENCIA	VARCHAR(20)		,@ITEM			INT				,@TIPOFAC		VARCHAR(20)		,@PYP				SMALLINT
		,@FECHAFACT		  DATE			   ,@CUMPLIDA			SMALLINT		,@FACTURADA		BIT				,@VLRCOPAGO		DECIMAL(14,2)	,@DPR			VARCHAR(20)		,@HABILITA_COPAGO	BIT 
		,@FECHAFCJ		  DATE			   ,@PART				BIT=0			,@CNSACJ		VARCHAR(20)		,@TOTAL			DECIMAL(12,4)	,@CODCAJA		VARCHAR(6)	
		,@TIPOCAJA		  VARCHAR(10)		,@N_FACTURA			VARCHAR(20)		,@NORECIBOCAJA	VARCHAR(20)		,@IDTERCERO		VARCHAR(20)		,@NROCOMPROBANTE VARCHAR(20)	,@CANTIDAD_SERVICIO	DECIMAL(14,2) 
		,@VALORTOTAL	  DECIMAL(14,2)	,@ESTADO			VARCHAR(10)		,@FECHALLEGA	DATETIME		,@FACTURABLE	BIT				,@IDPLAN		VARCHAR(10)		,@IDTERCEROCA		VARCHAR(20) 
		,@RUC			VARCHAR(20)		,@dataTER			NVARCHAR(MAX)	,@TIPOPERSONA	BIT				,@SERVICIO_2	NVARCHAR(MAX)	,@MEDTRATANTEDIFERENTE INT		,@NRO				INT
		,@VIVA			DECIMAL(14,2)	,@CONSECUTIVOANT	VARCHAR(20)		,@CONSECUTIVONUE   VARCHAR(20)	,@PARTICULAR	BIT				,@FECHAINCIO	DATETIME		,@AFILIADOSITEDS	NVARCHAR(MAX) 
		,@CNSNOCIT		VARCHAR(20)		,@SIRAS				VARCHAR(20)		,@CNSHACTRAN	VARCHAR(20)		,@IDAUTSES		INT				,@CERRADA_FCJ	SMALLINT
		,@ESTADO_FCJ	VARCHAR(1)		,@VALORCOPAGO       DECIMAL(14,2)	,@IDCONSSITEDS	INT				,@VALORAUTD		DECIMAL(12,4)	,@MENSAJE_OBS	VARCHAR(300)	,@ALTOCOSTO			SMALLINT
		,@PARTICULAR_TIME   DECIMAL(14,2) ,@CERRADA			BIT				,@TIPOCITA_ANT	VARCHAR(20)		,@TIPOCITA_NUE	VARCHAR(20)		,@DETALLESITEDS NVARCHAR(MAX) 
		,@MOTIVO		VARCHAR(100)	,@FECHAFINAL		DATETIME		,@MODALIDAD_ANT VARCHAR(20)		,@MODALIDAD_NUE	VARCHAR(20)		,@TOTAL_DURACION DECIMAL(14,2)	,@MENSAJE_COPAGO    VARCHAR(200)
		,@IDAREA		VARCHAR(20)		,@FECHAAUT			DATETIME		,@COPAGOPROPIO	SMALLINT		,@SOAT			SMALLINT		,@RAZONMEDDIFERENTE VARCHAR(20) ,@ITEM_HCATDC		INT 
		,@INFO			VARCHAR(20)		,@VALOR				DECIMAL(14,2)	,@VALOR_TEXTO VARCHAR(20)		,@IDKPAGE		INT				,@LINK_PAGO VARCHAR(500)
		,@EXONERACION	BIT				,@TIPO_EXONERACION	VARCHAR(20)		,@TIEMPOEXTRA INT				, @TIPOSOLICITUD VARCHAR(20)
DECLARE @DOCIDAFILIADO	VARCHAR(20),	@NOMBREAFI VARCHAR(200), @NOMBRE_SEDE VARCHAR(20),	@SMS VARCHAR(MAX),		@MENSAJE VARCHAR(MAX)	,@F_EXPIRA DATETIME
		,@RAZONSOCIAL	VARCHAR(200),	@LINK VARCHAR(1000),	 @IDAFILIADO VARCHAR(20),	@NUMERO VARCHAR(20),	@NOMBREMEDI			VARCHAR(50)
		,@MODALIDADCIT	VARCHAR(10)	,	@DESCSERVICIO VARCHAR(200)	,@FECHA_CITA VARCHAR(10)	,@HORA_CITA VARCHAR(5)
		,@FECHA_STRING	VARCHAR(MAX),	@NOMBRE_MED			VARCHAR(MAX)	,@NOMBRE_SER VARCHAR(max) , @FECHAAUTORIZACION VARCHAR(10), @FVENCEAUTORIZACION VARCHAR(10)	
		,@REQ_CONSULTA	BIT		,@REQ_FARMACOS		BIT				,@REQ_EXAMENES	BIT		, @TIPO_DOC VARCHAR(20)		
		,@COPAGO_FI_CON		DECIMAL(14,2)	,@COPA_VAR_PORC	DECIMAL(14,2)	,@COPAGO_FI_FAR		DECIMAL(14,2)	,@COPAGO_VA_FAR	DECIMAL(14,2)	
		,@COPAGO_FI_EXA		DECIMAL(14,2)	,@COPAGO_VA_EXA	DECIMAL(14,2)	,@TIPOCITA	VARCHAR(20)	 ,@PASARELA VARCHAR(20)
      ,@EVENTO              VARCHAR(30),@ESTADO_ANTERIOR     VARCHAR(40) = NULL,@ESTADO_NUEVO        VARCHAR(40) = NULL,@IDAPLIM     INT,@DETALLE_APLIMG  VARCHAR(500)
DECLARE @TABLERRR		TABLE (ERROR VARCHAR(200))
DECLARE @FECHA_NUEVA DATETIME, @CONSECUTIVO_SEL VARCHAR(20), @CONSECUTIVO_NEW VARCHAR(20)
DECLARE @FAUX DATETIME 
DECLARE @IDMEDICOAUX VARCHAR(20),  @FECHA_CITA_2 DATETIME
DECLARE @MINUTOS INT

BEGIN 
	SET LANGUAGE Spanish;  
	SET DATEFORMAT dmy
	SELECT *
	INTO #JSON
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)  AS JSON
	)

	SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
	FROM #JSON
	--DEFINICION DE TABLA DE ERRORES
	DECLARE @TBLERRORES TABLE(ERROR VARCHAR(200));
	-- TOMA DEL GRUPO, SYS_COMPUTERNAME, SEDE   DE ACUERDO AL USUARIOpl,   --PRINT 'USUARIO:'+@USUARIO
	SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO), @USUNOMBRE = NOMBRE FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME, @COMPANIA = COMPANIA, @CODCAJERO= CODCAJERO FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @IDSEDE = IDSEDE, @SEDE = IDSEDE FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME
	PRINT '@USUARIO='+@USUARIO

	IF @METODO = 'CONFIRMAR_RECIBO_PE'
	BEGIN
		IF DBO.FNK_VALORVARIABLE('IXCOUNTRY')<>'PERU'
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No es de Peru'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
	   SELECT @CONSECUTIVO=CONSECUTIVO , @TIPOFAC = TIPOFACT,@CODCAJA = CODCAJA, @CNSFACJ = CNSFACJ 
			, @CNSACJ = CNSACJ, @IDTERCERO = IDTERCERO
	   FROM OPENJSON(@PARAMETROS)
	   WITH( CONSECUTIVO			VARCHAR(20)		'$.CONSECUTIVO'
			,TIPOFACT				VARCHAR(20)		'$.TIPOFACT'
			,CODCAJA				VARCHAR(20)		'$.CODCAJA'
			,CNSFACJ				VARCHAR(20)		'$.CNSFACJ'
			,CNSACJ					VARCHAR(20)		'$.CNSACJ'
			,IDTERCERO				VARCHAR(20)		'$.IDTERCERO'
		)

		SELECT @TIPOFAC= JSON_VALUE(@PARAMETROS , '$.TIPOFACT')  
		PRINT '@TIPOFAC='+COALESCE(@TIPOFAC,'NO TENGO NADA')
      
		SELECT @CUMPLIDA = CUMPLIDA,@TIPOCAJA=TIPOCAJA,@NORECIBOCAJA=NORECIBOCAJA,@IDAFILIADO=IDAFILIADO,@IDSERVICIO=IDSERVICIO,
		       @VALORTOTAL=VALORTOTAL,@VLRCOPAGO=VALORCOPAGO,@FECHALLEGA=FECHALLEGA,@FACTURABLE=FACTURABLE,@SEDE=IDSEDE, @FACTURADA = CASE COALESCE(NFACTURA,'') WHEN '' THEN 0 ELSE 1 END,
		       @IDPLAN= IDPLAN,  @PART = 1
		FROM   CIT 
		WHERE  CONSECUTIVO = @CONSECUTIVO 
		SELECT @TOTAL = VALORTOTAL FROM FCJ WHERE CODCAJA = @CODCAJA AND CNSFACJ = @CNSFACJ
		
      IF COALESCE(@FACTURADA,0)=1
		BEGIN
         PRINT 'La cita ya tiene un recibo'  
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La cita ya tiene un recibo'            
		END
		IF COALESCE(@VLRCOPAGO,0)<=0
		BEGIN
         PRINT 'Valor Copago de la cita no puede ser menor o igual a cero'  
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Valor Copago de la cita no puede ser menor o igual a cero'            
		END
		
		IF NOT EXISTS(SELECT * FROM TTEC WHERE TIPO= DBO.FNK_VALORVARIABLE('IDTERCONTABLEPART'))
		BEGIN 
         PRINT 'Inconsistencia Contable Tipo de Tercero no existe'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Inconsistencia Contable Tipo de Tercero no existe'
		END
		IF (SELECT COALESCE(SUM (VALOR),0) FROM PCJ WHERE PCJ.CODCAJA = @CODCAJA AND PCJ.CNSFACJ = @CNSFACJ ) = 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El recibo no tiene detalles de pago.'
		END
		IF  (SELECT COALESCE(SUM (VALOR),0) FROM PCJ WHERE PCJ.CODCAJA = @CODCAJA AND PCJ.CNSFACJ = @CNSFACJ ) > 0
		BEGIN
			IF (SELECT COALESCE(SUM (VALOR),0) FROM PCJ WHERE PCJ.CODCAJA = @CODCAJA AND PCJ.CNSFACJ = @CNSFACJ ) <>  @TOTAL
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'El valor del detalle de pago, es diferente al valor del Recibo'
			END
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
            PRINT 'SIN ERRORES'
			   SELECT @DPR=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')
				IF @TIPOFAC ='Boleta'
				BEGIN
					SELECT @IDTERCERO = NULL
				END

               PRINT 'VOY A FACTURA PERU ===>'
               EXEC SPK_FACTURACE_PERU_COPA @CONSECUTIVO, @DPR,'01',@SEDE,@USUARIO,'', '', '', '', '','CI','','FALSE', NULL, @FECHAFACT,@TIPOFAC,  @IDTERCERO
         
			   IF NOT EXISTS (SELECT * FROM TFCJ WHERE NOADMISION = @CONSECUTIVO)
			   BEGIN
					PRINT 'SPK_PAGOSCAJA_CIT ===>'
				   EXEC SPK_PAGOSCAJA_CIT @CONSECUTIVO, @SYS_COMPUTERNAME, '01',@SEDE, @USUARIO, @PART
			   END
			   SELECT @N_FACTURA = NFACTURA FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO 
			   UPDATE FCJ SET N_FACTURA = @N_FACTURA  , RECAUDO = 1, USURECAUDO = @USUARIO  WHERE NOADMISION = @CONSECUTIVO AND CODCAJA = @CODCAJA

			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
            SELECT 'OK'OK,  CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Sin Facturar'
                WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') <> '' THEN ' - Cita facturada con el numero ' + CIT.N_FACTURA
                WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Cita con error de facturacion'
                END [ESTADO_FACTURA],   
                CASE WHEN CIT.GENEROCAJA <> 1  THEN ''
                WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) <> 'A' THEN ' - Recibo sin enviar a caja'
                WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 0 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo sin recaudar'
                WHEN CIT.TIPOCAJA = 'FCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ' - Recibo anulado'
                WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ''
                WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 1 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo recaudado'
                WHEN CIT.TIPOCAJA = 'FCJ' AND NOT EXISTS(SELECT 1 FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) THEN ' - Recibo con error'
                ELSE ' - Recibo sin enviar a caja'
                END [ESTADO_REGISTRO],
                CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
													                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
													                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
													                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
													                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
                THEN  CASE  WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0))) 
			                WHEN CIT.TIPOCAJA = 'FCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CIT.DESCUENTO,0)) END [VALORCOPAGO]
            FROM CIT WHERE CIT.CONSECUTIVO = @CONSECUTIVO
		END 
	END
    IF @METODO = 'CONFIRMAR_RECIBO'
	BEGIN
        SELECT @CNSFACJ = CNSFACJ, @CODCAJA = CODCAJA, @CNSACJ = CNSACJ, @INFO = INFO
        FROM OPENJSON(@PARAMETROS)WITH(
	        CNSFACJ     VARCHAR(20)    '$.CNSFACJ' ,
            INFO        VARCHAR(20)    '$.INFO' ,
	        CODCAJA     VARCHAR(20)    '$.CODCAJA' ,
	        CNSACJ      VARCHAR(20)    '$.CNSACJ' 
        )
        SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA,@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA) 
        FROM  USUSU INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
                    INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
        WHERE  USUARIO = @USUARIO
        SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  
        FROM  USUSU INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
                    INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
        WHERE  USUARIO = @USUARIO
        SELECT @TOTAL = VALORTOTAL, @N_FACTURA = N_FACTURA, @IDAFILIADO = IDAFILIADO, @PROCEDENCIA = PROCEDENCIA,
                @IDTERCERO = IDTERCERO, @ESTADO= ESTADO, @FECHAFCJ = FECHA, @NOADMISION = NOADMISION 
        FROM FCJ 
        WHERE  FCJ.CODCAJA = @CODCAJA 
        AND FCJ.CNSFACJ = @CNSFACJ

        IF (SELECT COALESCE(SUM (VALOR),0) FROM PCJ WHERE PCJ.CODCAJA = @CODCAJA AND PCJ.CNSFACJ = @CNSFACJ ) = 0
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El recibo no tiene detalles de pago.'
        END
        IF  (SELECT COALESCE(SUM (VALOR),0) FROM PCJ WHERE PCJ.CODCAJA = @CODCAJA AND PCJ.CNSFACJ = @CNSFACJ ) > 0
        BEGIN
            IF (SELECT COALESCE(SUM (VALOR),0) FROM PCJ WHERE PCJ.CODCAJA = @CODCAJA AND PCJ.CNSFACJ = @CNSFACJ ) <>  @TOTAL
            BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El valor del detalle de pago, es diferente al valor del Recibo'
            END
        END
        IF @FECHAFCJ IS NULL
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La fecha del recibo no Valida'
        END
        IF @FECHAFCJ > GETDATE()
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La fecha del recibo es mayor a la fecha actual'
        END
        IF NOT EXISTS(SELECT * FROM PRI WHERE FECHA_INI<=@FECHAFCJ AND FECHA_FIN+1>@FECHAFCJ AND COALESCE(CERRADO,0)=0)
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El periodo contable esta cerrado '+COALESCE(CONVERT(VARCHAR,@FECHAFCJ,103),'NO TENGO FECHA')
        END
        IF (SELECT CERRADA FROM FCJ WHERE FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ ) = 1
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El recibo ya se encuentra confirmado'
        END
        IF (SELECT ESTADO FROM FCJ WHERE FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ ) = 'D'
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Confirmar un Recibo Desecho.'
        END
        IF (SELECT ESTADO FROM FCJ WHERE FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ ) = 'A'
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Confirmar un Recibo Anulado.'
        END
        IF @TOTAL<=0
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Confirmar un Recibo Con Valor Cero (0).'
        END
        IF (SELECT COUNT(1) FROM MCP WHERE PROCEDENCIA='CAJA' AND   REFERENCIA2 = @CODCAJA AND REFERENCIA1 = @CNSFACJ   AND COALESCE(ANULADO,0)=0) <> 0
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El recibo ya se encuentra contabilizado'
        END
        IF @PROCEDENCIA = 'CITAS'
        BEGIN
            IF (SELECT COUNT(1)  FROM CIT WHERE  CONSECUTIVO = @NOADMISION AND IDAFILIADO = @IDAFILIADO    ) = 0
            BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita fue cancelada, no se puede confirmar.'
            END
        END
        IF @PROCEDENCIA = 'CE'
        BEGIN
            IF (SELECT ESTADO  FROM AUT WHERE  NOAUT  = @NOADMISION AND  @PROCEDENCIA = 'CE' ) = 'Anulada'
            BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita fue anulada, no se puede confirmar.'
            END
        END
        IF (SELECT COUNT(1) FROM  ACJ WHERE  CODCAJA = @CODCAJA AND ABIERTA = 1 ) >1
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La caja se encuentra abierta mas de una vez.'
        END
        IF (SELECT COUNT(1) FROM  ACJ WHERE  CODCAJA = @CODCAJA AND ABIERTA = 1 ) = 0
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La caja no se encuentra abierta.'
        END

        IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
	    BEGIN
		    SELECT 'KO' OK
		    SELECT ERROR FROM @TBLERRORES
		    RETURN
	    END
        ELSE
        BEGIN --@CONSECUTIVO FCJ
         BEGIN TRY
			SELECT @IDSEDE = COALESCE((SELECT TOP 1 CIT.IDSEDE FROM FCJ INNER JOIN CIT ON FCJ.NOADMISION = CIT.CONSECUTIVO WHERE  CNSFACJ = @CNSFACJ),'01')
            IF @CNSACJ <> (SELECT CNSACJ FROM  ACJ WHERE  CODCAJA = @CODCAJA AND ABIERTA = 1)
            UPDATE FCJ SET CNSACJ = (SELECT CNSACJ FROM  ACJ WHERE  CODCAJA = @CODCAJA AND ABIERTA = 1) WHERE FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ  
		
            EXEC SPK_CIERRERECIBO_CAJA @CODCAJA, @CNSFACJ, @COMPANIA, @IDSEDE, @USUARIO, @SYS_COMPUTERNAME
            EXEC SPK_ACTUALIZA_SALDO_BANCO @CNSFACJ, @CODCAJA
            IF EXISTS(SELECT 1 FROM FCJ WITH (NOLOCK) WHERE CODCAJA= @CODCAJA AND CNSFACJ= @CNSFACJ AND COALESCE(CONTABILIZADA,0)=0)
            BEGIN
               EXEC SPK_NC_CONTAB_CAJA_ING @CNSFACJ, @CODCAJA, @USUARIO, @SYS_COMPUTERNAME, @COMPANIA, @IDSEDE, @NROCOMPROBANTE
            END

         END TRY
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE();
         END CATCH
         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
			PRINT 'CONFIRMA_RECIBO ====>'  + @INFO
			IF COALESCE(@INFO,'') = ''
			BEGIN
                SELECT 'OK' OK,  CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Sin Facturar'
				    WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') <> '' THEN ' - Cita facturada con el numero ' + CIT.N_FACTURA
				    WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Cita con error de facturacion'
				    END [ESTADO_FACTURA],   
				    CASE WHEN CIT.GENEROCAJA <> 1  THEN ''
				    WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT TOP 1 FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) <> 'A' THEN ' - Recibo sin enviar a caja'
				    WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT TOP 1  FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) = 0 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA)<> 'A' THEN ' - Recibo sin recaudar'
				    WHEN CIT.TIPOCAJA = 'FCJ'  AND (SELECT TOP 1  FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) = 'A' THEN ' - Recibo anulado'
				    WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT TOP 1  FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) = 'A' THEN ''
				    WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT TOP 1  FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) = 1 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA)<> 'A' THEN ' - Recibo recaudado'
				    WHEN CIT.TIPOCAJA = 'FCJ' AND NOT EXISTS(SELECT * FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) THEN ' - Recibo con error'
				    ELSE ' - Recibo sin enviar a caja'
				    END [ESTADO_REGISTRO],
				    CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
																	    CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
																	    CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
																	    CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
																	    CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
				    THEN  CASE  WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0))) 
							    WHEN CIT.TIPOCAJA = 'FCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CIT.DESCUENTO,0)) END [VALORCOPAGO]
				FROM CIT 
                WHERE CIT.CONSECUTIVO = (SELECT NOADMISION  FROM FCJ WHERE FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ )
			 END
    END
   END
	IF @METODO = 'BUSCA_RUC'
	BEGIN
	   SELECT @RUC=RUC, @TIPOPERSONA = TIPOPERSONA, @PROCEDENCIA = PROCEDENCIA, @CONSECUTIVO = CONSECUTIVO
	   FROM OPENJSON(@PARAMETROS)
	   WITH( RUC			VARCHAR(20)		'$.RUC'
			,TIPOPERSONA		BIT		'$.TIPOPERSONA'
			,PROCEDENCIA		VARCHAR(50)		'$.PROCEDENCIA'
			,CONSECUTIVO		VARCHAR(20)		'$.CONSECUTIVO'
		)
		IF LEN(@RUC)<> 11
		BEGIN 
			PRINT 'El N° de RUC debe de tener 11 digitos.'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'El N° de RUC debe de tener 11 digitos.'
		END
		IF NOT EXISTS(SELECT  * FROM TER WHERE  NIT = LTRIM(RTRIM(@RUC)) AND TER.TIPO_ID = 'RUC') AND @TIPOPERSONA = 1
		BEGIN 
			PRINT 'El N° de RUC Ingresado no existe'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'El N° de RUC Ingresado no existe'
		END
		
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF @TIPOPERSONA = 0 AND NOT EXISTS(SELECT  * FROM TER WHERE  NIT = LTRIM(RTRIM(@RUC)) AND TER.TIPO_ID = 'RUC') 
				BEGIN
					SELECT @IDAFILIADO = NULL
					IF @PROCEDENCIA IN ( 'HADM')
					BEGIN
						SELECT @IDAFILIADO = HADM.IDAFILIADO FROM HADM WHERE NOADMISION = @CONSECUTIVO
					END
					IF @PROCEDENCIA IN ( 'CIT')
					BEGIN
						SELECT @IDAFILIADO = CIT.IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO
					END

					IF COALESCE(@IDAFILIADO ,'')<> ''
					BEGIN
						SELECT @IDTERCERO = NULL 
						EXEC SPK_GENCONSECUTIVO '01', @SEDE, '@TER', @IDTERCERO OUTPUT  
						SELECT @IDTERCERO = @SEDE + REPLACE(SPACE(8 - LEN(@IDTERCERO))+LTRIM(RTRIM(@IDTERCERO)),SPACE(1),0)

						INSERT INTO TER (
						IDTERCERO
						,NIT			
						,RAZONSOCIAL
						,DIRECCION	
						,CIUDAD		
						,TELEFONOS	
						,EMAIL		
						,DV
						,TIPO_ID
						,NATJURIDICA
						,ESTADO
						,ENVIODICAJA
						,MODOCOPAGO
						,RUC
						,USUCREA
						,FECHACREA
						)
						SELECT
							@IDTERCERO		
							,LTRIM(RTRIM(@RUC))
							,LTRIM(RTRIM(AFI.NOMBREAFI))
							,LTRIM(RTRIM(AFI.DIRECCION	))	
							,AFI.CIUDAD
							,LTRIM(RTRIM(AFI.CELULAR))		
							,LTRIM(RTRIM(AFI.EMAIL))		
							,1
							,'RUC'			
							,'Natural'			
							,'Activo'	
							,0
							,'Normal'	
							,LTRIM(RTRIM(@RUC))
							,@USUARIO
							,DBO.FNK_GETDATE()
						FROM HADM 
						INNER JOIN AFI ON HADM.IDAFILIADO = AFI.IDAFILIADO
						WHERE HADM.NOADMISION = @CONSECUTIVO
					END
				END
				SELECT TOP 1 'OK' OK, IDTERCERO, RAZONSOCIAL, NIT
				FROM TER WHERE   NIT = LTRIM(RTRIM(@RUC))  AND TER.TIPO_ID = 'RUC'
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'CRUD_TER'
	BEGIN
		SELECT @dataTER =  dataTER, @PROCEDENCIA = PROCEDENCIA
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		dataTER		NVARCHAR(MAX) AS JSON , PROCEDENCIA VARCHAR(20) '$.PROCEDENCIA'
		)
		
		SELECT @PROCESO =UPPER( JSON_VALUE(@dataTER,'$.PROCESO'))
		SELECT * INTO #dataTER FROM OPENJSON (@dataTER)
		WITH(
		IDTERCERO				VARCHAR(20)						'$.IDTERCERO'
		,PROCESO				VARCHAR(20)						'$.PROCESO'
		,RAZONSOCIAL			VARCHAR(500)						'$.RAZONSOCIAL'
		,NIT					VARCHAR(20)						'$.NIT'
		,DIRECCION				VARCHAR(500)						'$.DIRECCION'
		,CIUDAD					VARCHAR(20)						'$.CIUDAD'
		,EMAIL					VARCHAR(20)						'$.EMAIL'
		,TELEFONOS				VARCHAR(20)						'$.TELEFONOS'

		)

		IF (SELECT COALESCE(RTRIM(LTRIM(#dataTER.NIT)),'') FROM #dataTER) = ''
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'Ingrese un numero de RUC'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
		 IF (SELECT LEN((SELECT  COALESCE(RTRIM(LTRIM(#dataTER.NIT)),'') FROM #dataTER))) = 0
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'Ingrese un numero de RUC valido, de 11 digitos'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
		 IF (SELECT COALESCE(RTRIM(LTRIM(#dataTER.RAZONSOCIAL)),'') FROM #dataTER) = ''
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'Ingrese la Razon Social.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
		 IF (SELECT COALESCE(RTRIM(LTRIM(#dataTER.EMAIL)),'') FROM #dataTER) NOT LIKE  '%@%' AND  @PROCEDENCIA <> 'EMPLEADOR'
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'Ingrese un EMAIL valido'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
		 IF @PROCESO = 'INSERTAR' AND EXISTS (SELECT * FROM  TER , #dataTER WHERE TER.NIT = LTRIM(RTRIM( #dataTER.NIT)) )
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El RUC ingresado ya existe, favor de validar.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
		 IF @PROCESO = 'EDITAR' AND EXISTS (SELECT * FROM  TER , #dataTER WHERE TER.NIT = LTRIM(RTRIM( #dataTER.NIT)) AND TER.IDTERCERO <> #dataTER.IDTERCERO )
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El RUC ingresado ya existe, favor de validar.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
			
		BEGIN TRY 
			IF UPPER(@PROCESO)='EDITAR'
			BEGIN
				UPDATE TER SET
				NIT					= LTRIM(RTRIM(#dataTER.NIT))	
				,RAZONSOCIAL		= LTRIM(RTRIM(#dataTER.RAZONSOCIAL))
				,DIRECCION			= LTRIM(RTRIM(#dataTER.DIRECCION))
				,CIUDAD				= #dataTER.CIUDAD		
				,TELEFONOS			= LTRIM(RTRIM(#dataTER.TELEFONOS))
				,EMAIL				= LTRIM(RTRIM(#dataTER.EMAIL))		
				FROM TER , #dataTER WHERE TER.IDTERCERO = #dataTER.IDTERCERO

				SELECT @IDTERCERO = #dataTER.IDTERCERO FROM #dataTER
				
			END
			IF UPPER(@PROCESO)='INSERTAR'
			BEGIN
				SELECT @IDTERCERO = NULL 
				EXEC SPK_GENCONSECUTIVO '01', @SEDE, '@TER', @IDTERCERO OUTPUT  
				SELECT @IDTERCERO = @SEDE + REPLACE(SPACE(8 - LEN(@IDTERCERO))+LTRIM(RTRIM(@IDTERCERO)),SPACE(1),0)
				SELECT TOP 1 @TIPO_DOC = AFI.TIPO_DOC FROM AFI, #dataTER WHERE AFI.DOCIDAFILIADO = #dataTER.NIT
				INSERT INTO TER (
				IDTERCERO
				,NIT			
				,RAZONSOCIAL
				,DIRECCION	
				,CIUDAD		
				,TELEFONOS	
				,EMAIL		
				,DV
				,TIPO_ID
				,NATJURIDICA
				,ESTADO
				,ENVIODICAJA
				,MODOCOPAGO
				,RUC
				,USUCREA
				,FECHACREA
				)
				SELECT
				   @IDTERCERO		
				  ,LTRIM(RTRIM(#dataTER.NIT))
				  ,LTRIM(RTRIM(#dataTER.RAZONSOCIAL))
				  ,LTRIM(RTRIM(#dataTER.DIRECCION	))	
				  ,#dataTER.CIUDAD
				  ,LTRIM(RTRIM(#dataTER.TELEFONOS))		
				  ,LTRIM(RTRIM(#dataTER.EMAIL))		
				  ,1
				  ,@TIPO_DOC			
				  ,'Juridica'			
				  ,'Activo'	
				  ,0
				  ,'Normal'	
				  ,#dataTER.NIT
				  ,@USUARIO
				  ,DBO.FNK_GETDATE()
				FROM #dataTER
				IF COALESCE(@PROCEDENCIA,'') = ''
				BEGIN
					INSERT INTO TEXCA (IDTERCERO, IDCATEGORIA, ESTADO)
					SELECT @IDTERCERO, DBO.FNK_VALORVARIABLE('TERCATCLIENTE') , 'Activo'
				END
				IF @PROCEDENCIA = 'EMPLEADOR'
				BEGIN
					INSERT INTO TEXCA (IDTERCERO, IDCATEGORIA, ESTADO)
					SELECT @IDTERCERO, DBO.FNK_VALORVARIABLE('TERCATEMPLEADOR') , 'Activo'
				END
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK, @IDTERCERO IDTERCERO
		RETURN
	END
    IF @METODO = 'INFO_CITA_RECAUDAR'
	BEGIN 
		SELECT @CONSECUTIVO = CONSECUTIVO, @CODCAJA = LTRIM(RTRIM(CODCAJA)), @INFO = INFO,
      @PASARELA=COALESCE(PASARELA,'')
		FROM OPENJSON(@PARAMETROS)
		WITH(	CONSECUTIVO	VARCHAR(16)		'$.CONSECUTIVO',INFO	VARCHAR(20)		'$.INFO',
				CODCAJA	VARCHAR(20)		'$.CODCAJA',
            PASARELA  VARCHAR(20)   '$.PASARELA')
  
      SET DATEFIRST 1
      SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO  FROM  USUSU
            INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
            INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
            WHERE  USUARIO = @USUARIO
	  DECLARE @VALIDACION INT
	  SELECT @VALIDACION =  DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME )

	 PRINT '@CODCAJA='+COALESCE(@CODCAJA,'NO TENGO CAJ')
	 PRINT '@CODCAJERO='+COALESCE(@CODCAJERO,'NO TENGO CAJERO')

	  INSERT INTO @TBLERRORES(ERROR)
	  SELECT 'No es cajero.' where COALESCE(@VALIDACION,0) = 0
	  UNION ALL SELECT 'La caja no existe.' where COALESCE(@VALIDACION,0) = 1
	  UNION ALL SELECT 'Caja Cerrada.' where COALESCE(@VALIDACION,0) = 2
	  UNION ALL SELECT 'Cajero diferente al que abrio la caja.' where COALESCE(@VALIDACION,0) = 3
	  UNION ALL SELECT 'No tiene turno asignado.' where COALESCE(@VALIDACION,0) = 4
	  UNION ALL SELECT 'El equipo no es caja.' where COALESCE(@VALIDACION,0) = 5
	  UNION ALL SELECT 'No tiene turno para este horario.' where COALESCE(@VALIDACION,0) = 6

	  UNION ALL SELECT 'ABRIR CAJA: Variable del Sistema IDCJAPERTURACAJA sin Definición.' FROM USVGS  WHERE IDVARIABLE = 'IDCJAPERTURACAJA' AND COALESCE(DATO,'') = '' 
	  UNION ALL SELECT 'ABRIR CAJA: Concepto de Caja definido en la variable del Sistema IDCJAPERTURACAJA, No existe en la tabla conceptos de caja.'  
				WHERE  (SELECT COUNT(*) FROM CPCJ INNER JOIN USVGS ON CPCJ.CODIGO = USVGS.DATO WHERE  IDVARIABLE = 'IDCJAPERTURACAJA') = 0
     
	  UNION ALL SELECT top 1 'No tiene turnos configurados. HOY...' WHERE (SELECT COUNT(1)  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) = 0

	  UNION ALL SELECT 'No tiene turno configurado para hoy Lunes.'
				WHERE (SELECT  top 1  TUR.LUNES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 1
	UNION ALL SELECT 'No tiene turno configurado para hoy Martes.'
				WHERE (SELECT  top 1  TUR.MARTES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 2
	UNION ALL SELECT  'No tiene turno configurado para hoy Miercoles.'
				WHERE (SELECT  top 1 TUR.MIERCOLES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 3
	UNION ALL SELECT  'No tiene turno configurado para hoy Jueves.'
				WHERE (SELECT  top 1 TUR.JUEVES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 4
	UNION ALL SELECT  'No tiene turno configurado para hoy Viernes.'
				WHERE (SELECT  top 1 TUR.VIERNES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 5
	UNION ALL SELECT  'No tiene turno configurado para hoy Sabado.'
				WHERE (SELECT  top 1 TUR.SABADO  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 6
	UNION ALL SELECT 'No tiene turno configurado para hoy Domingo.'
				WHERE (SELECT  top 1 TUR.DOMINGO  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 7

	UNION ALL SELECT 'La cita no tiene monto a recaudar.' WHERE (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA NOT IN ('FCJ','TFCJ') )>0 

	UNION ALL SELECT 'La Cita No Ha sido Facturada... Es Particular Debe Facturar Primero'
				WHERE @PROCEDENCIA = 'CITAS'
				AND (SELECT COUNT(*) FROM FTR WHERE NOREFERENCIA= @NOADMISION AND PROCEDENCIA='CI' AND ESTADO='P') <= 0
				AND @IDPLAN IN (
					SELECT DATO FROM USVGS 
					WHERE IDVARIABLE IN (
						'IDPLANPART', 'IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5' 
					)
				)

	UNION ALL SELECT 'El monto de copago, debe de ser mayor a 0'
				WHERE (SELECT VALORCOPAGO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO  )<=0
				AND @IDPLAN NOT IN (
					SELECT DATO FROM USVGS 
					WHERE IDVARIABLE IN (
						'IDPLANPART', 'IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5' 
					)
				)

	UNION ALL SELECT 'El monto de copago, debe de ser mayor a 0'
				WHERE @IDPLAN IN (SELECT DATO FROM USVGS WHERE IDVARIABLE IN ('IDPLANPART','IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5')) 
				AND (
					(SELECT COALESCE((SELECT VALORTOTAL FROM TFCJ WHERE NOADMISION = CIT.CONSECUTIVO), 0) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO AND CIT.TIPOCAJA = 'TFCJ' ) > 0
					OR
					(SELECT COALESCE((SELECT VALORTOTAL FROM FCJ WHERE NOADMISION = CIT.CONSECUTIVO), 0) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO AND CIT.TIPOCAJA = 'FCJ' ) > 0
				)

       IF (SELECT  COUNT(*) FROM @TBLERRORES ) > 0
       BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
       END

	   print 'aca'
      BEGIN TRY
					
		IF  DBO.FNK_VALORVARIABLE('GENERA_COPAGO_CITAS')='LLEGA' AND (DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU' OR @PASARELA='WOMPI')
			AND NOT EXISTS (SELECT * FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND COALESCE(GENEROCAJA,0) = 1)

		BEGIN
			print 'aqui omar'
			SELECT @IDPLAN = IDPLAN, @IDTERCEROCA = IDTERCEROCA FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO
			IF (SELECT DBO.FNK_VALORVARIABLE('IDTERCEROPARTICULAR')) = @IDTERCEROCA
			BEGIN
				SELECT @PART=1
			END
			SET @COMPANIA ='01'
			SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME())
			FROM USUSU WHERE USUARIO=@USUARIO
			SELECT @SEDE=IDSEDE FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO

			PRINT 'INGRESA A SPK_PAGOSCAJA_CIT'
			EXEC SPK_PAGOSCAJA_CIT @CONSECUTIVO,@SYS_COMPUTERNAME,@COMPANIA,@SEDE,@USUARIO,@PART

			UPDATE TFCJ SET TFCJ.VALORTOTAL = CIT.VALORCOPAGO FROM TFCJ, CIT WHERE TFCJ.NOADMISION = @CONSECUTIVO AND CIT.CONSECUTIVO = @CONSECUTIVO AND TFCJ.PROCEDENCIA = 'CITAS' 
		END
      ELSE
      BEGIN
         PRINT 'ALGO SALIO MAL...' 
      END 
		IF NOT EXISTS(SELECT  * FROM FCJ WHERE  NOADMISION = @CONSECUTIVO AND PROCEDENCIA='CITAS' ) 
			AND EXISTS (SELECT  * FROM TFCJ WHERE  NOADMISION = @CONSECUTIVO AND PROCEDENCIA='CITAS')
			AND ( DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU'  OR @PASARELA='WOMPI')
		BEGIN
		print 'aqui debió entrar'
			SELECT @PROCEDENCIA = TFCJ.PROCEDENCIA, @IDPLAN = TFCJ.IDPLAN ,@NOADMISION = NOADMISION, @CNSFACJ = CNSFACJ 
			FROM TFCJ WHERE  NOADMISION = @CONSECUTIVO

			SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  FROM  USUSU
				INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
				INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
			WHERE  USUARIO = @USUARIO
			EXEC SPK_TRAERECIB_CAJA @CNSFACJ,@CNSACJ, @SYS_COMPUTERNAME, '01',@IDSEDE,@USUARIO , 'COBRO'    
		END
			IF COALESCE(@INFO,'')=''
			BEGIN
			   SELECT 'OK'OK,--VALORTOTAL, VALORCOPAGO, N_FACTURA, NFACTURA
				   CIT.CONSECUTIVO, CASE WHEN FCJ.CERRADA = 1 THEN 'Cerrada' ELSE 'Abierta' END [ESTADO_RECIBO],AFI.TIPO_DOC, TGEN.DESCRIPCION [DOCNOMBRE], AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION
				   , AFI.CELULAR,AFI.EDAD, CIT.FECHA, CIT.FECHASOL, CIT.CUMPLIDA, CIT.TIPOCAJA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA
				   ,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN ,AFI.NIVELSOCIOEC , T2.DESCRIPCION [NIVELDESC], CIT.FACTURADA
				   , MED.NOMBRE, @CODCAJA CODCAJA , FCJ.CNSFACJ,FCJ.CNSACJ, FCJ.CERRADA
				, (SELECT COALESCE(SUM(VALORTOTAL),0) FROM FCJ WHERE FCJ.NOADMISION = CIT.CONSECUTIVO  AND FCJ.CODCAJA = @CODCAJA AND FCJ.ESTADO<>'A') TOTALFCJ
				, (SELECT COALESCE( SUM(VALOR),0) FROM PCJ WHERE CNSACJ = FCJ.CNSACJ AND CNSFACJ = FCJ.CNSFACJ  AND FCJ.CODCAJA = @CODCAJA  AND FCJ.ESTADO<>'A' ) TOTAL_PAGADO
				 , CASE WHEN CIT.TIPOCAJA = 'TFCJ' THEN 'Recibo sin enviar a caja' 
					   WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA  AND FCJ.ESTADO<>'A')<> 1 THEN 'Recibo sin recaudar'
					   WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA  AND FCJ.ESTADO<>'A')= 1 THEN 'Recibo recaudado' ELSE '' END [ESTADO_CAJA]
				   , MED.NOMBRE AS NOMBREMED
				   , MED.NOMBRE AS PROFESIONAL
				   , MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION
				   ,SER.IDSERVICIO, SER.DESCSERVICIO, CIT.ATENCION, CIT.URGENCIA,CIT.CLASEORDEN,CIT.ESPROGRAMAS,CIT.OBSERVACIONES
				   ,CEN.DESCRIPCION [CENDESCRIPCION] ,CIT.CCOSTO, CASE WHEN CONVERT (DATE,CIT.FECHA) = CONVERT(DATE,DBO.FNK_GETDATE()) THEN '1' ELSE 0 END TIEMPO_LLEGADA
				   ,PNUMAUTORIZA_OBL=CAST(COALESCE(PPT.PNUMAUTORIZA_OBL, 0) AS BIT), CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
																CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
																CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
																CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
																CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
					  -- THEN  CASE WHEN CIT.TIPOCAJA = 'TFCJ' THEN  (SELECT VALORTOTAL FROM TFCJ WHERE NOADMISION = CIT.CONSECUTIVO) 
					  --WHEN CIT.TIPOCAJA = 'FCJ' THEN  (SELECT VALORTOTAL FROM FCJ WHERE NOADMISION = CIT.CONSECUTIVO) END ELSE CIT.VALORCOPAGO END  VALORCOPAGO
					   THEN  CASE WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0))) 
					  WHEN CIT.TIPOCAJA = 'FCJ' THEN ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0)) END  VALORCOPAGO
				, COALESCE(CIT.VALORCOPAGO,0)[COPAGO], COALESCE(CIT.VALORTOTAL,0) [VALORTOTAL]
				,COPAGOIND=CAST(COALESCE(PPT.COPAGOIND, 0) AS BIT), CIT.IDPESPECIAL, MPE.DESCESPECIAL ,CIT.MODALIDAD
				, CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
																CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
																CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
																CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
																CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) THEN 'PARTICULAR' ELSE 'ASEGURADO' END [TIPO_REGISTRO]
				, CASE WHEN COALESCE(CIT.FECHALLEGA, '') = '' AND COALESCE(CIT.CUMPLIDA, '') <> 1 AND COALESCE(CIT.TIPOCAJA,'') = '' THEN 'SIN LLEGAR'
						WHEN COALESCE(CIT.FECHALLEGA, '') = '' AND COALESCE(CIT.CUMPLIDA, '') = 1 AND COALESCE(CIT.TIPOCAJA,'') = '' THEN 'CUMPLIDA'
				ELSE 'OK' END ESTADO_VER
				, COALESCE(CIT.NFACTURA,'') NFACTURA , COALESCE(CIT.N_FACTURA,'') N_FACTURA, CASE COALESCE(NFACTURA,'') WHEN '' THEN 'NO' ELSE 'SI' END TIENE_RECIBO
				   FROM CIT 
				   INNER JOIN AFI     ON CIT.IDAFILIADO   = AFI.IDAFILIADO
				   INNER JOIN PLN     ON CIT.IDPLAN       = PLN.IDPLAN
				   INNER JOIN TER     ON CIT.IDTERCEROCA  = TER.IDTERCERO
				   INNER JOIN MED     ON CIT.IDMEDICO     = MED.IDMEDICO
				   INNER JOIN SER     ON CIT.IDSERVICIO   = SER.IDSERVICIO
				   INNER JOIN MES     ON MED.IDEMEDICA    = MES.IDEMEDICA
				 LEFT JOIN FCJ     ON CIT.CONSECUTIVO   = FCJ.NOADMISION AND FCJ.PROCEDENCIA='CITAS' AND FCJ.ESTADO<>'A'
					LEFT JOIN CEN     ON CIT.CCOSTO       = CEN.CCOSTO
					LEFT JOIN TGEN    ON AFI.TIPO_DOC     = TGEN.CODIGO AND TGEN.TABLA = 'General' AND TGEN.CAMPO = 'TIPOIDENT'
					LEFT JOIN PPT     ON PPT.IDTERCERO    = CIT.IDTERCEROCA AND PPT.IDPLAN=CIT.IDPLAN
				 LEFT JOIN MPE     ON CIT.IDPESPECIAL  = MPE.IDPESPECIAL
				 LEFT JOIN TGEN T2 ON AFI.NIVELSOCIOEC = T2.CODIGO AND T2.TABLA = 'General' AND T2.CAMPO = 'NIVELSOCIOECO'
			   WHERE  CIT.CONSECUTIVO = @CONSECUTIVO
		   END
      END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
	  PRINT 'INFO_cita_recaudar ====>'  + @INFO
	  IF COALESCE(@INFO,'') = ''
	  BEGIN
	        SELECT 'OK' OK
		END
      RETURN
	END
    IF @METODO = 'REPORTE_BOLETA'
	BEGIN 
		SELECT @N_FACTURA = N_FACTURA
		FROM OPENJSON(@PARAMETROS)
		WITH(	N_FACTURA	VARCHAR(16)		'$.N_FACTURA')
		/* FTR.TIPOFIN = C: Factura  -  N: Boleta */
		SELECT 'OK' OK ,  FTR.N_FACTURA, FTR.IDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION [AFI_DIREC], AFI.TIPO_DOC, AFI.DOCIDAFILIADO,FTR.IDTERCERO, TER.RAZONSOCIAL, TER.NIT, TER.TIPO_ID
		, TER.DIRECCION [TER_DIREC], FTR.FECHAFAC, FTR.TIPOFIN
		FROM FTR 
			INNER JOIN AFI ON FTR.IDAFILIADO = AFI.IDAFILIADO
			INNER JOIN TER ON FTR.IDTERCERO = TER.IDTERCERO
		WHERE FTR.N_FACTURA = @N_FACTURA

		SELECT FTRD.VR_TOTAL,FTRD.REFERENCIA, SER.DESCSERVICIO, FTRD.ANEXO, FTRD.CANTIDAD, FTRD.VALOR, FTRD.VLR_SERVICI, FTRD.VR_TOTAL*0.18 VLR_IGV, FTRD.NOADMISION
		, FTRD.NOPRESTACION, FTRD.NOITEM   FROM FTRD 
		INNER JOIN SER ON FTRD.REFERENCIA = SER.IDSERVICIO
		WHERE FTRD.N_FACTURA = @N_FACTURA

		SELECT SUM (FTRD.VR_TOTAL) TOTAL,  SUM(FTRD.VIVA) VLR_IGV , SUM(VALOR) VALOR  FROM FTRD 
		WHERE FTRD.N_FACTURA = @N_FACTURA

	END
    IF @METODO = 'VALIDA_DATOS'
	BEGIN 
		SELECT @IDAFILIADO = IDAFILIADO , @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH(	IDAFILIADO	VARCHAR(16)		'$.IDAFILIADO'
				, CONSECUTIVO VARCHAR(20)  '$.CONSECUTIVO')

		SELECT 'OK' OK , 
		CASE WHEN EXISTS(SELECT 1 FROM USVGS WHERE IDVARIABLE LIKE 'IDPLANPART%' AND DATO=AFI.IDPLAN) AND AFI.IDADMINISTRADORA=DBO.FNK_VALORVARIABLE('IDTERCEROPARTICULAR') THEN 1 ELSE 0 END AS PART 
		, DBO.FNK_VALORVARIABLE('IXCOUNTRY')  IXCOUNTRY
		,CRONICOS.ESTADO [ESTADOCRO],CROPLN.IDPLAN [IDPLAN_CRO], CROPLN.DESCPLAN [DESCPLAN_CRO]
		, COALESCE(PPT.CAMBIACONT,0)CAMBIACONT, COALESCE(PPT.COPAGOIND,0)COPAGOIND
		FROM AFI
		LEFT JOIN CRONICOS ON AFI.IDAFILIADO = CRONICOS.IDAFILIADO
		LEFT JOIN PLN CROPLN ON CRONICOS.IDPLAN = CROPLN.IDPLAN 
		LEFT JOIN PPT ON AFI.IDADMINISTRADORA = PPT.IDTERCERO AND AFI.IDPLAN = PPT.IDPLAN
		WHERE AFI.IDAFILIADO = @IDAFILIADO

		SELECT DISTINCT AFIPAT.IDPATOLOGIA, PAT.DESCRIPCION, AFIPAT.FECHAINI
		FROM AFIPAT 
			INNER JOIN PAT ON PAT.IDPATOLOGIA=AFIPAT.IDPATOLOGIA
			INNER JOIN AFI ON AFI.IDAFILIADO=AFIPAT.IDAFILIADO
		WHERE AFI.IDAFILIADO=@IDAFILIADO AND AFI.CRONICO=1

		/* Preexistencias*/
		SELECT AFIDX.IDAFILIADO, AFIDX.IDDX, AFIDX.FECHA, AFIDX.USUARIO, MDX.DESCRIPCION
		FROM AFIDX  INNER JOIN MDX ON AFIDX.IDDX = MDX.IDDX
		WHERE IDAFILIADO = @IDAFILIADO

        SELECT CIT.CONSECUTIVO, CIT.IDMEDICO, MED.NOMBRE, COALESCE(CIT.IDEMEDICA, MED.IDEMEDICA) IDEMEDICA, MES.DESCRIPCION ESPECIALIDAD, CIT.IDSEDE, SED.DESCRIPCION AS DESCSEDE, COALESCE(SED.EXTRAMURAL,0) EXTRAMURAL
		, ROL.IDROL, ROL.DESCRIPCION
        FROM CIT 
        INNER JOIN MED ON MED.IDMEDICO=CIT.IDMEDICO
        LEFT JOIN MES ON MES.IDEMEDICA=COALESCE(CIT.IDEMEDICA, MED.IDEMEDICA)
        LEFT JOIN SED ON CIT.IDSEDE=SED.IDSEDE
		LEFT JOIN ROL ON CIT.IDROL = ROL.IDROL
        WHERE CONSECUTIVO=@CONSECUTIVO

		IF EXISTS( SELECT 1 FROM AFIPE WHERE IDAFILIADO =  @IDAFILIADO) 
			AND EXISTS (SELECT 1 FROM TGEN WHERE TGEN.TABLA = 'CIT' AND TGEN.CAMPO = 'CLASEORDEN' AND COALESCE(VALOR1,0) = 1 )
		BEGIN
			SELECT TOP 1 'SI' MODELO, TGEN.CODIGO CLASEORDEN, TGEN.DESCRIPCION DESCRIPCION FROM TGEN WHERE TGEN.TABLA = 'CIT' AND TGEN.CAMPO = 'CLASEORDEN' AND COALESCE(VALOR1,0) = 1
		END
		ELSE
		BEGIN
			SELECT 'NO' MODELO
		END

	END	
	IF @METODO = 'INFO_CITA'
	BEGIN 
		SELECT @CONSECUTIVO = CONSECUTIVO, @PROCEDENCIA = PROCEDENCIA
		FROM OPENJSON(@PARAMETROS)
		WITH(CONSECUTIVO	VARCHAR(16)		'$.CONSECUTIVO'
			,PROCEDENCIA	VARCHAR(20)		'$.PROCEDENCIA')

		IF DBO.FNK_VALORVARIABLE('IXCOUNTRY') = 'PERU' AND @PROCEDENCIA = 'FACTURAR'
		BEGIN
			IF  DBO.FNK_VALORVARIABLE('GENERA_COPAGO_CITAS')='LLEGA' AND  DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU' 
			AND NOT EXISTS (SELECT 1 FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND COALESCE(GENEROCAJA,0) = 1)
			BEGIN
				PRINT 'ENTRA A CREAR TFCJ =======>'
				SELECT @IDPLAN = IDPLAN, @IDTERCEROCA = IDTERCEROCA FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO
				IF EXISTS(SELECT * FROM USVGS WHERE IDVARIABLE LIKE 'IDPLANPART%' AND DATO=@IDPLAN) AND (SELECT DBO.FNK_VALORVARIABLE('IDTERCEROPARTICULAR')) = @IDTERCEROCA
				BEGIN
					SELECT @PART=1
				END
				SET @COMPANIA ='01'
				SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME())
				FROM USUSU WHERE USUARIO=@USUARIO
				SELECT @SEDE=IDSEDE FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO

				PRINT 'INGRESA A SPK_PAGOSCAJA_CIT'
				EXEC SPK_PAGOSCAJA_CIT @CONSECUTIVO,@SYS_COMPUTERNAME,@COMPANIA,@SEDE,@USUARIO,@PART

				UPDATE TFCJ SET TFCJ.VALORTOTAL = CIT.VALORCOPAGO FROM TFCJ, CIT WHERE TFCJ.NOADMISION = @CONSECUTIVO AND CIT.CONSECUTIVO = @CONSECUTIVO AND TFCJ.PROCEDENCIA = 'CITAS' 
			END
			IF NOT EXISTS(SELECT  * FROM FCJ WHERE  NOADMISION = @CONSECUTIVO AND PROCEDENCIA='CITAS' ) 
				AND EXISTS (SELECT  * FROM TFCJ WHERE  NOADMISION = @CONSECUTIVO AND PROCEDENCIA='CITAS')
				AND  DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU' 
			BEGIN
				PRINT 'ENTRA A CREAR FCJ =======>'
				SELECT @PROCEDENCIA = TFCJ.PROCEDENCIA, @IDPLAN = TFCJ.IDPLAN ,@NOADMISION = NOADMISION, @CNSFACJ = CNSFACJ 
				FROM TFCJ WHERE  NOADMISION = @CONSECUTIVO

				SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  FROM  USUSU
					INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
					INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
				WHERE  USUARIO = @USUARIO
				EXEC SPK_TRAERECIB_CAJA @CNSFACJ,@CNSACJ, @SYS_COMPUTERNAME, '01',@IDSEDE,@USUARIO , 'COBRO'  
				SELECT @VIVA = (SELECT  ROUND((CIT.VALORTOTAL*0.18),2) FROM  CIT WHERE CONSECUTIVO = @CONSECUTIVO)
				SELECT @VALORTOTAL = (SELECT CIT.VALORTOTAL FROM  CIT WHERE CONSECUTIVO = @CONSECUTIVO)
				UPDATE FCJ SET  FCJ.VALORTOTAL = @VALORTOTAL FROM FCJ WHERE  FCJ.NOADMISION = @CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA
				--UPDATE FCJ SET FCJ.N_FACTURA = @N_FACTURA  , FCJ.RECAUDO = 1, USURECAUDO = @USUARIO, FCJ.VALORTOTAL = @VALORTOTAL FROM FCJ WHERE  FCJ.NOADMISION = @CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA
			END
		END 
		SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  FROM  USUSU
					INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
					INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
				WHERE  USUARIO = @USUARIO
		SELECT -- CNSFACJ CODCAJA TOTALFCJ VLR_FACTURAR
			CIT.CONSECUTIVO,AFI.TIPO_DOC, TGEN.DESCRIPCION [DOCNOMBRE], AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION, /*COALESCE(@CNSFACJ, NULL)CNSFACJ,*/ COALESCE(@CODCAJA, NULL)CODCAJA
			, AFI.CELULAR,AFI.EDAD, CIT.FECHA, CIT.FECHASOL, CIT.CUMPLIDA, CIT.TIPOCAJA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA, CIT.FECHACONFIRMA
			,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN ,AFI.NIVELSOCIOEC , T2.DESCRIPCION [NIVELDESC], CIT.FACTURADA
			, MED.NOMBRE, CIT.FECHALLEGA,CIT.USUARIOLLEGA,  COALESCE(CIT.VALORTOTAL,0) VALORTOTAL, COALESCE(CIT.VALORCOPAGO,0) VALORCOPAGO, COALESCE(CIT.DESCUENTO, 0)DESCUENTO
         , (COALESCE(CIT.VALORTOTAL,0)  - COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END, 0) ) * COALESCE(CIT.CANTIDADC,1) VLR_FACTURAR
		 , (COALESCE(CIT.VALORTOTAL,0) - ((COALESCE(CIT.VALORCOPAGO,0) + COALESCE(CIT.DESCUENTO,0))*COALESCE(CIT.CANTIDADC,1))) [VLR_A_FACTURAR]
         , CASE WHEN COALESCE(CIT.N_FACTURA,'')<>'' THEN '1'
               WHEN (SELECT TOP 1 FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND ESTADO='P') = 1 THEN '2'
               END [ESTADO_RECAUDADO_FACTURADO]
         , CIT.N_FACTURA
         ,(SELECT TOP 1  FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND ESTADO='P')[FCJ_CERRADA]
         ,(SELECT TOP 1  FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND ESTADO='P') [FCJ_ESTADO]
			, MED.NOMBRE AS NOMBREMED
			, MED.NOMBRE AS PROFESIONAL
			, MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION
			,SER.IDSERVICIO, SER.DESCSERVICIO, CIT.ATENCION, CIT.URGENCIA,CIT.CLASEORDEN,CIT.ESPROGRAMAS,CIT.OBSERVACIONES
			,CEN.DESCRIPCION [CENDESCRIPCION] ,CIT.CCOSTO, CASE WHEN CONVERT (DATE,CIT.FECHA) = CONVERT(DATE,DBO.FNK_GETDATE()) THEN '1' ELSE 0 END TIEMPO_LLEGADA
			,PNUMAUTORIZA_OBL=CAST(COALESCE(PPT.PNUMAUTORIZA_OBL, 0) AS BIT)
         ,COPAGOIND=CAST(COALESCE(PPT.COPAGOIND, 0) AS BIT), CIT.IDPESPECIAL, MPE.DESCESPECIAL ,CIT.MODALIDAD--, FTR.N_FACTURA
		 , COALESCE(HACTRAND.CNSHACTRAN,'') CNSHACTRAN , COALESCE(HACTRAND.SIRAS,'') SIRAS,
       CASE WHEN EXISTS(SELECT * FROM USVGS WHERE IDVARIABLE LIKE 'IDPLANPART%' AND DATO=CIT.IDPLAN) AND CIT.IDTERCEROCA=DBO.FNK_VALORVARIABLE('IDTERCEROPARTICULAR') THEN 1 ELSE 0 END AS PART
	   , FCJ.CNSFACJ,FCJ.CNSACJ, FCJ.CERRADA
            , (SELECT COALESCE(SUM(VALORTOTAL),0) FROM FCJ WHERE FCJ.NOADMISION = CIT.CONSECUTIVO  AND FCJ.CODCAJA = @CODCAJA) TOTALFCJ
            , (SELECT COALESCE( SUM(VALOR),0) FROM PCJ WHERE CNSACJ = FCJ.CNSACJ AND CNSFACJ = FCJ.CNSFACJ  AND FCJ.CODCAJA = @CODCAJA ) TOTAL_PAGADO
			FROM CIT 
			INNER JOIN AFI     ON CIT.IDAFILIADO   = AFI.IDAFILIADO
			INNER JOIN PLN     ON CIT.IDPLAN       = PLN.IDPLAN
			INNER JOIN TER     ON CIT.IDTERCEROCA  = TER.IDTERCERO
			INNER JOIN MED     ON CIT.IDMEDICO     = MED.IDMEDICO
			INNER JOIN SER     ON CIT.IDSERVICIO   = SER.IDSERVICIO
			INNER JOIN MES     ON MED.IDEMEDICA    = MES.IDEMEDICA
			LEFT JOIN FCJ     ON CIT.CONSECUTIVO   = FCJ.NOADMISION AND FCJ.ESTADO='P'-- AND FCJ.CODCAJA = @CODCAJA
			LEFT JOIN FTR     ON CIT.CONSECUTIVO = FTR.NOREFERENCIA AND FTR.ESTADO <> 'A'
			LEFT JOIN CEN     ON CIT.CCOSTO       = CEN.CCOSTO
			LEFT JOIN TGEN    ON AFI.TIPO_DOC     = TGEN.CODIGO AND TGEN.TABLA = 'General' AND TGEN.CAMPO = 'TIPOIDENT'
			LEFT JOIN PPT     ON PPT.IDTERCERO    = CIT.IDTERCEROCA AND PPT.IDPLAN=CIT.IDPLAN
			LEFT JOIN MPE     ON CIT.IDPESPECIAL  = MPE.IDPESPECIAL
			LEFT JOIN TGEN T2 ON AFI.NIVELSOCIOEC = T2.CODIGO AND T2.TABLA = 'General' AND T2.CAMPO = 'NIVELSOCIOECO'
			LEFT OUTER JOIN HACTRAND	ON CIT.CONSECUTIVO = HACTRAND.NOREFERENCIA AND HACTRAND.PROCEDENCIA ='CI'
		WHERE  CIT.CONSECUTIVO = @CONSECUTIVO
	END
    IF @METODO = 'INFO_CITA_PARTICULAR'
	BEGIN 
		SELECT @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH(CONSECUTIVO	VARCHAR(16)		'$.CONSECUTIVO')
  
      SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  FROM  USUSU
            INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
            INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
            WHERE  USUARIO = @USUARIO

      IF 1 = 2
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita ya envio Copago.'
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      BEGIN TRY
		   SELECT 'OK'OK, CIT.DESCUENTO, CIT.VALORTOTAL, CIT.VALOREXEDENTE, CASE WHEN COALESCE(CIT.DESCUENTO, NULL) IS NULL THEN 'SINDESCEUNTO' ELSE 'CONDESCUENTO' END [DATO_DESCUENTO]  FROM
         CIT WHERE  CONSECUTIVO = @CONSECUTIVO
      END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      SELECT 'OK' OK
      RETURN
	END
	IF @METODO = 'DATO_IMPRIMIR_FACTURA'
	BEGIN
	   SELECT @CONSECUTIVO =  CONSECUTIVO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO')
          SELECT @N_FACTURA = N_FACTURA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
		   SELECT 'OK'OK, CIT.FACTURABLE, CIT.FACTURADA,  CIT.CONSECUTIVO,AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION
				   , AFI.CELULAR, AFI.TELEFONORES,AFI.EDAD, COALESCE( AFI.IDALTERNA,'')IDALTERNA , CIUAFI.NOMBRE [CIU_NOMBRE], AFI.EMAIL, AFI.IDTIPOAFILIACION,AFI.ESTADO_CIVIL
				   ,CIUMED.NOMBRE [CIU_NOMBRE_MED], NIVELSOCIOEC, CIT.NUMCARNET, AFI.TIPOAFILIADO
               , CASE   WHEN AFI.TIPOAFILIADO = 'C' THEN 'Cotizante'
                        WHEN AFI.TIPOAFILIADO = 'B' THEN 'Beneficiario'
                        WHEN AFI.TIPOAFILIADO = 'J' THEN 'Jubilado'
                        WHEN AFI.TIPOAFILIADO = 'A' THEN 'Adicional'
                        WHEN AFI.TIPOAFILIADO = 'S' THEN 'Sustitución Pensional'
                        WHEN AFI.TIPOAFILIADO = 'Sb' THEN 'Subsidiado'
                        WHEN AFI.TIPOAFILIADO = 'SR' THEN 'Sin régimen'
                        WHEN AFI.TIPOAFILIADO = 'TA' THEN 'Tomador/Amparado'
                        WHEN AFI.TIPOAFILIADO = 'RE' THEN 'Régimen Especiales o de Excepción'
                        WHEN AFI.TIPOAFILIADO = 'SN' THEN 'S/N'
                        WHEN AFI.TIPOAFILIADO = 'S/' THEN 'S/N'
                        WHEN AFI.TIPOAFILIADO = 'S/N' THEN 'S/N' ELSE '' END [TIPOAFI_NOMBRE]
				   ,CONVERT (DATE ,CIT.FECHA) FECHA, CONVERT(varchar,CIT.FECHA,104) FECHAFORMATO, CONVERT (DATETIME ,CIT.FECHA) FECHACOMPLETA, DATEPART(HOUR, CIT.FECHA) HORA
			   	   , Format(CIT.FECHA,'dd/MM/yyyy hh:mm tt') AS FECHA_HORARIO
				   ,CONVERT(DATE, CIT.FECHASOL)FECHASOL
				   , CIT.CUMPLIDA, CIT.TIPOCAJA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA, CIT.OBSERVACIONES, CIT.IDSEDE, SED.DESCRIPCION [SED_NOMBRE], SED.DIRECCION [SED_DIRECCION]
				   , SED.TELEFONOS [SED_TELEFONOS],  CIUSED.NOMBRE [SED_CIUDAD], SED.NIT [SED_NIT], SED.DV [SED_DV]
				   ,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN,PLN.TIPOSISTEMA, CONVERT(varchar,CIT.FECHASOL,104) FECHASOLFORMATO, CONVERT(varchar,CIT.FECHAATENCION,104) FECHAATENCIONFORMATO
				   , MED.NOMBRE, MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION, MED.DIRECCION [MED_DIRECCION], MED.TELEFONOS
				   ,SER.IDSERVICIO, SER.DESCSERVICIO, @USUARIO USUARIO
               , CONVERT(varchar,  DBO.FNK_GETDATE(), 120) FECHA_ACTUAL, Format(CIT.FECHASOL,'dd/MM/yyyy hh:mm tt') AS FECHASOL_HORARIO
               ,  CONVERT(varchar,FTR.FECHAFAC,104) FECHAFACTURA ,FTR.N_FACTURA, FTR.FECHAFAC,FTR.USUARIOFACTURA,FTR.ESTADO, dbo.FNK_MontoEscrito((COALESCE(CIT.VALORTOTAL,0)-COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0))) [MONTO_TEXTO]
			   , (COALESCE(CIT.VALORTOTAL,0)-COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0)) VR_TOTAL 
			   , CONVERT(VARCHAR, CONVERT(VARCHAR, CAST((COALESCE(CIT.VALORTOTAL,0)-COALESCE(CIT.DESCUENTO,0))  AS MONEY), 1)) [VR_TOTAL_FORMATO]/*, dbo.FNK_MontoEscrito(FTR.VR_TOTAL) [MONTO_TEXTO], FTR.VR_TOTAL, CONVERT(VARCHAR, CONVERT(VARCHAR, CAST(FTR.VR_TOTAL  AS MONEY), 1)) [VR_TOTAL_FORMATO] */
               ,TER.NIT,TER.IDALTERNA2,CIU.NOMBRE [CIUNOMBRE], TER.DV,FTR.VALORCOPAGO [RECUPERACION],CIT.DESCUENTO,PPT.IDCONTRATO
               , CONCAT   (floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365),' años ', floor((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12), ' meses '
			   , floor((((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12)-floor((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12))*(365/12)), ' días' ) AS EDAD_LARGO
			   FROM CIT 
               INNER JOIN FTR ON CIT.N_FACTURA = FTR.N_FACTURA
				   INNER JOIN AFI ON CIT.IDAFILIADO =  AFI.IDAFILIADO
				   INNER JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
				   INNER JOIN TER ON CIT.IDTERCEROCA = TER.IDTERCERO
				   INNER JOIN MED ON CIT.IDMEDICO =  MED.IDMEDICO
				   INNER JOIN SER ON CIT.IDSERVICIO = SER.IDSERVICIO
				   INNER JOIN MES ON MED.IDEMEDICA = MES.IDEMEDICA
				   INNER JOIN SED ON SED.IDSEDE = CIT.IDSEDE
               LEFT JOIN CIU ON TER.CIUDAD = CIU.CIUDAD
               LEFT JOIN PPT ON FTR.IDTERCERO = PPT.IDTERCERO AND FTR.IDPLAN = PPT.IDPLAN
				   LEFT JOIN CIU CIUSED ON SED.CIUDAD = CIUSED.CIUDAD
				   LEFT JOIN CIU CIUAFI ON AFI.CIUDAD = CIUAFI.CIUDAD
				   LEFT JOIN CIU CIUMED ON MED.CIUDAD = CIUMED.CIUDAD
			   WHERE  CIT.CONSECUTIVO = @CONSECUTIVO

         SELECT FTRD.CNSFTR, FTRD.PREFIJO,PRE.NOM_PREFIJO, FTRD.IDPROVEEDOR, FTRD.N_CUOTA, FTRD.DB_CR, FTRD.AREAPRESTACION, FTRD.VR_TOTAL, FTRD.CCOSTO
               , FTRD.ANEXO, FTRD.REFERENCIA, FTRD.CANTIDAD, FTRD.VALOR, FTRD.VLR_SERVICI, FTRD.NOADMISION, FTRD.NOPRESTACION, FTRD.N_FACTURA , 0 ADMINISTRATIVO, 0 RECUPERACION
         FROM FTRD 
         LEFT JOIN PRE ON FTRD.PREFIJO = PRE.PREFIJO
         WHERE  N_FACTURA = @N_FACTURA 

         SELECT SUM (VLR_SERVICI) VLR_SERVICI, SUM (VALOR) VALOR  FROM FTRD WHERE   N_FACTURA = @N_FACTURA 
	END
--query2
--query2
	IF @METODO = 'DATO_IMPRIMIR_RECIBO_ASEGURADO'
	BEGIN
	   SELECT @CONSECUTIVO =  CONSECUTIVO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO')
		SELECT @CODCAJA = CODCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
          SELECT @CNSFACJ = CNSFACJ FROM FCJ WHERE  NOADMISION = @CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA
		  SELECT  --DESCUENTO
          'OK'OK, CIT.FACTURABLE, CIT.FACTURADA,  CIT.CONSECUTIVO,AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION, CIT.IDPLAN,CIT.IDTERCEROCA
				            , AFI.CELULAR, AFI.TELEFONORES,AFI.EDAD, COALESCE( AFI.IDALTERNA,'')IDALTERNA , CIUAFI.NOMBRE [CIU_NOMBRE], AFI.EMAIL, AFI.IDTIPOAFILIACION,AFI.ESTADO_CIVIL
				            ,CIUMED.NOMBRE [CIU_NOMBRE_MED], NIVELSOCIOEC, CIT.NUMCARNET, AFI.TIPOAFILIADO
                        , CASE   WHEN AFI.TIPOAFILIADO = 'C' THEN 'Cotizante'
                                 WHEN AFI.TIPOAFILIADO = 'B' THEN 'Beneficiario'
                                 WHEN AFI.TIPOAFILIADO = 'J' THEN 'Jubilado'
                                 WHEN AFI.TIPOAFILIADO = 'A' THEN 'Adicional'
                                 WHEN AFI.TIPOAFILIADO = 'S' THEN 'Sustitución Pensional'
                                 WHEN AFI.TIPOAFILIADO = 'Sb' THEN 'Subsidiado'
                                 WHEN AFI.TIPOAFILIADO = 'SR' THEN 'Sin régimen'
                                 WHEN AFI.TIPOAFILIADO = 'TA' THEN 'Tomador/Amparado'
                                 WHEN AFI.TIPOAFILIADO = 'RE' THEN 'Régimen Especiales o de Excepción'
                                 WHEN AFI.TIPOAFILIADO = 'SN' THEN 'S/N'
                                 WHEN AFI.TIPOAFILIADO = 'S/' THEN 'S/N'
                                 WHEN AFI.TIPOAFILIADO = 'S/N' THEN 'S/N' ELSE '' END [TIPOAFI_NOMBRE]
         ,CONVERT (DATE ,CIT.FECHA) FECHA, CONVERT(varchar,CIT.FECHA,104) FECHAFORMATO, CONVERT (DATETIME ,CIT.FECHA) FECHACOMPLETA, DATEPART(HOUR, CIT.FECHA) HORA
         , Format(CIT.FECHA,'dd/MM/yyyy hh:mm tt') AS FECHA_HORARIO,   CONVERT(varchar,CIT.FECHA,104) FECHACITA
         ,CIT.OBSERVACIONES, CIT.IDSEDE, SED.DESCRIPCION [SED_NOMBRE], SED.DIRECCION [SED_DIRECCION]
         , SED.TELEFONOS [SED_TELEFONOS],  CIUSED.NOMBRE [SED_CIUDAD], SED.NIT [SED_NIT], SED.DV [SED_DV]
         ,FCJ.N_RECIBO , FCJ.CNSFACJ, FCJ.CODCAJA, FCJ.CLASE_FAC, FCJ.NOADMISION, FCJ.VALORTOTAL,FCJ.ESTADO, FCJ.CERRADA, FCJ.OBSERVACION
         ,CIT.N_FACTURA, FCJ.USUARIO USUARIO, USUSU.NOMBRE [USUSU_NOMBRE], (SELECT CODCAJERO FROM USUSU WHERE USUARIO =  FCJ.USUARIO ) [COD_CAJERO]
         FROM CIT 
            INNER JOIN FCJ ON CIT.CONSECUTIVO = FCJ.NOADMISION AND FCJ.CODCAJA = @CODCAJA AND FCJ.PROCEDENCIA='CITAS' AND COALESCE(FCJ.ESTADO,'')<>'A'
            INNER JOIN AFI ON CIT.IDAFILIADO =  AFI.IDAFILIADO
            INNER JOIN MED ON CIT.IDMEDICO =  MED.IDMEDICO
            INNER JOIN MES ON MED.IDEMEDICA = MES.IDEMEDICA
            INNER JOIN SED ON SED.IDSEDE = CIT.IDSEDE
            INNER JOIN USUSU ON FCJ.USUARIO = USUSU.USUARIO
            LEFT JOIN CIU CIUSED ON SED.CIUDAD = CIUSED.CIUDAD
            LEFT JOIN CIU CIUAFI ON AFI.CIUDAD = CIUAFI.CIUDAD
            LEFT JOIN CIU CIUMED ON MED.CIUDAD = CIUMED.CIUDAD
         WHERE  CIT.CONSECUTIVO = @CONSECUTIVO

         SELECT FCJ.NOADMISION, FCJD.CONCEPTO,  CPCJ.DESCRIPCION CONCEPTO_DESC,  FCJD.VALORUNITARIO, FCJD.CANTIDAD, FCJD.VALORTOTAL, FCJD.DCTO, FCJD.VLRDESCUENTO FROM FCJ
         INNER JOIN FCJD ON FCJ.CNSFACJ = FCJD.CNSFACJ AND FCJ.CODCAJA = FCJD.CODCAJA  
         INNER JOIN CPCJ ON FCJD.CONCEPTO = CPCJ.CODIGO
         WHERE  NOADMISION = @CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA

         SELECT PCJ.CODCAJA, PCJ.CNSPCJ, PCJ.CNSFACJ, PCJ.TIPOPAGO, FPA.DESCRIPCION, PCJ.VALOR, PCJ.FECHA, PCJ.CNSACJ,PCJ.BANCO,BCO.DESCRIPCION [BANCO_DESC], PCJ.NUMEROAUTORIZA, PCJ.NUMERODOCUMENTO
         FROM  PCJ 
            INNER JOIN FPA ON PCJ.TIPOPAGO=  FPA.FORMAPAGO 
            LEFT JOIN BCO ON PCJ.BANCO = BCO.BANCO
         WHERE  CODCAJA = @CODCAJA AND CNSFACJ = @CNSFACJ

          SELECT SUM(PCJ.VALOR) VALOR_FPA FROM PCJ  
          WHERE  CODCAJA = @CODCAJA AND CNSFACJ = @CNSFACJ

          SELECT TER.RAZONSOCIAL, FCJPCXC.CNSFACJ, FCJPCXC.CODCAJA, FCJPCXC.CNSCXC, FCJPCXC.N_FACTURA, FCJPCXC.ITEM_FCXCDV, FCJPCXC.IDTERCERO, FCJPCXC.VALOR, FCJPCXC.ESTADO, FCJPCXC.CNSFPAG
          , FCJPCXC.TIPOCXC, FCJPCXC.VLR_IMPUESTOS FROM  FCJPCXC
         LEFT JOIN TER ON FCJPCXC.IDTERCERO = TER.IDTERCERO
         WHERE  FCJPCXC.CODCAJA = @CODCAJA AND FCJPCXC.CNSFACJ = @CNSFACJ

         SELECT  FCJPCXC.CNSFACJ, FCJPCXC.CODCAJA,COALESCE( SUM(FCJPCXC.VALOR),0) VALOR, COALESCE(SUM( FCJPCXC.VLR_IMPUESTOS),0) IMPUESTO FROM  FCJPCXC
         WHERE FCJPCXC.CODCAJA = @CODCAJA AND FCJPCXC.CNSFACJ = @CNSFACJ
         GROUP BY FCJPCXC.CNSFACJ, FCJPCXC.CODCAJA
	END
	IF @METODO = 'REPROGRAMAR_CITAS'
	BEGIN
		SELECT @CONSECUTIVOANT=CONSECUTIVOANT ,@CONSECUTIVONUE=CONSECUTIVONUE ,@MOTIVO = MOTIVO, @OBSERVACION = OBSERVACION
				, @MARCA = MARCA, @IDMEDICO = IDMEDICO, @IDEMEDICA = IDEMEDICA, @FECHA_CITA = FECHA_CITA, @HORA_CITA = HORA_CITA
		FROM OPENJSON(@PARAMETROS)
		WITH( CONSECUTIVOANT		VARCHAR(20)		'$.CONSECUTIVOANT'	, MARCA			BIT				'$.MARCA'
				, CONSECUTIVONUE	VARCHAR(20)		'$.CONSECUTIVONUE'	, IDMEDICO		VARCHAR(20)		'$.IDMEDICO'
				, MOTIVO             VARCHAR(100)	'$.MOTIVO'			, FECHA_CITA	VARCHAR(10)		'$.FECHA_CITA'
				, OBSERVACION		VARCHAR(100)	'$.OBSERVACION'		, HORA_CITA		VARCHAR(5)		'$.HORA_CITA' 
				, IDEMEDICA			VARCHAR(20)		'$.IDEMEDICA')

		SELECT @PARTICULAR = EXTRA, @PARTICULAR_TIME = TIME_EXTRA, @CUMPLIDA = CUMPLIDA,@TIPOCAJA=TIPOCAJA,@NORECIBOCAJA=NORECIBOCAJA,@IDAFILIADO=IDAFILIADO,@IDSERVICIO=IDSERVICIO FROM CIT 
		WHERE CONSECUTIVO=@CONSECUTIVOANT
		SELECT @FECHAINCIO = CIT.FECHA, @FECHAFINAL = DATEADD([MINUTE],@PARTICULAR_TIME, CIT.FECHA), @IDMEDICO = IDMEDICO, @FECHA1 = CIT.FECHA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVONUE

		IF @MARCA = 1
		BEGIN
			SELECT @FECHA_CITA= REPLACE(@FECHA_CITA,'-','')
			SELECT @FECHA_CITA_2 = CONVERT(DATETIME,CONCAT(@FECHA_CITA,' ',@HORA_CITA))
		END

		IF @PARTICULAR = 1 AND (SELECT COUNT(1) FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
			AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NOT NULL) > 0
		BEGIN
			PRINT 'ERROR: La cita a reprogramar tiene un tiempo de '+ rtrim(ltrim(str(@PARTICULAR_TIME))) + ' minutos, y tiene conflicto con citas que se encuentran mas adelante.'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ' La cita a reprogramar tiene un tiempo de '+ rtrim(ltrim(str(@PARTICULAR_TIME))) + ' minutos, y tiene conflicto con citas que se encuentran mas adelante.'
		END
		IF @CUMPLIDA=3
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se puede Reprogramar la Cita, por que ya fue Tomada Por el Médico desde su agenda.'            
		END 
		IF @CUMPLIDA = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se puede Reprogramar la Cita, por que ya fue Atendida Por el Médico.'            
		END 
		IF @TIPOCAJA='FCJ' AND DBO.FNK_VALORVARIABLE('IXCOUNTRY') <> 'PERU'
		BEGIN
			SELECT @CERRADA=CERRADA,@ESTADO=ESTADO FROM FCJ WHERE CNSFACJ=@NORECIBOCAJA
			IF @ESTADO='A' OR @CERRADA=1
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'No se puede Reprogramar la Cita del Paciente, Copago Traido en caja'            
			END
		END
		IF DBO.FNK_VALORVARIABLE('VALFECHACIT')='SI' 
		BEGIN
			IF (CAST(@FECHA1 AS DATE)<CAST(DBO.FNK_GETDATE() AS DATE)) /*VALIDO EL DIA*/
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'Fecha de la cita menor a la actual, no se puede continuar' 
			END
			ELSE
			BEGIN
				IF DBO.FNK_VALORVARIABLE('CITAHORAANTERIORHOY')='NO' AND @FECHA1 <DBO.FNK_GETDATE() /*VALIDO EL DIA Y LA HORA*/
				BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'La fecha y Hora de la cita es anterior a la fecha y hora actual' 					
				END
			END
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END 
		ELSE
		BEGIN
			--SELECT 'OK' OK --MODALIDAD CONSECUTIVOMAGP
			SELECT IDAFILIADO,  CONSECUTIVO,FECHA, IDMEDICO,MES.IDEMEDICA  , IDSERVICIO, ATENCION, IDCONTRATANTE, IDPLAN, TELEFONOAVISO, DISPONIBILIDAD, OBSERVACIONES, NOAUTORIZACION
					, IDIPSSOLICITA, IDMEDICOSOLICITA, FECHAAUTORIZACION, TIPOCOPAGO, IDAREA, ALTOCOSTO, IDTERCEROCA, AQUIENCOBRO, IDCONTRATO, IDSEDE,TIPOCITA,MODALIDAD, CONSECUTIVOMAGP
			INTO #DATOANTERIOR
			FROM CIT INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA WHERE  CIT.CONSECUTIVO = @CONSECUTIVOANT
			IF @MARCA <> 1
			BEGIN
				SELECT IDAFILIADO, CONSECUTIVO,  FECHA,  NUMCARNET, TIPOCITA, MODALIDAD, TIPOSOLICITUD, IDSERVICIO, ATENCION, PVEZ, IDCONTRATANTE, IDSEDE, IDMEDICO, IDPLAN, URGENCIA, VALORTOTAL
				, CIT.ESTADO, TELEFONOAVISO, DISPONIBILIDAD, CLASEORDEN, @USUARIO USUARIO, OBSERVACIONES, IDSEDEORIGEN, FECHAAUTORIZACION, TIPOCOPAGO, IDAREA, CCOSTO, ALTOCOSTO
				, MES.IDEMEDICA, IDTERCEROCA, IDCONTRATO,  CNSORIGINAL, DURACION, EXTRA, TIME_EXTRA,IDAUTSES, CONSECUTIVOMAGP
				INTO #DATONUEVO
				FROM CIT  INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA WHERE  CIT.CONSECUTIVO = @CONSECUTIVONUE

				--RETURN
				SELECT @TIPOCITA_ANT = TIPOCITA, @MODALIDAD_ANT = MODALIDAD FROM #DATOANTERIOR
				SELECT @TIPOCITA_NUE = TIPOCITA, @MODALIDAD_NUE = MODALIDAD FROM #DATONUEVO
		   
				SELECT @FAUX = FECHA, @IDMEDICOAUX = IDMEDICO, @IDAFILIADO = IDAFILIADO 
				FROM CIT WHERE CONSECUTIVO = @CONSECUTIVOANT
		   
				WHILE(EXISTS(SELECT 1 FROM CIT WHERE FECHA = @FAUX AND IDMEDICO=@IDMEDICO))
				SELECT @FAUX = DATEADD(MINUTE,1,@FAUX)

				UPDATE CIT SET IDMEDICO =  NULL, FECHA =  @FAUX, IDEMEDICA =  NULL WHERE  CONSECUTIVO = @CONSECUTIVOANT

				IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVOANT) = 0 
					SET @CONT = 1
				ELSE 
					SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVOANT) + 1

				INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, CONSECUTIVO_NUEVO, TIPO)
				SELECT @CONSECUTIVOANT, @CONT,@USUARIO,@SYS_COMPUTERNAME
			   , 'Reprogramado - '+ (SELECT DESCCAUSAL FROM CAU WHERE IDCAUSAL = @MOTIVO AND IDCLASE = 'CITREPRO') + ' -Para la Fecha '+ (SELECT CAST( CONVERT(DATE,CIT.FECHA) AS VARCHAR(20)) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVONUE ) + ' con el medico  '+ (SELECT MED.NOMBRE FROM CIT INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO WHERE CONSECUTIVO = @CONSECUTIVONUE)
			   , 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO,@CONSECUTIVONUE, 'REPROGRAMADO' 
			   --ATENCION
				UPDATE CIT SET
				--SE QEUDA SIN IDAFILIADO - SE JALA LA FECHA DE LA ANTERIOR CITA Y EL IDMEDICO Y DEMAS REGISTROS
				--TIPOCITA      =       #DATOANTERIOR.TIPOCITA,
				FECHASOL		=		NULL,
				CUMPLIDA			= 0,
				--MODALIDAD      =      #DATOANTERIOR.MODALIDAD,
				--ATENCION      =      #DATOANTERIOR.ATENCION,
				IDMEDICO      =       #DATOANTERIOR.IDMEDICO,
				IDEMEDICA    =        #DATOANTERIOR.IDEMEDICA,
				FECHA        =        DBO.FNK_FECHA_SIN_MLS(#DATOANTERIOR.FECHA),
				IDSEDE       =        #DATOANTERIOR.IDSEDE,
				CONSECUTIVOMAGP       =        #DATOANTERIOR.CONSECUTIVOMAGP
				FROM  #DATOANTERIOR 
				WHERE CIT.CONSECUTIVO = @CONSECUTIVONUE

				UPDATE CIT SET
				--IDAFILIADO SE QUEDA - SE TRAE EL MEDICO Y FECHA DEL OTRO CONSECUTIVO
				--TIPOCITA			= #DATONUEVO.TIPOCITA,
				--MODALIDAD			= #DATONUEVO.MODALIDAD,
				--ATENCION			= #DATONUEVO.ATENCION,
				IDMEDICO			= #DATONUEVO.IDMEDICO,
				CUMPLIDA			= 0,
				--FECHASOL			=  DBO.FNK_GETDATE(),
				FECHA				= DBO.FNK_FECHA_SIN_MLS(#DATONUEVO.FECHA),
				IDSEDE				= #DATONUEVO.IDSEDE,
				CONSECUTIVOMAGP		= #DATONUEVO.CONSECUTIVOMAGP,
				IDEMEDICA			= #DATONUEVO.IDEMEDICA,
				CONFIRMADA			= 0,
				FECHACONFIRMA		= NULL,
				USUARIO			= @USUARIO
				FROM  #DATONUEVO 
				WHERE CIT.CONSECUTIVO = @CONSECUTIVOANT
			END
			IF @MARCA = 1
			BEGIN
				PRINT 'ENTRA A MARCAAAAA'
				IF EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO AND CIT.FECHA = @FECHA_CITA_2 AND COALESCE(CIT.IDAFILIADO,'') <> '')
				BEGIN
					PRINT '111111111111'
					SELECT @CONSECUTIVO_SEL = CIT.CONSECUTIVO FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO AND CIT.FECHA = @FECHA_CITA_2 AND COALESCE(CIT.IDAFILIADO,'') <> ''
					SELECT @FECHA_NUEVA = (SELECT TOP 1 DATEADD(MINUTE,1,CIT.FECHA) FROM CIT
											WHERE datepart(hh, CIT.FECHA) = (SELECT datepart(hh, CIT.FECHA) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO_SEL  )
													AND datepart(mi, CIT.FECHA) = (SELECT datepart(mi, CIT.FECHA) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO_SEL )
													AND CIT.IDMEDICO = @IDMEDICO
													AND CONVERT(DATE,CIT.FECHA) = CONVERT(DATE,@FECHA_CITA_2)
											ORDER BY  CIT.FECHA  DESC)

					SELECT @CONSECUTIVO_NEW = NULL
					EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@CIT', @CONSECUTIVO_NEW OUTPUT  
					SELECT @CONSECUTIVO_NEW = @IDSEDE + REPLACE(SPACE(10 - LEN(@CONSECUTIVO_NEW))+LTRIM(RTRIM(@CONSECUTIVO_NEW)),SPACE(1),0)   
					
					PRINT 'PROCEDE A INSERTARRRR'
					INSERT INTO CIT(CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION
								,ESPROGRAMAS,MODELOS,MODALIDAD, REQ_AUTORIZACION, TIENE_LAB, IDAUTSES,  PROCEDENCIA, USUARIO, ESTADO, CUMPLIDA, FECHAAUTORIZACION
								,IDTERCEROCA, IDPLAN, IDSERVICIO, IDCONTRATANTE, IDAFILIADO, FECHASOL, IDAREA, CCOSTO, CODUNG, SYS_COMPUTERNAME, CLASECONTRATO,FACTURABLE, FACTURADA
								,COPAGOPROPIO, VALORCOPAGO, VALORTOTAL, NOCOBRAR, OBSERVACIONES, IDSEDEORIGEN, CNSHACTRAN, IDDX)

					SELECT @CONSECUTIVO_NEW, @IDMEDICO,  @IDEMEDICA, @FECHA_NUEVA,CIT.TIPOCITA, CIT.TIPOSOLICITUD, CIT.ATENCION, CIT.IDSEDE, CIT.DISPONIBILIDAD 
						,CLASEORDEN, CIT.WEB,@USUARIO, DBO.FNK_GETDATE(), NULL,NULL
						,CIT.MODALIDAD, NULL, CIT.TIENE_LAB, NULL,PROCEDENCIA, @USUARIO, 'Activo', 0,  DBO.FNK_GETDATE()
						,IDTERCEROCA, IDPLAN, IDSERVICIO, IDCONTRATANTE, IDAFILIADO, DBO.FNK_GETDATE(), IDAREA, CCOSTO, CIT.CODUNG, SYS_COMPUTERNAME,'E', 1, 0
						,0,0,0,0,NULL, IDSEDEORIGEN, CNSHACTRAN, IDDX
					FROM CIT WHERE CIT.CONSECUTIVO  = @CONSECUTIVOANT

					PRINT 'ACTUALIZA'
					UPDATE CIT SET 
					FECHASOL= NULL, FECHA= NULL, IDAFILIADO= NULL, NUMCARNET= NULL, IDSERVICIO= NULL, IDCONTRATANTE= NULL, IDPLAN= NULL, VALORTOTAL= NULL
					, VALORCOPAGO= NULL, TELEFONOAVISO= NULL, CLASEORDEN= NULL, USUARIO= NULL, OBSERVACIONES= NULL, NOAUTORIZACION= NULL
					, IDSEDEORIGEN= NULL, FECHAAUTORIZACION= NULL, PROCEDENCIA= NULL, IDAREA= NULL, CCOSTO= NULL, IDTERCEROCA= NULL, CODUNG= NULL
					, SYS_COMPUTERNAME= NULL, F_REQUERIDA= NULL, DURACION = NULL
					WHERE CIT.CONSECUTIVO = @CONSECUTIVOANT

					SELECT @IDAFILIADO = CIT.IDAFILIADO, @IDSERVICIO = IDSERVICIO, @CONSECUTIVOANT = CONSECUTIVO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO_NEW

				END
				IF EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO AND CIT.FECHA = @FECHA_CITA_2 AND COALESCE(CIT.IDAFILIADO,'') = '')
				BEGIN
					PRINT '222222222222'

					SELECT @CONSECUTIVONUE = CIT.CONSECUTIVO  FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO AND CIT.FECHA = @FECHA_CITA_2 AND COALESCE(CIT.IDAFILIADO,'') = ''

					SELECT IDAFILIADO, CONSECUTIVO,  FECHA,  NUMCARNET, TIPOCITA, MODALIDAD, TIPOSOLICITUD, IDSERVICIO, ATENCION, PVEZ, IDCONTRATANTE, IDSEDE, IDMEDICO, IDPLAN, URGENCIA, VALORTOTAL
						, CIT.ESTADO, TELEFONOAVISO, DISPONIBILIDAD, CLASEORDEN, @USUARIO USUARIO, OBSERVACIONES, IDSEDEORIGEN, FECHAAUTORIZACION, TIPOCOPAGO, IDAREA, CCOSTO, ALTOCOSTO
						, MES.IDEMEDICA, IDTERCEROCA, IDCONTRATO,  CNSORIGINAL, DURACION, EXTRA, TIME_EXTRA,IDAUTSES, CONSECUTIVOMAGP
					INTO #DATONUEVO_2
					FROM CIT  INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA WHERE  CIT.CONSECUTIVO = @CONSECUTIVONUE

					SELECT @TIPOCITA_ANT = TIPOCITA, @MODALIDAD_ANT = MODALIDAD FROM #DATOANTERIOR
					SELECT @TIPOCITA_NUE = TIPOCITA, @MODALIDAD_NUE = MODALIDAD FROM #DATONUEVO_2
		   
					SELECT @FAUX = FECHA, @IDMEDICOAUX = IDMEDICO, @IDAFILIADO = IDAFILIADO 
					FROM CIT WHERE CONSECUTIVO = @CONSECUTIVOANT
		   
					WHILE(EXISTS(SELECT 1 FROM CIT WHERE FECHA = @FAUX AND IDMEDICO=@IDMEDICO))
					SELECT @FAUX = DATEADD(MINUTE,1,@FAUX)

					UPDATE CIT SET IDMEDICO =  NULL, FECHA =  @FAUX, IDEMEDICA =  NULL WHERE  CONSECUTIVO = @CONSECUTIVOANT

					IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVOANT) = 0 
						SET @CONT = 1
					ELSE 
						SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVOANT) + 1

					INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, CONSECUTIVO_NUEVO, TIPO)
					SELECT @CONSECUTIVOANT, @CONT,@USUARIO,@SYS_COMPUTERNAME
				   , 'Reprogramado - '+ (SELECT DESCCAUSAL FROM CAU WHERE IDCAUSAL = @MOTIVO AND IDCLASE = 'CITREPRO') + ' -Para la Fecha '+ (SELECT CAST( CONVERT(DATE,CIT.FECHA) AS VARCHAR(20)) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVONUE ) + ' con el medico  '+ (SELECT MED.NOMBRE FROM CIT INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO WHERE CONSECUTIVO = @CONSECUTIVONUE)
				   , 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO,@CONSECUTIVONUE, 'REPROGRAMADO' 

					UPDATE CIT SET
					--SE QEUDA SIN IDAFILIADO - SE JALA LA FECHA DE LA ANTERIOR CITA Y EL IDMEDICO Y DEMAS REGISTROS
					TIPOCITA      =       @TIPOCITA_ANT,
					FECHASOL		=		NULL,
					MODALIDAD      =      @MODALIDAD_ANT,
					IDMEDICO      =       #DATOANTERIOR.IDMEDICO,
					IDEMEDICA    =        #DATOANTERIOR.IDEMEDICA,
					FECHA        =        DBO.FNK_FECHA_SIN_MLS(#DATOANTERIOR.FECHA),
					IDSEDE       =        #DATOANTERIOR.IDSEDE,
					CONSECUTIVOMAGP       =        #DATOANTERIOR.CONSECUTIVOMAGP
					FROM  #DATOANTERIOR 
					WHERE CIT.CONSECUTIVO = @CONSECUTIVONUE

					UPDATE CIT SET
					--IDAFILIADO SE QUEDA - SE TRAE EL MEDICO Y FECHA DEL OTRO CONSECUTIVO
					TIPOCITA			= @TIPOCITA_NUE,
					MODALIDAD			= @MODALIDAD_NUE,
					IDMEDICO			= #DATONUEVO_2.IDMEDICO,
					--FECHASOL			=  DBO.FNK_GETDATE(),
					FECHA				= DBO.FNK_FECHA_SIN_MLS(#DATONUEVO_2.FECHA),
					IDSEDE				= #DATONUEVO_2.IDSEDE,
					CONSECUTIVOMAGP		= #DATONUEVO_2.CONSECUTIVOMAGP,
					IDEMEDICA			= #DATONUEVO_2.IDEMEDICA,
					CONFIRMADA			= 0,
					FECHACONFIRMA		= NULL,
					USUARIO				= @USUARIO
					FROM  #DATONUEVO_2 
					WHERE CIT.CONSECUTIVO = @CONSECUTIVOANT
				END
				IF NOT EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO AND CIT.FECHA = @FECHA_CITA_2)
				BEGIN
					PRINT '33333333333333333'
					SELECT @CONSECUTIVO_NEW = NULL
					EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@CIT', @CONSECUTIVO_NEW OUTPUT  
					SELECT @CONSECUTIVO_NEW = @IDSEDE + REPLACE(SPACE(10 - LEN(@CONSECUTIVO_NEW))+LTRIM(RTRIM(@CONSECUTIVO_NEW)),SPACE(1),0)   

					INSERT INTO CIT(CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION
								,ESPROGRAMAS,MODELOS,MODALIDAD, REQ_AUTORIZACION, TIENE_LAB, IDAUTSES,  PROCEDENCIA, USUARIO, ESTADO, CUMPLIDA, FECHAAUTORIZACION
								,IDTERCEROCA, IDPLAN, IDSERVICIO, IDCONTRATANTE, IDAFILIADO, FECHASOL, IDAREA, CCOSTO, CODUNG, SYS_COMPUTERNAME, CLASECONTRATO,FACTURABLE, FACTURADA
								,COPAGOPROPIO, VALORCOPAGO, VALORTOTAL, NOCOBRAR, OBSERVACIONES, IDSEDEORIGEN, CNSHACTRAN, IDDX)

					SELECT @CONSECUTIVO_NEW, @IDMEDICO,  @IDEMEDICA, @FECHA_CITA_2,CIT.TIPOCITA, CIT.TIPOSOLICITUD, CIT.ATENCION, CIT.IDSEDE, CIT.DISPONIBILIDAD 
						,CLASEORDEN, CIT.WEB,@USUARIO, DBO.FNK_GETDATE(), NULL,NULL
						,CIT.MODALIDAD, NULL, CIT.TIENE_LAB, NULL,PROCEDENCIA, @USUARIO, 'Activo', 0,  DBO.FNK_GETDATE()
						,IDTERCEROCA, IDPLAN, IDSERVICIO, IDCONTRATANTE, IDAFILIADO, DBO.FNK_GETDATE(), IDAREA, CCOSTO, CIT.CODUNG, SYS_COMPUTERNAME,'E', 1, 0
						,0,0,0,0,NULL, IDSEDEORIGEN, CNSHACTRAN, IDDX
					FROM CIT WHERE CIT.CONSECUTIVO  = @CONSECUTIVOANT

					UPDATE CIT SET 
					FECHASOL= NULL, IDAFILIADO= NULL, NUMCARNET= NULL, IDSERVICIO= NULL, IDCONTRATANTE= NULL, IDPLAN= NULL, VALORTOTAL= NULL
					, VALORCOPAGO= NULL, TELEFONOAVISO= NULL, CLASEORDEN= NULL, USUARIO= NULL, OBSERVACIONES= NULL, NOAUTORIZACION= NULL
					, IDSEDEORIGEN= NULL, FECHAAUTORIZACION= NULL, PROCEDENCIA= NULL, IDAREA= NULL, CCOSTO= NULL, IDTERCEROCA= NULL, CODUNG= NULL
					, SYS_COMPUTERNAME= NULL, F_REQUERIDA= NULL, DURACION = NULL
					WHERE CIT.CONSECUTIVO = @CONSECUTIVOANT

					SELECT @IDAFILIADO = CIT.IDAFILIADO, @IDSERVICIO = IDSERVICIO, @CONSECUTIVOANT = CONSECUTIVO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO_NEW
				END
			END

			UPDATE HCATDOD SET FECHA_ESTIMADA = CONVERT(DATE,CIT.FECHA) FROM CIT INNER JOIN HCATDOD ON CIT.CONSECUTIVO = HCATDOD.CONSECUTIVOCIT WHERE CIT.CONSECUTIVO = @CONSECUTIVOANT
        
			IF @PARTICULAR = 1
			BEGIN
				DELETE FROM CIT 
				WHERE  IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
					AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL
			END

			EXEC SPK_CANCELA_CITA_SMS 'REPROGRAMA',@IDAFILIADO,@CONSECUTIVOANT, @IDSERVICIO

			SELECT 'OK'OK
		END
	END
	IF @METODO = 'ASIGNAR' 
	BEGIN
		SELECT * INTO #DATOS FROM OPENJSON(@PARAMETROS)
		WITH(
			IDAFILIADO					VARCHAR(20) '$.IDAFILIADO'
			,CONSECUTIVO				VARCHAR(20) '$.CONSECUTIVO'
			,ESPECIALIDAD				VARCHAR(20) '$.ESPECIALIDAD'
			,SERVICIO					VARCHAR(20) '$.SERVICIO'
			,MINADICIONALES				VARCHAR(20) '$.MINADICIONALES'
			,IDAREA						VARCHAR(20) '$.IDAREA'
			,CCOSTO						VARCHAR(20) '$.CCOSTO'
			,VIRTUAL					BIT			'$.VIRTUAL'
			,UNIDNEGO					VARCHAR(20) '$.UNIDNEGO'
			,FDESEADA					DATE        '$.FDESEADA'
			,HDESEADA					VARCHAR(8) '$.HDESEADA'
			,SOAT						BIT			'$.SOAT'
			,CNSHACTRAN					VARCHAR(20) '$.CNSHACTRAN'
			,TIPOCITA					VARCHAR(20) '$.TIPOCITA'
			,CANTIDADC					INT			'$.CANTIDADC'
			,TIPOSOLICITUD				VARCHAR(50) '$.TIPOSOLICITUD'
			,TIPOATENCION				VARCHAR(50) '$.TIPOATENCION'
			,CLASEORDEN					VARCHAR(20) '$.CLASEORDEN'
			,PROGRAMA					VARCHAR(20) '$.PROGRAMA'
			,PROGRAMA_POSIBLE			VARCHAR(20) '$.PROGRAMA_POSIBLE'
			,ALTOCOSTO					VARCHAR(20) '$.ALTOCOSTO'
			,URGENCIA					BIT		    '$.URGENCIA'
			,TELEFONOAVISO				VARCHAR(20) '$.TELEFONOAVISO'
			,NOMBREPRESPON				VARCHAR(20) '$.NOMBREPRESPON'
			,TELEFONORESPON				VARCHAR(20) '$.TELEFONORESPON'
			,PARENTESCORESPON			VARCHAR(20) '$.PARENTESCORESPON'
			,IDIPSSOLICITA				VARCHAR(20) '$.IDIPSSOLICITA'
			,IDMEDICOSOLICITA			VARCHAR(20) '$.IDMEDICOSOLICITA'
			,FECHAAUTORIZACION			DATE        '$.FECHAAUTORIZACION'   
			,FVENCEAUTORIZACION			DATE        '$.FVENCEAUTORIZACION'   
			,CCONTRATANTE				VARCHAR(20) '$.CCONTRATANTE'  
			,AQUIENCOBRO				VARCHAR(1) '$.AQUIENCOBRO'
			,NOAUTORIZACION				VARCHAR(45) '$.NOAUTORIZACION'
			--,IDTERCEROCA				VARCHAR(20) '$.IDTERCEROCA' NUMCARNET  VALORTOTAL  AQUIENCOBRO 
			--,IDPLAN					VARCHAR(20) '$.IDPLAN' 
			,COPAGOPROPIO				BIT			'$.COPAGOPROPIO'
			,EMBARAZO					VARCHAR(10) '$.EMBARAZO'
			,VALORCOPAGO				DECIMAL(14,2) '$.VALORCOPAGO'
			,TIPOCOPAGO					VARCHAR(20) '$.TIPOCOPAGO'
			,VALORTOTAL					DECIMAL(14,2) '$.VALORTOTAL'
			,NOCOBRAR					BIT			'$.NOCOBRAR'
			,OBSERVACIONES				VARCHAR(MAX) '$.OBSERVACIONES'
			,TIEMPO_PARTICULAR			INT			'$.TIEMPO_PARTICULAR'
			,PARTICULAR					BIT			'$.PARTICULAR'
			,ITEM_HCATDC				INT			'$.ITEM_HCATDC'
			,NOMBREACOM					VARCHAR(20) '$.NOMBREACOM'
			,TELEFONOACOM				VARCHAR(20) '$.TELEFONOACOM'
			,DIRECCIONACOM				VARCHAR(20) '$.DIRECCIONACOM'
			,PARENTESCOACOM				VARCHAR(20) '$.PARENTESCOACOM'
			,DATOSITEDS					NVARCHAR(MAX) AS JSON
			,IDADMINISTRADORA_CONTRA	VARCHAR(20) '$.IDADMINISTRADORA_CONTRA'
			,IDPLAN_CONTRA				VARCHAR(20) '$.IDPLAN_CONTRA'
			,SERVICIO_2					NVARCHAR(MAX) AS JSON
			,CANTIDAD_SERVICIO			DECIMAL(14,2) '$.CANTIDAD_SERVICIO'
			,TVALORACION				BIT			'$.TVALORACION'
			,ACTUALIZACONTRATANTE		BIT			'$.ACTUALIZACONTRATANTE'
			,LINK_PAGO					VARCHAR(20) '$.LINK_PAGO'
			--CCONTRATANTE
		)

		 SELECT @SERVICIO_2 =	(SELECT SERVICIO_2 FROM #DATOS )

		SELECT * INTO #SERVICIO_2 FROM OPENJSON (@SERVICIO_2)
		WITH(
		IDSERVICIO						VARCHAR(20)						'$.value'
		,DESCSERVICIO					VARCHAR(200)					'$.label'
		,IDEMEDICA						VARCHAR(20)						'$.IDEMEDICA'
		,TIPO							VARCHAR(20)						'$.TIPO'
		,DURACIONCITA					INT								'$.DURACIONCITA'
		)

		UPDATE #DATOS SET SERVICIO = COALESCE(SERVICIO, (SELECT TOP 1 IDSERVICIO FROM #SERVICIO_2)) WHERE 1 = 1

		SELECT @MEDTRATANTEDIFERENTE = JSON_VALUE(@PARAMETROS,'$.MEDTRATANTEDIFERENTE')
		SELECT @RAZONMEDDIFERENTE    = JSON_VALUE(@PARAMETROS,'$.RAZONMEDDIFERENTE.value')
		SELECT @AFILIADOSITEDS =  (SELECT DATOSITEDS FROM #DATOS)
		SELECT * INTO #AFILIADOSITEDS FROM   
		OPENJSON (@AFILIADOSITEDS) WITH (   
            apMaternoAse				VARCHAR(50)		'$.apMaternoAse',
            apMaternoContratante		VARCHAR(50)		'$.apMaternoContratante',
            apMaternoTitular			VARCHAR(50)		'$.apMaternoTitular',
            apPaternoAse				VARCHAR(50)		'$.apPaternoAse',
            apPaternoContratante		VARCHAR(100)	'$.apPaternoContratante', 
            apPaternoTitular			VARCHAR(50)		'$.apPaternoTitular',
            codiAse						VARCHAR(50)		'$.codiAse',
            codiErrorSW					VARCHAR(12)		'$.codiErrorSW',
            codiEstAse					VARCHAR(12)		'$.codiEstAse',
            codiEstadoMaritalAse		VARCHAR(12)		'$.codiEstadoMaritalAse',
            codiGeneroAse				VARCHAR(12)		'$.codiGeneroAse',
            codiIAFAS					VARCHAR(12)		'$.codiIAFAS',
            codiParentescoAse			VARCHAR(12)		'$.codiParentescoAse',
            codiProducto				VARCHAR(12)		'$.codiProducto',
            codiTipoAfiliacionAse		VARCHAR(12)		'$.codiTipoAfiliacionAse',
            codiTipoDocAse				VARCHAR(12)		'$.codiTipoDocAse',
            codiTipoDocContratante		VARCHAR(12)		'$.codiTipoDocContratante',
            codiTipoDocTitular			VARCHAR(12)		'$.codiTipoDocTitular',
            codiTipoPlanSaludAse		VARCHAR(12)		'$.codiTipoPlanSaludAse',
            codiTitular					VARCHAR(12)		'$.codiTitular',
            contratoAse					VARCHAR(12)		'$.contratoAse',
            descEstAse					VARCHAR(12)		'$.descEstAse',
            descEstadoMaritalAse		VARCHAR(50)		'$.descEstadoMaritalAse',
            descParentescoAse			VARCHAR(50)		'$.descParentescoAse',
            descProducto				VARCHAR(50)		'$.descProducto',
            descTipoAfiliacionAse		VARCHAR(50)		'$.descTipoAfiliacionAse',
            descTipoDocAse				VARCHAR(50)		'$.descTipoDocAse',
            descTipoDocContratante		VARCHAR(50)		'$.descTipoDocContratante',
            descTipoDocTitular			VARCHAR(50)		'$.descTipoDocTitular',
            descTipoPlanSaludAse		VARCHAR(50)		'$.descTipoPlanSaludAse',
            fecAfiliacionTitular		VARCHAR(12)		'$.fecAfiliacionTitular',
            fecFinVigenciaAse			VARCHAR(12)		'$.fecFinVigenciaAse',
            fecIniVigenciaAse			VARCHAR(12)		'$.fecIniVigenciaAse',
            fecNacimientoAse			VARCHAR(12)		'$.fecNacimientoAse',
            nombreAse					VARCHAR(50)		'$.nombreAse',
            nombreContratante			VARCHAR(12)		'$.nombreContratante',
            nombreTitular				VARCHAR(12)		'$.nombreTitular',
            nroPlanAse					VARCHAR(12)		'$.nroPlanAse',
            nroTipoDocAse				VARCHAR(12)		'$.nroTipoDocAse',
            nroTipoDocContratante		VARCHAR(20)		'$.nroTipoDocContratante',
            nroTipoDocTitular			VARCHAR(20)		'$.nroTipoDocTitular',
            polizaAse					VARCHAR(20)		'$.polizaAse',
			REQ_AUT						BIT				'$.REQ_AUT',
			REQ_CONSULTA				BIT				'$.REQ_CONSULTA',
			REQ_FARMACOS				BIT				'$.REQ_FARMACOS',		REQ_EXAMENES	BIT				'$.REQ_EXAMENES',
			COPAGO_FI_CON				DECIMAL(14,2)	'$.COPAGO_FI_CON',		COPA_VAR_PORC	DECIMAL(14,2)	'$.COPA_VAR_PORC',
			COPAGO_FI_FAR				DECIMAL(14,2)	'$.COPAGO_FI_FAR',		COPAGO_VA_FAR	DECIMAL(14,2)	'$.COPAGO_VA_FAR',
			COPAGO_FI_EXA				DECIMAL(14,2)	'$.COPAGO_FI_EXA',		COPAGO_VA_EXA	DECIMAL(14,2)	'$.COPAGO_VA_EXA',

			COPAGOCONSULTA_DESC			VARCHAR(200)	'$.COPAGOCONSULTA_DESC',
			CODIPRESS					VARCHAR(20)		'$.CODIPRESS',
			nroContratante				VARCHAR(20)		'$.nroContratante',
			DETALLE						NVARCHAR(MAX) AS JSON)

		 SELECT @DETALLESITEDS =	(SELECT DETALLE FROM #AFILIADOSITEDS )
		 SELECT * INTO #DETALLESITEDS 
		 FROM   OPENJSON (@DETALLESITEDS) WITH (   
                codiTipCobertura			VARCHAR(13)		'$.codiTipCobertura',
				codiSubTipCobertura		VARCHAR(20)		'$.codiSubTipCobertura',
				descSubTipCobertura		VARCHAR(100)    '$.descSubTipCobertura',
				coCalServicio			VARCHAR(20)     '$.coCalServicio',
				descCopagoFijo			VARCHAR(20)		'$.descCopagoFijo',
				copagoFijo				VARCHAR(10)		'$.copagoFijo',
				copagoVariable			VARCHAR(50)		'$.copagoVariable'
		)
		SELECT @PARTICULAR = PARTICULAR, @PARTICULAR_TIME = TIEMPO_PARTICULAR,@CANTIDAD_SERVICIO =CANTIDAD_SERVICIO, @CONSECUTIVO = CONSECUTIVO  FROM #DATOS
		SELECT @FECHA2 = CONVERT(DATE,FECHA) ,@FECHA1 = FECHA, @IDMEDICO = IDMEDICO   FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO

		IF @PARTICULAR = 1
			SELECT @TOTAL_DURACION = @PARTICULAR_TIME + COALESCE(@CANTIDAD_SERVICIO,0)
		ELSE
			SELECT @TOTAL_DURACION =  COALESCE(@CANTIDAD_SERVICIO,0)
			
		SELECT @FECHAINCIO = CIT.FECHA, @FECHAFINAL = DATEADD([MINUTE], @TOTAL_DURACION, CIT.FECHA) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

		SELECT  @CONSECUTIVO = CONSECUTIVO, @IDAFILIADO = IDAFILIADO, @ITEM_HCATDC = ITEM_HCATDC FROM #DATOS
		SELECT @IDPLAN = IDPLAN, @IDTERCERO = IDADMINISTRADORA FROM AFI WHERE IDAFILIADO  = @IDAFILIADO

		IF COALESCE(@ITEM_HCATDC, 0)>0
		BEGIN
			UPDATE HCATDC SET CONSECUTIVOCIT=@CONSECUTIVO, ESTADO = 1
			WHERE ITEM=@ITEM_HCATDC AND (CONSECUTIVOCIT IS NULL OR ESTADO=2)
		END

		IF EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO AND COALESCE(IDAFILIADO,'')<>'')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La cita ya fue ocupada.'
		END
		BEGIN TRY  
			UPDATE CIT
			SET 
				TIPOCITA			   = B.TIPOCITA--, FECHAAUTORIZACION
				, CANTIDADC = B.CANTIDADC
				, IDAFILIADO = B.IDAFILIADO
				,IDPLAN = @IDPLAN
				,IDCONTRATANTE = @IDTERCERO
				,IDTERCEROCA = @IDTERCERO
				,TIPOSOLICITUD = B.TIPOSOLICITUD
				,ATENCION = COALESCE( B.TIPOATENCION, 'Ambulatoria')
				,URGENCIA = B.URGENCIA
				,PREGUNTAPOR = CASE WHEN B.EMBARAZO = 'Si' THEN 1 ELSE 0 END
				,EMBARAZADA = CASE WHEN B.EMBARAZO = 'Si' THEN 1 ELSE 0 END
				,CLASEORDEN = (
					CASE 
						WHEN B.CLASEORDEN = 'Normal'
							THEN 'Normal'
						WHEN B.CLASEORDEN = 'PyP'
							THEN 'PyP'
						ELSE 'Modelo'
						END
					)
				,CODUNG = B.UNIDNEGO
				,ALTOCOSTO = B.ALTOCOSTO
				,FECHASOL = DBO.FNK_GETDATE()
				,IDSERVICIO = B.SERVICIO
				,USUARIO = @USUARIO
				,IDAREA = B.IDAREA
				,CCOSTO = B.CCOSTO
				,TELEFONOAVISO = B.TELEFONOAVISO
				,NOMBREACOMPA = B.NOMBREACOM
				,TELEFONOACOMPA = B.TELEFONOACOM
				,PARENTESCOACOMPA = B.PARENTESCOACOM
				,NOMBRERESPO = B.NOMBREPRESPON
				,TELEFONORESPO = B.TELEFONORESPON
				,PARENTESCORESPO = B.PARENTESCORESPON
				,IDPESPECIAL = CASE WHEN B.CLASEORDEN  = 'PyP' THEN B.PROGRAMA_POSIBLE ELSE  B.PROGRAMA END 
				,IDIPSSOLICITA = B.IDIPSSOLICITA
				,IDMEDICOSOLICITA = B.IDMEDICOSOLICITA
				,CCONTRATANTE = CASE 
					WHEN B.CCONTRATANTE = 'false'
						THEN 0
					WHEN B.CCONTRATANTE = 'true'
						THEN 1
					ELSE 0
					END
				,AQUIENCOBRO = CASE WHEN  COALESCE (B.AQUIENCOBRO,'') = '' THEN 'N' ELSE B.AQUIENCOBRO END
				,NOAUTORIZACION = B.NOAUTORIZACION
				,FECHAAUTORIZACION = B.FECHAAUTORIZACION
				,FVENCEAUTORIZACION = B.FVENCEAUTORIZACION
				--,IDTERCEROCA        =B.IDTERCEROCA RAZONMEDDIFERENTE
				--,IDPLAN             =B.IDPLAN
				,COPAGOPROPIO = CASE 
					WHEN B.COPAGOPROPIO = 'false'
						THEN 0
					WHEN B.COPAGOPROPIO = 'true'
						THEN 1
					ELSE 0
					END
				,VALORCOPAGO = B.VALORCOPAGO
				,TIPOCOPAGO = B.TIPOCOPAGO
				,VALORTOTAL = CASE WHEN COALESCE(B.VALORTOTAL,0) = NULL THEN 0 ELSE  COALESCE(B.VALORTOTAL,0) END
				,NOCOBRAR = CASE 
					WHEN B.NOCOBRAR = 'false'
						THEN 0
					WHEN B.NOCOBRAR = 'true'
						THEN 1
					ELSE 0
					END
				,OBSERVACIONES = B.OBSERVACIONES
				,ESTADO = 'Activo'
				,IDSEDEORIGEN = (
					SELECT IDSEDE
					FROM USUSU
					WHERE USUARIO = @USUARIO
					)
				,SYS_COMPUTERNAME = @SYS_COMPUTERNAME
				--,F_REQUERIDA = CAST(IIF( COALESCE(B.HDESEADA, '')='', B.FDESEADA, CONCAT(REPLACE(CONVERT(VARCHAR,B.FDESEADA,102),'.','-'), ' ', LEFT(CONVERT(VARCHAR(10), B.HDESEADA, 108),5), ':00') ) AS DATETIME)
				,F_REQUERIDA = CONVERT(DATETIME, B.FDESEADA) + CONVERT(DATETIME, B.HDESEADA)
				,MODALIDAD = (
					CASE 
						WHEN B.VIRTUAL = 'true'
							THEN 'Virtual'
						ELSE 'Presencial'
						END
					)
				,NUMCARNET = (SELECT DOCIDAFILIADO FROM AFI WHERE IDAFILIADO = @IDAFILIADO)
				,TIPOAFILIADO = (SELECT COALESCE(TIPOAFILIADO,'') FROM AFI WHERE IDAFILIADO = @IDAFILIADO)
				,RAZONMEDDIF = CASE @MEDTRATANTEDIFERENTE WHEN 1 THEN @RAZONMEDDIFERENTE ELSE NULL END
				,EXTRA = COALESCE(B.PARTICULAR,0)
				,TIME_EXTRA = COALESCE(B.TIEMPO_PARTICULAR,0)
				,SOAT = CASE 
						WHEN B.SOAT = 'false'
							THEN 0
						WHEN B.SOAT = 'true'
							THEN 1
						ELSE 0
						END
				,CNSHACTRAN = COALESCE(B.CNSHACTRAN, NULL)
				,PROCEDENCIA = 'AGENDA CIT'
			FROM CIT                
			INNER JOIN #DATOS B ON CIT.CONSECUTIVO = B.CONSECUTIVO

			--SI EN LA AGENDA PIDE CAMBIAR DE CONTRATANTE, SE ACTUALIZA TERCERO Y PLAN INGRESADO
			IF (SELECT JSON_VALUE(@PARAMETROS,'$.CCONTRATANTE')) = 'true'
			BEGIN
			   UPDATE CIT SET IDTERCEROCA = B.IDADMINISTRADORA_CONTRA,  IDPLAN = B.IDPLAN_CONTRA FROM CIT                
			   INNER JOIN #DATOS B ON CIT.CONSECUTIVO = B.CONSECUTIVO

			   IF  EXISTS (SELECT * FROM #DATOS WHERE COALESCE(ACTUALIZACONTRATANTE,0) = 1)
			   BEGIN
				PRINT 'ACTUALIZA DATOS DEL PACIENTE'
				UPDATE AFI SET IDPLAN = #DATOS.IDPLAN_CONTRA, IDADMINISTRADORA = #DATOS.IDADMINISTRADORA_CONTRA FROM AFI, #DATOS WHERE AFI.IDAFILIADO = @IDAFILIADO
			   END
			END

			SELECT @IDSERVICIO = ( SELECT IDSERVICIO FROM CIT WHERE  CONSECUTIVO =  @CONSECUTIVO)

			IF DBO.FNK_VALORVARIABLE('ENVIA_SMS_CITA')='SI'
			BEGIN
				EXEC SPK_CANCELA_CITA_SMS 'ASIGNA',@IDAFILIADO,@CONSECUTIVO, @IDSERVICIO
			END
			--INSERT CITSER, si en caso tiene mas de 1 serivico
			IF (SELECT COUNT(*)FROM #SERVICIO_2 )>1
			BEGIN
				INSERT INTO CITSER (CONSECUTIVO_CIT, IDSERVICIO,CANTIDAD, FECHA,USUARIO, ESTADO,PROCEDENCIA)
				SELECT @CONSECUTIVO, #SERVICIO_2.IDSERVICIO, 1 , DBO.FNK_GETDATE(), @USUARIO, 'Activo', 'AGENDA'
				FROM #SERVICIO_2
			END
			-- Si envia el CNSNOCIT significa que está agendando una cita pendiente en Lista de Espera
			SELECT @CNSNOCIT = JSON_VALUE(@PARAMETROS,'$.CNSNOCIT')
			IF COALESCE(@CNSNOCIT, '')!=''
			BEGIN
				UPDATE NOCIT
				SET ATENDIDO = 1 ,CONSECUTIVOCIT = @CONSECUTIVO
				WHERE CNSNOCIT = @CNSNOCIT
				AND ATENDIDO = 0 AND COALESCE(CONSECUTIVOCIT, '')=''
			END
			--SI EN CASO EL TIEMPO DE LOS SERVICIOS ES MAYOR AL RANGO NATURAL DE LA CITA, ESTA ELMINA REGISTROS DE CIT, SIN NO ANTES NO GUARDARLO EN CIT_EXTRA
			IF EXISTS (SELECT CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD, @CONSECUTIVO, @USUARIO, GETDATE()
					FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
					AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL)
			BEGIN
				INSERT INTO CIT_EXTRA (CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD,CONSECUTIVO_RES,USUARIO_RES,FECHA_RES   )
				SELECT CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD, @CONSECUTIVO, @USUARIO, GETDATE()
				FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
				AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL

				DELETE FROM CIT WHERE  IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
				AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL

				UPDATE CIT SET 	TIME_EXTRA = COALESCE(@TOTAL_DURACION,0), DURACION = COALESCE(@TOTAL_DURACION,0) WHERE  CONSECUTIVO = @CONSECUTIVO
			END
			-- PARA EL ACCIDENTE DE TRANSITO	
			SELECT  @SIRAS = COALESCE(SIRAS,'') ,@CONSECUTIVO= COALESCE(CONSECUTIVO,''),  @CNSHACTRAN =COALESCE(CNSHACTRAN,'')  , @VALORTOTAL = COALESCE(VALORTOTAL,0) FROM			OPENJSON(@PARAMETROS) --PARA GUARDAR EL SIRAS EN HACTRAND
			WITH( SIRAS	VARCHAR(20) '$.SIRAS'
				,CONSECUTIVO		VARCHAR(20) '$.CONSECUTIVO'
				,CNSHACTRAN			VARCHAR(20) '$.CNSHACTRAN'
				,VALORTOTAL             DECIMAL(14,2) '$.VALORTOTAL'
				)
			IF ( SELECT COUNT(1) FROM CIT INNER JOIN AUTSES ON CIT.IDAUTSES = AUTSES.ID WHERE CONSECUTIVO= @CONSECUTIVO AND CIT.IDAUTSES IS NOT NULL ) > 0 
			BEGIN  -- ES DE SESIONES
				PRINT '________________________________________'
				PRINT 'ES DE SESIONES'
				IF ( COALESCE(@CNSHACTRAN ,'' ) <>'' )
				BEGIN
					SELECT @IDAUTSES = IDAUTSES FROM CIT WHERE CONSECUTIVO= @CONSECUTIVO 
					PRINT '@IDAUTSES: ' + @IDAUTSES
					UPDATE CIT SET CNSHACTRAN = @CNSHACTRAN WHERE IDAUTSES = @IDAUTSES

					SELECT @VALORTOTAL = SUM( VALORTOTAL)
					FROM CIT WHERE IDAUTSES = @IDAUTSES  AND CUMPLIDA=1 AND FACTURADA =0
					GROUP BY  CNSHACTRAN  
					PRINT '@VALORTOTAL: ' + CONVERT(VARCHAR(20), @VALORTOTAL)

					IF ( SELECT COUNT(*) FROM HACTRAND WHERE  CNSHACTRAN =@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = 'VARIAS' AND COALESCE ( N_FCT_ASEG ,  COALESCE ( N_FCT_FYG , '')) ='' ) >0  
						BEGIN

							PRINT 'ACTUALIZO EL CONSUMO DEL ACCIDENTE DE TRANSITO DE SESIONES CUANDO NO TIENEN FACTURA'
							UPDATE HACTRAND SET VLRGASTADO = @VALORTOTAL  , SIRAS = @SIRAS  
							WHERE  CNSHACTRAN	=@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = 'VARIAS' AND COALESCE ( N_FCT_ASEG ,  COALESCE ( N_FCT_FYG , '')) =''

						END
					ELSE
						BEGIN
							IF ( SELECT COUNT(*) FROM HACTRAND WHERE  CNSHACTRAN =@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = 'VARIAS' AND COALESCE ( N_FCT_ASEG ,  COALESCE ( N_FCT_FYG , '')) <>'' ) =0  
							BEGIN
								PRINT 'AGREGO UN NUEVO DETALLE DE HACTRAND CON EL NUEVO CONSUMO'

								SELECT @ITEM = COUNT(ITEM)+1 FROM HACTRAND WHERE  CNSHACTRAN	=@CNSHACTRAN 
								INSERT INTO HACTRAND ( CNSHACTRAN, ITEM, PROCEDENCIA,  NOREFERENCIA , N_FCT_ASEG, VLRGASTADO, SIRAS	)
									VALUES  ( @CNSHACTRAN ,  @ITEM , 'CI' , 'VARIAS' , NULL , @VALORTOTAL  , @SIRAS   )
							END
							ELSE
							BEGIN
								PRINT 'YA TIENE FACTURA Y VALOR NO HAGO NADA'
							END
						END
				END
			
			END
			ELSE
			BEGIN
				IF ( COALESCE(@CNSHACTRAN ,'' ) <>'' )
				BEGIN
					IF ( SELECT COUNT(*) FROM HACTRAND WHERE  CNSHACTRAN	=@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = @CONSECUTIVO ) >0  
						BEGIN
							PRINT 'ACTUALIZO EL CONSUMO DEL ACCIDENTE DE TRANSITO'
							UPDATE HACTRAND SET VLRGASTADO = @VALORTOTAL  , SIRAS = @SIRAS  WHERE  CNSHACTRAN	=@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = @CONSECUTIVO
						END
					ELSE
						BEGIN
							PRINT 'AGREGO UN NUEVO DETALLE DE HACTRAND CON EL NUEVO CONSUMO'

							SELECT @ITEM = COUNT(ITEM)+1 FROM HACTRAND WHERE  CNSHACTRAN	=@CNSHACTRAN 
							INSERT INTO HACTRAND ( CNSHACTRAN, ITEM, PROCEDENCIA,  NOREFERENCIA , N_FCT_ASEG, VLRGASTADO, SIRAS	)
								VALUES  ( @CNSHACTRAN ,  @ITEM , 'CI' , @CONSECUTIVO , NULL , @VALORTOTAL  , @SIRAS   )
						END
				END
			END
			IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
				SET @CONT = 1
			ELSE 
				SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1

			INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, CONSECUTIVO_NUEVO, TIPO, IDMEDICO)
			SELECT @CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME , 'Asignado - Cita Asignada', 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO,@CONSECUTIVO, 'ASIGNADO', (SELECT IDMEDICO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)  
			--SELECT TELEFONOACOM FROM #DATOS
			UPDATE AFI SET	URG_DIR = CASE WHEN COALESCE((SELECT DIRECCIONACOM FROM #DATOS),'') <> '' THEN  (SELECT DIRECCIONACOM FROM #DATOS) ELSE URG_DIR END
							,URG_NOMBRE = CASE WHEN COALESCE((SELECT NOMBREACOM FROM #DATOS),'') <> '' THEN  (SELECT NOMBREACOM FROM #DATOS) ELSE URG_NOMBRE END  
							,URG_TELE = CASE WHEN COALESCE((SELECT TELEFONOACOM FROM #DATOS),'') <> '' THEN  (SELECT TELEFONOACOM FROM #DATOS) ELSE URG_TELE END     
							,URG_VINCULO = CASE WHEN COALESCE((SELECT PARENTESCOACOM FROM #DATOS),'') <> '' THEN  (SELECT PARENTESCOACOM FROM #DATOS) ELSE URG_VINCULO END   
			FROM AFI WHERE IDAFILIADO = @IDAFILIADO
	
			IF (SELECT VIRTUAL FROM #DATOS) = 1 AND EXISTS (SELECT  * FROM SED WHERE IDSEDE = (SELECT DBO.FNK_VALORVARIABLE('SEDE_VIRTUAL')))
				UPDATE CIT SET IDSEDE = (SELECT DBO.FNK_VALORVARIABLE('SEDE_VIRTUAL')) WHERE CONSECUTIVO = @CONSECUTIVO
			--INSERT A TABLAS DE SITEDS - PERU INICIO
			IF EXISTS (SELECT   * FROM #AFILIADOSITEDS WHERE  COALESCE(COPAGOCONSULTA_DESC,'') <> '')
			BEGIN
				SELECT @IDTERCERO = IDTERCEROCA, @IDAFILIADO = IDAFILIADO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

				INSERT INTO CITSITEDS (CONSECUTIVO,SEDE_SITEDS,IDTERCERO_SITEDS, USUARIO, FECHA,COPAGOCONSULTA, COPAGOVARIABLECONSULTA, ID_COPAGOCONSULTA_DESC, COPAGOCONSULTA_DESC, ID_TIPO_COBERTURA  , IDAFILIADO   )
				SELECT @CONSECUTIVO, @IDSEDE , @IDTERCERO, @USUARIO, DBO.FNK_GETDATE(),CAST( COALESCE(COPAGO_FI_CON,0) AS DECIMAL(14,2)), CAST( COALESCE(COPA_VAR_PORC,0) AS DECIMAL(14,2)), ID_COPAGOCONSULTA_DESC, COPAGOCONSULTA_DESC, ID_TIPO_COBERTURA, @IDAFILIADO
					
				FROM #AFILIADOSITEDS
				--polizaAse
				INSERT INTO CONSSITEDS  ( CONSECUTIVO,  IDAFILIADO, IDTERCERO, USUARIO, FECHA,  AFIapMaternoAse, AFIapMaternoContratante, AFIapMaternoTitular
					, AFIapPaternoAse, AFIapPaternoContratante, AFIapPaternoTitular, AFIcodiAse, AFIcodiErrorSW, AFIcodiEstAse, AFIcodiEstadoMaritalAse, AFIcodiGeneroAse, AFIcodiIAFAS, AFIcodiParentescoAse
					, AFIcodiProducto, AFIcodiTipoAfiliacionAse, AFIcodiTipoDocAse, AFIcodiTipoDocContratante, AFIcodiTipoDocTitular, AFIcodiTipoPlanSaludAse, AFIcodiTitular, AFIcontratoAse, AFIdescEstAse, AFIdescEstadoMaritalAse, AFIdescParentescoAse
					, AFIdescProducto, AFIdescTipoAfiliacionAse, AFIdescTipoDocAse, AFIdescTipoDocContratante, AFIdescTipoDocTitular, AFIdescTipoPlanSaludAse
					, AFIfecAfiliacionTitular, AFIfecFinVigenciaAse, AFIfecIniVigenciaAse, AFIfecNacimientoAse, AFInombreAse
					, AFInombreContratante, AFInombreTitular, AFInroPlanAse, AFInroTipoDocAse, AFInroTipoDocContratante, AFInroTipoDocTitular, AFIpolizaAse
					, ASEGURADORA, CODIPRESS, codiIAFAS, codiProducto, codiAse, codiParentescoAse, nroContratante, codiEstAse, fecNacimientoAse, codiGeneroAse, nroPlanAse)
				SELECT  @CONSECUTIVO,@IDAFILIADO, @IDTERCERO, @USUARIO, DBO.FNK_GETDATE(), apMaternoAse, apMaternoContratante, apMaternoTitular, apPaternoAse, apPaternoContratante, apPaternoTitular, codiAse, codiErrorSW, codiEstAse, codiEstadoMaritalAse, codiGeneroAse
					, codiIAFAS, codiParentescoAse, codiProducto, codiTipoAfiliacionAse, codiTipoDocAse, codiTipoDocContratante, codiTipoDocTitular, codiTipoPlanSaludAse, codiTitular, contratoAse, descEstAse, descEstadoMaritalAse
					, descParentescoAse, descProducto, descTipoAfiliacionAse, descTipoDocAse, descTipoDocContratante, descTipoDocTitular, descTipoPlanSaludAse
					,CASE WHEN  fecAfiliacionTitular = '00000000' THEN NULL ELSE CONVERT(DATE, fecAfiliacionTitular) END
					,CASE WHEN  fecFinVigenciaAse = '00000000' THEN NULL ELSE CONVERT(DATE, fecFinVigenciaAse) END
					,CASE WHEN  fecIniVigenciaAse = '00000000' THEN NULL ELSE CONVERT(DATE, fecIniVigenciaAse) END
					,CASE WHEN  fecNacimientoAse = '00000000' THEN NULL ELSE CONVERT(DATE, fecNacimientoAse) END
					, nombreAse, nombreContratante, nombreTitular, nroPlanAse, nroTipoDocAse, nroTipoDocContratante, nroTipoDocTitular, polizaAse
					, @IDTERCERO,CODIPRESS, codiIAFAS, codiProducto, codiAse, codiParentescoAse, nroContratante, codiEstAse, fecNacimientoAse, codiGeneroAse, nroPlanAse FROM #AFILIADOSITEDS
			
				SET @IDCONSSITEDS = @@IDENTITY
         
				INSERT INTO CONSSITEDSD  ( CONSECUTIVO, codiTipCobertura, codiSubTipCobertura, descSubTipCobertura, coCalServicio, descCopagoFijo, copagoFijo, copagoVariable)
				SELECT   @CONSECUTIVO, codiTipCobertura, codiSubTipCobertura, descSubTipCobertura, coCalServicio, descCopagoFijo, copagoFijo, copagoVariable FROM #DETALLESITEDS
			END
			--INSERT A TABLAS DE SITEDS - PERU FIN
			--GENERA TFCJ AL MOMENTO DE CREAR LA LA ASIGNACION DE LA CITA
			IF (SELECT DBO.FNK_VALORVARIABLE('IXCOUNTRY')) = 'PERU'
			BEGIN
				IF EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND IDPLAN IN(
				SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')
				UNION ALL 
				SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')
				UNION ALL 
				SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')
				UNION ALL 
				SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')
				UNION ALL 
				SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')
				)) 
				BEGIN
					SELECT @PART=1
				END
				SET @COMPANIA ='01'
				SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME())
				FROM USUSU WHERE USUARIO=@USUARIO
				SELECT @SEDE=IDSEDE FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO

				PRINT 'INGRESA A SPK_PAGOSCAJA_CIT====>'
				EXEC SPK_PAGOSCAJA_CIT @CONSECUTIVO,@SYS_COMPUTERNAME,@COMPANIA,@SEDE,@USUARIO,@PART

				UPDATE TFCJ SET TFCJ.VALORTOTAL = CIT.VALORCOPAGO FROM TFCJ, CIT WHERE TFCJ.NOADMISION = @CONSECUTIVO AND CIT.CONSECUTIVO = @CONSECUTIVO AND TFCJ.PROCEDENCIA = 'CITAS' 
			END
			--FIN DE CREACION DE TFCJ, PARA PERU
			IF (SELECT LEN(DATO) FROM USVGS WHERE IDVARIABLE = 'TMPL_EMAIL_LINKPAGO')> 20 AND DBO.FNK_VALORVARIABLE('PASARELA_LINK_AUT') = 'SI'
			BEGIN
				EXEC  DBO.SPK_NOTIFICA_CITA_EMAIL 'ENVIA_LINK_PAGO', @CONSECUTIVO
			END
			IF DBO.FNK_VALORVARIABLE('FDESEADA_FCITA') = 'SI' AND (SELECT F_REQUERIDA FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO) >  (SELECT FECHA FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)
			BEGIN
				UPDATE CIT SET F_REQUERIDA = FECHA WHERE  CONSECUTIVO = @CONSECUTIVO
			END
		END TRY  
		BEGIN CATCH 
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
		END CATCH
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END	
		
			SELECT @IDAFILIADO         = IDAFILIADO ,@IDAUT              = CONSECUTIVO ,@NO_ITEM            = 1
				   ,@IDSERVICIO         = IDSERVICIO ,@PYP                = CASE  WHEN CLASEORDEN = 'PyP' THEN 1 ELSE 0 END    ---20240403  TENIA   0 --si no tiene dats como clase orden (pyp)
				,@ALTOCOSTO          = CASE WHEN ALTOCOSTO = 'Si' then 1 else 0 end
				,@VALORAUTD          = 0 ,@PROCEDENCIA        = 'CI'
				,@COMPANIA           = '01' ,@IDSEDE             = IDSEDE
				,@IDPROVEEDOR        = NULL ,@IDAREA             = NULL
				,@FECHAAUT           = NULL ,@IDTERCERO           = IDTERCEROCA
				,@COPAGOPROPIO       = (SELECT CAST(COPAGOPROPIO AS BIT) FROM #DATOS )
				,@SOAT               = 0
			FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

			EXEC SPK_COPAGO_AUT_CEHOSP @IDAFILIADO,@IDAUT, @NO_ITEM,@IDSERVICIO  , @PYP, @ALTOCOSTO,@VALORAUTD, @PROCEDENCIA, @SYS_COMPUTERNAME, @COMPANIA, @IDSEDE, @USUARIO  , @IDPROVEEDOR, @IDAREA , @FECHAAUT ,@COPAGOPROPIO  , @SOAT
			UPDATE CIT SET VALORTOTAL = CASE WHEN VALORTOTAL IS  NULL THEN 0 ELSE VALORTOTAL END WHERE CONSECUTIVO = @CONSECUTIVO

			IF DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU'
			BEGIN
				SELECT  @REQ_FARMACOS= REQ_FARMACOS,@REQ_EXAMENES = REQ_EXAMENES, @COPAGO_FI_FAR = COPAGO_FI_FAR, @COPAGO_VA_FAR = COPAGO_VA_FAR, @COPAGO_FI_EXA = COPAGO_FI_EXA
						, @COPAGO_VA_EXA = COPAGO_VA_EXA,@REQ_CONSULTA = REQ_CONSULTA, @COPAGO_FI_CON = COPAGO_FI_CON, @COPA_VAR_PORC = COPA_VAR_PORC FROM #AFILIADOSITEDS
				IF COALESCE(@REQ_CONSULTA ,0) = 0
				BEGIN
					SELECT @COPAGO_FI_CON = NULL	, @COPA_VAR_PORC = NULL
				END
				IF COALESCE(@REQ_FARMACOS ,0) = 0
				BEGIN
					SELECT @COPAGO_FI_FAR = NULL	, @COPAGO_VA_FAR = NULL
				END
				IF COALESCE(@REQ_EXAMENES ,0) = 0
				BEGIN
					SELECT @COPAGO_FI_EXA = NULL	, @COPAGO_VA_EXA = NULL
				END

				IF EXISTS (SELECT * FROM CITSITEDS WHERE CONSECUTIVO = @CONSECUTIVO AND COALESCE(ID_COPAGOCONSULTA_DESC,'')<> '')
				BEGIN
					PRINT 'ENTRA A 1111111111111111'
					UPDATE CIT SET CIT.VALORCOPAGO = @COPAGO_FI_CON, COPAGO_FI_CON =@COPAGO_FI_CON  , CIT.COPA_VAR_PORC = @COPA_VAR_PORC , COPAGO_FI_FAR = @COPAGO_FI_FAR, COPAGO_VA_FAR = @COPAGO_VA_FAR, COPAGO_FI_EXA = @COPAGO_FI_EXA, COPAGO_VA_EXA =@COPAGO_VA_EXA 
					FROM CIT,CITSITEDS WHERE CIT.CONSECUTIVO = @CONSECUTIVO AND CIT.CONSECUTIVO = CITSITEDS.CONSECUTIVO  
					UPDATE TFCJ SET TFCJ.VALORTOTAL = CIT.VALORCOPAGO FROM TFCJ, CIT WHERE TFCJ.NOADMISION = @CONSECUTIVO AND CIT.CONSECUTIVO = @CONSECUTIVO AND TFCJ.PROCEDENCIA = 'CITAS' 
				END
				ELSE
				BEGIN
					PRINT 'ENTRA A 222222222222222'
					UPDATE CIT SET CIT.VALORCOPAGO = @COPAGO_FI_CON, COPAGO_FI_CON =@COPAGO_FI_CON , CIT.COPA_VAR_PORC = @COPA_VAR_PORC , COPAGO_FI_FAR = @COPAGO_FI_FAR, COPAGO_VA_FAR = @COPAGO_VA_FAR, COPAGO_FI_EXA = @COPAGO_FI_EXA, COPAGO_VA_EXA =@COPAGO_VA_EXA 
					FROM CIT,#AFILIADOSITEDS WHERE CIT.CONSECUTIVO = @CONSECUTIVO
					UPDATE TFCJ SET TFCJ.VALORTOTAL = CIT.VALORCOPAGO FROM TFCJ, CIT WHERE TFCJ.NOADMISION = @CONSECUTIVO AND CIT.CONSECUTIVO = @CONSECUTIVO AND TFCJ.PROCEDENCIA = 'CITAS' 
				END
			END
			/* OK */
			IF DBO.FNK_VALORVARIABLE('IXCOUNTRY')<>'PERU'
			BEGIN
				SELECT 'OK'OK, VALOR = CASE WHEN DBO.FNK_VALORVARIABLE('IDTERCEROPARTICULAR') = CIT.IDTERCEROCA THEN COALESCE(CIT.VALORTOTAL,0) ELSE COALESCE(CIT.VALORCOPAGO,0) END   FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO
			END
			IF DBO.FNK_VALORVARIABLE('IXCOUNTRY') = 'PERU'
			BEGIN
				EXEC SPK_ASIGNA_CITA_LINK @CONSECUTIVO, @USUARIO
			END
			IF DBO.FNK_VALORVARIABLE('PASARELA_LCREA_AUT') = 'SI' AND DBO.FNK_VALORVARIABLE('IXCOUNTRY') <> 'PERU' 
				AND (SELECT COALESCE(CIT.VALORCOPAGO,0) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)>0 AND (SELECT LINK_PAGO FROM #DATOS) = 'LINKPAGO_SI'
			BEGIN
				SELECT @VALOR = CIT.VALORCOPAGO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO
				EXEC DBO.SPK_GENERA_ORDENPAGO_IZIPAY @CONSECUTIVO,'CIT','AGENDA',@IDAFILIADO,@VALOR,'',@USUARIO,0,'CREAR'
			END
		RETURN
	END

--query3
--query3
	IF @METODO = 'CONFIRMA_LLEGADA'
	BEGIN
	    SELECT @CONSECUTIVO =  CONSECUTIVO, @OBSERVACION = OBSERVACION, @NOAUTORIZACION =  NOAUTORIZACION, @VALORCOPAGO = VALORCOPAGO
			, @HABILITA_COPAGO = HABILITA_COPAGO, @TIPO_EXONERACION = TIPO_EXONERACION , @EXONERACION = EXONERACION
			, @FECHAAUTORIZACION = FECHAAUTORIZACION, @FVENCEAUTORIZACION = FVENCEAUTORIZACION
	    FROM OPENJSON (@PARAMETROS)
	     WITH (	CONSECUTIVO			VARCHAR(20)		'$.CONSECUTIVO'		, TIPO_EXONERACION		VARCHAR(20)		'$.TIPO_EXONERACION', 
				NOAUTORIZACION		VARCHAR(50)		'$.NOAUTORIZACION'	, EXONERACION			BIT				'$.EXONERACION',
				VALORCOPAGO			DECIMAL(14,2)	'$.VALORCOPAGO'		, HABILITA_COPAGO		BIT				'$.HABILITA_COPAGO',
				OBSERVACION			VARCHAR(100)	'$.OBSERVACION'		, FECHAAUTORIZACION		VARCHAR(10)		'$.FECHAAUTORIZACION'	,
				FVENCEAUTORIZACION	VARCHAR(10)		'$.FVENCEAUTORIZACION'	)
       
		SELECT @VLR_ANTERIOR = VALORCOPAGO,@IDTERCEROCA = IDTERCEROCA, @IDAFILIADO = IDAFILIADO, @SEDE = IDSEDE, @IDTERCERO = IDTERCEROCA, @IDPLAN = IDPLAN, @TIPOSOLICITUD = TIPOSOLICITUD FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
		SELECT @OBSERVACION  = COALESCE(@OBSERVACION,'')
		SELECT @SEDE = CASE COALESCE(@SEDE,'') WHEN '' THEN DBO.FNK_VALORVARIABLE ('IDSEDEPRINCIPAL') ELSE @SEDE END
		SELECT @FECHAAUTORIZACION = REPLACE(@FECHAAUTORIZACION,'-','')
		SELECT @FVENCEAUTORIZACION = REPLACE(@FVENCEAUTORIZACION,'-','')
		PRINT @SEDE
		IF EXISTS (SELECT 1 FROM  PPT WHERE IDTERCERO = @IDTERCERO AND IDPLAN = @IDPLAN AND COALESCE(PNUMAUTORIZA_OBL,0)=1) AND COALESCE(@NOAUTORIZACION,'')=''
		--AND COALESCE(@VALORCOPAGO,0) <> COALESCE(@VLR_ANTERIOR,0)
		AND EXISTS (SELECT 1 FROM TGEN WHERE TABLA = 'CIT' AND CAMPO = 'TIPOSOLICITUD' AND CODIGO = @TIPOSOLICITUD AND COALESCE(VALOR1,0) = 0 )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Segun el Tarcero y Plan, el numero de autorizacion es Obligatorio.'
		END
		IF EXISTS (SELECT 1 FROM CIT INNER JOIN KPAGE ON CIT.IDKPAGE = KPAGE.IDKPAGE WHERE COALESCE(CIT.IDKPAGE,0)<>0  AND CIT.CONSECUTIVO = @CONSECUTIVO) 
		AND COALESCE(@VALORCOPAGO,0) <> COALESCE(@VLR_ANTERIOR,0)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede editar el Copago, tiene un link de pago generado, favor de anular el link de Pago.'
		END
		IF  (SELECT DBO.FNK_VALORVARIABLE('QCITAVALIDAFOTO')) = 'SI' 
			AND EXISTS (SELECT 1 FROM AFI WHERE  IDAFILIADO = @IDAFILIADO AND COALESCE( LTRIM(RTRIM(AFI.IDFOTO)),'') = '')
            AND EXISTS (SELECT 1 FROM SED WHERE SED.IDSEDE = @IDSEDE AND COALESCE(EXTRAMURAL,0) = 0)
		BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No puede marcar llegada, el paciente requiere una Foto en su registro, favor de Editar los datos del paciente y registrar una foto.'
		END
		IF  EXISTS (SELECT 1 FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND COALESCE(CIT.CUMPLIDA,0) = 2)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR= 'No puede marcar llegada, La cita se encuentra como "NO ASISTIO", favor de quitarlo de ese estado.'
		END
		IF DBO.FNK_VALORVARIABLE('SOLOUN_CODAUTORIZA')='SI' AND COALESCE(@NOAUTORIZACION,'')<>''
		BEGIN
			SELECT @NRO=COUNT(*) 
			FROM CIT WHERE COALESCE(NOAUTORIZACION,'')=@NOAUTORIZACION 
			AND COALESCE(NOAUTORIZACION,'')<>''
			AND CONSECUTIVO<>@CONSECUTIVO
			IF @NRO>0
				BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'Ya existe una cita con este nro de Autorización: '+@NOAUTORIZACION
				END
			SELECT  @NRO=COUNT(*) FROM AUT WHERE COALESCE(NUMAUTORIZA,'')=@NOAUTORIZACION 
			IF @NRO>0
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'Ya existe un servicio ambulatorio con este mismo número de Autorización.. Autorización No Valida...'+@NOAUTORIZACION
			END
		END
		IF  COALESCE(@EXONERACION,0) = 1 AND COALESCE(@TIPO_EXONERACION,'')=''
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Debe de ingresar el tipo de Exoneracion'
		END
		IF  COALESCE(@EXONERACION,0) = 1 AND COALESCE(@TIPO_EXONERACION,'')<>'' 
			AND NOT EXISTS (SELECT 1  FROM DOCXTPO WHERE  DOCXTPO.TIPO = 'CIT' AND DOCXTPO.NODOCUMENTO = @CONSECUTIVO AND DOCXTPO.IDAFILIADO = @IDAFILIADO AND DOCXTPO.TIPODOC = DBO.FNK_VALORVARIABLE('DOC_EXONERACION') )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Debe de Adjuntar un sustento de exoneracion.'
		END
        IF @HABILITA_COPAGO = 1
        BEGIN
            IF @VALORCOPAGO <> (SELECT VALORCOPAGO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
            BEGIN
				IF (SELECT COUNT(1) FROM USGRUH WHERE  GRUPO = (SELECT DBO.FNK_DESCIFRAR(USUSU.GRUPO) FROM USUSU WHERE  USUARIO = @USUARIO) AND USGRUH.PERMISO = 1 AND USGRUH.IDPROCEDIMIENTO = 'CONF_CONSULTA_EXTERNA' AND USGRUH.IDCONTROL = 'agrega_copago' ) <> 1
				BEGIN
					INSERT INTO @TBLERRORES(ERROR) SELECT 'Usted no cuenta con permisos, para modificar el Copago.'
				END
            END
        END
        IF EXISTS (SELECT  1 FROM USVGS WHERE IDVARIABLE = 'AUT_UNICO' AND DATO = 'SI') 
            AND EXISTS( SELECT NOAUTORIZACION FROM CIT WHERE CONSECUTIVO <> @CONSECUTIVO AND COALESCE(CIT.NOAUTORIZACION,'')<>'' AND CIT.NOAUTORIZACION = @NOAUTORIZACION   ) 
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El numero de Autorizacion ya se encuentra registrado en otra Cita'
        END        
		SELECT @MINUTOS= COALESCE(TRY_CAST(DBO.FNK_VALORVARIABLE('MINUTOS_DESPUES_CITA') AS INT),0)
		IF EXISTS(SELECT 1 FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND DATEADD(MINUTE,@MINUTOS,FECHA)<DBO.FNK_GETDATE()) AND COALESCE(@MINUTOS,0)>0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La Hora Actual Supera el Máximo Permitido para La Llegada de Paciente.... No Se Puede Continuar'            
		END
        IF (SELECT COUNT (1) FROM @TBLERRORES)>0
        BEGIN
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        BEGIN TRY
			SELECT @VALOR = VALORCOPAGO, @IDAFILIADO = IDAFILIADO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
			IF @HABILITA_COPAGO = 1
			BEGIN
				UPDATE CIT SET VALORCOPAGO = @VALORCOPAGO  WHERE  CONSECUTIVO = @CONSECUTIVO
			END

			UPDATE CIT SET FECHALLEGA = DBO.FNK_GETDATE(), USUARIOLLEGA = @USUARIO, NOAUTORIZACION = @NOAUTORIZACION , FECHAAUTORIZACION = @FECHAAUTORIZACION, FVENCEAUTORIZACION = @FVENCEAUTORIZACION
						,EXONERACION = @EXONERACION, TIPO_EXONERACION = @TIPO_EXONERACION, VALORCOPAGO_EXONERA = COALESCE(@VALOR,0)
			WHERE  CONSECUTIVO = @CONSECUTIVO

         IF EXISTS (SELECT 1 FROM APLIM WHERE CONSECUTIVOCIT = @CONSECUTIVO) -- APLICACION DE MEDICAMENTOS (APLIM)
			BEGIN
            SELECT @IDAPLIM=ID FROM APLIM WHERE CONSECUTIVOCIT = @CONSECUTIVO
         
            SELECT @DETALLE_APLIMG = 'EL USUARIO '+NOMBRE+' CONFIRMÓ LA LLEGADA DEL PACIENTE.'
            FROM USUSU
            WHERE USUARIO = @USUARIO

            EXEC SPK_AGREGAR_EVENTO_APLIM @IDAPLIM, 'CONFIRMACION', @DETALLE_APLIMG, @USUARIO, 'AGENDA'
			END

			IF COALESCE(@EXONERACION,0)=1 AND NOT EXISTS (SELECT 1 FROM TGEN WHERE  TABLA = 'CIT' AND CAMPO = 'EXONERACION' AND COALESCE(VALOR2,0) = 1 AND CODIGO = @TIPO_EXONERACION )
			BEGIN
				IF EXISTS (SELECT 1 FROM TGEN WHERE  TABLA = 'CIT' AND CAMPO = 'EXONERACION' AND COALESCE(VALOR1,0) = 1 AND CODIGO = @TIPO_EXONERACION)
				BEGIN
					UPDATE AFI SET TIPO_EXONERACION = COALESCE(@TIPO_EXONERACION,NULL) WHERE IDAFILIADO = @IDAFILIADO
				END
				UPDATE CIT SET VALORCOPAGO = 0, CIT.IDESTADOE = 'SI' WHERE CONSECUTIVO = @CONSECUTIVO
				/* IDESTADOE: SI   ||  NO    ||  PEND */
			END
			IF COALESCE(@EXONERACION,0)=1 AND EXISTS (SELECT 1 FROM TGEN WHERE  TABLA = 'CIT' AND CAMPO = 'EXONERACION' AND COALESCE(VALOR2,0) = 1 AND CODIGO = @TIPO_EXONERACION )
			BEGIN
				UPDATE CIT SET CIT.IDESTADOE = 'PEND' WHERE CONSECUTIVO = @CONSECUTIVO
			END

			IF  DBO.FNK_VALORVARIABLE('GENERA_COPAGO_CITAS')='LLEGA'
			BEGIN
				IF EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND IDPLAN IN(
					SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')
					UNION ALL 
					SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')
					UNION ALL 
					SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')
					UNION ALL 
					SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')
					UNION ALL 
					SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')
					))
					SELECT @PART=1
				SET @COMPANIA ='01'
				SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME())
				FROM USUSU WHERE USUARIO=@USUARIO
				SELECT @SEDE=IDSEDE FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO

				PRINT 'INGRESA A SPK_PAGOSCAJA_CIT'
				EXEC SPK_PAGOSCAJA_CIT @CONSECUTIVO,@SYS_COMPUTERNAME,@COMPANIA,@SEDE,@USUARIO,@PART

				IF DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU'
				BEGIN
					UPDATE TFCJ SET TFCJ.VALORTOTAL = CIT.VALORCOPAGO FROM TFCJ, CIT WHERE TFCJ.NOADMISION = @CONSECUTIVO AND CIT.CONSECUTIVO = @CONSECUTIVO AND TFCJ.PROCEDENCIA = 'CITAS' 
				END
			END
		    IF (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
			    SET @CONT = 1
		    ELSE 
			    SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        
            IF @HABILITA_COPAGO = 1
            BEGIN
                UPDATE CIT SET VALORCOPAGO = @VALORCOPAGO  WHERE  CONSECUTIVO = @CONSECUTIVO
                SELECT @MENSAJE_COPAGO = 'Cambio copago, vlr anterior: $'+ STR(@VLR_ANTERIOR) + ' , vlr nuevo: $'+ STR(@VALORCOPAGO) 
            END
        
            IF @HABILITA_COPAGO = 1
                SELECT @MENSAJE_OBS = 'Conf. Llegada. - Obs: ' +@OBSERVACION + '- ' + @MENSAJE_COPAGO
            ELSE
                SELECT @MENSAJE_OBS = 'Conf. Llegada. - Obs: ' +@OBSERVACION

		    SELECT @IDAFILIADO = (SELECT IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)
		    INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
		    VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, @MENSAJE_OBS, 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO, 'LLEGADA' )
		END TRY
        BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
        END CATCH

        IF(SELECT COUNT(*) FROM @TBLERRORES)>0
        BEGIN
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END

        SELECT 'OK' OK,  CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Sin Facturar'
            WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') <> '' THEN ' - Cita facturada con el numero ' + CIT.N_FACTURA
            WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Cita con error de facturacion'
            END [ESTADO_FACTURA],   
	    CASE WHEN CIT.GENEROCAJA <> 1  THEN ''
            WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) <> 'A' THEN ' - Recibo sin enviar a caja'
            WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 0 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo sin recaudar'
            WHEN CIT.TIPOCAJA = 'FCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ' - Recibo anulado'
            WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ''
            WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 1 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo recaudado'
            WHEN CIT.TIPOCAJA = 'FCJ' AND NOT EXISTS(SELECT * FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) THEN ' - Recibo con error'
	        ELSE ' - Recibo sin enviar a caja'
            END [ESTADO_REGISTRO],
	    CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
        THEN  CASE  WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0))) 
                    WHEN CIT.TIPOCAJA = 'FCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CIT.DESCUENTO,0)) END [VALORCOPAGO]
	    FROM CIT WHERE CIT.CONSECUTIVO = @CONSECUTIVO
        RETURN
	END
	IF @METODO = 'CANCELAR_LLEGADA'
	BEGIN
	   SELECT @CONSECUTIVO =  CONSECUTIVO, @OBSERVACION = OBSERVACION, @NOAUTORIZACION =  NOAUTORIZACION, @VALORCOPAGO = VALORCOPAGO, @HABILITA_COPAGO = HABILITA_COPAGO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO',
			   NOAUTORIZACION    VARCHAR(50)    '$.NOAUTORIZACION',
			   VALORCOPAGO       DECIMAL(14,2)   '$.VALORCOPAGO',
			   HABILITA_COPAGO   BIT            '$.HABILITA_COPAGO',
			   OBSERVACION       VARCHAR(100)   '$.OBSERVACION')
      SELECT @OBSERVACION = COALESCE(@OBSERVACION,'')
      SELECT @ESTADO_FCJ = ESTADO, @CERRADA_FCJ = CERRADA   FROM FCJ WHERE  NOADMISION = @CONSECUTIVO
      IF (SELECT TIPOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO) = 'FCJ'
      BEGIN
         IF (SELECT COUNT(1) FROM CIT WHERE   CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA = 'FCJ' AND @CERRADA_FCJ <> 1 ) > 0
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'EL Recibo de Caja para esta Cita Ya Fue Traido en la Caja y esta sin Confirmar... Se Debe Regresar Recibo Primero'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
         IF (SELECT COUNT(1) FROM CIT WHERE   CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA = 'FCJ' AND @CERRADA_FCJ = 1 AND @ESTADO_FCJ<> 'A' ) > 0
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Cancelar llegada del paciente , por que ya fue Cancelada en Caja.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
      END
      BEGIN TRY
		   UPDATE CIT SET FECHALLEGA = NULL, USUARIOLLEGA = NULL WHERE  CONSECUTIVO = @CONSECUTIVO
         DELETE FROM TFCJDD WHERE CNSFACJ = (SELECT NORECIBOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
         DELETE FROM TFCJD WHERE CNSFACJ = (SELECT NORECIBOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
         DELETE FROM TFCJ WHERE CNSFACJ = (SELECT NORECIBOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
         UPDATE CIT SET NORECIBOCAJA= '', CODCAJA = '', GENEROCAJA=0, TIPOCAJA= NULL WHERE    CONSECUTIVO = @CONSECUTIVO
      
		   IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
			   SET @CONT = 1
		   ELSE 
			   SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        
		   SELECT @IDAFILIADO = (SELECT IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)
		   INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
		   VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, 'Llegada Cancelada - Obs: '+ @OBSERVACION, 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO, 'CANCELA' )
        
		END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      SELECT 'OK' OK,  CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Sin Facturar'
     WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') <> '' THEN ' - Cita facturada con el numero ' + CIT.N_FACTURA
     WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Cita con error de facturacion'
     END [ESTADO_FACTURA],   
	 CASE WHEN CIT.GENEROCAJA <> 1  THEN ''
      WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) <> 'A' THEN ' - Recibo sin enviar a caja'
      WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 0 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo sin recaudar'
      WHEN CIT.TIPOCAJA = 'FCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ' - Recibo anulado'
      WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ''
      WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 1 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo recaudado'
      WHEN CIT.TIPOCAJA = 'FCJ' AND NOT EXISTS(SELECT * FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) THEN ' - Recibo con error'
	  ELSE ' - Recibo sin enviar a caja'
      END [ESTADO_REGISTRO],
	  CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
      THEN  CASE  WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0))) 
                  WHEN CIT.TIPOCAJA = 'FCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CIT.DESCUENTO,0)) END [VALORCOPAGO]
	 FROM CIT WHERE CIT.CONSECUTIVO = @CONSECUTIVO
      RETURN
	END
	IF @METODO = 'ENVIA_LINK_VIDEOLLAMADA'
	BEGIN
	   SELECT @CONSECUTIVO =  CONSECUTIVO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO')
		BEGIN TRY
			SELECT @IDAFILIADO = CIT.IDAFILIADO, @NOMBREAFI = AFI.NOMBREAFI, @FECHA = FECHA , @MODALIDADCIT = COALESCE(CIT.MODALIDAD,'')
				, @DOCIDAFILIADO = TRIM(AFI.DOCIDAFILIADO),  @NUMERO = DBO.FNK_PrimerMovilTercero(@IDAFILIADO), @DESCSERVICIO = SER.DESCSERVICIO
				, @NOMBREMEDI=UPPER(REPLACE( COALESCE(LTRIM(RTRIM(MED.PNOMBRE)),''), CHAR(9),'') + ' ' + REPLACE( COALESCE(LTRIM(RTRIM(MED.PAPELLIDO)),''), CHAR(9),'') )
				, @NOMBRE_MED = dbo.FNK_CAPITALIZAR_TEXTO(TRIM(MED.NOMBRE))
				, @NOMBRE_SEDE = dbo.FNK_CAPITALIZAR_TEXTO(TRIM(SED.DESCRIPCION))
				, @FECHA_STRING = CONCAT(
					''
					,FORMAT(CIT.FECHA, 'dddd', 'es-ES')
					,' '
					,DAY(CIT.FECHA)
					,' de '
					,FORMAT(CIT.FECHA, 'MMMM', 'es-ES') 
					,' de '
					,YEAR(CIT.FECHA) 
					,' a las '
					,FORMAT(CIT.FECHA, 'h:mmtt', 'es-ES')
					,' '
					,IIF(DATEPART(HOUR, CIT.FECHA) < 12,'am', 'pm')
				)
			FROM CIT INNER JOIN AFI ON AFI.IDAFILIADO = CIT.IDAFILIADO
				LEFT JOIN MED ON MED.IDMEDICO=CIT.IDMEDICO
				LEFT JOIN SER ON CIT.IDSERVICIO = SER.IDSERVICIO
				LEFT JOIN SED ON SED.IDSEDE = CIT.IDSEDE
			WHERE CONSECUTIVO = @CONSECUTIVO
			
			IF COALESCE(@NUMERO,'')<> ''
			BEGIN
				SELECT @RAZONSOCIAL = dbo.FNK_CAPITALIZAR_TEXTO(TRIM(RAZONSOCIAL))  
				FROM TER
				WHERE IDTERCERO=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')

				--SELECT @SMS = 
				-- 'Estimado(a) paciente ' + dbo.FNK_CAPITALIZAR_TEXTO(TRIM(@NOMBREAFI))
				--+ ', gracias por preferir a   ' + dbo.FNK_CAPITALIZAR_TEXTO(TRIM(@RAZONSOCIAL))
				--+ '. Ingrese al siguiente enlace para conectarse a su cita médica programada para el día ' + DBO.FNK_GET_STR_FECHA(@FECHA,NULL,NULL) +
				--' a las '+RIGHT(CONVERT(VARCHAR,@FECHA, 100),7)+', con el profesional ' +@NOMBREMEDI + ' correspondiente a '+@DESCSERVICIO
				--+ '\n\n https://meet.jit.si/' + @DOCIDAFILIADO
				--EXEC SPK_SENDSMS @NUMERO, @SMS, 'POST'

				SELECT @LINK = 'https://meet.jit.si/' + @DOCIDAFILIADO
				SELECT @SMS = DATO FROM USVGS WHERE IDVARIABLE = 'TMPL_SMS_LINK_CIT'
				SELECT @NOMBREAFI = dbo.FNK_CAPITALIZAR_TEXTO(TRIM(@NOMBREAFI))

				IF CHARINDEX('{{NOMBRE_AFI}}', @SMS)> 0 AND COALESCE(@NOMBREAFI, '')<>''
					SELECT @SMS = REPLACE(@SMS, '{{NOMBRE_AFI}}', @NOMBREAFI)
				
				IF CHARINDEX('{{NOMBRE_IPS}}', @SMS) > 0 AND COALESCE(@RAZONSOCIAL, '')<>''
					SELECT @SMS = REPLACE(@SMS, '{{NOMBRE_IPS}}', @RAZONSOCIAL)

				IF CHARINDEX('{{NOMBRE_SED}}', @SMS) > 0 AND COALESCE(@NOMBRE_SEDE, '')<>''
					SELECT @SMS = REPLACE(@SMS, '{{NOMBRE_SED}}', @NOMBRE_SEDE)

				IF CHARINDEX('{{FECHA_CIT}}', @SMS) > 0 AND COALESCE(@FECHA_STRING, '')<>''
					SELECT @SMS = REPLACE(@SMS, '{{FECHA_CIT}}', @FECHA_STRING)

				IF CHARINDEX('{{NOMBRE_MED}}', @SMS) > 0 AND COALESCE(@NOMBRE_MED, '')<>''
					SELECT @SMS = REPLACE(@SMS, '{{NOMBRE_MED}}', @NOMBRE_MED)

				IF CHARINDEX('{{NOMBRE_SER}}', @SMS) > 0 AND COALESCE(@DESCSERVICIO, '')<>''
					SELECT @SMS = REPLACE(@SMS, '{{NOMBRE_SER}}', @DESCSERVICIO)

				
				SELECT @SMS = @SMS +'\n\n'+ @LINK

				EXEC SPK_SEND_WHATSAPP @NUMERO = @NUMERO, @MENSAJE = @SMS, @LINK = @LINK
				EXEC DBO.SPK_SENDSMS @NUMERO, @SMS, 'POST', @COPIA_WHATSAPP = 0

			END
        
		END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
	END
	IF @METODO = 'CONSULTA_TIPOCITA'
	BEGIN
		SELECT @TIPOCITA = TIPOCITA
		FROM OPENJSON(@PARAMETROS)
		WITH(	TIPOCITA	VARCHAR(20)		'$.TIPOCITA')

		SELECT 'OK'OK
		SELECT @TIEMPOEXTRA = COALESCE(VALOR1,0) FROM TGEN WHERE TABLA = 'CITAS' AND CAMPO = 'TIPOCITA' AND CODIGO = @TIPOCITA
		SELECT @TIEMPOEXTRA TIEMPOEXTRA
	END
	IF @METODO = 'DATACITA'
	BEGIN
		SELECT @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH(	CONSECUTIVO	VARCHAR(20)		'$.CONSECUTIVO')

		SELECT 'OK' OK, CIT.IDTERCEROCA,  COALESCE(CIT.VALORCOPAGO,0) VALORCOPAGO, COALESCE(CIT.VALORTOTAL,0) VALORTOTAL
			, TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN
		FROM CIT 
			LEFT JOIN TER ON CIT.IDTERCEROCA = TER.IDTERCERO
			LEFT JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
		WHERE CIT.CONSECUTIVO = @CONSECUTIVO
	END
END


