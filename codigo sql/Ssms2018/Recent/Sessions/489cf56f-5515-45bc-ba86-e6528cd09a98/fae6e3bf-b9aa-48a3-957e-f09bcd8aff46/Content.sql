IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'SPK_APLICA_HBALI_IENF' AND TYPE = 'P')
BEGIN
   DROP PROCEDURE SPK_APLICA_HBALI_IENF
END

GO
CREATE PROCEDURE DBO.SPK_APLICA_HBALI_IENF
	@CNSHBALI      VARCHAR(20),
	@NTIPO         INT,
	@NCONSECUTIVO  INT,
	@HORA          TINYINT,
	@USUARIO       VARCHAR(12),
	@TIPOAPLICA    TINYINT,
	@CLASENOAPLICA VARCHAR(20)='',
	@LUGRARAPLI    VARCHAR(10)='',
	@SINEXISTENCIA BIT=0,
	@NOLOTE        VARCHAR(20) = NULL
WITH ENCRYPTION
AS
/* 
Fecha:		 2018-09-30
Descripción: Procedimiento que aplicará HBALID, HBALIDD y descontará de IENF
*/
SET NOCOUNT ON
DECLARE 
	@COBRAR			BIT = 1,
	@NOADMISION		VARCHAR(20),
	@IDMEDICO		VARCHAR(12), 
	@IDSERVICIO		VARCHAR(20), 
	@IDSERVICIO_DI	VARCHAR(20), 
	@DILUYENTE		VARCHAR(20), 
    @OMCODHEMO      VARCHAR(20),
    @OMCODMEZCLA    VARCHAR(20),
    @OMCODNUTRI     VARCHAR(20),
	@CODOM			VARCHAR(10),
    @TIPO           VARCHAR(3),
	@CANT_HBALID	DECIMAL(14,2),
	@CANT_HBALIDD	DECIMAL(14,2),
	@DILUY_HBALID	DECIMAL(14,2),
	@MARCA_HBALID	SMALLINT,
	@MARCA_HBALIDD	SMALLINT,
	@FECHA			DATETIME,
    @FECHA_ULT      DATETIME,
	@SQL			NVARCHAR(255), 
	@PARAMETROS		NVARCHAR(255),
    @HOY            DATETIME=GETDATE(),
    @CNSIENF        INT,
    @DILUY_CNSIENF  INT
BEGIN
	--HBALI
	SELECT @NOADMISION=NOADMISION, @FECHA=DATEADD(HOUR,@HORA,(CASE WHEN @HORA BETWEEN 0 AND 6 THEN DATEADD(DAY,1,CONVERT(SMALLDATETIME,CONVERT(DATE,FECHA))) ELSE CONVERT(SMALLDATETIME,CONVERT(DATE,FECHA)) END))
	FROM HBALI WHERE CNSHBALI=@CNSHBALI

   IF @FECHA>DATEADD(HOUR,1,@HOY) AND @TIPOAPLICA=1 AND (SELECT DBO.FNK_VALORVARIABLE('HBALI_APLICARANTES'))<>'SI'
   BEGIN
		RAISERROR('No se está permitido aplicar dosis superior a una hora posterior a la actual',11,1) 
      RETURN
   END

	--HBALID
	SELECT @IDSERVICIO=IDSERVICIO, @CODOM=CLASE FROM HBALID WHERE CNSHBALI=@CNSHBALI AND NTIPO=@NTIPO AND NCONSECUTIVO=@NCONSECUTIVO
	IF @IDSERVICIO IS NULL
	BEGIN
		RAISERROR('No existe HBALID',11,1) 
		RETURN
	END
	ELSE
	BEGIN
		SET @SQL=N'SELECT @VALOR=H'+RIGHT('00'+CONVERT(VARCHAR(2),@HORA),2)+' FROM HBALID WHERE CNSHBALI='''+@CNSHBALI+''' AND NTIPO='+CONVERT(VARCHAR,@NTIPO)+' AND NCONSECUTIVO='+CONVERT(VARCHAR,@NCONSECUTIVO)
		SET @PARAMETROS=N'@VALOR DECIMAL(14,2) OUTPUT'
		EXECUTE SP_EXECUTESQL @SQL, @PARAMETROS, @VALOR=@CANT_HBALID OUTPUT;
	END
	--HBALIDD
	SELECT @CANT_HBALIDD=QAPLICADA, @MARCA_HBALIDD=MARCA FROM HBALIDD WHERE CNSHBALI=@CNSHBALI AND NTIPO=@NTIPO AND NCONSECUTIVO=@NCONSECUTIVO AND HORA=@HORA

	--HBALIDD Diluyente	
	SET @SQL=N'SELECT @IDSERVICIO_DIL=IDSERVICIO FROM HBALID WHERE CNSHBALI='''+@CNSHBALI+''' AND NTIPO=2 AND TIPO=''BALIQ'' AND CLASE=''HOJA TRAT'' AND IDSERVICIOMED='''+@IDSERVICIO+''' AND H'+RIGHT('00'+CONVERT(VARCHAR(2),@HORA),2)+'>0 '
	SET @PARAMETROS=N'@IDSERVICIO_DIL VARCHAR(20) OUTPUT'
	EXECUTE SP_EXECUTESQL @SQL, @PARAMETROS, @IDSERVICIO_DIL=@DILUYENTE OUTPUT;

	--SELECT @DILUYENTE=IDSERVICIO FROM HBALID WHERE CNSHBALI=@CNSHBALI AND CLASE='HOJA TRAT' AND TIPO='BALIQ' AND IDSERVICIOMED=@IDSERVICIO AND CLAMED=@CODOM
	IF @DILUYENTE IS NOT NULL
	BEGIN
		SET @SQL=N'SELECT @VALOR=H'+RIGHT('00'+CONVERT(VARCHAR(2),@HORA),2)+' FROM HBALID WHERE CNSHBALI='''+@CNSHBALI+''' AND NTIPO=2 AND CLASE=''HOJA TRAT'' AND TIPO=''BALIQ'' AND IDSERVICIOMED='''+@IDSERVICIO+''' AND H'+RIGHT('00'+CONVERT(VARCHAR(2),@HORA),2)+'>0 '
		SET @PARAMETROS=N'@VALOR DECIMAL(14,2) OUTPUT'
		EXECUTE SP_EXECUTESQL @SQL, @PARAMETROS, @VALOR=@DILUY_HBALID OUTPUT;
		SELECT @IDSERVICIO_DI=DBO.FNK_BUSCA_DILUYENTE((SELECT IDJERARQUIA FROM SER WHERE IDSERVICIO=@DILUYENTE),@DILUY_HBALID)
	END

	--USUSU
	SELECT @IDMEDICO  =IDMEDICO   FROM USUSU WHERE USUARIO=@USUARIO


	--Validación antes de comenzar
	IF (SELECT DATO FROM USVGS WHERE IDVARIABLE='MODOCOBROMEDHBALI')<>'HBALI'
	BEGIN
		RAISERROR('La variable MODOCOBROMEDHBALI debe estar configurado como HBALI',11,2) 
		RETURN
	END

   SELECT @OMCODHEMO  =DATO FROM USVGS WHERE IDVARIABLE='OMCODHEMODERIVADOS'
   SELECT @OMCODMEZCLA=DATO FROM USVGS WHERE IDVARIABLE='OMCODMEZCLA'
   SELECT @OMCODNUTRI =DATO FROM USVGS WHERE IDVARIABLE='OMCODNUTRICIONP'

   SET @TIPO='MED'

   IF 0=COALESCE((SELECT COUNT(1) FROM (
       SELECT ROW_NUMBER() OVER (ORDER BY FECHA DESC) ITEM, COALESCE(NOINSTITUCIONAL,0) NOINST
       FROM HBALINI WHERE NOADMISION=@NOADMISION AND IDSERVICIO=@IDSERVICIO AND CODOM=@CODOM AND ESTADO='OK'
        )X WHERE ITEM=1 AND NOINST=1),0)
    BEGIN
	    IF @SINEXISTENCIA=0
	    BEGIN
		    IF @TIPOAPLICA=1
		    BEGIN
			    IF @MARCA_HBALIDD=2
			    BEGIN 
				    RAISERROR('La dosis ya se encuentra aplicado',11,1) 
				    RETURN
			    END
			    IF @CANT_HBALID <> @CANT_HBALIDD
			    BEGIN
				    RAISERROR('La cantidad a aplicar de HBALID y HBALIDD no concuerdan, debe quitar y agregar la dosis para corregirlo',11,1) 
				    RETURN
			    END
			    IF (SELECT COUNT(1) FROM DBO.VWK_IENF_NOADMISION WHERE NOADMISION=@NOADMISION AND IDSERVICIO=@IDSERVICIO AND CODOM IN ('',@TIPO)) = 0
			    BEGIN
				    RAISERROR('Este medicamento a aplicar nunca ha sido recibido para este paciente, debe recibirlo o solicitar a farmacia que lo entregue',11,1) 
				    RETURN
			    END
			
			    IF (SELECT SUM(TOTAL) FROM DBO.VWK_IENF_NOADMISION WHERE NOADMISION=@NOADMISION AND IDSERVICIO=@IDSERVICIO AND CODOM IN ('',@TIPO)) < @CANT_HBALID
			    BEGIN
				    RAISERROR('La cantidad del medicamento a aplicar es menor a lo disponible, revise el tacho',11,1) 
				    RETURN
			    END
         
             --Reviso dosis por aplicar antes
             SELECT TOP 1 @FECHA_ULT=FECHA 
             FROM DBO.VWK_HBALID 
             WHERE NOADMISION=@NOADMISION AND NTIPO=@NTIPO AND IDSERVICIO=@IDSERVICIO AND FECHA<@FECHA AND ESTADO=2
             ORDER BY FECHA DESC
             IF @FECHA_ULT IS NOT NULL
             BEGIN
                IF EXISTS (SELECT 1 FROM DBO.VWK_HBALID WHERE NOADMISION=@NOADMISION AND NTIPO=@NTIPO AND IDSERVICIO=@IDSERVICIO AND FECHA>@FECHA_ULT AND FECHA<@FECHA AND ESTADO=1)
                BEGIN
				       RAISERROR('Existen dosis anteriores que deben ser diligenciadas antes',11,1) 
				       RETURN
                END
             END

			    IF @DILUYENTE IS NOT NULL
			    BEGIN
				    IF (SELECT COUNT(1) FROM DBO.VWK_IENF_NOADMISION WHERE NOADMISION=@NOADMISION AND IDSERVICIO=@IDSERVICIO_DI AND CODOM IN ('',@TIPO)) = 0
				    BEGIN
					    RAISERROR('Este diluyente a aplicar nunca ha sido recibido para este paciente, debe recibirlo o solicitar a farmacia que lo entregue',11,1) 
					    RETURN
				    END
				    ELSE
				    BEGIN		
					    IF (SELECT SUM(TOTAL) FROM DBO.VWK_IENF_NOADMISION WHERE NOADMISION=@NOADMISION AND IDSERVICIO=@IDSERVICIO_DI AND CODOM IN ('',@TIPO)) < @DILUY_HBALID
					    BEGIN
						    RAISERROR('Este medicamento depente de un diluyente el cuál la cantidad necesaria es menor a lo disponible, revise el tacho',11,1)
						    RETURN
					    END
				    END
			    END
		    END

		    --Descuento o Recupero IENF
		    IF @TIPOAPLICA=1 OR (@TIPOAPLICA=3 AND @MARCA_HBALIDD=2)
		    BEGIN
			    BEGIN TRY
				    EXEC DBO.SPK_USO_IENF @NOADMISION, @IDSERVICIO, @CANT_HBALID, @TIPOAPLICA, @USUARIO, @FECHA, @NOLOTE, @TIPO, NULL, @CNSIENF OUTPUT
				    IF @DILUYENTE IS NOT NULL
					    EXEC DBO.SPK_USO_IENF @NOADMISION, @IDSERVICIO_DI, @DILUY_HBALID, @TIPOAPLICA, @USUARIO, @FECHA, @NOLOTE, @TIPO, NULL, @DILUY_CNSIENF OUTPUT
			    END TRY  
			    BEGIN CATCH 
                    DECLARE @ERROR VARCHAR(MAX)=''
                    SET @ERROR=ERROR_MESSAGE()
				    RAISERROR(@ERROR,11,1) 
				    RETURN
			    END CATCH
		    END
	    END
	    ELSE
	    BEGIN
		    IF @TIPOAPLICA=1 AND (SELECT ISNULL(SUM(TOTAL),0) FROM DBO.VWK_IENF_NOADMISION WHERE NOADMISION=@NOADMISION AND IDSERVICIO=@IDSERVICIO AND CODOM IN ('',@TIPO))>0
		    BEGIN
			    RAISERROR('Este paciente aún tiene medicamento disponible por lo que no puede usar esta función',11,1) 
			    RETURN
		    END
		
          IF (SELECT DATO FROM USVGS WHERE IDVARIABLE='APLI_SINRECIBIR')<>'SI'
          BEGIN
		       IF (SELECT 1 FROM DBO.FNK_IMOVH_SIN_RECIBIR(@NOADMISION) WHERE IDSERVICIO=@IDSERVICIO)>0
		       BEGIN
			       RAISERROR('Este paciente tiene medicamento pendiente por recibir por lo que no puede usar esta función',11,1) 
			       RETURN
		       END
          END

		    PRINT 'COBRO'
		    EXEC DBO.SPK_GEN_CARGOSENF_HBALI @CNSHBALI, @HORA, @USUARIO, @NTIPO, @NCONSECUTIVO, @TIPOAPLICA, @FECHA
	    END
    END --End: Validacion HBALINI.NOINSTITUCIONAL


	PRINT 'EXEC SPK_APLICA_HBALI_IENF '''+ISNULL(@CNSHBALI,'')+''', '+CONVERT(VARCHAR,ISNULL(@NTIPO,0))+', '+CONVERT(VARCHAR,ISNULL(@NCONSECUTIVO,0))
		+', '+CONVERT(VARCHAR(2),ISNULL(@HORA,0))+', '''+ISNULL(@USUARIO,'')+''', '+CONVERT(VARCHAR,ISNULL(@TIPOAPLICA,0))
		+CASE WHEN @CLASENOAPLICA='' THEN '' ELSE ', '''+@CLASENOAPLICA+'''' END + CASE WHEN @LUGRARAPLI='' THEN '' ELSE ', '''+@LUGRARAPLI+''' ' END
	

	--Aplico HBALID
	SET @SQL='
UPDATE HBALID SET H'+RIGHT('00'+CONVERT(VARCHAR(2),@HORA),2)+'EST='+CASE @TIPOAPLICA WHEN 1 THEN '2' WHEN 2 THEN '4' WHEN 3 THEN '1' END+'
WHERE CNSHBALI='''+@CNSHBALI+''' AND NTIPO='+CONVERT(VARCHAR,@NTIPO)+' AND TIPO=''HOJA TRAT'' 
	AND CLASE='''+@CODOM+''' AND NCONSECUTIVO='+CONVERT(VARCHAR,@NCONSECUTIVO)
	EXECUTE (@SQL)

	IF @DILUYENTE IS NOT NULL
	BEGIN
		SET @SQL='
UPDATE HBALID SET H'+RIGHT('00'+CONVERT(VARCHAR(2),@HORA),2)+'EST='+CASE @TIPOAPLICA WHEN 1 THEN '2' WHEN 2 THEN '4' WHEN 3 THEN '1' END+'
WHERE CNSHBALI='''+@CNSHBALI+''' AND NTIPO=2 AND TIPO=''BALIQ'' AND CLASE=''HOJA TRAT'' 
	AND IDSERVICIOMED='''+@IDSERVICIO+''' AND H'+RIGHT('00'+CONVERT(VARCHAR(2),@HORA),2)+'>0 '
		EXECUTE (@SQL)
	END

	--Aplico HBALIDD
	UPDATE HBALIDD SET 
		MARCA				= CASE @TIPOAPLICA WHEN 1 THEN 2 WHEN 2 THEN 3 WHEN 3 THEN 0 END, 
		IDAPLICA			= @IDMEDICO, 
		CLASENOAPLICA	= @CLASENOAPLICA,
      FECHAAPLICA		= CASE @TIPOAPLICA WHEN 1 THEN GETDATE() ELSE NULL END,
      CLASEAPLI		= CASE @TIPOAPLICA WHEN 1 THEN @LUGRARAPLI ELSE '' END,
      CNSIENF        = CASE @TIPOAPLICA WHEN 1 THEN @CNSIENF ELSE NULL END
	FROM HBALIDD 
	WHERE CNSHBALI=@CNSHBALI AND NTIPO=@NTIPO AND NCONSECUTIVO=@NCONSECUTIVO AND IDSERVICIO=@IDSERVICIO AND HORA=@HORA
END

