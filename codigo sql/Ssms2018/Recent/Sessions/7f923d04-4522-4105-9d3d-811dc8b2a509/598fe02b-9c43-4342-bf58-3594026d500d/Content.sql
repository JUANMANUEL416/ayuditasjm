CREATE OR ALTER PROCEDURE DBO.SPQ_CIT_COL_2
@JSON  NVARCHAR(MAX)
WITH
ENCRYPTION
AS
DECLARE	 @PARAMETROS   NVARCHAR(MAX),@MODELO           VARCHAR(100) ,@METODO    VARCHAR(100)	,@USUARIO      VARCHAR(12)
		,@GRUPO        VARCHAR(8)	,@SYS_COMPUTERNAME VARCHAR(254) ,@SEDE      VARCHAR(5)		,@FECHA        VARCHAR(10)   
		,@IDEMEDICA    VARCHAR(4)	,@FECHA1           DATETIME		,@SQL		VARCHAR(MAX)	,@IDMEDICO     VARCHAR(20)
		,@HORA         VARCHAR(10)	,@IDDX             VARCHAR(10)	,@CONSECUTIVO VARCHAR(20)	,@IDAFILIADO   VARCHAR(20)   
		,@IDPLAN       VARCHAR(10)  ,@IDTERCERO        VARCHAR(20)  ,@IDSERVICIO VARCHAR(20)	,@NOMBREACOMPA VARCHAR(120)  
		,@TELEFONOACOMPA VARCHAR(20),@PARENTESCOACOMPA VARCHAR(20)  ,@MODELOCITA VARCHAR(50)	,@CLASEORDEN   VARCHAR(20)
		,@IDPESPECIAL  VARCHAR(20)  ,@IDTERCEROCA      VARCHAR(20)  ,@NOAUTORIZACION VARCHAR(45),@FECHA2       DATE
		,@CONSECUTIVOANT VARCHAR(20),@CONSECUTIVONUE   VARCHAR(20)  ,@TIPOCITA  VARCHAR(20)		,@NOMBRE       VARCHAR(100)
		,@ATENCION     VARCHAR(50)  ,@CCOSTO           VARCHAR(50)  ,@PARTICULAR      BIT		,@FECHAINCIO   DATETIME      
		,@FECHAFINAL   DATETIME     ,@COMPANIA         VARCHAR(2)	,@IDAUT     VARCHAR(20)		,@NO_ITEM      SMALLINT     
		,@PYP		      SMALLINT     ,@ALTOCOSTO         SMALLINT		,@VALORAUTD DECIMAL(12,4)	,@FECHAAUT     DATETIME
		,@COPAGOPROPIO SMALLINT     ,@SOAT              SMALLINT		 ,@PROCEDENCIA  VARCHAR(20)  ,@IDPROVEEDOR  VARCHAR(20)  
		,@IDAREA       VARCHAR(20)  ,@PARTICULAR_TIME   DECIMAL(14,2),@FECHAINI	DATE			,@FECHAFIN     DATE         
		,@IDESPECIALIDAD VARCHAR(20),@VALORCOPAGO       DECIMAL(14,2),@I         INT				,@I_TO         INT
		,@MODALIDAD    VARCHAR(10)  ,@MOTIVO            VARCHAR(100) ,@HOY       SMALLDATETIME=DBO.FNK_GETDATE()
		,@CUMPLIDA     SMALLINT     ,@NIVELSOCIOEC      VARCHAR(2)	 ,@CERRADA   BIT				,@ESTADO       VARCHAR(10)
		,@TIPOCAJA     VARCHAR(10)	 ,@CODCAJA		      VARCHAR(6)	 ,@CONT      INT				,@IDSEDE       VARCHAR(5)
		,@NORECIBOCAJA VARCHAR(20)	 ,@IDCAUSAL          VARCHAR(10)  ,@OBSERVACION     VARCHAR(MAX)  ,@CONSECUTIVOCAN VARCHAR(13)
		,@MEDTRATANTEDIFERENTE INT  ,@RAZONMEDDIFERENTE VARCHAR(20)	 ,@VALORTOTAL      DECIMAL(14,2)  ,@VLRCOPAGO    DECIMAL(14,2)
		,@FECHALLEGA   DATETIME     ,@FACTURABLE        BIT			 ,@FACIND          BIT				,@TTEC         VARCHAR(20)
		,@FACTURADA    BIT          ,@N_FACTURA         VARCHAR(8)	 ,@HABILITA_COPAGO BIT      ,@CODIGO       VARCHAR(20)
		,@DESCRIPCION  VARCHAR(100) ,@ESPECIALIDAD      VARCHAR(10)  ,@NIT             VARCHAR(20)       ,@DV  VARCHAR(10)
		,@CIUDAD       VARCHAR(20)  ,@DIRECCION         VARCHAR(200) ,@ESTADO_FCJ      VARCHAR(1)    ,@CERRADA_FCJ SMALLINT
		,@VLR_ANTERIOR DECIMAL(14,2),@MENSAJE_COPAGO    VARCHAR(200) ,@MENSAJE_OBS     varchar(300), @EMBARAZO VARCHAR(10)
		,@CODCAJERO    VARCHAR(20)  ,@CNSFACJ           VARCHAR(20)  ,@CONCEPTO        VARCHAR(30)           ,@FECHACITA    DATE
		,@CNSACJ       VARCHAR(20)	,@PROGRAMA_POSIBLE  VARCHAR(20)  ,@TIPODESCUENTO   BIT    ,@VALORDESCUENTO DECIMAL(14,2)
		,@NOADMISION   VARCHAR(20)	,@NROCOMPROBANTE    VARCHAR(20)	 ,@FECHAFCJ        DATE		,@TOTAL DECIMAL(12,4)
		,@ITEM_HCATDC  INT          ,@DISPONIBILIDAD    VARCHAR(20)  ,@SINFILTROMEDICO BIT			,@CAJA VARCHAR(5)	,@FORMAPAGO VARCHAR(5)
		,@PART         BIT=0        ,@CONSECUTIVOHCA    VARCHAR(20)  ,@CODUNG          VARCHAR(20) ,@SIRAS VARCHAR(20) ,  @CNSHACTRAN VARCHAR(20) , @ITEM  INT 
		,@DATO1        VARCHAR(50)	,@DATO2             VARCHAR(50)	 ,@AFILIADOSITEDS  NVARCHAR(MAX)	,@DETALLESITEDS NVARCHAR(MAX)	,@IDCONSSITEDS INT
		,@FECHAFACT    DATE			,@CNSNOCIT			VARCHAR(20)
DECLARE @TIPOCITA_ANT VARCHAR(20), @MODALIDAD_ANT VARCHAR(20), @TIPOCITA_NUE VARCHAR(20), @MODALIDAD_NUE VARCHAR(20)	,@SERVICIO_2 NVARCHAR(MAX)
		, @TOTAL_DURACION DECIMAL(14,2)	,@CANTIDAD_SERVICIO  DECIMAL(14,2)		,@NRO INT	,@DATO NVARCHAR(MAX)		,@CONSECUTIVOS NVARCHAR(MAX)
		, @IDAUTSES INT	,@IDMEDICO_1 VARCHAR(20)	,@IDMEDICO_2 VARCHAR(20)
DECLARE @AM BIT
		DECLARE @VIRTUAL BIT
		DECLARE @TELEFONOAVISO VARCHAR(20)

DECLARE @TBLERRORES TABLE(ERROR VARCHAR(MAX));
BEGIN
	SET DATEFORMAT dmy
	SET LANGUAGE Spanish; 

	SELECT *
	INTO #JSON
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)  AS JSON
	)

	SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
	FROM #JSON
	--DEFINICION DE TABLA DE ERRORES VIRTUAL URGENCIA
	-- TOMA DEL GRUPO, SYS_COMPUTERNAME, SEDE   DE ACUERDO AL USUARIOpl,   --PRINT 'USUARIO:'+@USUARIO
	SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO) FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SEDE = IDSEDE FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME

	IF @METODO = 'DISPONIBILIDAD' --VALORTOTAL
	BEGIN

		SELECT @FECHA = DIA, @IDEMEDICA = ESPECIALIDAD ,@IDMEDICO = IDMEDICO
			,@MODALIDAD = MODALIDAD, @IDSEDE = IDSEDE, @DISPONIBILIDAD = DISPONIBILIDAD
		FROM OPENJSON(@PARAMETROS)
		WITH(DIA                VARCHAR(10)       '$.DIA'
			,ESPECIALIDAD        VARCHAR(10)       '$.ESPECIALIDAD' 
			,IDMEDICO            VARCHAR(12)       '$.IDMEDICO'
			,MODALIDAD           VARCHAR(10)       '$.MODALIDAD'
			,IDSEDE		         VARCHAR(2)        '$.IDSEDE'
			,DISPONIBILIDAD		VARCHAR(20)       '$.DISPONIBILIDAD'
		)
		SELECT @FECHA1 = CONVERT(DATE, CONCAT(SUBSTRING(@FECHA,1,4),'-',SUBSTRING(@FECHA,6,2),'-',SUBSTRING(@FECHA,9,2)))
		--SELECT CONVERT(VARCHAR,@FECHA1,105), @IDEMEDICA
		SELECT 'OK' OK

		SELECT MED.IDMEDICO, MED.NOMBRE
      , (SELECT COUNT(1) FROM CIT C WHERE CIT.IDMEDICO = C.IDMEDICO AND CONVERT(DATE, CIT.FECHA) = CONVERT(DATE,C.FECHA) AND C.IDAFILIADO IS NOT NULL ) [OCUPADO]
      , (SELECT COUNT(1) FROM CIT C WHERE CIT.IDMEDICO = C.IDMEDICO AND CONVERT(DATE, CIT.FECHA) = CONVERT(DATE,C.FECHA) AND C.IDAFILIADO IS NULL ) [DISPONIBLE]
      , (SELECT COUNT(1) FROM CIT C WHERE CIT.IDMEDICO = C.IDMEDICO AND CONVERT(DATE, CIT.FECHA) = CONVERT(DATE,C.FECHA) ) [TOTAL]
		FROM   CIT INNER JOIN MED ON CIT.IDMEDICO   = MED.IDMEDICO
		            LEFT JOIN AFI ON CIT.IDAFILIADO = AFI.IDAFILIADO
		WHERE  CIT.IDEMEDICA = @IDEMEDICA AND MED.TIPO_USUARIO <> 'Silla'
		AND    CONVERT(DATE, CIT.FECHA) = CONVERT(DATE, @FECHA1)
		AND    CIT.IDMEDICO = CASE WHEN COALESCE(@IDMEDICO,'') <> '' THEN @IDMEDICO ELSE CIT.IDMEDICO END
		GROUP BY CIT.IDMEDICO, MED.IDMEDICO, MED.NOMBRE, CONVERT(DATE, CIT.FECHA)
		--CONSECUTIVO CONCAT AFI IDPLANPART2
		SELECT @SQL ='
		SELECT  CIT.FECHA, NAME=MED.IDMEDICO, VALUE=CONVERT(VARCHAR(8000)
            ,(CASE WHEN COALESCE(CIT.IDAFILIADO,'''')=''''
                THEN (SELECT ''LIBRE'' ESTADO, CIT.CONSECUTIVO 
			    ,CASE 
            WHEN (SELECT COUNT(1) FROM CIT C INNER JOIN MAGPRP ON C.IDMEDICO = MAGPRP.IDMEDICO AND C.FECHA  >= MAGPRP.FECHAINICIAL AND C.FECHA< MAGPRP.FECHAFINAL WHERE  C.CONSECUTIVO = CIT.CONSECUTIVO) >0 THEN ''BLOQUEO''
            WHEN COALESCE(CIT.CONFIRMADA,0) = 0 AND CIT.FECHALLEGA IS NULL AND CIT.USUARIOLLEGA IS   NULL AND CIT.FECHASOL IS NOT NULL THEN ''OCUPADO''
            WHEN CIT.CONFIRMADA = 1 AND CIT.FECHALLEGA IS NULL AND CIT.USUARIOLLEGA IS  NULL THEN ''CONFIRMADA'' 
            WHEN CIT.FECHALLEGA  IS NOT NULL AND CIT.USUARIOLLEGA IS NOT NULL  THEN ''EN SALA''
            WHEN FECHASOL IS NULL THEN ''LIBRE''
            END [ESTADO_COLORES],CIT.IDSEDE, CIT.FACTURADA
            ,  CIT.TIPOCITA [TIPOCITA], T3.DESCRIPCION [TIPOCITA_DESC]
                ,CIT.MODELOS, CIT.IDMEDICO, CIT.FECHA,  MED.NOMBRE NOMBREMED , CIT.OBSERVACIONES, CIT.FECHASOL
                , CASE WHEN CIT.MODALIDAD='''' THEN ''Presencial'' ELSE COALESCE(CIT.MODALIDAD,''Presencial'') END AS MODALIDAD
                , (SELECT LEFT(STUFF(( SELECT CHAR(10) + MPE.IDPESPECIAL+ '' - '' + MPE.DESCESPECIAL FROM DBO.FNK_SPLIT(( SELECT MODELOS FROM CIT C WHERE C.CONSECUTIVO = CIT.CONSECUTIVO),'','',0,NULL) A  INNER JOIN MPE ON MPE.IDPESPECIAL=A.ITEM FOR XML PATH('''')),1,0,''''),1040) ) [NOMBREMODELO] FOR JSON PATH ) 
                        ELSE (SELECT ''OCUPADO'' ESTADO
            ,CASE 
				WHEN (SELECT COUNT(1) FROM CIT C INNER JOIN MAGPRP ON C.IDMEDICO = MAGPRP.IDMEDICO AND C.FECHA  >= MAGPRP.FECHAINICIAL AND C.FECHA< MAGPRP.FECHAFINAL WHERE  C.CONSECUTIVO = CIT.CONSECUTIVO) >0 THEN ''BLOQUEO''
				WHEN COALESCE(CIT.CONFIRMADA,0) = 0 AND CIT.FECHALLEGA IS NULL AND CIT.USUARIOLLEGA IS   NULL AND CIT.FECHASOL IS NOT NULL THEN ''OCUPADO''
				WHEN CIT.CONFIRMADA = 1 AND CIT.FECHALLEGA IS NULL AND CIT.USUARIOLLEGA IS  NULL THEN ''CONFIRMADA'' 
				WHEN CIT.FECHALLEGA  IS NOT NULL AND CIT.USUARIOLLEGA IS NOT NULL  THEN ''EN SALA''
				WHEN FECHASOL IS NULL THEN ''LIBRE''
            END [ESTADO_COLORES]
			, SERVICIOS_MULTI = (SELECT  CITSER.CONSECUTIVO_CIT, CITSER.IDSERVICIO, SER.DESCSERVICIO FROM CITSER 
						INNER JOIN SER ON CITSER.IDSERVICIO = SER.IDSERVICIO
				WHERE CONSECUTIVO_CIT = CIT.CONSECUTIVO FOR JSON PATH)
			, CASE WHEN EXISTS(SELECT * FROM ALR WHERE ALR.IDAFILIADO = CIT.IDAFILIADO) THEN ''SI'' ELSE ''NO'' END [ALERTA]
			, CIT.FACTURADA, CASE WHEN CIT.MODALIDAD='''' THEN ''Presencial'' ELSE COALESCE(CIT.MODALIDAD,''Presencial'') END AS MODALIDAD
            , (SELECT LEFT(STUFF(( SELECT CHAR(10) + MPE.IDPESPECIAL+ '' - '' + MPE.DESCESPECIAL FROM DBO.FNK_SPLIT(( SELECT MODELOS FROM CIT C WHERE C.CONSECUTIVO = CIT.CONSECUTIVO),'','',0,NULL) A  INNER JOIN MPE ON MPE.IDPESPECIAL=A.ITEM FOR XML PATH('''')),1,0,''''),1040) ) [NOMBREMODELO]
                                                                                    , CIT.FECHA, CIT.NOADMISION,CIT.CCOSTO, CASE WHEN CONVERT (DATE,CIT.FECHA) = CONVERT(DATE,GETDATE()) THEN ''1'' ELSE ''0'' END TIEMPO_LLEGADA
                                                                                    , CIT.CONSECUTIVO,DBO.FNK_ESTADO_CITA(CIT.CONSECUTIVO)ESTADOCITA
                                                                                    , AFI.IDAFILIADO, AFI.NOMBREAFI, AFI.CELULAR, CIT.IDMEDICO, AFI.TIPO_DOC, AFI.DOCIDAFILIADO , AFI.TELEFONORES,  AFI.NIVELSOCIOEC, TGEN.DESCRIPCION [NIVELDESC]
                , CONCAT   (floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365),'' años '', floor((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12), '' meses ''
				, floor((((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12)-floor((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12))*(365/12)), '' días'' ) AS EDAD_LARGO
            ,MPE.IDPESPECIAL, MPE.DESCESPECIAL, CIT.VALORCOPAGO [COPAGO] ,
                CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE(''IDPLANPART'')) OR
                                                                        CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE(''IDPLANPART2'')) OR
                                                                        CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE(''IDPLANPART3'')) OR
                                                                        CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE(''IDPLANPART4'')) OR
                                                                        CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE(''IDPLANPART5'')) 
                THEN  CASE  WHEN CIT.TIPOCAJA = ''TFCJ'' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CASE WHEN  TIPODTO = ''V'' THEN CIT.DESCUENTO WHEN TIPODTO=''P'' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0))) 
                            WHEN CIT.TIPOCAJA = ''FCJ'' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CASE WHEN  TIPODTO = ''V'' THEN CIT.DESCUENTO WHEN TIPODTO=''P'' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CASE WHEN  TIPODTO = ''V'' THEN CIT.DESCUENTO WHEN TIPODTO=''P'' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0)) END [VALORCOPAGO]
            ,CASE WHEN CIT.GENEROCAJA <> 1  THEN ''''
                WHEN CIT.TIPOCAJA = ''TFCJ''  AND (SELECT TOP 1 FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.PROCEDENCIA=''CIT'') <> ''A'' THEN '' - Recibo sin enviar a caja''
                WHEN CIT.TIPOCAJA = ''FCJ'' AND (SELECT TOP 1 FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.PROCEDENCIA=''CIT'') = 0 AND (SELECT TOP 1 FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.PROCEDENCIA=''CIT'')<> ''A'' THEN '' - Recibo sin recaudar''
                WHEN CIT.TIPOCAJA = ''FCJ''  AND (SELECT TOP 1 FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.PROCEDENCIA=''CIT'') = ''A'' THEN '' - Recibo anulado''
                WHEN CIT.TIPOCAJA = ''TFCJ''  AND (SELECT TOP 1 FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.PROCEDENCIA=''CIT'') = ''A'' THEN ''''
                WHEN CIT.TIPOCAJA = ''FCJ'' AND (SELECT TOP 1 FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.PROCEDENCIA=''CIT'') = 1 AND (SELECT TOP 1 FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.PROCEDENCIA=''CIT'')<> ''A'' THEN '' - Recibo recaudado''
                WHEN CIT.TIPOCAJA = ''FCJ'' AND NOT EXISTS(SELECT * FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.PROCEDENCIA IN (''CIT'', ''CITAS'' ) ) THEN '' - Recibo con error''
                ELSE '' - Recibo sin enviar a caja''
                END [ESTADO_REGISTRO]
            ,CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'''') = '''' THEN '' - Sin Facturar''
                WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'''') <> '''' THEN '' - Cita facturada con el numero '' + CIT.N_FACTURA
                WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'''') = '''' THEN '' - Cita con error de facturacion''
                END [ESTADO_FACTURA]
            , CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE(''IDPLANPART'')) OR
                                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE(''IDPLANPART2'')) OR
                                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE(''IDPLANPART3'')) OR
                                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE(''IDPLANPART4'')) OR
                                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE(''IDPLANPART5'')) THEN ''PARTICULAR'' ELSE ''NOPARTICULAR'' END [PARTICULAR]
            , COALESCE(CASE WHEN  TIPODTO = ''V'' THEN CIT.DESCUENTO WHEN TIPODTO=''P'' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,NULL) DESCUENTO,  COALESCE(CIT.VALORTOTAL,NULL) VALORTOTAL
																		, CIT.IDSERVICIO,  SER.DESCSERVICIO, CIT.IDEMEDICA, SER.CODCUPS
																		, TER.IDTERCERO,TER.RAZONSOCIAL,PLN.IDPLAN, PLN.DESCPLAN, CIT.OBSERVACIONES
																		, MED.NOMBRE NOMBREMED,  CIT.TIPOCITA [TIPOCITA], T3.DESCRIPCION [TIPOCITA_DESC], CIT.MODELOS
																		, MES.DESCRIPCION AS ESPECIALIDAD
																		, CIT.CLASEORDEN, CIT.FECHASOL, dbo.FN_EDAD_PACIENTE(CIT.FECHASOL,CIT.FECHA, ''ALL'') [DIFERENCIA_DIAS_2]
																		, DATEDIFF (DAY, CIT.FECHASOL , CIT.FECHA )  [DIFERENCIA_DIAS]
																		, COALESCE(CIT.NOAUTORIZACION, '''') NOAUTORIZACION, COALESCE(CITSITEDS.ID_COPAGOCONSULTA_DESC, '''') ID_COPAGOCONSULTA_DESC
																FROM AFI
																INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
																INNER JOIN TER ON CIT.IDTERCEROCA = TER.IDTERCERO
																INNER JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
																LEFT JOIN SER ON CIT.IDSERVICIO  = SER.IDSERVICIO
																LEFT JOIN MPE  ON CIT.IDPESPECIAL  = MPE.IDPESPECIAL
																LEFT JOIN MES ON MES.IDEMEDICA = MED.IDEMEDICA
																LEFT JOIN TGEN ON AFI.NIVELSOCIOEC = TGEN.CODIGO AND TGEN.TABLA = ''General'' AND CAMPO = ''NIVELSOCIOECO''
																LEFT JOIN CITSITEDS ON CIT.CONSECUTIVO = CITSITEDS.CONSECUTIVO
																
																WHERE AFI.IDAFILIADO = CIT.IDAFILIADO 
																FOR JSON PATH )
														END
														))
		FROM   CIT INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
		LEFT JOIN TGEN T3 ON CIT.TIPOCITA = T3.CODIGO AND T3.TABLA = ''CITAS'' AND T3.CAMPO = ''TIPOCITA''
		WHERE  CIT.IDEMEDICA = '''+@IDEMEDICA+'''  AND CONVERT(DATE, CIT.FECHA) = CONVERT(DATE, '''+CONVERT(VARCHAR,@FECHA1,105)+''')
		'

		IF COALESCE(@IDMEDICO,'') <> ''
		BEGIN
			SELECT @SQL += ' AND  CIT.IDMEDICO = '''+@IDMEDICO+''''
		END
		IF COALESCE(@MODALIDAD,'')<>''
			SELECT @SQL += ' AND  COALESCE(CIT.MODALIDAD,''Presencial'') = '''+@MODALIDAD+''''

		IF COALESCE(@IDSEDE,'')<>''
			SELECT @SQL += ' AND  COALESCE(CIT.IDSEDE,'''') = '''+@IDSEDE+''''

		IF  @DISPONIBILIDAD = 'Todos' 
			SELECT @SQL += ' AND  1 = 1'
		IF  @DISPONIBILIDAD = 'Disponibles' 
			SELECT @SQL += ' AND  CIT.IDAFILIADO IS NULL'
		IF  @DISPONIBILIDAD = 'Ocupados' 
			SELECT @SQL += ' AND CIT.IDAFILIADO IS NOT NULL'
		IF  @DISPONIBILIDAD = 'Cumplidas' --Cumplidas
			SELECT @SQL += ' AND CIT.CUMPLIDA = 1'
		IF  @DISPONIBILIDAD = 'Pendientes' 
			SELECT @SQL += ' AND CIT.IDAFILIADO IS NOT NULL AND COALESCE(CIT.CUMPLIDA,0) = 0'
		--SELECT @SQL
		EXEC SP_PIVOT @SQL --, @TABLETARGET = 'test1'	

		RETURN
	END

	IF @METODO = 'APLICA_DESCUENTO'
	BEGIN
	   SELECT @CONSECUTIVO =  CONSECUTIVO,  @TIPODESCUENTO = TIPODESCUENTO, @VALORDESCUENTO = VALORDESCUENTO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (CONSECUTIVO        VARCHAR(20)      '$.CONSECUTIVO',
			   TIPODESCUENTO      BIT              '$.TIPODESCUENTO',
			   VALORDESCUENTO     DECIMAL(14,2)    '$.VALORDESCUENTO'
         )

      IF 1 = 2
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT '1 ES IGUAL A 1'
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
       IF (SELECT  CIT.TIPOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO) = 'FCJ'
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'Ya no se peude aplicar el descuento, se encuentra en FCJ'
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      IF (SELECT  CIT.FACTURADA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO) = 1
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'Ya no se peude aplicar el descuento, Cita esta facturada'
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
      IF @TIPODESCUENTO = 0
      BEGIN
         IF @VALORDESCUENTO > (SELECT  COALESCE(CIT.VALORTOTAL,0) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El valor a descontar no puede ser mayor al valor total de la cita.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
      END
        
      BEGIN TRY
         IF @TIPODESCUENTO = 0
         BEGIN
            UPDATE CIT SET DESCUENTO = @VALORDESCUENTO, TIPODTO = 'V' WHERE  CONSECUTIVO = @CONSECUTIVO
         END
         IF @TIPODESCUENTO = 1
         BEGIN
         DECLARE @PORCETAJE_CALCULO DECIMAL(14,9)
            SELECT @PORCETAJE_CALCULO = (@VALORDESCUENTO * (SELECT CIT.VALORTOTAL FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)) / 100
            UPDATE CIT SET DESCUENTO = @VALORDESCUENTO, TIPODTO = 'P' WHERE  CONSECUTIVO = @CONSECUTIVO
         END
		END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      SELECT 'OK' OK
      RETURN
	END

	IF @METODO = 'INFO_CITA'
	BEGIN 
		SELECT @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH(CONSECUTIVO	VARCHAR(16)		'$.CONSECUTIVO')

		SELECT  --DESCUENTO
			CIT.CONSECUTIVO,AFI.TIPO_DOC, TGEN.DESCRIPCION [DOCNOMBRE], AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION
			, AFI.CELULAR,AFI.EDAD, CIT.FECHA, CIT.FECHASOL, CIT.CUMPLIDA, CIT.TIPOCAJA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA, CIT.FECHACONFIRMA
			,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN ,AFI.NIVELSOCIOEC , T2.DESCRIPCION [NIVELDESC], CIT.FACTURADA
			, MED.NOMBRE, CIT.FECHALLEGA,CIT.USUARIOLLEGA,  COALESCE(CIT.VALORTOTAL,0) VALORTOTAL, COALESCE(CIT.VALORCOPAGO,0) VALORCOPAGO, COALESCE(CIT.DESCUENTO, 0)DESCUENTO
         , COALESCE(CIT.VALORTOTAL,0)  - COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END, 0) VLR_FACTURAR
         , CASE WHEN COALESCE(CIT.N_FACTURA,'')<>'' THEN '1'
               WHEN (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 1 THEN '2'
               END [ESTADO_RECAUDADO_FACTURADO]
         , CIT.N_FACTURA
         ,(SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)[FCJ_CERRADA]
         ,(SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) [FCJ_ESTADO]
			, MED.NOMBRE AS NOMBREMED
			, MED.NOMBRE AS PROFESIONAL
			, MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION
			,SER.IDSERVICIO, SER.DESCSERVICIO, CIT.ATENCION, CIT.URGENCIA,CIT.CLASEORDEN,CIT.ESPROGRAMAS,CIT.OBSERVACIONES
			,CEN.DESCRIPCION [CENDESCRIPCION] ,CIT.CCOSTO, CASE WHEN CONVERT (DATE,CIT.FECHA) = CONVERT(DATE,DBO.FNK_GETDATE()) THEN '1' ELSE 0 END TIEMPO_LLEGADA
			,PNUMAUTORIZA_OBL=CAST(COALESCE(PPT.PNUMAUTORIZA_OBL, 0) AS BIT)
         ,COPAGOIND=CAST(COALESCE(PPT.COPAGOIND, 0) AS BIT), CIT.IDPESPECIAL, MPE.DESCESPECIAL ,CIT.MODALIDAD--, FTR.N_FACTURA
		 , COALESCE(HACTRAND.CNSHACTRAN,'') CNSHACTRAN , COALESCE(HACTRAND.SIRAS,'') SIRAS,
       CASE WHEN EXISTS(SELECT * FROM USVGS WHERE IDVARIABLE LIKE 'IDPLANPART%' AND DATO=CIT.IDPLAN) AND CIT.IDTERCEROCA=DBO.FNK_VALORVARIABLE('IDTERCEROPARTICULAR') THEN 1 ELSE 0 END AS PART
			FROM CIT 
			INNER JOIN AFI     ON CIT.IDAFILIADO   = AFI.IDAFILIADO
			INNER JOIN PLN     ON CIT.IDPLAN       = PLN.IDPLAN
			INNER JOIN TER     ON CIT.IDTERCEROCA  = TER.IDTERCERO
			INNER JOIN MED     ON CIT.IDMEDICO     = MED.IDMEDICO
			INNER JOIN SER     ON CIT.IDSERVICIO   = SER.IDSERVICIO
			INNER JOIN MES     ON MED.IDEMEDICA    = MES.IDEMEDICA
          LEFT JOIN FTR     ON CIT.CONSECUTIVO = FTR.NOREFERENCIA
			 LEFT JOIN CEN     ON CIT.CCOSTO       = CEN.CCOSTO
			 LEFT JOIN TGEN    ON AFI.TIPO_DOC     = TGEN.CODIGO AND TGEN.TABLA = 'General' AND TGEN.CAMPO = 'TIPOIDENT'
			 LEFT JOIN PPT     ON PPT.IDTERCERO    = CIT.IDTERCEROCA AND PPT.IDPLAN=CIT.IDPLAN
          LEFT JOIN MPE     ON CIT.IDPESPECIAL  = MPE.IDPESPECIAL
          LEFT JOIN TGEN T2 ON AFI.NIVELSOCIOEC = T2.CODIGO AND T2.TABLA = 'General' AND T2.CAMPO = 'NIVELSOCIOECO'
		  LEFT OUTER JOIN HACTRAND	ON CIT.CONSECUTIVO = HACTRAND.NOREFERENCIA AND HACTRAND.PROCEDENCIA ='CI'
		WHERE  CIT.CONSECUTIVO = @CONSECUTIVO
	END

    IF @METODO = 'INFO_CITA_PARTICULAR'
	BEGIN 
		SELECT @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH(CONSECUTIVO	VARCHAR(16)		'$.CONSECUTIVO')
  
      SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  FROM  USUSU
            INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
            INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
            WHERE  USUARIO = @USUARIO

      IF 1 = 2
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita ya envio Copago.'
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      BEGIN TRY
		   SELECT 'OK'OK, CIT.DESCUENTO, CIT.VALORTOTAL, CIT.VALOREXEDENTE, CASE WHEN COALESCE(CIT.DESCUENTO, NULL) IS NULL THEN 'SINDESCEUNTO' ELSE 'CONDESCUENTO' END [DATO_DESCUENTO]  FROM
         CIT WHERE  CONSECUTIVO = @CONSECUTIVO
      END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      SELECT 'OK' OK
      RETURN
	END

	IF @METODO = 'DATO_IMPRIMIR_FACTURA'
	BEGIN
	   SELECT @CONSECUTIVO =  CONSECUTIVO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO')
          SELECT @N_FACTURA = N_FACTURA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
		   SELECT 'OK'OK, CIT.FACTURABLE, CIT.FACTURADA,  CIT.CONSECUTIVO,AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION
				   , AFI.CELULAR, AFI.TELEFONORES,AFI.EDAD, COALESCE( AFI.IDALTERNA,'')IDALTERNA , CIUAFI.NOMBRE [CIU_NOMBRE], AFI.EMAIL, AFI.IDTIPOAFILIACION,AFI.ESTADO_CIVIL
				   ,CIUMED.NOMBRE [CIU_NOMBRE_MED], NIVELSOCIOEC, CIT.NUMCARNET, AFI.TIPOAFILIADO
               , CASE   WHEN AFI.TIPOAFILIADO = 'C' THEN 'Cotizante'
                        WHEN AFI.TIPOAFILIADO = 'B' THEN 'Beneficiario'
                        WHEN AFI.TIPOAFILIADO = 'J' THEN 'Jubilado'
                        WHEN AFI.TIPOAFILIADO = 'A' THEN 'Adicional'
                        WHEN AFI.TIPOAFILIADO = 'S' THEN 'Sustitución Pensional'
                        WHEN AFI.TIPOAFILIADO = 'Sb' THEN 'Subsidiado'
                        WHEN AFI.TIPOAFILIADO = 'SR' THEN 'Sin régimen'
                        WHEN AFI.TIPOAFILIADO = 'TA' THEN 'Tomador/Amparado'
                        WHEN AFI.TIPOAFILIADO = 'RE' THEN 'Régimen Especiales o de Excepción'
                        WHEN AFI.TIPOAFILIADO = 'SN' THEN 'S/N'
                        WHEN AFI.TIPOAFILIADO = 'S/' THEN 'S/N'
                        WHEN AFI.TIPOAFILIADO = 'S/N' THEN 'S/N' ELSE '' END [TIPOAFI_NOMBRE]
				   ,CONVERT (DATE ,CIT.FECHA) FECHA, CONVERT(varchar,CIT.FECHA,104) FECHAFORMATO, CONVERT (DATETIME ,CIT.FECHA) FECHACOMPLETA, DATEPART(HOUR, CIT.FECHA) HORA
			   	   , Format(CIT.FECHA,'dd/MM/yyyy hh:mm tt') AS FECHA_HORARIO
				   ,CONVERT(DATE, CIT.FECHASOL)FECHASOL
				   , CIT.CUMPLIDA, CIT.TIPOCAJA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA, CIT.OBSERVACIONES, CIT.IDSEDE, SED.DESCRIPCION [SED_NOMBRE], SED.DIRECCION [SED_DIRECCION]
				   , SED.TELEFONOS [SED_TELEFONOS],  CIUSED.NOMBRE [SED_CIUDAD], SED.NIT [SED_NIT], SED.DV [SED_DV]
				   ,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN,PLN.TIPOSISTEMA, CONVERT(varchar,CIT.FECHASOL,104) FECHASOLFORMATO, CONVERT(varchar,CIT.FECHAATENCION,104) FECHAATENCIONFORMATO
				   , MED.NOMBRE, MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION, MED.DIRECCION [MED_DIRECCION], MED.TELEFONOS
				   ,SER.IDSERVICIO, SER.DESCSERVICIO, @USUARIO USUARIO
               , CONVERT(varchar,  DBO.FNK_GETDATE(), 120) FECHA_ACTUAL, Format(CIT.FECHASOL,'dd/MM/yyyy hh:mm tt') AS FECHASOL_HORARIO
               ,  CONVERT(varchar,FTR.FECHAFAC,104) FECHAFACTURA ,FTR.N_FACTURA, FTR.FECHAFAC,FTR.USUARIOFACTURA,FTR.ESTADO, dbo.FNK_MontoEscrito((COALESCE(CIT.VALORTOTAL,0)-COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0))) [MONTO_TEXTO]
			   , (COALESCE(CIT.VALORTOTAL,0)-COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0)) VR_TOTAL 
			   , CONVERT(VARCHAR, CONVERT(VARCHAR, CAST((COALESCE(CIT.VALORTOTAL,0)-COALESCE(CIT.DESCUENTO,0))  AS MONEY), 1)) [VR_TOTAL_FORMATO]/*, dbo.FNK_MontoEscrito(FTR.VR_TOTAL) [MONTO_TEXTO], FTR.VR_TOTAL, CONVERT(VARCHAR, CONVERT(VARCHAR, CAST(FTR.VR_TOTAL  AS MONEY), 1)) [VR_TOTAL_FORMATO] */
               ,TER.NIT,TER.IDALTERNA2,CIU.NOMBRE [CIUNOMBRE], TER.DV,FTR.VALORCOPAGO [RECUPERACION],CIT.DESCUENTO,PPT.IDCONTRATO
               , CONCAT   (floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365),' años ', floor((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12), ' meses '
			   , floor((((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12)-floor((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12))*(365/12)), ' días' ) AS EDAD_LARGO

			   FROM CIT 
               INNER JOIN FTR ON CIT.N_FACTURA = FTR.N_FACTURA
				   INNER JOIN AFI ON CIT.IDAFILIADO =  AFI.IDAFILIADO
				   INNER JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
				   INNER JOIN TER ON CIT.IDTERCEROCA = TER.IDTERCERO
				   INNER JOIN MED ON CIT.IDMEDICO =  MED.IDMEDICO
				   INNER JOIN SER ON CIT.IDSERVICIO = SER.IDSERVICIO
				   INNER JOIN MES ON MED.IDEMEDICA = MES.IDEMEDICA
				   INNER JOIN SED ON SED.IDSEDE = CIT.IDSEDE
               LEFT JOIN CIU ON TER.CIUDAD = CIU.CIUDAD
               LEFT JOIN PPT ON FTR.IDTERCERO = PPT.IDTERCERO AND FTR.IDPLAN = PPT.IDPLAN
				   LEFT JOIN CIU CIUSED ON SED.CIUDAD = CIUSED.CIUDAD
				   LEFT JOIN CIU CIUAFI ON AFI.CIUDAD = CIUAFI.CIUDAD
				   LEFT JOIN CIU CIUMED ON MED.CIUDAD = CIUMED.CIUDAD
			   WHERE  CIT.CONSECUTIVO = @CONSECUTIVO

         SELECT FTRD.CNSFTR, FTRD.PREFIJO,PRE.NOM_PREFIJO, FTRD.IDPROVEEDOR, FTRD.N_CUOTA, FTRD.DB_CR, FTRD.AREAPRESTACION, FTRD.VR_TOTAL, FTRD.CCOSTO
               , FTRD.ANEXO, FTRD.REFERENCIA, FTRD.CANTIDAD, FTRD.VALOR, FTRD.VLR_SERVICI, FTRD.NOADMISION, FTRD.NOPRESTACION, FTRD.N_FACTURA , 0 ADMINISTRATIVO, 0 RECUPERACION
         FROM FTRD 
         LEFT JOIN PRE ON FTRD.PREFIJO = PRE.PREFIJO
         WHERE  N_FACTURA = @N_FACTURA 

         SELECT SUM (VLR_SERVICI) VLR_SERVICI, SUM (VALOR) VALOR  FROM FTRD WHERE   N_FACTURA = @N_FACTURA 

	END

	IF @METODO = 'DATO_IMPRIMIR_RECIBO_ASEGURADO'
	BEGIN
	   SELECT @CONSECUTIVO =  CONSECUTIVO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO')
		SELECT @CODCAJA = CODCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
          SELECT @CNSFACJ = CNSFACJ FROM FCJ WHERE  NOADMISION = @CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA
		  SELECT  --DESCUENTO
          'OK'OK, CIT.FACTURABLE, CIT.FACTURADA,  CIT.CONSECUTIVO,AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION, CIT.IDPLAN,CIT.IDTERCEROCA
				            , AFI.CELULAR, AFI.TELEFONORES,AFI.EDAD, COALESCE( AFI.IDALTERNA,'')IDALTERNA , CIUAFI.NOMBRE [CIU_NOMBRE], AFI.EMAIL, AFI.IDTIPOAFILIACION,AFI.ESTADO_CIVIL
				            ,CIUMED.NOMBRE [CIU_NOMBRE_MED], NIVELSOCIOEC, CIT.NUMCARNET, AFI.TIPOAFILIADO
                        , CASE   WHEN AFI.TIPOAFILIADO = 'C' THEN 'Cotizante'
                                 WHEN AFI.TIPOAFILIADO = 'B' THEN 'Beneficiario'
                                 WHEN AFI.TIPOAFILIADO = 'J' THEN 'Jubilado'
                                 WHEN AFI.TIPOAFILIADO = 'A' THEN 'Adicional'
                                 WHEN AFI.TIPOAFILIADO = 'S' THEN 'Sustitución Pensional'
                                 WHEN AFI.TIPOAFILIADO = 'Sb' THEN 'Subsidiado'
                                 WHEN AFI.TIPOAFILIADO = 'SR' THEN 'Sin régimen'
                                 WHEN AFI.TIPOAFILIADO = 'TA' THEN 'Tomador/Amparado'
                                 WHEN AFI.TIPOAFILIADO = 'RE' THEN 'Régimen Especiales o de Excepción'
                                 WHEN AFI.TIPOAFILIADO = 'SN' THEN 'S/N'
                                 WHEN AFI.TIPOAFILIADO = 'S/' THEN 'S/N'
                                 WHEN AFI.TIPOAFILIADO = 'S/N' THEN 'S/N' ELSE '' END [TIPOAFI_NOMBRE]
         ,CONVERT (DATE ,CIT.FECHA) FECHA, CONVERT(varchar,CIT.FECHA,104) FECHAFORMATO, CONVERT (DATETIME ,CIT.FECHA) FECHACOMPLETA, DATEPART(HOUR, CIT.FECHA) HORA
         , Format(CIT.FECHA,'dd/MM/yyyy hh:mm tt') AS FECHA_HORARIO,   CONVERT(varchar,CIT.FECHA,104) FECHACITA
         ,CIT.OBSERVACIONES, CIT.IDSEDE, SED.DESCRIPCION [SED_NOMBRE], SED.DIRECCION [SED_DIRECCION]
         , SED.TELEFONOS [SED_TELEFONOS],  CIUSED.NOMBRE [SED_CIUDAD], SED.NIT [SED_NIT], SED.DV [SED_DV]
         ,FCJ.N_RECIBO , FCJ.CNSFACJ, FCJ.CODCAJA, FCJ.CLASE_FAC, FCJ.NOADMISION, FCJ.VALORTOTAL,FCJ.ESTADO, FCJ.CERRADA, FCJ.OBSERVACION
         ,CIT.N_FACTURA, FCJ.USUARIO USUARIO, USUSU.NOMBRE [USUSU_NOMBRE], (SELECT CODCAJERO FROM USUSU WHERE USUARIO =  (SELECT USUARIO FROM FCJ WHERE NOADMISION = @CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) ) [COD_CAJERO]
         FROM CIT 
            INNER JOIN FCJ ON CIT.CONSECUTIVO = FCJ.NOADMISION AND FCJ.CODCAJA = @CODCAJA
            INNER JOIN AFI ON CIT.IDAFILIADO =  AFI.IDAFILIADO
            INNER JOIN MED ON CIT.IDMEDICO =  MED.IDMEDICO
            INNER JOIN MES ON MED.IDEMEDICA = MES.IDEMEDICA
            INNER JOIN SED ON SED.IDSEDE = CIT.IDSEDE
            INNER JOIN USUSU ON FCJ.USUARIO = USUSU.USUARIO
            LEFT JOIN CIU CIUSED ON SED.CIUDAD = CIUSED.CIUDAD
            LEFT JOIN CIU CIUAFI ON AFI.CIUDAD = CIUAFI.CIUDAD
            LEFT JOIN CIU CIUMED ON MED.CIUDAD = CIUMED.CIUDAD
         WHERE  CIT.CONSECUTIVO = @CONSECUTIVO

         SELECT FCJ.NOADMISION, FCJD.CONCEPTO,  CPCJ.DESCRIPCION CONCEPTO_DESC,  FCJD.VALORUNITARIO, FCJD.CANTIDAD, FCJD.VALORTOTAL, FCJD.DCTO, FCJD.VLRDESCUENTO FROM FCJ
         INNER JOIN FCJD ON FCJ.CNSFACJ = FCJD.CNSFACJ AND FCJ.CODCAJA = FCJD.CODCAJA  
         INNER JOIN CPCJ ON FCJD.CONCEPTO = CPCJ.CODIGO
         WHERE  NOADMISION = @CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA

         SELECT PCJ.CODCAJA, PCJ.CNSPCJ, PCJ.CNSFACJ, PCJ.TIPOPAGO, FPA.DESCRIPCION, PCJ.VALOR, PCJ.FECHA, PCJ.CNSACJ,PCJ.BANCO,BCO.DESCRIPCION [BANCO_DESC], PCJ.NUMEROAUTORIZA, PCJ.NUMERODOCUMENTO
         FROM  PCJ 
            INNER JOIN FPA ON PCJ.TIPOPAGO=  FPA.FORMAPAGO 
            LEFT JOIN BCO ON PCJ.BANCO = BCO.BANCO
         WHERE  CODCAJA = @CODCAJA AND CNSFACJ = @CNSFACJ

          SELECT SUM(PCJ.VALOR) VALOR_FPA FROM PCJ  
          WHERE  CODCAJA = @CODCAJA AND CNSFACJ = @CNSFACJ

         --SELECT FCJD.CODCAJA, FCJD.CNSFACJ, FCJD.ITEM, FCJD.CONCEPTO, CPCJ.DESCRIPCION, FCJD.VALORUNITARIO, FCJD.CANTIDAD, FCJD.VALORTOTAL, FCJD.DCTO, FCJD.VLRDESCUENTO FROM FCJD 
         --   INNER JOIN CPCJ ON FCJD.CONCEPTO = CPCJ.CODIGO
         --WHERE FCJD.CODCAJA = @CODCAJA AND FCJD.CNSFACJ = @CNSFACJ

          SELECT TER.RAZONSOCIAL, FCJPCXC.CNSFACJ, FCJPCXC.CODCAJA, FCJPCXC.CNSCXC, FCJPCXC.N_FACTURA, FCJPCXC.ITEM_FCXCDV, FCJPCXC.IDTERCERO, FCJPCXC.VALOR, FCJPCXC.ESTADO, FCJPCXC.CNSFPAG
          , FCJPCXC.TIPOCXC, FCJPCXC.VLR_IMPUESTOS FROM  FCJPCXC
         LEFT JOIN TER ON FCJPCXC.IDTERCERO = TER.IDTERCERO
         WHERE  FCJPCXC.CODCAJA = @CODCAJA AND FCJPCXC.CNSFACJ = @CNSFACJ

         SELECT  FCJPCXC.CNSFACJ, FCJPCXC.CODCAJA,COALESCE( SUM(FCJPCXC.VALOR),0) VALOR, COALESCE(SUM( FCJPCXC.VLR_IMPUESTOS),0) IMPUESTO FROM  FCJPCXC
         WHERE FCJPCXC.CODCAJA = @CODCAJA AND FCJPCXC.CNSFACJ = @CNSFACJ
         GROUP BY FCJPCXC.CNSFACJ, FCJPCXC.CODCAJA
	END

    IF @METODO = 'INFO_CITA_RECAUDAR'
	BEGIN 
		SELECT @CONSECUTIVO = CONSECUTIVO, @CODCAJA = CODCAJA
		FROM OPENJSON(@PARAMETROS)
		WITH(	CONSECUTIVO	VARCHAR(16)		'$.CONSECUTIVO',
				CODCAJA	VARCHAR(20)		'$.CODCAJA')
  
      SET DATEFIRST 1
      SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO  FROM  USUSU
            INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
            INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
            WHERE  USUARIO = @USUARIO
	  DECLARE @VALIDACION INT
	  SELECT @VALIDACION =  DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME )

	  INSERT INTO @TBLERRORES(ERROR)
	  SELECT 'No es cajero.' where COALESCE(@VALIDACION,0) = 0
	  UNION ALL SELECT 'La caja no existe.' where COALESCE(@VALIDACION,0) = 1
	  UNION ALL SELECT 'Caja Cerrada.' where COALESCE(@VALIDACION,0) = 2
	  UNION ALL SELECT 'Cajero diferente al que abrio la caja.' where COALESCE(@VALIDACION,0) = 3
	  UNION ALL SELECT 'No tiene turno asignado.' where COALESCE(@VALIDACION,0) = 4
	  UNION ALL SELECT 'El equipo no es caja.' where COALESCE(@VALIDACION,0) = 5
	  UNION ALL SELECT 'No tiene turno para este horario.' where COALESCE(@VALIDACION,0) = 6

	  UNION ALL SELECT 'ABRIR CAJA: Variable del Sistema IDCJAPERTURACAJA sin Definición.' FROM USVGS  WHERE IDVARIABLE = 'IDCJAPERTURACAJA' AND COALESCE(DATO,'') = '' 
	  UNION ALL SELECT 'ABRIR CAJA: Concepto de Caja definido en la variable del Sistema IDCJAPERTURACAJA, No existe en la tabla conceptos de caja.'  
				WHERE  (SELECT COUNT(*) FROM CPCJ INNER JOIN USVGS ON CPCJ.CODIGO = USVGS.DATO WHERE  IDVARIABLE = 'IDCJAPERTURACAJA') = 0
     
	  UNION ALL SELECT 'No tiene turnos configurados.' WHERE (SELECT COUNT(1)  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) = 0

	  UNION ALL SELECT 'No tiene turno configurado para hoy Lunes.'
				WHERE (SELECT TUR.LUNES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 1
	UNION ALL SELECT 'No tiene turno configurado para hoy Martes.'
				WHERE (SELECT TUR.LUNES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 2
	UNION ALL SELECT 'No tiene turno configurado para hoy Miercoles.'
				WHERE (SELECT TUR.LUNES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 3
	UNION ALL SELECT 'No tiene turno configurado para hoy Jueves.'
				WHERE (SELECT TUR.LUNES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 4
	UNION ALL SELECT 'No tiene turno configurado para hoy Viernes.'
				WHERE (SELECT TUR.LUNES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 5
	UNION ALL SELECT 'No tiene turno configurado para hoy Sabado.'
				WHERE (SELECT TUR.LUNES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 6
	UNION ALL SELECT 'No tiene turno configurado para hoy Domingo.'
				WHERE (SELECT TUR.LUNES  FROM CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) AND DATEPART (dw, getdate()) = 7

	UNION ALL SELECT 'La cita no tiene monto a recaudar.' WHERE (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA NOT IN ('FCJ','TFCJ') )>0 

	UNION ALL SELECT 'La Cita No Ha sido Facturada... Es Particular Debe Facturar Primero'
				WHERE @PROCEDENCIA = 'CITAS'
				AND (SELECT COUNT(*) FROM FTR WHERE NOREFERENCIA= @NOADMISION AND PROCEDENCIA='CI' AND ESTADO='P') <= 0
				AND @IDPLAN IN (
					SELECT DATO FROM USVGS 
					WHERE IDVARIABLE IN (
						'IDPLANPART', 'IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5' 
					)
				)

	UNION ALL SELECT 'El monto de copago, debe de ser mayor a 0'
				WHERE (SELECT VALORCOPAGO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO  )<=0
				AND @IDPLAN NOT IN (
					SELECT DATO FROM USVGS 
					WHERE IDVARIABLE IN (
						'IDPLANPART', 'IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5' 
					)
				)

	UNION ALL SELECT 'El monto de copago, debe de ser mayor a 0'
				WHERE @IDPLAN IN (SELECT DATO FROM USVGS WHERE IDVARIABLE IN ('IDPLANPART','IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5')) 
				AND (
					(SELECT COALESCE((SELECT VALORTOTAL FROM TFCJ WHERE NOADMISION = CIT.CONSECUTIVO), 0) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO AND CIT.TIPOCAJA = 'TFCJ' ) > 0
					OR
					(SELECT COALESCE((SELECT VALORTOTAL FROM FCJ WHERE NOADMISION = CIT.CONSECUTIVO), 0) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO AND CIT.TIPOCAJA = 'FCJ' ) > 0
				)

       IF (SELECT  COUNT(*) FROM @TBLERRORES ) > 0
       BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
       END


      BEGIN TRY
		   SELECT 'OK'OK,--VALORCOPAGO ESTADO_RECIBO FECHALLEGA USUARIOLLEGA TOTALFCJ
			   CIT.CONSECUTIVO, CASE WHEN FCJ.CERRADA = 1 THEN 'Cerrada' ELSE 'Abierta' END [ESTADO_RECIBO],AFI.TIPO_DOC, TGEN.DESCRIPCION [DOCNOMBRE], AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION
			   , AFI.CELULAR,AFI.EDAD, CIT.FECHA, CIT.FECHASOL, CIT.CUMPLIDA, CIT.TIPOCAJA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA
			   ,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN ,AFI.NIVELSOCIOEC , T2.DESCRIPCION [NIVELDESC], CIT.FACTURADA
			   , MED.NOMBRE, @CODCAJA CODCAJA , FCJ.CNSFACJ,FCJ.CNSACJ, FCJ.CERRADA
            , (SELECT COALESCE(SUM(VALORTOTAL),0) FROM FCJ WHERE FCJ.NOADMISION = CIT.CONSECUTIVO  AND FCJ.CODCAJA = @CODCAJA) TOTALFCJ
            , (SELECT COALESCE( SUM(VALOR),0) FROM PCJ WHERE CNSACJ = FCJ.CNSACJ AND CNSFACJ = FCJ.CNSFACJ  AND FCJ.CODCAJA = @CODCAJA ) TOTAL_PAGADO
             , CASE WHEN CIT.TIPOCAJA = 'TFCJ' THEN 'Recibo sin enviar a caja' 
                   WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA)<> 1 THEN 'Recibo sin recaudar'
                   WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA)= 1 THEN 'Recibo recaudado' ELSE '' END [ESTADO_CAJA]
			   , MED.NOMBRE AS NOMBREMED
			   , MED.NOMBRE AS PROFESIONAL
			   , MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION
			   ,SER.IDSERVICIO, SER.DESCSERVICIO, CIT.ATENCION, CIT.URGENCIA,CIT.CLASEORDEN,CIT.ESPROGRAMAS,CIT.OBSERVACIONES
			   ,CEN.DESCRIPCION [CENDESCRIPCION] ,CIT.CCOSTO, CASE WHEN CONVERT (DATE,CIT.FECHA) = CONVERT(DATE,DBO.FNK_GETDATE()) THEN '1' ELSE 0 END TIEMPO_LLEGADA
			   ,PNUMAUTORIZA_OBL=CAST(COALESCE(PPT.PNUMAUTORIZA_OBL, 0) AS BIT), CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
                  -- THEN  CASE WHEN CIT.TIPOCAJA = 'TFCJ' THEN  (SELECT VALORTOTAL FROM TFCJ WHERE NOADMISION = CIT.CONSECUTIVO) 
                  --WHEN CIT.TIPOCAJA = 'FCJ' THEN  (SELECT VALORTOTAL FROM FCJ WHERE NOADMISION = CIT.CONSECUTIVO) END ELSE CIT.VALORCOPAGO END  VALORCOPAGO
                   THEN  CASE WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0))) 
                  WHEN CIT.TIPOCAJA = 'FCJ' THEN ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END,0)) END  VALORCOPAGO
            ,COPAGOIND=CAST(COALESCE(PPT.COPAGOIND, 0) AS BIT), CIT.IDPESPECIAL, MPE.DESCESPECIAL ,CIT.MODALIDAD
            , CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) THEN 'PARTICULAR' ELSE 'ASEGURADO' END [TIPO_REGISTRO]
			, CASE WHEN COALESCE(CIT.FECHALLEGA, '') = '' AND COALESCE(CIT.CUMPLIDA, '') <> 1 AND COALESCE(CIT.TIPOCAJA,'') = '' THEN 'SIN LLEGAR'
					WHEN COALESCE(CIT.FECHALLEGA, '') = '' AND COALESCE(CIT.CUMPLIDA, '') = 1 AND COALESCE(CIT.TIPOCAJA,'') = '' THEN 'CUMPLIDA'
			ELSE 'OK' END ESTADO_VER
			   FROM CIT 
			   INNER JOIN AFI     ON CIT.IDAFILIADO   = AFI.IDAFILIADO
			   INNER JOIN PLN     ON CIT.IDPLAN       = PLN.IDPLAN
			   INNER JOIN TER     ON CIT.IDTERCEROCA  = TER.IDTERCERO
			   INNER JOIN MED     ON CIT.IDMEDICO     = MED.IDMEDICO
			   INNER JOIN SER     ON CIT.IDSERVICIO   = SER.IDSERVICIO
			   INNER JOIN MES     ON MED.IDEMEDICA    = MES.IDEMEDICA
             LEFT JOIN FCJ     ON CIT.CONSECUTIVO   = FCJ.NOADMISION-- AND FCJ.CODCAJA = @CODCAJA
			    LEFT JOIN CEN     ON CIT.CCOSTO       = CEN.CCOSTO
			    LEFT JOIN TGEN    ON AFI.TIPO_DOC     = TGEN.CODIGO AND TGEN.TABLA = 'General' AND TGEN.CAMPO = 'TIPOIDENT'
			    LEFT JOIN PPT     ON PPT.IDTERCERO    = CIT.IDTERCEROCA AND PPT.IDPLAN=CIT.IDPLAN
             LEFT JOIN MPE     ON CIT.IDPESPECIAL  = MPE.IDPESPECIAL
             LEFT JOIN TGEN T2 ON AFI.NIVELSOCIOEC = T2.CODIGO AND T2.TABLA = 'General' AND T2.CAMPO = 'NIVELSOCIOECO'
		   WHERE  CIT.CONSECUTIVO = @CONSECUTIVO
      END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      SELECT 'OK' OK
      RETURN
	END


	IF @METODO = 'REPROGRAMAR_CITAS'
	BEGIN
		SELECT @CONSECUTIVOANT=CONSECUTIVOANT ,@CONSECUTIVONUE=CONSECUTIVONUE ,@MOTIVO = MOTIVO, @OBSERVACION = OBSERVACION
		FROM OPENJSON(@PARAMETROS)
		WITH( CONSECUTIVOANT			VARCHAR(20)		   '$.CONSECUTIVOANT',
				CONSECUTIVONUE			VARCHAR(20)		   '$.CONSECUTIVONUE',
			   MOTIVO               VARCHAR(100)      '$.MOTIVO',
			   OBSERVACION          VARCHAR(100)      '$.OBSERVACION'
		)
		 
		SELECT @PARTICULAR = EXTRA, @PARTICULAR_TIME = TIME_EXTRA, @CUMPLIDA = CUMPLIDA,@TIPOCAJA=TIPOCAJA,@NORECIBOCAJA=NORECIBOCAJA,@IDAFILIADO=IDAFILIADO,@IDSERVICIO=IDSERVICIO FROM CIT 
		WHERE CONSECUTIVO=@CONSECUTIVOANT
		SELECT @FECHAINCIO = CIT.FECHA, @FECHAFINAL = DATEADD([MINUTE],@PARTICULAR_TIME, CIT.FECHA), @IDMEDICO = IDMEDICO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVONUE

		
		IF @PARTICULAR = 1 AND (SELECT COUNT(1) FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
			AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NOT NULL) > 0
		BEGIN
			PRINT 'ERROR: La cita a reprogramar tiene un tiempo de '+ rtrim(ltrim(str(@PARTICULAR_TIME))) + ' minutos, y tiene conflicto con citas que se encuentran mas adelante.'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ' La cita a reprogramar tiene un tiempo de '+ rtrim(ltrim(str(@PARTICULAR_TIME))) + ' minutos, y tiene conflicto con citas que se encuentran mas adelante.'
		END

		IF @CUMPLIDA=3
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se puede Reprogramar la Cita, por que ya fue Tomada Por el Médico desde su agenda.'            
		END 
		IF @CUMPLIDA = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se puede Reprogramar la Cita, por que ya fue Atendida Por el Médico.'            
		END 
		IF @TIPOCAJA='FCJ'
		BEGIN
			SELECT @CERRADA=CERRADA,@ESTADO=ESTADO FROM FCJ WHERE CNSFACJ=@NORECIBOCAJA
			IF @ESTADO='A' OR @CERRADA=1
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'No se puede Reprogramar la Cita del Paciente, Copago Traido en caja'            
			END
			ELSE
			BEGIN 
				IF DBO.FNK_VALORVARIABLE('ENVIA_SMS_CITA')='SI'
				BEGIN
					EXEC SPK_CANCELA_CITA_SMS 'CANCELA',@IDAFILIADO,@CONSECUTIVOANT, @IDSERVICIO
				END
			END
		END

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END 
		ELSE
		BEGIN
         
			--SELECT 'OK' OK --MODALIDAD CONSECUTIVOMAGP

			SELECT IDAFILIADO,  CONSECUTIVO,FECHA, IDMEDICO,MES.IDEMEDICA  , IDSERVICIO, IDCONTRATANTE, IDPLAN, TELEFONOAVISO, DISPONIBILIDAD, OBSERVACIONES, NOAUTORIZACION
					, IDIPSSOLICITA, IDMEDICOSOLICITA, FECHAAUTORIZACION, TIPOCOPAGO, IDAREA, ALTOCOSTO, IDTERCEROCA, AQUIENCOBRO, IDCONTRATO, IDSEDE,TIPOCITA,MODALIDAD, CONSECUTIVOMAGP
			INTO #DATOANTERIOR
			FROM CIT INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA WHERE  CIT.CONSECUTIVO = @CONSECUTIVOANT

	

			SELECT IDAFILIADO, CONSECUTIVO,  FECHA,  NUMCARNET, TIPOCITA, MODALIDAD, TIPOSOLICITUD, IDSERVICIO, ATENCION, PVEZ, IDCONTRATANTE, IDSEDE, IDMEDICO, IDPLAN, URGENCIA, VALORTOTAL
			, CIT.ESTADO, TELEFONOAVISO, DISPONIBILIDAD, CLASEORDEN, @USUARIO USUARIO, OBSERVACIONES, IDSEDEORIGEN, FECHAAUTORIZACION, TIPOCOPAGO, IDAREA, CCOSTO, ALTOCOSTO
			, MES.IDEMEDICA, IDTERCEROCA, IDCONTRATO,  CNSORIGINAL, DURACION, EXTRA, TIME_EXTRA,IDAUTSES, CONSECUTIVOMAGP
			INTO #DATONUEVO
			FROM CIT  INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA WHERE  CIT.CONSECUTIVO = @CONSECUTIVONUE

			--SELECT CONSECUTIVO ,IDAFILIADO, TIPOCITA,MODALIDAD, MED.NOMBRE, FECHA FROM #DATOANTERIOR INNER JOIN MED ON #DATOANTERIOR.IDMEDICO = MED.IDMEDICO
			--SELECT CONSECUTIVO ,IDAFILIADO, TIPOCITA,MODALIDAD, MED.NOMBRE, FECHA FROM #DATONUEVO INNER JOIN MED ON #DATONUEVO.IDMEDICO = MED.IDMEDICO
			--RETURN
			SELECT @TIPOCITA_ANT = TIPOCITA, @MODALIDAD_ANT = MODALIDAD FROM #DATOANTERIOR
			SELECT @TIPOCITA_NUE = TIPOCITA, @MODALIDAD_NUE = MODALIDAD FROM #DATONUEVO

			DECLARE @FAUX DATETIME 
			DECLARE @IDMEDICOAUX VARCHAR(20)
		   
			SELECT @FAUX = FECHA, @IDMEDICOAUX = IDMEDICO, @IDAFILIADO = IDAFILIADO 
			FROM CIT WHERE CONSECUTIVO = @CONSECUTIVOANT
		   
			WHILE(EXISTS(SELECT 1 FROM CIT WHERE FECHA = @FAUX AND IDMEDICO=@IDMEDICO))
			SELECT @FAUX = DATEADD(MINUTE,1,@FAUX)

			UPDATE CIT SET IDMEDICO =  NULL, FECHA =  @FAUX, IDEMEDICA =  NULL WHERE  CONSECUTIVO = @CONSECUTIVOANT

			IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVOANT) = 0 
				SET @CONT = 1
			ELSE 
				SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVOANT) + 1

			INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, CONSECUTIVO_NUEVO, TIPO)
			SELECT @CONSECUTIVOANT, @CONT,@USUARIO,@SYS_COMPUTERNAME
		   , 'Reprogramado - '+ (SELECT DESCCAUSAL FROM CAU WHERE IDCAUSAL = @MOTIVO AND IDCLASE = 'CITREPRO') + ' -Para la Fecha '+ (SELECT CAST( CONVERT(DATE,CIT.FECHA) AS VARCHAR(20)) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVONUE ) + ' con el medico  '+ (SELECT MED.NOMBRE FROM CIT INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO WHERE CONSECUTIVO = @CONSECUTIVONUE)
		   , 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO,@CONSECUTIVONUE, 'REPROGRAMADO' 

			UPDATE CIT SET
			--SE QEUDA SIN IDAFILIADO - SE JALA LA FECHA DE LA ANTERIOR CITA Y EL IDMEDICO Y DEMAS REGISTROS
			TIPOCITA      =       @TIPOCITA_ANT,
			FECHASOL		=		NULL,
			MODALIDAD      =      @MODALIDAD_ANT,
			IDMEDICO      =       #DATOANTERIOR.IDMEDICO,
			IDEMEDICA    =        #DATOANTERIOR.IDEMEDICA,
			FECHA        =        DBO.FNK_FECHA_SIN_MLS(#DATOANTERIOR.FECHA),
			IDSEDE       =        #DATOANTERIOR.IDSEDE,
			CONSECUTIVOMAGP       =        #DATOANTERIOR.CONSECUTIVOMAGP
			FROM  #DATOANTERIOR 
			WHERE CIT.CONSECUTIVO = @CONSECUTIVONUE

			UPDATE CIT SET
			--IDAFILIADO SE QUEDA - SE TRAE EL MEDICO Y FECHA DEL OTRO CONSECUTIVO
			TIPOCITA			= @TIPOCITA_NUE,
			MODALIDAD			= @MODALIDAD_NUE,
			IDMEDICO			= #DATONUEVO.IDMEDICO,
			--FECHASOL			=  DBO.FNK_GETDATE(),
			FECHA				= DBO.FNK_FECHA_SIN_MLS(#DATONUEVO.FECHA),
			IDSEDE				= #DATONUEVO.IDSEDE,
			CONSECUTIVOMAGP		= #DATONUEVO.CONSECUTIVOMAGP,
			IDEMEDICA			= #DATONUEVO.IDEMEDICA,
			CONFIRMADA			= 0,
			FECHACONFIRMA		= NULL,
			--EXTRA				= #DATONUEVO.EXTRA,
			--TIME_EXTRA			= #DATONUEVO.TIME_EXTRA,
			--DURACION			= #DATONUEVO.DURACION,
			--IDAUTSES			= #DATONUEVO.IDAUTSES,
			--'Cancelado - ' + @OBSERVACION
			--IDSERVICIO    = #DATONUEVO.IDSERVICIO,
			USUARIO			= @USUARIO
			FROM  #DATONUEVO 
			WHERE CIT.CONSECUTIVO = @CONSECUTIVOANT

         UPDATE HCATDOD SET FECHA_ESTIMADA = CONVERT(DATE,CIT.FECHA) FROM CIT INNER JOIN HCATDOD ON CIT.CONSECUTIVO = HCATDOD.CONSECUTIVOCIT WHERE CIT.CONSECUTIVO = @CONSECUTIVOANT
        
			IF @PARTICULAR = 1
			BEGIN
				DELETE FROM CIT 
				WHERE  IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
					AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL
			END
			EXEC SPK_CANCELA_CITA_SMS 'REPROGRAMA',@IDAFILIADO,@CONSECUTIVOANT, @IDSERVICIO

			SELECT 'OK'OK
		END
	END
	IF @METODO = 'ASIGNAR' 
	BEGIN
		SELECT * INTO #DATOS FROM OPENJSON(@PARAMETROS)
		WITH(
			IDAFILIADO					VARCHAR(20) '$.IDAFILIADO'
			,CONSECUTIVO				VARCHAR(20) '$.CONSECUTIVO'
			,ESPECIALIDAD				VARCHAR(20) '$.ESPECIALIDAD'
			,SERVICIO					VARCHAR(20) '$.SERVICIO'
			,MINADICIONALES				VARCHAR(20) '$.MINADICIONALES'
			,IDAREA						VARCHAR(20) '$.IDAREA'
			,CCOSTO						VARCHAR(20) '$.CCOSTO'
			,VIRTUAL					BIT			'$.VIRTUAL'
			,UNIDNEGO					VARCHAR(20) '$.UNIDNEGO'
			,FDESEADA					DATE        '$.FDESEADA'
			,HDESEADA					VARCHAR(8) '$.HDESEADA'
			,SOAT						BIT			'$.SOAT'
			,CNSHACTRAN					VARCHAR(20) '$.CNSHACTRAN'

			,TIPOCITA					VARCHAR(20) '$.TIPOCITA'
			,TIPOSOLICITUD				VARCHAR(50) '$.TIPOSOLICITUD'
			,TIPOATENCION				VARCHAR(50) '$.TIPOATENCION'
			,CLASEORDEN					VARCHAR(20) '$.CLASEORDEN'
			,PROGRAMA					VARCHAR(20) '$.PROGRAMA'
			,PROGRAMA_POSIBLE			VARCHAR(20) '$.PROGRAMA_POSIBLE'

			,ALTOCOSTO					VARCHAR(20) '$.ALTOCOSTO'
			,URGENCIA					BIT		    '$.URGENCIA'

			,TELEFONOAVISO				VARCHAR(20) '$.TELEFONOAVISO'
			,NOMBREPRESPON				VARCHAR(20) '$.NOMBREPRESPON'
			,TELEFONORESPON				VARCHAR(20) '$.TELEFONORESPON'
			,PARENTESCORESPON			VARCHAR(20) '$.PARENTESCORESPON'

			,IDIPSSOLICITA				VARCHAR(20) '$.IDIPSSOLICITA'
			,IDMEDICOSOLICITA			VARCHAR(20) '$.IDMEDICOSOLICITA'
			,FECHAAUTORIZACION			DATE        '$.FECHAAUTORIZACION'   
			,CCONTRATANTE				VARCHAR(20) '$.CCONTRATANTE'  
			,AQUIENCOBRO				VARCHAR(1) '$.AQUIENCOBRO'
            
			,NOAUTORIZACION				VARCHAR(45) '$.NOAUTORIZACION'
			--,IDTERCEROCA				VARCHAR(20) '$.IDTERCEROCA' NUMCARNET  VALORTOTAL  AQUIENCOBRO 
			--,IDPLAN					VARCHAR(20) '$.IDPLAN' 
			,COPAGOPROPIO				BIT			'$.COPAGOPROPIO'
			,EMBARAZO					VARCHAR(10) '$.EMBARAZO'
			,VALORCOPAGO				DECIMAL(14,2) '$.VALORCOPAGO'
			,TIPOCOPAGO					VARCHAR(20) '$.TIPOCOPAGO'
			,VALORTOTAL					DECIMAL(14,2) '$.VALORTOTAL'
			,NOCOBRAR					BIT			'$.NOCOBRAR'
			,OBSERVACIONES				VARCHAR(MAX) '$.OBSERVACIONES'
			,TIEMPO_PARTICULAR			INT			'$.TIEMPO_PARTICULAR'
			,PARTICULAR					BIT			'$.PARTICULAR'

			,ITEM_HCATDC				INT			'$.ITEM_HCATDC'

			,NOMBREACOM					VARCHAR(20) '$.NOMBREACOM'
			,TELEFONOACOM				VARCHAR(20) '$.TELEFONOACOM'
			,DIRECCIONACOM				VARCHAR(20) '$.DIRECCIONACOM'
			,PARENTESCOACOM				VARCHAR(20) '$.PARENTESCOACOM'
			,DATOSITEDS					NVARCHAR(MAX) AS JSON
			,IDADMINISTRADORA_CONTRA	VARCHAR(20) '$.IDADMINISTRADORA_CONTRA'
			,IDPLAN_CONTRA				VARCHAR(20) '$.IDPLAN_CONTRA'
			,SERVICIO_2					NVARCHAR(MAX) AS JSON
			,CANTIDAD_SERVICIO			DECIMAL(14,2) '$.CANTIDAD_SERVICIO'
			--CCONTRATANTE
		)
		 SELECT @SERVICIO_2 =	(SELECT SERVICIO_2 FROM #DATOS )

		SELECT * INTO #SERVICIO_2 FROM OPENJSON (@SERVICIO_2)
		WITH(
		IDSERVICIO						VARCHAR(20)						'$.value'
		,DESCSERVICIO					VARCHAR(200)					'$.label'
		,IDEMEDICA						VARCHAR(20)						'$.IDEMEDICA'
		,TIPO							VARCHAR(20)						'$.TIPO'
		,DURACIONCITA					INT								'$.DURACIONCITA'
		)

		UPDATE #DATOS SET SERVICIO = COALESCE(SERVICIO, (SELECT TOP 1 IDSERVICIO FROM #SERVICIO_2)) WHERE 1 = 1

		

		SELECT @MEDTRATANTEDIFERENTE = JSON_VALUE(@PARAMETROS,'$.MEDTRATANTEDIFERENTE')
		SELECT @RAZONMEDDIFERENTE    = JSON_VALUE(@PARAMETROS,'$.RAZONMEDDIFERENTE.value')
		SELECT @AFILIADOSITEDS =  (SELECT DATOSITEDS FROM #DATOS)
		SELECT * INTO #AFILIADOSITEDS FROM   
		OPENJSON (@AFILIADOSITEDS) WITH (   
            apMaternoAse				VARCHAR(50)		'$.apMaternoAse',
            apMaternoContratante		VARCHAR(50)		'$.apMaternoContratante',
            apMaternoTitular			VARCHAR(50)		'$.apMaternoTitular',
            apPaternoAse				VARCHAR(50)		'$.apPaternoAse',
            apPaternoContratante		VARCHAR(100)	'$.apPaternoContratante', 
            apPaternoTitular			VARCHAR(50)		'$.apPaternoTitular',
            codiAse						VARCHAR(50)		'$.codiAse',
            codiErrorSW					VARCHAR(12)		'$.codiErrorSW',
            codiEstAse					VARCHAR(12)		'$.codiEstAse',
            codiEstadoMaritalAse		VARCHAR(12)		'$.codiEstadoMaritalAse',
            codiGeneroAse				VARCHAR(12)		'$.codiGeneroAse',
            codiIAFAS					VARCHAR(12)		'$.codiIAFAS',
            codiParentescoAse			VARCHAR(12)		'$.codiParentescoAse',
            codiProducto				VARCHAR(12)		'$.codiProducto',
            codiTipoAfiliacionAse		VARCHAR(12)		'$.codiTipoAfiliacionAse',
            codiTipoDocAse				VARCHAR(12)		'$.codiTipoDocAse',
            codiTipoDocContratante		VARCHAR(12)		'$.codiTipoDocContratante',
            codiTipoDocTitular			VARCHAR(12)		'$.codiTipoDocTitular',
            codiTipoPlanSaludAse		VARCHAR(12)		'$.codiTipoPlanSaludAse',
            codiTitular					VARCHAR(12)		'$.codiTitular',
            contratoAse					VARCHAR(12)		'$.contratoAse',
            descEstAse					VARCHAR(12)		'$.descEstAse',
            descEstadoMaritalAse		VARCHAR(50)		'$.descEstadoMaritalAse',
            descParentescoAse			VARCHAR(50)		'$.descParentescoAse',
            descProducto				VARCHAR(50)		'$.descProducto',
            descTipoAfiliacionAse		VARCHAR(50)		'$.descTipoAfiliacionAse',
            descTipoDocAse				VARCHAR(50)		'$.descTipoDocAse',
            descTipoDocContratante		VARCHAR(50)		'$.descTipoDocContratante',
            descTipoDocTitular			VARCHAR(50)		'$.descTipoDocTitular',
            descTipoPlanSaludAse		VARCHAR(50)		'$.descTipoPlanSaludAse',
            fecAfiliacionTitular		VARCHAR(12)		'$.fecAfiliacionTitular',
            fecFinVigenciaAse			VARCHAR(12)		'$.fecFinVigenciaAse',
            fecIniVigenciaAse			VARCHAR(12)		'$.fecIniVigenciaAse',
            fecNacimientoAse			VARCHAR(12)		'$.fecNacimientoAse',
            nombreAse					VARCHAR(50)		'$.nombreAse',
            nombreContratante			VARCHAR(12)		'$.nombreContratante',
            nombreTitular				VARCHAR(12)		'$.nombreTitular',
            nroPlanAse					VARCHAR(12)		'$.nroPlanAse',
            nroTipoDocAse				VARCHAR(12)		'$.nroTipoDocAse',
            nroTipoDocContratante		VARCHAR(20)		'$.nroTipoDocContratante',
            nroTipoDocTitular			VARCHAR(20)		'$.nroTipoDocTitular',
            polizaAse					VARCHAR(20)		'$.polizaAse',
			COPAGOCONSULTA				VARCHAR(20)		'$.COPAGOCONSULTA',
			ID_TIPO_COBERTURA			VARCHAR(20)		'$.ID_TIPO_COBERTURA',
			ID_COPAGOCONSULTA_DESC		VARCHAR(20)		'$.ID_COPAGOCONSULTA_DESC',
			COPAGOVARIABLECONSULTA		VARCHAR(20)		'$.COPAGOVARIABLECONSULTA',
			COPAGOEXAMEN				VARCHAR(20)		'$.COPAGOEXAMEN',
			COPAGODX					VARCHAR(20)		'$.COPAGODX',
			COPAGOCONSULTA_DESC			VARCHAR(200)	'$.COPAGOCONSULTA_DESC',
			CODIPRESS					VARCHAR(20)		'$.CODIPRESS',
			nroContratante				VARCHAR(20)		'$.nroContratante',
			DETALLE						NVARCHAR(MAX) AS JSON)

		 SELECT @DETALLESITEDS =	(SELECT DETALLE FROM #AFILIADOSITEDS )
		 SELECT * INTO #DETALLESITEDS 
		 FROM   OPENJSON (@DETALLESITEDS) WITH (   
                codiTipCobertura			VARCHAR(13)		'$.codiTipCobertura',
				codiSubTipCobertura		VARCHAR(20)		'$.codiSubTipCobertura',
				descSubTipCobertura		VARCHAR(100)    '$.descSubTipCobertura',
				coCalServicio			VARCHAR(20)     '$.coCalServicio',
				descCopagoFijo			VARCHAR(20)		'$.descCopagoFijo',
				copagoFijo				VARCHAR(10)		'$.copagoFijo',
				copagoVariable			VARCHAR(50)		'$.copagoVariable'
		)

		SELECT @PARTICULAR = PARTICULAR, @PARTICULAR_TIME = TIEMPO_PARTICULAR,@CANTIDAD_SERVICIO =CANTIDAD_SERVICIO, @CONSECUTIVO = CONSECUTIVO  FROM #DATOS
		SELECT @FECHA2 = CONVERT(DATE,FECHA) ,@FECHA1 = FECHA, @IDMEDICO = IDMEDICO   FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO

		IF @PARTICULAR = 1
			SELECT @TOTAL_DURACION = @PARTICULAR_TIME + COALESCE(@CANTIDAD_SERVICIO,0)
		ELSE
			SELECT @TOTAL_DURACION =  COALESCE(@CANTIDAD_SERVICIO,0)
			
		SELECT @FECHAINCIO = CIT.FECHA, @FECHAFINAL = DATEADD([MINUTE], @TOTAL_DURACION, CIT.FECHA) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

		SELECT  @CONSECUTIVO = CONSECUTIVO, @IDAFILIADO = IDAFILIADO, @ITEM_HCATDC = ITEM_HCATDC FROM #DATOS
		SELECT @IDPLAN = IDPLAN, @IDTERCERO = IDADMINISTRADORA FROM AFI WHERE IDAFILIADO  = @IDAFILIADO

		IF COALESCE(@ITEM_HCATDC, 0)>0
		BEGIN
			UPDATE HCATDC SET CONSECUTIVOCIT=@CONSECUTIVO, ESTADO = 1
			WHERE ITEM=@ITEM_HCATDC AND (CONSECUTIVOCIT IS NULL OR ESTADO=2)
		END

		IF EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO AND COALESCE(IDAFILIADO,'')<>'')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La cita ya fue ocupada.'
		END
	--query2
		BEGIN TRY  
			UPDATE CIT
			SET 
				TIPOCITA			   = B.TIPOCITA--, FECHAAUTORIZACION
				, IDAFILIADO = B.IDAFILIADO
				,IDPLAN = @IDPLAN
				,IDCONTRATANTE = @IDTERCERO
				,IDTERCEROCA = @IDTERCERO
				,TIPOSOLICITUD = B.TIPOSOLICITUD
				,ATENCION = COALESCE( B.TIPOATENCION, 'Ambulatoria')
				,URGENCIA = B.URGENCIA
				,PREGUNTAPOR = CASE WHEN B.EMBARAZO = 'Si' THEN 1 ELSE 0 END
				,CLASEORDEN = (
					CASE 
						WHEN B.CLASEORDEN = 'Normal'
							THEN 'Normal'
						WHEN B.CLASEORDEN = 'PyP'
							THEN 'PyP'
						ELSE 'Modelo'
						END
					)
				,CODUNG = B.UNIDNEGO
				,ALTOCOSTO = B.ALTOCOSTO
				,FECHASOL = DBO.FNK_GETDATE()
				,IDSERVICIO = B.SERVICIO
				,USUARIO = @USUARIO
				,IDAREA = B.IDAREA
				,CCOSTO = B.CCOSTO
				,TELEFONOAVISO = B.TELEFONOAVISO
				,NOMBREACOMPA = B.NOMBREACOM
				,TELEFONOACOMPA = B.TELEFONOACOM
				,PARENTESCOACOMPA = B.PARENTESCOACOM
				,NOMBRERESPO = B.NOMBREPRESPON
				,TELEFONORESPO = B.TELEFONORESPON
				,PARENTESCORESPO = B.PARENTESCORESPON
				,IDPESPECIAL = CASE WHEN B.CLASEORDEN  = 'PyP' THEN B.PROGRAMA_POSIBLE ELSE  B.PROGRAMA END 
				,IDIPSSOLICITA = B.IDIPSSOLICITA
				,IDMEDICOSOLICITA = B.IDMEDICOSOLICITA
				,FECHAAUTORIZACION = DBO.FNK_GETDATE()
				,CCONTRATANTE = CASE 
					WHEN B.CCONTRATANTE = 'false'
						THEN 0
					WHEN B.CCONTRATANTE = 'true'
						THEN 1
					ELSE 0
					END
				,AQUIENCOBRO = CASE WHEN  COALESCE (B.AQUIENCOBRO,'') = '' THEN 'N' ELSE B.AQUIENCOBRO END
				,NOAUTORIZACION = B.NOAUTORIZACION
				--,IDTERCEROCA        =B.IDTERCEROCA RAZONMEDDIFERENTE
				--,IDPLAN             =B.IDPLAN
				,COPAGOPROPIO = CASE 
					WHEN B.COPAGOPROPIO = 'false'
						THEN 0
					WHEN B.COPAGOPROPIO = 'true'
						THEN 1
					ELSE 0
					END
				,VALORCOPAGO = B.VALORCOPAGO
				,TIPOCOPAGO = B.TIPOCOPAGO
				,VALORTOTAL = CASE WHEN COALESCE(B.VALORTOTAL,0) = NULL THEN 0 ELSE  COALESCE(B.VALORTOTAL,0) END
				,NOCOBRAR = CASE 
					WHEN B.NOCOBRAR = 'false'
						THEN 0
					WHEN B.NOCOBRAR = 'true'
						THEN 1
					ELSE 0
					END
				,OBSERVACIONES = B.OBSERVACIONES
				,ESTADO = 'Activo'
				,IDSEDEORIGEN = (
					SELECT IDSEDE
					FROM USUSU
					WHERE USUARIO = @USUARIO
					)
				,SYS_COMPUTERNAME = @SYS_COMPUTERNAME
				--,F_REQUERIDA = CAST(IIF( COALESCE(B.HDESEADA, '')='', B.FDESEADA, CONCAT(REPLACE(CONVERT(VARCHAR,B.FDESEADA,102),'.','-'), ' ', LEFT(CONVERT(VARCHAR(10), B.HDESEADA, 108),5), ':00') ) AS DATETIME)
				,F_REQUERIDA = CONVERT(DATETIME, B.FDESEADA) + CONVERT(DATETIME, B.HDESEADA)
				,MODALIDAD = (
					CASE 
						WHEN B.VIRTUAL = 'true'
							THEN 'Virtual'
						ELSE 'Presencial'
						END
					)
				,NUMCARNET = (SELECT DOCIDAFILIADO FROM AFI WHERE IDAFILIADO = @IDAFILIADO)
				,TIPOAFILIADO = (SELECT COALESCE(TIPOAFILIADO,'') FROM AFI WHERE IDAFILIADO = @IDAFILIADO)
				,RAZONMEDDIF = CASE @MEDTRATANTEDIFERENTE WHEN 1 THEN @RAZONMEDDIFERENTE ELSE NULL END
				,EXTRA = COALESCE(B.PARTICULAR,0)
				,TIME_EXTRA = COALESCE(B.TIEMPO_PARTICULAR,0)
				,SOAT = CASE 
						WHEN B.SOAT = 'false'
							THEN 0
						WHEN B.SOAT = 'true'
							THEN 1
						ELSE 0
						END
				,CNSHACTRAN = COALESCE(B.CNSHACTRAN, NULL)
				,PROCEDENCIA = 'AGENDA CIT'
			FROM CIT                
			INNER JOIN #DATOS B ON CIT.CONSECUTIVO = B.CONSECUTIVO

			--SI EN LA AGENDA PIDE CAMBIAR DE CONTRATANTE, SE ACTUALIZA TERCERO Y PLAN INGRESADO
			IF (SELECT JSON_VALUE(@PARAMETROS,'$.CCONTRATANTE')) = 'true'
			BEGIN
			UPDATE CIT SET IDTERCEROCA = B.IDADMINISTRADORA_CONTRA,  IDPLAN = B.IDPLAN_CONTRA FROM CIT                
			INNER JOIN #DATOS B ON CIT.CONSECUTIVO = B.CONSECUTIVO

			UPDATE AFI SET IDPLAN = #DATOS.IDPLAN_CONTRA, IDADMINISTRADORA = #DATOS.IDADMINISTRADORA_CONTRA FROM AFI, #DATOS WHERE AFI.IDAFILIADO = @IDAFILIADO
			END

			SELECT @IDSERVICIO = ( SELECT IDSERVICIO FROM CIT WHERE  CONSECUTIVO =  @CONSECUTIVO)

			IF DBO.FNK_VALORVARIABLE('ENVIA_SMS_CITA')='SI'
			BEGIN
				EXEC SPK_CANCELA_CITA_SMS 'ASIGNA',@IDAFILIADO,@CONSECUTIVO, @IDSERVICIO
			END
		
			--INSERT CITSER, si en caso tiene mas de 1 serivico
			IF (SELECT COUNT(*)FROM #SERVICIO_2 )>1
			BEGIN
				INSERT INTO CITSER (CONSECUTIVO_CIT, IDSERVICIO,CANTIDAD, FECHA,USUARIO, ESTADO,PROCEDENCIA)
				SELECT @CONSECUTIVO, #SERVICIO_2.IDSERVICIO, 1 , DBO.FNK_GETDATE(), @USUARIO, 'Activo', 'AGENDA'
				FROM #SERVICIO_2
			END

			-- Si envia el CNSNOCIT significa que está agendando una cita pendiente en Lista de Espera
			SELECT @CNSNOCIT = JSON_VALUE(@PARAMETROS,'$.CNSNOCIT')
			IF COALESCE(@CNSNOCIT, '')!=''
			BEGIN
				UPDATE NOCIT
				SET ATENDIDO = 1 ,CONSECUTIVOCIT = @CONSECUTIVO
				WHERE CNSNOCIT = @CNSNOCIT
				AND ATENDIDO = 0 AND COALESCE(CONSECUTIVOCIT, '')=''
			END

		--SI EN CASO EL TIEMPO DE LOS SERVICIOS ES MAYOR AL RANGO NATURAL DE LA CITA, ESTA ELMINA REGISTROS DE CIT, SIN NO ANTES NO GUARDARLO EN CIT_EXTRA
		IF EXISTS (SELECT CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD, @CONSECUTIVO, @USUARIO, GETDATE()
				FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
				AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL)
		BEGIN
			INSERT INTO CIT_EXTRA (CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD,CONSECUTIVO_RES,USUARIO_RES,FECHA_RES   )
			SELECT CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD, @CONSECUTIVO, @USUARIO, GETDATE()
			FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
			AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL

			DELETE FROM CIT WHERE  IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
			AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL

			UPDATE CIT SET 	TIME_EXTRA = COALESCE(@TOTAL_DURACION,0), DURACION = COALESCE(@TOTAL_DURACION,0) WHERE  CONSECUTIVO = @CONSECUTIVO
		END
		

-- PARA EL ACCIDENTE DE TRANSITO	
		
		SELECT  @SIRAS = COALESCE(SIRAS,'') ,@CONSECUTIVO= COALESCE(CONSECUTIVO,''),  @CNSHACTRAN =COALESCE(CNSHACTRAN,'')  , @VALORTOTAL = COALESCE(VALORTOTAL,0) FROM			OPENJSON(@PARAMETROS) --PARA GUARDAR EL SIRAS EN HACTRAND
		WITH( SIRAS	VARCHAR(20) '$.SIRAS'
			,CONSECUTIVO		VARCHAR(20) '$.CONSECUTIVO'
			,CNSHACTRAN			VARCHAR(20) '$.CNSHACTRAN'
			,VALORTOTAL             DECIMAL(14,2) '$.VALORTOTAL'
			)

		IF ( SELECT COUNT(1) FROM CIT INNER JOIN AUTSES ON CIT.IDAUTSES = AUTSES.ID WHERE CONSECUTIVO= @CONSECUTIVO AND CIT.IDAUTSES IS NOT NULL ) > 0 
		BEGIN  -- ES DE SESIONES
			PRINT '________________________________________'
			PRINT 'ES DE SESIONES'
			PRINT '________________________________________'
			IF ( COALESCE(@CNSHACTRAN ,'' ) <>'' )
			BEGIN

				SELECT @IDAUTSES = IDAUTSES FROM CIT WHERE CONSECUTIVO= @CONSECUTIVO 
				PRINT '@IDAUTSES: ' + @IDAUTSES

				UPDATE CIT SET CNSHACTRAN = @CNSHACTRAN WHERE IDAUTSES = @IDAUTSES

				SELECT @VALORTOTAL = SUM( VALORTOTAL)
				FROM CIT WHERE IDAUTSES = @IDAUTSES  AND CUMPLIDA=1 AND FACTURADA =0
				GROUP BY  CNSHACTRAN  

				PRINT '@VALORTOTAL: ' + CONVERT(VARCHAR(20), @VALORTOTAL)

				IF ( SELECT COUNT(*) FROM HACTRAND WHERE  CNSHACTRAN =@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = 'VARIAS' AND COALESCE ( N_FCT_ASEG ,  COALESCE ( N_FCT_FYG , '')) ='' ) >0  
					BEGIN

						PRINT 'ACTUALIZO EL CONSUMO DEL ACCIDENTE DE TRANSITO DE SESIONES CUANDO NO TIENEN FACTURA'
						UPDATE HACTRAND SET VLRGASTADO = @VALORTOTAL  , SIRAS = @SIRAS  
						WHERE  CNSHACTRAN	=@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = 'VARIAS' AND COALESCE ( N_FCT_ASEG ,  COALESCE ( N_FCT_FYG , '')) =''

					END
				ELSE
					BEGIN
						IF ( SELECT COUNT(*) FROM HACTRAND WHERE  CNSHACTRAN =@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = 'VARIAS' AND COALESCE ( N_FCT_ASEG ,  COALESCE ( N_FCT_FYG , '')) <>'' ) =0  
						BEGIN
							PRINT 'AGREGO UN NUEVO DETALLE DE HACTRAND CON EL NUEVO CONSUMO'

							SELECT @ITEM = COUNT(ITEM)+1 FROM HACTRAND WHERE  CNSHACTRAN	=@CNSHACTRAN 
							INSERT INTO HACTRAND ( CNSHACTRAN, ITEM, PROCEDENCIA,  NOREFERENCIA , N_FCT_ASEG, VLRGASTADO, SIRAS	)
								VALUES  ( @CNSHACTRAN ,  @ITEM , 'CI' , 'VARIAS' , NULL , @VALORTOTAL  , @SIRAS   )
						END
						ELSE
						BEGIN
							PRINT 'YA TIENE FACTURA Y VALOR NO HAGO NADA'
						END
					END
			END
			
		END
		ELSE
		BEGIN

			IF ( COALESCE(@CNSHACTRAN ,'' ) <>'' )
			BEGIN
				IF ( SELECT COUNT(*) FROM HACTRAND WHERE  CNSHACTRAN	=@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = @CONSECUTIVO ) >0  
					BEGIN
						PRINT 'ACTUALIZO EL CONSUMO DEL ACCIDENTE DE TRANSITO'
						UPDATE HACTRAND SET VLRGASTADO = @VALORTOTAL  , SIRAS = @SIRAS  WHERE  CNSHACTRAN	=@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = @CONSECUTIVO
					END
				ELSE
					BEGIN
						PRINT 'AGREGO UN NUEVO DETALLE DE HACTRAND CON EL NUEVO CONSUMO'

						SELECT @ITEM = COUNT(ITEM)+1 FROM HACTRAND WHERE  CNSHACTRAN	=@CNSHACTRAN 
						INSERT INTO HACTRAND ( CNSHACTRAN, ITEM, PROCEDENCIA,  NOREFERENCIA , N_FCT_ASEG, VLRGASTADO, SIRAS	)
							VALUES  ( @CNSHACTRAN ,  @ITEM , 'CI' , @CONSECUTIVO , NULL , @VALORTOTAL  , @SIRAS   )
					END
			END
		END

		IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
			SET @CONT = 1
		ELSE 
			SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1

		INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, CONSECUTIVO_NUEVO, TIPO, IDMEDICO)
		SELECT @CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME , 'Asignado - Cita Asignada', 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO,@CONSECUTIVO, 'ASIGNADO', (SELECT IDMEDICO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)  


		--SELECT TELEFONOACOM FROM #DATOS
		UPDATE AFI SET	URG_DIR = CASE WHEN COALESCE((SELECT DIRECCIONACOM FROM #DATOS),'') <> '' THEN  (SELECT DIRECCIONACOM FROM #DATOS) ELSE URG_DIR END
						,URG_NOMBRE = CASE WHEN COALESCE((SELECT NOMBREACOM FROM #DATOS),'') <> '' THEN  (SELECT NOMBREACOM FROM #DATOS) ELSE URG_NOMBRE END  
						,URG_TELE = CASE WHEN COALESCE((SELECT TELEFONOACOM FROM #DATOS),'') <> '' THEN  (SELECT TELEFONOACOM FROM #DATOS) ELSE URG_TELE END     
						,URG_VINCULO = CASE WHEN COALESCE((SELECT PARENTESCOACOM FROM #DATOS),'') <> '' THEN  (SELECT PARENTESCOACOM FROM #DATOS) ELSE URG_VINCULO END   
		FROM AFI WHERE IDAFILIADO = @IDAFILIADO
	
		IF (SELECT VIRTUAL FROM #DATOS) = 1 AND EXISTS (SELECT  * FROM SED WHERE IDSEDE = (SELECT DBO.FNK_VALORVARIABLE('SEDE_VIRTUAL')))
			UPDATE CIT SET IDSEDE = (SELECT DBO.FNK_VALORVARIABLE('SEDE_VIRTUAL')) WHERE CONSECUTIVO = @CONSECUTIVO

		--INSERT A TABLAS DE SITEDS - PERU INICIO
		IF EXISTS (SELECT   * FROM #AFILIADOSITEDS)
		BEGIN
			SELECT @IDTERCERO = IDTERCEROCA, @IDAFILIADO = IDAFILIADO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

			INSERT INTO CITSITEDS (CONSECUTIVO,SEDE_SITEDS,IDTERCERO_SITEDS, USUARIO, FECHA,COPAGOCONSULTA, COPAGOVARIABLECONSULTA, ID_COPAGOCONSULTA_DESC, COPAGOCONSULTA_DESC, ID_TIPO_COBERTURA  , IDAFILIADO )
			SELECT @CONSECUTIVO, @IDSEDE , @IDTERCERO, @USUARIO, DBO.FNK_GETDATE(),CAST( COALESCE(COPAGOCONSULTA,0) AS DECIMAL(14,2)), CAST( COALESCE(COPAGOVARIABLECONSULTA,0) AS DECIMAL(14,2)), ID_COPAGOCONSULTA_DESC, COPAGOCONSULTA_DESC, ID_TIPO_COBERTURA, @IDAFILIADO FROM #AFILIADOSITEDS
			--polizaAse
			INSERT INTO CONSSITEDS  ( CONSECUTIVO,  IDAFILIADO, IDTERCERO, USUARIO, FECHA,  AFIapMaternoAse, AFIapMaternoContratante, AFIapMaternoTitular
				, AFIapPaternoAse, AFIapPaternoContratante, AFIapPaternoTitular, AFIcodiAse, AFIcodiErrorSW, AFIcodiEstAse, AFIcodiEstadoMaritalAse, AFIcodiGeneroAse, AFIcodiIAFAS, AFIcodiParentescoAse
				, AFIcodiProducto, AFIcodiTipoAfiliacionAse, AFIcodiTipoDocAse, AFIcodiTipoDocContratante, AFIcodiTipoDocTitular, AFIcodiTipoPlanSaludAse, AFIcodiTitular, AFIcontratoAse, AFIdescEstAse, AFIdescEstadoMaritalAse, AFIdescParentescoAse
				, AFIdescProducto, AFIdescTipoAfiliacionAse, AFIdescTipoDocAse, AFIdescTipoDocContratante, AFIdescTipoDocTitular, AFIdescTipoPlanSaludAse
				, AFIfecAfiliacionTitular, AFIfecFinVigenciaAse, AFIfecIniVigenciaAse, AFIfecNacimientoAse, AFInombreAse
				, AFInombreContratante, AFInombreTitular, AFInroPlanAse, AFInroTipoDocAse, AFInroTipoDocContratante, AFInroTipoDocTitular, AFIpolizaAse
				, ASEGURADORA, CODIPRESS, codiIAFAS, codiProducto, codiAse, codiParentescoAse, nroContratante, codiEstAse, fecNacimientoAse, codiGeneroAse, nroPlanAse)
			SELECT  @CONSECUTIVO,@IDAFILIADO, @IDTERCERO, @USUARIO, DBO.FNK_GETDATE(), apMaternoAse, apMaternoContratante, apMaternoTitular, apPaternoAse, apPaternoContratante, apPaternoTitular, codiAse, codiErrorSW, codiEstAse, codiEstadoMaritalAse, codiGeneroAse
				, codiIAFAS, codiParentescoAse, codiProducto, codiTipoAfiliacionAse, codiTipoDocAse, codiTipoDocContratante, codiTipoDocTitular, codiTipoPlanSaludAse, codiTitular, contratoAse, descEstAse, descEstadoMaritalAse
				, descParentescoAse, descProducto, descTipoAfiliacionAse, descTipoDocAse, descTipoDocContratante, descTipoDocTitular, descTipoPlanSaludAse
				,CASE WHEN  fecAfiliacionTitular = '00000000' THEN NULL ELSE CONVERT(DATE, fecAfiliacionTitular) END
				,CASE WHEN  fecFinVigenciaAse = '00000000' THEN NULL ELSE CONVERT(DATE, fecFinVigenciaAse) END
				,CASE WHEN  fecIniVigenciaAse = '00000000' THEN NULL ELSE CONVERT(DATE, fecIniVigenciaAse) END
				,CASE WHEN  fecNacimientoAse = '00000000' THEN NULL ELSE CONVERT(DATE, fecNacimientoAse) END
				, nombreAse, nombreContratante, nombreTitular, nroPlanAse, nroTipoDocAse, nroTipoDocContratante, nroTipoDocTitular, polizaAse
				, @IDTERCERO,CODIPRESS, codiIAFAS, codiProducto, codiAse, codiParentescoAse, nroContratante, codiEstAse, fecNacimientoAse, codiGeneroAse, nroPlanAse FROM #AFILIADOSITEDS
			
			SET @IDCONSSITEDS = @@IDENTITY
         
			INSERT INTO CONSSITEDSD  ( CONSECUTIVO, codiTipCobertura, codiSubTipCobertura, descSubTipCobertura, coCalServicio, descCopagoFijo, copagoFijo, copagoVariable)
			SELECT   @CONSECUTIVO, codiTipCobertura, codiSubTipCobertura, descSubTipCobertura, coCalServicio, descCopagoFijo, copagoFijo, copagoVariable FROM #DETALLESITEDS
		END
		--INSERT A TABLAS DE SITEDS - PERU FIN

		END TRY  
		BEGIN CATCH 
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
		END CATCH
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END	
		SELECT 'OK'OK
      
		SELECT @IDAFILIADO         = IDAFILIADO 
			,@IDAUT              = CONSECUTIVO
			,@NO_ITEM            = 1
			,@IDSERVICIO         = IDSERVICIO
			,@PYP                = CASE  WHEN CLASEORDEN = 'PyP' THEN 1 ELSE 0 END    ---20240403  TENIA   0 --si no tiene dats como clase orden (pyp)
			,@ALTOCOSTO          = CASE WHEN ALTOCOSTO = 'Si' then 1 else 0 end
			,@VALORAUTD          = 0
			,@PROCEDENCIA        = 'CI'
			--,@SYS_COMPUTERNAME   = 
			,@COMPANIA           = '01'
			,@IDSEDE             = IDSEDE
			--,@USUARIO            = 
			,@IDPROVEEDOR        = NULL
			,@IDAREA             = NULL
			,@FECHAAUT           = NULL
			,@COPAGOPROPIO       = (SELECT CAST(COPAGOPROPIO AS BIT) FROM #DATOS )
			,@SOAT               = 0
		FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

			EXEC SPK_COPAGO_AUT_CEHOSP @IDAFILIADO,@IDAUT, @NO_ITEM,@IDSERVICIO  , @PYP, @ALTOCOSTO,@VALORAUTD, @PROCEDENCIA, @SYS_COMPUTERNAME, @COMPANIA, @IDSEDE, @USUARIO  , @IDPROVEEDOR, @IDAREA , @FECHAAUT ,@COPAGOPROPIO  , @SOAT
			UPDATE CIT SET VALORTOTAL = CASE WHEN VALORTOTAL IS  NULL THEN 0 ELSE VALORTOTAL END WHERE CONSECUTIVO = @CONSECUTIVO

			IF EXISTS (SELECT * FROM CITSITEDS WHERE CONSECUTIVO = @CONSECUTIVO AND COALESCE(ID_COPAGOCONSULTA_DESC,'')<> '')
				UPDATE CIT SET CIT.VALORCOPAGO = CITSITEDS.COPAGOCONSULTA FROM CIT,CITSITEDS WHERE CIT.CONSECUTIVO = @CONSECUTIVO AND CIT.CONSECUTIVO = CITSITEDS.CONSECUTIVO  

		RETURN
	END
	IF @METODO = 'CONFIRMA_LLEGADA'
	BEGIN
	   SELECT @CONSECUTIVO =  CONSECUTIVO, @OBSERVACION = OBSERVACION, @NOAUTORIZACION =  NOAUTORIZACION, @VALORCOPAGO = VALORCOPAGO, @HABILITA_COPAGO = HABILITA_COPAGO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO',
			   NOAUTORIZACION    VARCHAR(50)    '$.NOAUTORIZACION',
			   VALORCOPAGO       DECIMAL(14,2)   '$.VALORCOPAGO',
			   HABILITA_COPAGO   BIT            '$.HABILITA_COPAGO',
			   OBSERVACION       VARCHAR(100)   '$.OBSERVACION')
   
		SELECT  @VLR_ANTERIOR = VALORCOPAGO,@IDTERCEROCA = IDTERCEROCA  FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
		SELECT @OBSERVACION = COALESCE(@OBSERVACION,'')
		IF DBO.FNK_VALORVARIABLE('SOLOUN_CODAUTORIZA')='SI' AND COALESCE(@NOAUTORIZACION,'')<>''
		BEGIN
			SELECT @NRO=COUNT(*) 
			FROM CIT WHERE COALESCE(NOAUTORIZACION,'')=@NOAUTORIZACION 
			AND COALESCE(NOAUTORIZACION,'')<>''
			AND CONSECUTIVO<>@CONSECUTIVO
			IF @NRO>0
				BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'Ya existe una cita con este nro de Autorización: '+@NOAUTORIZACION
				END
			SELECT  @NRO=COUNT(*) FROM AUT WHERE COALESCE(NUMAUTORIZA,'')=@NOAUTORIZACION 
			IF @NRO>0
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'Ya existe un servicio ambulatorio con este mismo número de Autorización.. Autorización No Valida...'+@NOAUTORIZACION
			END
		END
      IF @HABILITA_COPAGO = 1
      BEGIN
         IF @VALORCOPAGO <> (SELECT VALORCOPAGO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
         BEGIN
            IF (SELECT COUNT(1) FROM USGRUH WHERE  GRUPO = (SELECT DBO.FNK_DESCIFRAR(USUSU.GRUPO) FROM USUSU WHERE  USUARIO = @USUARIO) AND USGRUH.PERMISO = 1 AND USGRUH.IDPROCEDIMIENTO = 'CONF_CONSULTA_EXTERNA' AND USGRUH.IDCONTROL = 'agrega_copago' ) <> 1
            BEGIN
               INSERT INTO @TBLERRORES(ERROR) SELECT 'Usted no cuenta con permisos, para modificar el Copago.'
               SELECT 'KO' OK
               SELECT ERROR FROM @TBLERRORES
               RETURN
            END
         END
      END
      IF EXISTS (SELECT  * FROM USVGS WHERE IDVARIABLE = 'AUT_UNICO' AND DATO = 'SI') 
         AND EXISTS( SELECT NOAUTORIZACION FROM CIT WHERE CONSECUTIVO <> @CONSECUTIVO AND COALESCE(CIT.NOAUTORIZACION,'')<>'' AND CIT.NOAUTORIZACION = @NOAUTORIZACION   ) 
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'El numero de Autorizacion ya se encuentra registrado en otra Cita'
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
      RETURN
      END
      BEGIN TRY
      
         IF @HABILITA_COPAGO = 1
               UPDATE CIT SET VALORCOPAGO = @VALORCOPAGO  WHERE  CONSECUTIVO = @CONSECUTIVO

		   UPDATE CIT SET FECHALLEGA = DBO.FNK_GETDATE(), USUARIOLLEGA = @USUARIO, NOAUTORIZACION = @NOAUTORIZACION WHERE  CONSECUTIVO = @CONSECUTIVO
		   IF  DBO.FNK_VALORVARIABLE('GENERA_COPAGO_CITAS')='LLEGA'
		   BEGIN
			   IF EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND IDPLAN IN(
			   SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')
			   UNION ALL 
			   SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')
			   UNION ALL 
			   SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')
			   UNION ALL 
			   SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')
			   UNION ALL 
			   SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')
			   ))
			   BEGIN
			   SELECT @PART=1
			   END
			   SET @COMPANIA ='01'
			   SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME())
			   FROM USUSU WHERE USUARIO=@USUARIO
			   SELECT @SEDE=IDSEDE FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO

			   PRINT 'INGRESA A SPK_PAGOSCAJA_CIT'
			   EXEC SPK_PAGOSCAJA_CIT @CONSECUTIVO,@SYS_COMPUTERNAME,@COMPANIA,@SEDE,@USUARIO,@PART
		   END

		   IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
			   SET @CONT = 1
		   ELSE 
			   SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        
        IF @HABILITA_COPAGO = 1
         BEGIN
            UPDATE CIT SET VALORCOPAGO = @VALORCOPAGO  WHERE  CONSECUTIVO = @CONSECUTIVO
            SELECT @MENSAJE_COPAGO = 'Cambio copago, vlr anterior: $'+ STR(@VLR_ANTERIOR) + ' , vlr nuevo: $'+ STR(@VALORCOPAGO) 
         END
        
        IF @HABILITA_COPAGO = 1
            SELECT @MENSAJE_OBS = 'Conf. Llegada. - Obs: ' +@OBSERVACION + '- ' + @MENSAJE_COPAGO
        ELSE
            SELECT @MENSAJE_OBS = 'Conf. Llegada. - Obs: ' +@OBSERVACION

         --SELECT @OBSERVACION
		   SELECT @IDAFILIADO = (SELECT IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)
		   INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
		   VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, @MENSAJE_OBS, 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO, 'LLEGADA' )
        
		END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      SELECT 'OK' OK,  CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Sin Facturar'
     WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') <> '' THEN ' - Cita facturada con el numero ' + CIT.N_FACTURA
     WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Cita con error de facturacion'
     END [ESTADO_FACTURA],   
	 CASE WHEN CIT.GENEROCAJA <> 1  THEN ''
      WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) <> 'A' THEN ' - Recibo sin enviar a caja'
      WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 0 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo sin recaudar'
      WHEN CIT.TIPOCAJA = 'FCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ' - Recibo anulado'
      WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ''
      WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 1 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo recaudado'
      WHEN CIT.TIPOCAJA = 'FCJ' AND NOT EXISTS(SELECT * FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) THEN ' - Recibo con error'
	  ELSE ' - Recibo sin enviar a caja'
      END [ESTADO_REGISTRO],
	  CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
      THEN  CASE  WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0))) 
                  WHEN CIT.TIPOCAJA = 'FCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CIT.DESCUENTO,0)) END [VALORCOPAGO]
	 FROM CIT WHERE CIT.CONSECUTIVO = @CONSECUTIVO
      RETURN
	END

	IF @METODO = 'CANCELAR_LLEGADA'
	BEGIN
	   SELECT @CONSECUTIVO =  CONSECUTIVO, @OBSERVACION = OBSERVACION, @NOAUTORIZACION =  NOAUTORIZACION, @VALORCOPAGO = VALORCOPAGO, @HABILITA_COPAGO = HABILITA_COPAGO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO',
			   NOAUTORIZACION    VARCHAR(50)    '$.NOAUTORIZACION',
			   VALORCOPAGO       DECIMAL(14,2)   '$.VALORCOPAGO',
			   HABILITA_COPAGO   BIT            '$.HABILITA_COPAGO',
			   OBSERVACION       VARCHAR(100)   '$.OBSERVACION')

      SELECT @OBSERVACION = COALESCE(@OBSERVACION,'')
      SELECT @ESTADO_FCJ = ESTADO, @CERRADA_FCJ = CERRADA   FROM FCJ WHERE  NOADMISION = @CONSECUTIVO

      IF (SELECT TIPOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO) = 'FCJ'
      BEGIN
         IF (SELECT COUNT(1) FROM CIT WHERE   CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA = 'FCJ' AND @CERRADA_FCJ <> 1 ) > 0
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'EL Recibo de Caja para esta Cita Ya Fue Traido en la Caja y esta sin Confirmar... Se Debe Regresar Recibo Primero'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
         IF (SELECT COUNT(1) FROM CIT WHERE   CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA = 'FCJ' AND @CERRADA_FCJ = 1 AND @ESTADO_FCJ<> 'A' ) > 0
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Cancelar llegada del paciente , por que ya fue Cancelada en Caja.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
      END

      BEGIN TRY
		   UPDATE CIT SET FECHALLEGA = NULL, USUARIOLLEGA = NULL WHERE  CONSECUTIVO = @CONSECUTIVO
         DELETE FROM TFCJDD WHERE CNSFACJ = (SELECT NORECIBOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
         DELETE FROM TFCJD WHERE CNSFACJ = (SELECT NORECIBOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
         DELETE FROM TFCJ WHERE CNSFACJ = (SELECT NORECIBOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
         UPDATE CIT SET NORECIBOCAJA= '', CODCAJA = '', GENEROCAJA=0, TIPOCAJA= NULL WHERE    CONSECUTIVO = @CONSECUTIVO
      
		   IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
			   SET @CONT = 1
		   ELSE 
			   SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        
		   SELECT @IDAFILIADO = (SELECT IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)
		   INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
		   VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, 'Llegada Cancelada - Obs: '+ @OBSERVACION, 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO, 'CANCELA' )
        
		END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END

      SELECT 'OK' OK,  CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Sin Facturar'
     WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') <> '' THEN ' - Cita facturada con el numero ' + CIT.N_FACTURA
     WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Cita con error de facturacion'
     END [ESTADO_FACTURA],   
	 CASE WHEN CIT.GENEROCAJA <> 1  THEN ''
      WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) <> 'A' THEN ' - Recibo sin enviar a caja'
      WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 0 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo sin recaudar'
      WHEN CIT.TIPOCAJA = 'FCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ' - Recibo anulado'
      WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ''
      WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 1 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo recaudado'
      WHEN CIT.TIPOCAJA = 'FCJ' AND NOT EXISTS(SELECT * FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) THEN ' - Recibo con error'
	  ELSE ' - Recibo sin enviar a caja'
      END [ESTADO_REGISTRO],
	  CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
                                                            CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
      THEN  CASE  WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0))) 
                  WHEN CIT.TIPOCAJA = 'FCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CIT.DESCUENTO,0)) END [VALORCOPAGO]
	 FROM CIT WHERE CIT.CONSECUTIVO = @CONSECUTIVO
      RETURN
	END

    IF @METODO = 'TRAER_COMPROBANTE'
    BEGIN
		PRINT 'INGRESO A TRAER COMPROBANTE'
        SELECT @CONSECUTIVO = JSON_VALUE(@PARAMETROS,'$.CONSECUTIVO')
        SET DATEFIRST 1
		IF NOT EXISTS(SELECT  * FROM TFCJ WHERE  NOADMISION = @CONSECUTIVO AND PROCEDENCIA='CITAS' ) 
		   AND  NOT EXISTS(SELECT  * FROM FCJ WHERE  NOADMISION = @CONSECUTIVO AND PROCEDENCIA='CITAS' ) 
		BEGIN 
		    PRINT 'INGRESA A SPK_PAGOSCAJA_CIT'
			IF EXISTS(SELECT  * FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND GENEROCAJA=1)
			BEGIN
			   UPDATE CIT SET GENEROCAJA=0 WHERE  CONSECUTIVO=@CONSECUTIVO AND GENEROCAJA=1
			END
			IF EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND IDPLAN IN(
			SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')
			UNION ALL 
			SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')
			UNION ALL 
			SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')
			UNION ALL 
			SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')
			UNION ALL 
			SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')
			))
			BEGIN
			SELECT @PART=1
			END
			SET @COMPANIA ='01'
			SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME())
			FROM USUSU WHERE USUARIO=@USUARIO
			SELECT @SEDE=IDSEDE FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO
			EXEC SPK_PAGOSCAJA_CIT @CONSECUTIVO,@SYS_COMPUTERNAME,@COMPANIA,@SEDE,@USUARIO,@PART
		END
      SELECT @PROCEDENCIA = TFCJ.PROCEDENCIA, @IDPLAN = TFCJ.IDPLAN ,@NOADMISION = NOADMISION, @CNSFACJ = CNSFACJ 
		FROM TFCJ WHERE  NOADMISION = @CONSECUTIVO

      SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  FROM  USUSU
               INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
               INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
               WHERE  USUARIO = @USUARIO

        IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 0
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No es Cajero.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 1
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La caja no existe.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 2
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'Caja Cerrada.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 3
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'Cajero diferente al que abrio la caja.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 4
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno asignado.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 5
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El equipo no es caja.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 6
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno para este horario.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        IF ( SELECT  COALESCE(DATO,'') FROM USVGS WHERE  IDVARIABLE = 'IDCJAPERTURACAJA' ) = ''
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'ABRIR CAJA: Variable del Sistema IDCJAPERTURACAJA sin Definición.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        ELSE
        BEGIN
            IF  (SELECT COUNT(*) FROM CPCJ INNER JOIN USVGS ON CPCJ.CODIGO = USVGS.DATO WHERE  IDVARIABLE = 'IDCJAPERTURACAJA') = 0
            BEGIN
                INSERT INTO @TBLERRORES(ERROR) SELECT 'ABRIR CAJA: Concepto de Caja definido en la variable del Sistema IDCJAPERTURACAJA, No existe en la tabla conceptos de caja'
                SELECT 'KO' OK
                SELECT ERROR FROM @TBLERRORES
                RETURN
            END
        END
        IF (SELECT COUNT(*) FROM CAJ WHERE CODCAJA = @CODCAJA AND 1=2) > 0
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No valida aun.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        IF (SELECT COUNT(1)  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) = 0
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turnos configurados.'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        IF (SELECT DATEPART ( dw,getdate())) = 1 
        BEGIN
            IF  (SELECT TUR.LUNES  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0)
            BEGIN
                INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Lunes.'
                SELECT 'KO' OK
                SELECT ERROR FROM @TBLERRORES
                RETURN
            END
            END
        IF (SELECT DATEPART ( dw,getdate())) = 2 
        BEGIN
            IF  (SELECT TUR.MARTES  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) 
            BEGIN
                INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Martes.'
                SELECT 'KO' OK
                SELECT ERROR FROM @TBLERRORES
                RETURN
            END
            END
        IF (SELECT DATEPART ( dw,getdate())) = 3 
        BEGIN
            IF  (SELECT TUR.MIERCOLES  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) 
            BEGIN
                INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Miercoles.'
                SELECT 'KO' OK
                SELECT ERROR FROM @TBLERRORES
                RETURN
            END
            END
        IF (SELECT DATEPART ( dw,getdate())) = 4 
        BEGIN
            IF  (SELECT TUR.JUEVES  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO)IN (NULL, '', 0) 
            BEGIN
                INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Jueves.'
                SELECT 'KO' OK
                SELECT ERROR FROM @TBLERRORES
                RETURN
            END
            END
        IF (SELECT DATEPART ( dw,getdate())) = 5 
        BEGIN
            IF  (SELECT TUR.VIERNES  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) 
            BEGIN
                INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Viernes.'
                SELECT 'KO' OK
                SELECT ERROR FROM @TBLERRORES
                RETURN
            END
            END
        IF (SELECT DATEPART ( dw,getdate())) = 6 
        BEGIN
            IF  (SELECT TUR.SABADO  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO)IN (NULL, '', 0)
            --IF  1= 1
            BEGIN
                INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Sabado.'
                SELECT 'KO' OK
                SELECT ERROR FROM @TBLERRORES
                RETURN
            END
            END
        IF (SELECT DATEPART ( dw,getdate())) = 7 
        BEGIN
            IF  (SELECT TUR.DOMINGO  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) 
            BEGIN
                INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Domingo.'
                SELECT 'KO' OK
                SELECT ERROR FROM @TBLERRORES
                RETURN
            END
            END

        IF @IDPLAN IN (DBO.FNK_VALORVARIABLE('IDPLANPART'),DBO.FNK_VALORVARIABLE('IDPLANPART2'),DBO.FNK_VALORVARIABLE('IDPLANPART3')
                ,DBO.FNK_VALORVARIABLE('IDPLANPART4'),DBO.FNK_VALORVARIABLE('IDPLANPART5'))
        BEGIN
            IF @PROCEDENCIA = 'CITAS'
            BEGIN
                IF (SELECT COUNT(*) FROM FTR WHERE NOREFERENCIA= @NOADMISION AND PROCEDENCIA='CI' AND ESTADO='P') <= 0
                BEGIN
                INSERT INTO @TBLERRORES(ERROR) SELECT 'La Cita No Ha sido Facturada... Es Particular Debe Facturar Primero'
                SELECT 'KO' OK
                SELECT ERROR FROM @TBLERRORES
                RETURN
                END
            END
            IF @PROCEDENCIA='CE'
            BEGIN
                SELECT @CONCEPTO = CASE WHEN DBO.FNK_VALORVARIABLE('IDCJDEPOSITO')= CONCEPTO THEN 'DEPOSITO' ELSE '' END FROM TFCJD WHERE CNSFACJ= @CNSFACJ
                IF @CONCEPTO <>'DEPOSITO'
                BEGIN
                IF (SELECT COUNT(*) FROM FTR WHERE NOREFERENCIA= @NOADMISION AND PROCEDENCIA='CE' AND ESTADO='P') <= 0
                BEGIN
                    INSERT INTO @TBLERRORES(ERROR) SELECT 'La Orden  No Ha sido Facturada... Es Particular Debe Facturar Primero'
                    SELECT 'KO' OK
                    SELECT ERROR FROM @TBLERRORES
                    RETURN
                END
                END
            END
        END
        IF  (SELECT count(1)FROM  USUSU
                INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
                INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
                WHERE  USUARIO = @USUARIO AND CAJ.ABIERTA = 1) <> 1
        BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La caja se encuentra cerrada, revisar'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END

		PRINT 'ANTES DEL TRY'
        BEGIN TRY
			   --PRINT ' EXEC SPK_TRAERECIB_CAJA '''+COALESCE( @CNSFACJ,'SIN DATO 1')+''','''+COALESCE( @CNSACJ,'SIN DATO 2')+''','''+COALESCE(  @SYS_COMPUTERNAME,'SIN DATO 3')+''',''01'','''+COALESCE( @IDSEDE,'SIN DATO 4')+''','''+COALESCE( @USUARIO,'SIN DATO 5')+''' , ''COBRO'''
            EXEC SPK_TRAERECIB_CAJA @CNSFACJ,@CNSACJ, @SYS_COMPUTERNAME, '01',@IDSEDE,@USUARIO , 'COBRO'     
        END TRY
        BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
        END CATCH
        IF(SELECT COUNT(*) FROM @TBLERRORES)>0
        BEGIN
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        SELECT 'OK' OK,  CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Sin Facturar'
        WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') <> '' THEN ' - Cita facturada con el numero ' + CIT.N_FACTURA
        WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Cita con error de facturacion'
        END [ESTADO_FACTURA],   
        CASE WHEN CIT.GENEROCAJA <> 1  THEN ''
        WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND CODCAJA = @CODCAJA) <> 'A' THEN ' - Recibo sin enviar a caja'
        WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND CODCAJA = @CODCAJA) = 0 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO  AND CODCAJA = @CODCAJA)<> 'A' THEN ' - Recibo sin recaudar'
        WHEN CIT.TIPOCAJA = 'FCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND CODCAJA = @CODCAJA) = 'A' THEN ' - Recibo anulado'
        WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND CODCAJA = @CODCAJA) = 'A' THEN ''
        WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND CODCAJA = @CODCAJA) = 1 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO  AND CODCAJA = @CODCAJA)<> 'A' THEN ' - Recibo recaudado'
        WHEN CIT.TIPOCAJA = 'FCJ' AND NOT EXISTS(SELECT * FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND CODCAJA = @CODCAJA) THEN ' - Recibo con error'
        ELSE ' - Recibo sin enviar a caja'
        END [ESTADO_REGISTRO],
        CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
                                                                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
                                                                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
                                                                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
                                                                CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
        THEN  CASE  WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0))) 
                    WHEN CIT.TIPOCAJA = 'FCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CIT.DESCUENTO,0)) END [VALORCOPAGO]
        FROM CIT WHERE CIT.CONSECUTIVO = @CONSECUTIVO
        RETURN
    END

   IF @METODO = 'DEVOLVER_RECIBO'
	BEGIN
		SELECT @CNSFACJ = CNSFACJ, @CODCAJA = CODCAJA, @CNSACJ = CNSACJ, @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)WITH(
		CNSFACJ     VARCHAR(20)    '$.CNSFACJ' ,
		CODCAJA     VARCHAR(20)    '$.CODCAJA' ,
		CNSACJ     VARCHAR(20)    '$.CNSACJ' ,
		CONSECUTIVO     VARCHAR(20)    '$.CONSECUTIVO' 

		)
		SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  FROM  USUSU
			INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
			INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
			WHERE  USUARIO = @USUARIO
	--  SELECT @TOTAL = VALORTOTAL, @N_FACTURA = N_FACTURA, @IDAFILIADO = IDAFILIADO, @PROCEDENCIA = PROCEDENCIA,
		--      @IDTERCERO = IDTERCERO, @ESTADO= ESTADO, @FECHAFCJ = FECHA, @NOADMISION = NOADMISION FROM FCJ WHERE  FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ

		IF COALESCE(@CONSECUTIVO,'') <> ''
			SELECT @CNSFACJ = FCJ.CNSFACJ FROM FCJ WHERE  NOADMISION = @CONSECUTIVO

		IF (SELECT COUNT(*) FROM FCJ WHERE  NOADMISION = @CONSECUTIVO AND CERRADA = 1 ) > 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El recibo se encuentra recaudado.'
		END

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY

			EXEC SPK_DEVUELVERECIB_CAJA @CODCAJA,@CNSFACJ,@COMPANIA,@IDSEDE

			END TRY
			BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE();
			END CATCH
			IF(SELECT COUNT(*) FROM @TBLERRORES)>0
			BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			SELECT 'OK' OK,  CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Sin Facturar'
				WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') <> '' THEN ' - Cita facturada con el numero ' + CIT.N_FACTURA
				WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Cita con error de facturacion'
				END [ESTADO_FACTURA],   
				CASE WHEN CIT.GENEROCAJA <> 1  THEN ''
				WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) <> 'A' THEN ' - Recibo sin enviar a caja'
				WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 0 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo sin recaudar'
				WHEN CIT.TIPOCAJA = 'FCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ' - Recibo anulado'
				WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ''
				WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 1 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo recaudado'
				WHEN CIT.TIPOCAJA = 'FCJ' AND NOT EXISTS(SELECT * FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) THEN ' - Recibo con error'
				ELSE ' - Recibo sin enviar a caja'
				END [ESTADO_REGISTRO],
				CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
				THEN  CASE  WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0))) 
							WHEN CIT.TIPOCAJA = 'FCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CIT.DESCUENTO,0)) END [VALORCOPAGO]
				FROM CIT WHERE CIT.CONSECUTIVO = @CONSECUTIVO
	END
	END
   IF @METODO = 'CONFIRMAR_RECIBO'
	BEGIN
      SELECT @CNSFACJ = CNSFACJ, @CODCAJA = CODCAJA, @CNSACJ = CNSACJ
      FROM OPENJSON(@PARAMETROS)WITH(
	   CNSFACJ     VARCHAR(20)    '$.CNSFACJ' ,
	   CODCAJA     VARCHAR(20)    '$.CODCAJA' ,
	   CNSACJ     VARCHAR(20)    '$.CNSACJ' 
      )
      SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA,@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA) 
      FROM  USUSU INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
                  INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
      WHERE  USUARIO = @USUARIO
      SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  
      FROM  USUSU INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
                  INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
      WHERE  USUARIO = @USUARIO
      SELECT @TOTAL = VALORTOTAL, @N_FACTURA = N_FACTURA, @IDAFILIADO = IDAFILIADO, @PROCEDENCIA = PROCEDENCIA,
             @IDTERCERO = IDTERCERO, @ESTADO= ESTADO, @FECHAFCJ = FECHA, @NOADMISION = NOADMISION 
      FROM FCJ 
      WHERE  FCJ.CODCAJA = @CODCAJA 
      AND FCJ.CNSFACJ = @CNSFACJ

      IF (SELECT COALESCE(SUM (VALOR),0) FROM PCJ WHERE PCJ.CODCAJA = @CODCAJA AND PCJ.CNSFACJ = @CNSFACJ ) = 0
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'El recibo no tiene detalles de pago.'
      END
      IF  (SELECT COALESCE(SUM (VALOR),0) FROM PCJ WHERE PCJ.CODCAJA = @CODCAJA AND PCJ.CNSFACJ = @CNSFACJ ) > 0
      BEGIN
         IF (SELECT COALESCE(SUM (VALOR),0) FROM PCJ WHERE PCJ.CODCAJA = @CODCAJA AND PCJ.CNSFACJ = @CNSFACJ ) <>  @TOTAL
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'El valor del detalle de pago, es diferente al valor del Recibo'
         END
      END
      IF @FECHAFCJ IS NULL
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'La fecha del recibo no Valida'
      END
      IF @FECHAFCJ > GETDATE()
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'La fecha del recibo es mayor a la fecha actual'
      END
      IF NOT EXISTS(SELECT * FROM PRI WHERE FECHA_INI<=@FECHAFCJ AND FECHA_FIN+1>@FECHAFCJ AND COALESCE(CERRADO,0)=0)
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'El periodo contable esta cerrado '+COALESCE(CONVERT(VARCHAR,@FECHAFCJ,103),'NO TENGO FECHA')
      END
      IF (SELECT CERRADA FROM FCJ WHERE FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ ) = 1
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'El recibo ya se encuentra confirmado'
      END
      IF (SELECT ESTADO FROM FCJ WHERE FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ ) = 'D'
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Confirmar un Recibo Desecho.'
      END
      IF (SELECT ESTADO FROM FCJ WHERE FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ ) = 'A'
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Confirmar un Recibo Anulado.'
      END
      IF @TOTAL<=0
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Confirmar un Recibo Con Valor Cero (0).'
      END
      IF (SELECT COUNT(1) FROM MCP WHERE PROCEDENCIA='CAJA' AND   REFERENCIA2 = @CODCAJA AND REFERENCIA1 = @CNSFACJ   AND COALESCE(ANULADO,0)=0) <> 0
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'El recibo ya se encuentra contabilizado'
      END
      IF @PROCEDENCIA = 'CITAS'
      BEGIN
         IF (SELECT COUNT(1)  FROM CIT WHERE  CONSECUTIVO = @NOADMISION AND IDAFILIADO = @IDAFILIADO    ) = 0
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita fue cancelada, no se puede confirmar.'
         END
      END
      IF @PROCEDENCIA = 'CE'
      BEGIN
         IF (SELECT ESTADO  FROM AUT WHERE  NOAUT  = @NOADMISION AND  @PROCEDENCIA = 'CE' ) = 'Anulada'
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita fue anulada, no se puede confirmar.'
         END
      END
      IF (SELECT COUNT(1) FROM  ACJ WHERE  CODCAJA = @CODCAJA AND ABIERTA = 1 ) >1
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'La caja se encuentra abierta mas de una vez.'
      END
      IF (SELECT COUNT(1) FROM  ACJ WHERE  CODCAJA = @CODCAJA AND ABIERTA = 1 ) = 0
      BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'La caja no se encuentra abierta.'
      END

      IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
      ELSE
      BEGIN --@CONSECUTIVO FCJ
         BEGIN TRY
			SELECT @IDSEDE = COALESCE((SELECT TOP 1 CIT.IDSEDE FROM FCJ INNER JOIN CIT ON FCJ.NOADMISION = CIT.CONSECUTIVO WHERE  CNSFACJ = @CNSFACJ),'01')
            IF @CNSACJ <> (SELECT CNSACJ FROM  ACJ WHERE  CODCAJA = @CODCAJA AND ABIERTA = 1)
            UPDATE FCJ SET CNSACJ = (SELECT CNSACJ FROM  ACJ WHERE  CODCAJA = @CODCAJA AND ABIERTA = 1) WHERE FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ  
		
            EXEC SPK_CIERRERECIBO_CAJA @CODCAJA, @CNSFACJ, @COMPANIA, @IDSEDE, @USUARIO, @SYS_COMPUTERNAME
            EXEC SPK_ACTUALIZA_SALDO_BANCO @CNSFACJ, @CODCAJA
            EXEC SPK_NC_CONTAB_CAJA_ING @CNSFACJ, @CODCAJA, @USUARIO, @SYS_COMPUTERNAME, @COMPANIA, @IDSEDE, @NROCOMPROBANTE

         END TRY
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE();
         END CATCH
         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
         SELECT 'OK' OK,  CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Sin Facturar'
			 WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') <> '' THEN ' - Cita facturada con el numero ' + CIT.N_FACTURA
			 WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Cita con error de facturacion'
			 END [ESTADO_FACTURA],   
			 CASE WHEN CIT.GENEROCAJA <> 1  THEN ''
			  WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) <> 'A' THEN ' - Recibo sin enviar a caja'
			  WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) = 0 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA)<> 'A' THEN ' - Recibo sin recaudar'
			  WHEN CIT.TIPOCAJA = 'FCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) = 'A' THEN ' - Recibo anulado'
			  WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) = 'A' THEN ''
			  WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) = 1 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA)<> 'A' THEN ' - Recibo recaudado'
			  WHEN CIT.TIPOCAJA = 'FCJ' AND NOT EXISTS(SELECT * FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND FCJ.CODCAJA = @CODCAJA) THEN ' - Recibo con error'
			  ELSE ' - Recibo sin enviar a caja'
			  END [ESTADO_REGISTRO],
			  CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
			  THEN  CASE  WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0))) 
						  WHEN CIT.TIPOCAJA = 'FCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CIT.DESCUENTO,0)) END [VALORCOPAGO]
			 FROM CIT WHERE CIT.CONSECUTIVO = (SELECT NOADMISION  FROM FCJ WHERE FCJ.CODCAJA = @CODCAJA AND FCJ.CNSFACJ = @CNSFACJ )
    END
   END
   --query3
   IF @METODO = 'FACTURAR_CITA'
	BEGIN
	   SELECT @CONSECUTIVO=CONSECUTIVO FROM OPENJSON(@PARAMETROS)
	   WITH( CONSECUTIVO			VARCHAR(20)		'$.CONSECUTIVO'
		)

      SELECT @FECHAFACT = JSON_VALUE(@PARAMETROS , '$.FECHAFACT')   

		SELECT @CUMPLIDA = CUMPLIDA,@TIPOCAJA=TIPOCAJA,@NORECIBOCAJA=NORECIBOCAJA,@IDAFILIADO=IDAFILIADO,@IDSERVICIO=IDSERVICIO,
		       @VALORTOTAL=VALORTOTAL,@VLRCOPAGO=VALORCOPAGO,@FECHALLEGA=FECHALLEGA,@FACTURABLE=FACTURABLE,@SEDE=IDSEDE, @FACTURADA = FACTURADA,
		       @IDPLAN= IDPLAN,  @PART = CASE WHEN CIT.IDPLAN  IN (SELECT DATO FROM USVGS 
					                                                  WHERE IDVARIABLE IN ('IDPLANPART', 'IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5' ) 
                                                                ) THEN 1 
                                            ELSE 0 
                                       END 
		FROM   CIT 
		WHERE  CONSECUTIVO = @CONSECUTIVO 
		
		SELECT @FACIND=PPT.PFACTURARIND,@TTEC=COALESCE(PPT.TIPOTERCONTABLE,'NO')
		FROM PPT INNER JOIN CIT ON PPT.IDTERCERO=CIT.IDTERCEROCA AND PPT.IDPLAN=CIT.IDPLAN
		WHERE CIT.CONSECUTIVO=@CONSECUTIVO

      IF COALESCE(@FACTURADA,0)=1
		BEGIN
         PRINT 'La cita ya esta Facturada'  
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La cita ya esta Facturada'            
		END
		IF COALESCE(@VALORTOTAL,0)<=0
		BEGIN
         PRINT 'Valor de la cita menor o igual a cero'  
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Valor de la cita menor o igual a cero'            
		END
      IF @CUMPLIDA <> 1
      BEGIN
		   IF @FECHALLEGA IS NULL 
		   BEGIN 
            PRINT 'Paciente no ha llegado'
			   INSERT INTO @TBLERRORES(ERROR)
			   SELECT 'Paciente no ha llegado'
		   END
      END
		IF COALESCE(@FACTURABLE,0)=0
		BEGIN 
      	PRINT 'Cita marcada como no facturable'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Cita marcada como no facturable'
		END
		IF COALESCE(@FACIND,0)=0
		BEGIN 
         PRINT 'Plan pertenece a un contrato que se factura masivamente'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Plan pertenece a un contrato que se factura masivamente'
		END
		IF NOT EXISTS(SELECT * FROM TTEC WHERE TIPO=@TTEC)
		BEGIN 
         PRINT 'Inconsistencia Contable Tipo de Tercero no existe'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Inconsistencia Contable Tipo de Tercero no existe'
		END
		IF   DBO.FNK_VALORVARIABLE('VALRECA_COPA_FACTU')='SI' AND COALESCE(@TIPOCAJA,'')<>'FCJ' AND COALESCE(@VLRCOPAGO,0)>0  AND COALESCE(@PART,0)=0
		
		BEGIN
         PRINT 'El valor del Copago no ha sido Recaudado en caja'  
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'El valor del Copago no ha sido Recaudado en caja'         
		END
		--ojo
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
            PRINT 'SIN ERRORES'
			   DECLARE @DPR VARCHAR(20)
			   SELECT @DPR=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')
            IF COALESCE(@FECHAFACT,'') = ''  --JEDM 20240209   SI VIENE CON FECHA FACTURA O NO
			      EXEC SPK_FACTURACE_N @CONSECUTIVO, @DPR,'01',@SEDE,@USUARIO,'', '', '', '', '','CI','','FALSE', NULL,  ''
            ELSE
               EXEC SPK_FACTURACE_N @CONSECUTIVO, @DPR,'01',@SEDE,@USUARIO,'', '', '', '', '','CI','','FALSE', NULL, @FECHAFACT 

			   IF NOT EXISTS (SELECT * FROM TFCJ WHERE NOADMISION = @CONSECUTIVO)
			   BEGIN
				   EXEC SPK_PAGOSCAJA_CIT @CONSECUTIVO, @SYS_COMPUTERNAME, '01',@SEDE, @USUARIO, @PART
			   END

			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK,  CASE WHEN CIT.FACTURADA = 0 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Sin Facturar'
			 WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') <> '' THEN ' - Cita facturada con el numero ' + CIT.N_FACTURA
			 WHEN CIT.FACTURADA = 1 AND COALESCE(CIT.N_FACTURA,'') = '' THEN ' - Cita con error de facturacion'
			 END [ESTADO_FACTURA],   
			 CASE WHEN CIT.GENEROCAJA <> 1  THEN ''
			  WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) <> 'A' THEN ' - Recibo sin enviar a caja'
			  WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 0 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo sin recaudar'
			  WHEN CIT.TIPOCAJA = 'FCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ' - Recibo anulado'
			  WHEN CIT.TIPOCAJA = 'TFCJ'  AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 'A' THEN ''
			  WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) = 1 AND (SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 'A' THEN ' - Recibo recaudado'
			  WHEN CIT.TIPOCAJA = 'FCJ' AND NOT EXISTS(SELECT * FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO) THEN ' - Recibo con error'
			  ELSE ' - Recibo sin enviar a caja'
			  END [ESTADO_REGISTRO],
			  CASE WHEN CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')) OR
																	CIT.IDPLAN = (SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')) 
			  THEN  CASE  WHEN CIT.TIPOCAJA = 'TFCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0))) 
						  WHEN CIT.TIPOCAJA = 'FCJ' THEN  ((COALESCE(CIT.VALORTOTAL,0))-(COALESCE(CIT.DESCUENTO,0)))  END ELSE (CIT.VALORCOPAGO-COALESCE(CIT.DESCUENTO,0)) END [VALORCOPAGO]
			 FROM CIT WHERE CIT.CONSECUTIVO = @CONSECUTIVO
		END 
	END

	IF @METODO = 'IMPRIMIR_AGENDA' 
	BEGIN
	   SELECT @FECHACITA =  FECHACITA, @IDEMEDICA = IDEMEDICA, @IDMEDICO = IDMEDICO, @SINFILTROMEDICO = SINFILTROMEDICO, @ESTADO = ESTADO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (FECHACITA			DATE			'$.FECHACITA',
            IDEMEDICA			VARCHAR(20)		'$.IDEMEDICA',
            IDMEDICO			VARCHAR(20)		'$.IDMEDICO',
            SINFILTROMEDICO     BIT				'$.SINFILTROMEDICO',
            ESTADO				VARCHAR(20)		'$.ESTADO'
      )
      SELECT  'OK'OK,   CONVERT(DATE,@FECHACITA) FECHACITA
      IF @SINFILTROMEDICO = 0
      BEGIN
         SELECT 'OK'OK,CIT.CUMPLIDA,  CIT.FECHA , CIT.CONSECUTIVO, MED.IDMEDICO, MED.NOMBRE, MES.IDEMEDICA, MES.DESCRIPCION [ESPECIALDIAD], CIT.NOAUTORIZACION, CIT.TIPOCITA, CIT.MODALIDAD,CIT.CLASEORDEN, CIT.OBSERVACIONES, CIT.USUARIO, CIT.IDPESPECIAL
            , MPE.DESCESPECIAL, AFI.IDAFILIADO, AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.TELEFONORES, AFI.CELULAR, AFI.DIRECCION, AFI.EMAIL,SER.IDSERVICIO, SER.DESCSERVICIO, TER.IDTERCERO, TER.RAZONSOCIAL
            ,PLN.IDPLAN, PLN.DESCPLAN, SED.IDSEDE, SED.DESCRIPCION [SEDE_DESC]
            ,CONVERT(varchar,CIT.FECHA,104) FECHAFORMATO, CONVERT (DATETIME ,CIT.FECHA) FECHACOMPLETA, REPLACE(REPLACE(RIGHT(CONVERT(VARCHAR(25), CIT.FECHA, 100), 7), 'AM', ' a.m.'), 'PM', ' p.m.') HORA
            , Format(CIT.FECHA,'dd/MM/yyyy hh:mm tt') AS FECHA_HORARIO,   CONVERT(varchar,CIT.FECHA,104) FECHACITA 
         FROM CIT 
            INNER JOIN AFI ON CIT.IDAFILIADO = AFI.IDAFILIADO
            INNER JOIN TER ON CIT.IDTERCEROCA = TER.IDTERCERO
            INNER JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
            INNER JOIN SED ON CIT.IDSEDE = SED.IDSEDE
            INNER JOIN SER ON CIT.IDSERVICIO = SER.IDSERVICIO
            INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
            INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA
            LEFT JOIN MPE ON CIT.IDPESPECIAL = MPE.IDPESPECIAL
         WHERE CONVERT(DATE,CIT.FECHA) = CONVERT(DATE,@FECHACITA) AND CIT.IDEMEDICA = @IDEMEDICA AND CIT.IDMEDICO = @IDMEDICO AND CIT.IDAFILIADO IS NOT NULL
		 AND COALESCE(CIT.CUMPLIDA,0) = 
			CASE	WHEN @ESTADO = 'Todas' THEN COALESCE(CIT.CUMPLIDA,0)
					WHEN @ESTADO = 'Cumplidas' THEN  1
					WHEN @ESTADO = 'Pendientes' THEN  0
			END
         ORDER BY  CIT.FECHA   ASC
	
      END
	 
      IF @SINFILTROMEDICO = 1
      BEGIN
         SELECT 'OK'OK, CIT.CUMPLIDA, CIT.FECHA , CIT.CONSECUTIVO, MED.IDMEDICO, MED.NOMBRE, MES.IDEMEDICA, MES.DESCRIPCION [ESPECIALDIAD], CIT.NOAUTORIZACION, CIT.TIPOCITA, CIT.MODALIDAD,CIT.CLASEORDEN, CIT.OBSERVACIONES, CIT.USUARIO, CIT.IDPESPECIAL
            , MPE.DESCESPECIAL, AFI.IDAFILIADO, AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.TELEFONORES, AFI.CELULAR, AFI.DIRECCION, AFI.EMAIL,SER.IDSERVICIO, SER.DESCSERVICIO, TER.IDTERCERO, TER.RAZONSOCIAL
            ,PLN.IDPLAN, PLN.DESCPLAN, SED.IDSEDE, SED.DESCRIPCION [SEDE_DESC]
            ,CONVERT(varchar,CIT.FECHA,104) FECHAFORMATO, CONVERT (DATETIME ,CIT.FECHA) FECHACOMPLETA, REPLACE(REPLACE(RIGHT(CONVERT(VARCHAR(25), CIT.FECHA, 100), 7), 'AM', ' a.m.'), 'PM', ' p.m.') HORA
            , Format(CIT.FECHA,'dd/MM/yyyy hh:mm tt') AS FECHA_HORARIO,   CONVERT(varchar,CIT.FECHA,104) FECHACITA  
         FROM CIT
            INNER JOIN AFI ON CIT.IDAFILIADO = AFI.IDAFILIADO
            INNER JOIN TER ON CIT.IDTERCEROCA = TER.IDTERCERO
            INNER JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
            INNER JOIN SED ON CIT.IDSEDE = SED.IDSEDE
            INNER JOIN SER ON CIT.IDSERVICIO = SER.IDSERVICIO
            INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
            INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA
            LEFT JOIN MPE ON CIT.IDPESPECIAL = MPE.IDPESPECIAL
         WHERE CONVERT(DATE,CIT.FECHA) = CONVERT(DATE,@FECHACITA) AND CIT.IDEMEDICA = @IDEMEDICA  AND CIT.IDAFILIADO IS NOT NULL
		 AND COALESCE(CIT.CUMPLIDA,0) = 
			CASE	WHEN @ESTADO = 'Todas' THEN COALESCE(CIT.CUMPLIDA,0)
					WHEN @ESTADO = 'Cumplidas' THEN  1
					WHEN @ESTADO = 'Pendientes' THEN  0
					WHEN @ESTADO = 'No Asistio' THEN  2
			END
         ORDER BY MED.NOMBRE, CIT.FECHA   ASC
      END
	END
	IF @METODO = 'IMPRIMIR_AGENDA_ONCO' 
	BEGIN
	   SELECT @FECHACITA =  FECHACITA, @IDEMEDICA = IDEMEDICA, @IDMEDICO = IDMEDICO, @SINFILTROMEDICO = SINFILTROMEDICO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (FECHACITA            DATE           '$.FECHACITA',
            IDEMEDICA            VARCHAR(20)    '$.IDEMEDICA',
            IDMEDICO             VARCHAR(20)    '$.IDMEDICO',
            SINFILTROMEDICO      BIT            '$.SINFILTROMEDICO'
      )
      SELECT  'OK'OK,   CONVERT(DATE,@FECHACITA) FECHACITA
      IF @SINFILTROMEDICO = 0
      BEGIN
         SELECT 'OK'OK,CIT.CONSECUTIVO, CIT.FECHA, CIT.IDSERVICIO, SER.DESCSERVICIO, AFI.IDAFILIADO, AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.TELEFONORES
         , DBO.FNK_ESTADO_CITA(CIT.CONSECUTIVO)[ESTADO_CITA] , CIT.IDTERCEROCA, TER.RAZONSOCIAL, CIT.IDPLAN, PLN.DESCPLAN, CIT.IDMEDICO, MED.NOMBRE
         ,CONVERT(varchar,CIT.FECHA,104) FECHAFORMATO, CONVERT (DATETIME ,CIT.FECHA) FECHACOMPLETA, REPLACE(REPLACE(RIGHT(CONVERT(VARCHAR(25), CIT.FECHA, 100), 7), 'AM', ' a.m.'), 'PM', ' p.m.') HORA
         , Format(CIT.FECHA,'dd/MM/yyyy hh:mm tt') AS FECHA_HORARIO,   CONVERT(varchar,CIT.FECHA,104) FECHACITA, MES.IDEMEDICA, MES.DESCRIPCION
         FROM CIT
         INNER JOIN AFI ON CIT.IDAFILIADO = AFI.IDAFILIADO
         INNER JOIN TER ON CIT.IDTERCEROCA = TER.IDTERCERO
         INNER JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
         INNER JOIN SER ON CIT.IDSERVICIO = SER.IDSERVICIO
         INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
         INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA
         WHERE CONVERT(DATE,CIT.FECHA) = CONVERT(DATE,@FECHACITA) AND CIT.IDEMEDICA = @IDEMEDICA AND CIT.IDMEDICO = @IDMEDICO AND CIT.IDAFILIADO IS NOT NULL
         ORDER BY  CIT.FECHA   ASC
      END
      IF @SINFILTROMEDICO = 1
      BEGIN
         SELECT 'OK'OK,CIT.CONSECUTIVO, CIT.FECHA, CIT.IDSERVICIO, SER.DESCSERVICIO, AFI.IDAFILIADO, AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.TELEFONORES
         , DBO.FNK_ESTADO_CITA(CIT.CONSECUTIVO)[ESTADO_CITA] , CIT.IDTERCEROCA, TER.RAZONSOCIAL, CIT.IDPLAN, PLN.DESCPLAN, CIT.IDMEDICO, MED.NOMBRE
         ,CONVERT(varchar,CIT.FECHA,104) FECHAFORMATO, CONVERT (DATETIME ,CIT.FECHA) FECHACOMPLETA, REPLACE(REPLACE(RIGHT(CONVERT(VARCHAR(25), CIT.FECHA, 100), 7), 'AM', ' a.m.'), 'PM', ' p.m.') HORA
         , Format(CIT.FECHA,'dd/MM/yyyy hh:mm tt') AS FECHA_HORARIO,   CONVERT(varchar,CIT.FECHA,104) FECHACITA, MES.IDEMEDICA, MES.DESCRIPCION
         FROM CIT
         INNER JOIN AFI ON CIT.IDAFILIADO = AFI.IDAFILIADO
         INNER JOIN TER ON CIT.IDTERCEROCA = TER.IDTERCERO
         INNER JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
         INNER JOIN SER ON CIT.IDSERVICIO = SER.IDSERVICIO
         INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
         INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA
         WHERE CONVERT(DATE,CIT.FECHA) = CONVERT(DATE,@FECHACITA) AND CIT.IDEMEDICA = @IDEMEDICA  AND CIT.IDAFILIADO IS NOT NULL
         ORDER BY MED.NOMBRE, CIT.FECHA   ASC
         END
	END

	IF @METODO = 'MOSTRAR_DISPONIBILIDAD_PORHORARIO'
	BEGIN
		SELECT @CONSECUTIVOHCA = CONSECUTIVOHCA
			,@FECHA1 = FECHA
			,@AM = AM
		FROM OPENJSON(@PARAMETROS)
		WITH(
			CONSECUTIVOHCA  VARCHAR(20) '$.CONSECUTIVOHCA'
			,FECHA  DATE '$.FECHA'
			,AM  BIT '$.AM'
		)

		SELECT @IDMEDICO = IDMEDICO FROM USUSU WHERE USUARIO=@USUARIO

		SELECT @IDEMEDICA = IDEMEDICA FROM MED WHERE IDMEDICO=@IDMEDICO

		SELECT @IDSERVICIO = IDSERVICIO_CITACONTROL FROM MES WHERE IDEMEDICA = @IDEMEDICA

		SELECT @IDAREA = IDAREA, @CCOSTO = CCOSTO FROM UBEQ WHERE SYS_ComputerName=@SYS_COMPUTERNAME

		SELECT 'OK' AS OK, @FECHA1 AS FECHA, @AM AS AM


		SELECT CONSECUTIVO, LEFT(CONVERT(VARCHAR,FECHA,108),5) AS HORA
		FROM CIT 
		WHERE IDMEDICO = @IDMEDICO 
		AND LEFT(TIPOCITA,3) IN ('Con', 'Cit', 'Mod')
		AND CONVERT(DATE, FECHA) = CONVERT(DATE, @FECHA1) 
		AND COALESCE(IDAFILIADO, '')=''
		AND DATEPART(HOUR, FECHA) BETWEEN CASE WHEN @AM = 1 THEN 7 ELSE 13 END AND CASE WHEN @AM = 1 THEN 12 ELSE 18 END
		AND NOT EXISTS( -- Fechas bloqueadas
			SELECT 1 
			FROM MAGPRP 
			WHERE MAGPRP.IDMEDICO = CIT.IDMEDICO 
			AND CIT.FECHA BETWEEN MAGPRP.FECHAINICIAL AND MAGPRP.FECHAFINAL 
		)

	END

	IF @METODO = 'AGENDAR_CITA_CONTROL'
	BEGIN

		
        
		SELECT @CONSECUTIVOHCA = CONSECUTIVOHCA
			,@FECHA1 = FECHA
			,@AM = AM
			,@TELEFONOAVISO = TELEFONOAVISO
			,@CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH(
			CONSECUTIVOHCA  VARCHAR(20) '$.CONSECUTIVOHCA'
			,CONSECUTIVO  VARCHAR(20) '$.CONSECUTIVO'
			,FECHA  DATE '$.FECHA'
			,AM  BIT '$.AM'
			,TELEFONOAVISO  VARCHAR(20) '$.TELEFONOAVISO'
		)

		SELECT @IDMEDICO = IDMEDICO FROM USUSU WHERE USUARIO=@USUARIO

		SELECT @IDEMEDICA = IDEMEDICA FROM MED WHERE IDMEDICO=@IDMEDICO

		SELECT @IDSERVICIO = IDSERVICIO_CITACONTROL FROM MES WHERE IDEMEDICA = @IDEMEDICA

		SELECT @IDAREA = IDAREA, @CCOSTO = CCOSTO FROM UBEQ WHERE SYS_ComputerName=@SYS_COMPUTERNAME

		SELECT @IDAFILIADO = IDAFILIADO
			,@CONSECUTIVOANT = CONSECUTIVOCIT
		FROM HCA
		WHERE CONSECUTIVO = @CONSECUTIVOHCA

		INSERT INTO @TBLERRORES(ERROR)
		SELECT 'El identificador del paciente es obligatorio para continuar'
		WHERE @IDAFILIADO IS NULL
		UNION ALL
		SELECT 'La fecha de la cita es obligatoria para continuar'
		WHERE @FECHA1 IS NULL
		UNION ALL 
		SELECT 'El identificador del médico es obligatorio para continuar. Usted no tiene un profesional asignado en la ficha de su usuario, por favor comuníquese con el departamento de tecnología.'
		WHERE @IDMEDICO IS NULL
		UNION ALL 
		SELECT 'La especialidad del médico es obligatoria para continuar'
		WHERE @IDEMEDICA IS NULL
		UNION ALL
		SELECT 'La especialidad médica no tiene un codigo cups para citas de control configurado. Por favor comuníquese con el departamento de tecnología.'
		WHERE @IDSERVICIO IS NULL

		-- UNION ALL
		-- SELECT 'ESTO ES UNA PRUEBA DE DESARROLLO'

		IF NOT EXISTS (SELECT 1 FROM @TBLERRORES)
		BEGIN TRY            
            IF COALESCE(@CONSECUTIVO, '') = ''
				SELECT TOP 1 @CONSECUTIVO = CONSECUTIVO 
				FROM CIT 
				WHERE IDMEDICO = @IDMEDICO 
				--AND TIPOCITA IN ('Control', 'Cita', 'Cit', 'Mode')
				AND LEFT(TIPOCITA,3) IN ('Con', 'Cit', 'Mod')
				AND CONVERT(DATE, FECHA) = CONVERT(DATE, @FECHA1) 
				AND COALESCE(IDAFILIADO, '')=''
				AND DATEPART(HOUR, FECHA) BETWEEN CASE WHEN @AM = 1 THEN 7 ELSE 13 END AND CASE WHEN @AM = 1 THEN 12 ELSE 18 END
				AND NOT EXISTS( -- Fechas bloqueadas
					SELECT 1 
					FROM MAGPRP 
					WHERE MAGPRP.IDMEDICO = CIT.IDMEDICO 
					AND CIT.FECHA BETWEEN MAGPRP.FECHAINICIAL AND MAGPRP.FECHAFINAL 
				)

			IF @CONSECUTIVO IS NULL
			BEGIN
				SELECT TOP 1 @CONSECUTIVO = CONSECUTIVO
				FROM CIT
				WHERE IDMEDICO = @IDMEDICO 
				--AND TIPOCITA IN ('Control', 'Cita', 'Cit', 'Mode')
				AND LEFT(TIPOCITA,3) IN ('Con', 'Cit', 'Mod')
				AND COALESCE(IDAFILIADO, '')=''
				AND CONVERT(DATE, FECHA) = CONVERT(DATE, @FECHA1) 
				AND NOT EXISTS( -- Fechas bloqueadas
					SELECT 1 
					FROM MAGPRP 
					WHERE MAGPRP.IDMEDICO = CIT.IDMEDICO 
					AND CIT.FECHA BETWEEN MAGPRP.FECHAINICIAL AND MAGPRP.FECHAFINAL 
				)
			END

			IF @CONSECUTIVO IS NULL
			BEGIN
				SELECT 'KO' AS OK
				SELECT 'No hay citas disponibles para el día seleccionado, por favor intente con otro día' AS ERROR
				RETURN
			END

			SELECT @VIRTUAL = CASE WHEN MODALIDAD = 'Virtual' THEN 1 ELSE 0 END
				,@FECHAFINAL = FECHA
			FROM CIT
			WHERE CONSECUTIVO = @CONSECUTIVO

			
			IF COALESCE(@CONSECUTIVOANT,'') <> ''
			BEGIN
				SELECT @CODUNG = @CODUNG
					,@IDPESPECIAL = IDPESPECIAL
				FROM CIT WHERE CONSECUTIVO = @CONSECUTIVOANT
			END

			IF COALESCE(@CODUNG, '') = ''
				SELECT @CODUNG = CODUNG FROM SED WHERE IDSEDE = @IDSEDE
            
			SELECT @CODUNG = COALESCE(@CODUNG, '')
			SELECT @IDPESPECIAL = COALESCE(@IDPESPECIAL, '')
			SELECT @IDAREA = COALESCE(@IDAREA, '')
			SELECT @CCOSTO = COALESCE(@CCOSTO, '')
			SELECT @TELEFONOAVISO = COALESCE(@TELEFONOAVISO, '')
			SELECT @IDSERVICIO = COALESCE(@IDSERVICIO, '')
			SELECT @USUARIO = COALESCE(@USUARIO, '')
			SELECT @IDEMEDICA = COALESCE(@IDEMEDICA, '')

			DECLARE @JSON_COMMAND NVARCHAR(MAX)
			SELECT @JSON_COMMAND = '{"MODELO": "CIT_COL_2","METODO": "ASIGNAR","PARAMETROS": {"IDAFILIADO": "'+@IDAFILIADO+'","CONSECUTIVO": "'+@CONSECUTIVO+'","ESPECIALIDAD": "'+@IDEMEDICA+'","SERVICIO": "'+@IDSERVICIO+'","MINADICIONALES": 0,"IDAREA": "'+@IDAREA+'","CCOSTO": "'
			+@CCOSTO+'","VIRTUAL": '+CASE WHEN @VIRTUAL = 1 THEN 'true' ELSE 'false' END+',"FDESEADA": "'+REPLACE(CONVERT(VARCHAR,@FECHAFINAL, 111),'/','-')+'","HDESEADA": "'+LEFT(CONVERT(VARCHAR,@FECHAFINAL, 108),5)+'","TIPOCITA": "Control","TIPOSOLICITUD": "Personal","SOAT": false,"UNIDNEGO": "'+@CODUNG+'","CLASEORDEN": "Modelo","PROGRAMA": "'
			+@IDPESPECIAL+'","ALTOCOSTO": "No","URGENCIA": false,"PARTICULAR": false,"TIEMPO_PARTICULAR": 0, "TELEFONOAVISO": "'+@TELEFONOAVISO+'","NOMBREACOM": "","TELEFONOACOM": "","PARENTESCOACOM": "","NOMBREPRESPON": "","TELEFONORESPON": "","PARENTESCORESPON": "","CCONTRATANTE": false,"AQUIENCOBRO": "","NOAUTORIZACION": "","COPAGOPROPIO": 0,"VALORCOPAGO": 0,"TIPOCOPAGO": "C","VALORTOTAL": 0,"NOCOBRAR": "","OBSERVACIONES": "","MEDTRATANTEDIFERENTE": 0,"RAZONMEDDIFERENTE": "","EMBARAZO": ""},"USUARIO": "'+@USUARIO+'"}'

			--PRINT @JSON_COMMAND

			EXEC SPQ_JSON @JSON_COMMAND

			IF COL_LENGTH('CIT', 'CNSHCA_CITACONTROL') IS NOT NULL
			BEGIN
				UPDATE CIT SET 
					CNSHCA_CITACONTROL = @CONSECUTIVOHCA 
					,TIPOCITA = 'Control' -- EZERPA 15.12.2023 Indicación del Ing. JEDM cambiar el tipo de la cita a Control
				WHERE CONSECUTIVO = @CONSECUTIVO
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
        

		SELECT 'OK' AS OK, @CONSECUTIVO AS CONSECUTIVO, @IDAFILIADO AS IDAFILIADO, @FECHAFINAL AS FECHA
        
	END

	IF @METODO = 'AUTOCONFIRMAR_CIT'
    BEGIN
		DECLARE @PROCESO VARCHAR(200)

        SELECT @CONSECUTIVO = CONSECUTIVO
            ,@PROCESO = PROCESO
            ,@OBSERVACION = OBSERVACION
		FROM OPENJSON(@PARAMETROS)
		WITH(
            CONSECUTIVO  VARCHAR(20) '$.CONSECUTIVO'
            ,PROCESO  VARCHAR(200) '$.PROCESO'
            ,OBSERVACION  VARCHAR(MAX) '$.OBSERVACION'
        )

       IF @PROCESO = 'CONFIRMAR' AND EXISTS (SELECT * FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO AND CONFIRMADA = 1)
       BEGIN
         INSERT INTO @TBLERRORES(ERROR) SELECT 'La Cita ya se encuentra Confirmada.'
       END
	   IF @PROCESO = 'CANCELAR' AND (SELECT CUMPLIDA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO) = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita ya fue atendida.'
		END
        IF NOT EXISTS (SELECT 1 FROM @TBLERRORES)
        BEGIN TRY            
            
			
			IF @PROCESO = 'LECTURA'
			BEGIN
				SELECT 
					CONSECUTIVO
					,FECHA
					,CIT.IDMEDICO
					,MED.NOMBRE AS NOMBREMEDICO
					,COALESCE(CIT.IDEMEDICA, MED.IDEMEDICA) AS IDEMEDICA
					,MES.DESCRIPCION AS ESPECIALIDAD
					,CIT.IDSERVICIO
					,SER.DESCSERVICIO
					,AFI.NOMBREAFI
					,AFI.TIPO_DOC
					,AFI.DOCIDAFILIADO
					, FDESCRITA=CONCAT(DATENAME(dw, CIT.FECHA),' ',DATEPART(DAY,CIT.FECHA),' de ', DATENAME(m,CIT.FECHA), ' a las ', LEFT(CONVERT(VARCHAR,CIT.FECHA,108),5))
				INTO #CIT
				FROM CIT 
				LEFT JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
				LEFT JOIN SER ON SER.IDSERVICIO=CIT.IDSERVICIO
				LEFT JOIN MES ON MES.IDEMEDICA = COALESCE(CIT.IDEMEDICA, MED.IDEMEDICA)
				LEFT JOIN AFI ON AFI.IDAFILIADO = CIT.IDAFILIADO
				WHERE CONSECUTIVO=@CONSECUTIVO
			END

			IF @PROCESO = 'CANCELAR'
			BEGIN
				PRINT  'TODO CANCELAR'
				SELECT CONSECUTIVO ,FECHA ,CIT.IDMEDICO ,MED.NOMBRE AS NOMBREMEDICO ,COALESCE(CIT.IDEMEDICA, MED.IDEMEDICA) AS IDEMEDICA ,MES.DESCRIPCION AS ESPECIALIDAD 
						,CIT.IDSERVICIO ,SER.DESCSERVICIO ,AFI.NOMBREAFI ,AFI.TIPO_DOC ,AFI.DOCIDAFILIADO, CIT.TIPOCITA, CIT.TIPOSOLICITUD, CIT.ATENCION, CIT.IDSEDE, CIT.DISPONIBILIDAD
						,CIT.CLASEORDEN, CIT.WEB, CIT.USUARIO, CIT.ESPROGRAMAS, CIT.MODELOS, CIT.MODALIDAD
				INTO #CIT_2
				FROM CIT 
				LEFT JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
				LEFT JOIN SER ON SER.IDSERVICIO=CIT.IDSERVICIO
				LEFT JOIN MES ON MES.IDEMEDICA = COALESCE(CIT.IDEMEDICA, MED.IDEMEDICA)
				LEFT JOIN AFI ON AFI.IDAFILIADO = CIT.IDAFILIADO
				WHERE CONSECUTIVO=@CONSECUTIVO

				SELECT @CONSECUTIVOCAN = NULL
				EXEC SPK_GENCONSECUTIVO '01','01','@CITCI', @CONSECUTIVOCAN OUTPUT  
				SELECT @CONSECUTIVOCAN = '01' + REPLACE(SPACE(8 - LEN(@CONSECUTIVOCAN))+LTRIM(RTRIM(@CONSECUTIVOCAN)),SPACE(1),0)    

				INSERT INTO CITCI(CONSECUTIVOCAN,CONSECUTIVO,TIPO,IDCAUSAL,FECHASOL,FECHA,FECHAATENCION,IDAFILIADO,NUMCARNET,TIPOCITA,TIPOSOLICITUD,IDSERVICIO,ATENCION,
							      PVEZ,IDCONTRATANTE,IDSEDE,IDMEDICO,IDPLAN,URGENCIA,VALORTOTAL,VALORCOPAGO,VALOREXEDENTE,VALORTOTALCOS,VALORCOPAGOCOSTO,IMPRESO,CUMPLIDA,
							      /*IDPESPECIAL,*/IDESTADOE,ESTADO,GENEROCAJA,USUARIO,RAZON,VALORMULTA,TIPOCAJA,CODCAJA,CNSFACJ,PAGADAMULTA,SYS_COMPUTERNAME_ANU,FECHA_ANU,
							      OBSERVACIONES, NOADMISION, USUASIGNA,MODALIDAD, NOASISTIO_IDCAUSAL, NOASISTIO_OBSERVACION, IDAUTSES)
		      SELECT @CONSECUTIVOCAN, @CONSECUTIVO, 'C', @IDCAUSAL, FECHASOL,DBO.FNK_FECHA_SIN_MLS(FECHA),DBO.FNK_FECHA_SIN_MLS(FECHAATENCION),IDAFILIADO,NUMCARNET,TIPOCITA,TIPOSOLICITUD,IDSERVICIO,LEFT(ATENCION,1),
							      PVEZ,IDCONTRATANTE,IDSEDE,IDMEDICO,IDPLAN,URGENCIA,VALORTOTAL,VALORCOPAGO,VALOREXEDENTE,VALORTOTALCOS,VALORCOPAGOCOSTO,IMPRESO,CUMPLIDA,
							      /*IDPESPECIAL,*/IDESTADOE,ESTADO,GENEROCAJA, 'NOAUT', NULL,NULL,TIPOCAJA,CODCAJA,NULL,NULL, @SYS_COMPUTERNAME, DBO.FNK_GETDATE(),
							      @OBSERVACION, NOADMISION, CIT.USUARIO, CIT.MODALIDAD, CIT.NOASISTIO_IDCAUSAL, CIT.NOASISTIO_OBSERVACION, IDAUTSES
		      FROM   CIT
		      WHERE  CONSECUTIVO = @CONSECUTIVO
			  DELETE FROM CIT WHERE  CONSECUTIVO =@CONSECUTIVO

				SELECT @IDSEDE = IDSEDE FROM #CIT_2
				SELECT @CONSECUTIVO = NULL
				EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@CIT', @CONSECUTIVO OUTPUT  
				SELECT @CONSECUTIVO = @IDSEDE + REPLACE(SPACE(10 - LEN(@CONSECUTIVO))+LTRIM(RTRIM(@CONSECUTIVO)),SPACE(1),0) 
				INSERT INTO CIT(CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION
                              ,ESPROGRAMAS,MODELOS,MODALIDAD)
			   SELECT @CONSECUTIVO, #CIT_2.IDMEDICO, #CIT_2.IDEMEDICA, DBO.FNK_FECHA_SIN_MLS(#CIT_2.FECHA),#CIT_2.TIPOCITA, #CIT_2.TIPOSOLICITUD, #CIT_2.ATENCION, IDSEDE, #CIT_2.DISPONIBILIDAD 
                     ,#CIT_2.CLASEORDEN,#CIT_2.WEB,@USUARIO,DBO.FNK_GETDATE(), #CIT_2.ESPROGRAMAS,#CIT_2.MODELOS
					 ,#CIT_2.MODALIDAD
			   FROM   #CIT_2

			END

			IF @PROCESO = 'CONFIRMAR'
			BEGIN
				PRINT 'TODO CONFIRMAR'
            UPDATE CIT SET CONFIRMADA = 1, FECHACONFIRMA = DBO.FNK_GETDATE() WHERE CONSECUTIVO = @CONSECUTIVO
			END

			IF @PROCESO = 'CAMBIAR'
			BEGIN
				PRINT 'TODO CAMBIAR'
			END
             
        END TRY
        BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR)
            SELECT ERROR_MESSAGE()
        END CATCH

       -- IF 1 = 1
       --BEGIN
       --  INSERT INTO @TBLERRORES(ERROR) SELECT 'No es Cajero.'
       --END

        IF EXISTS(SELECT 1 FROM @TBLERRORES)
        BEGIN
            SELECT 'KO' AS OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
        
        SELECT 'OK' AS OK, @CONSECUTIVO AS CONSECUTIVO

		IF @PROCESO = 'LECTURA' 
			SELECT * FROM #CIT
    END

	IF @METODO = 'FIRMAR_PRESTACION_SERVICIO'
	BEGIN
		DECLARE @IDFIRMA UNIQUEIDENTIFIER
			,@TIPOFIRMA VARCHAR(50)
		BEGIN TRY 

			SELECT @CONSECUTIVO = JSON_VALUE(@PARAMETROS, '$.CONSECUTIVO')
				,@IDFIRMA = JSON_VALUE(@PARAMETROS, '$.FIRMA')
				,@TIPOFIRMA = JSON_VALUE(@PARAMETROS, '$.TIPO')
		
			IF @TIPOFIRMA = 'PRESTACION_PACIENTE'
			BEGIN
				DELETE FROM DOCS WHERE DOCUMENTOID = (SELECT FIRMA_PACIENTE FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO)

				UPDATE CIT SET FIRMA_PACIENTE=@IDFIRMA
				WHERE CONSECUTIVO = @CONSECUTIVO
			END
			ELSE
			BEGIN
				DELETE FROM DOCS WHERE DOCUMENTOID = (SELECT FIRMA_ACUDIENTE FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO)
				
				UPDATE CIT SET FIRMA_ACUDIENTE=@IDFIRMA
				WHERE CONSECUTIVO = @CONSECUTIVO
			END

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' AS OK, @CONSECUTIVO AS CONSECUTIVO

		RETURN
	END
	IF @METODO = 'CITAS_CUMPLIR'
	BEGIN
		SELECT @IDAFILIADO =  IDAFILIADO
	   FROM OPENJSON (@PARAMETROS)
	   WITH (IDAFILIADO       VARCHAR(20)    '$.IDAFILIADO')

		BEGIN TRY 

			SELECT 'OK' OK
			SELECT  CIT.CONSECUTIVO, CIT.IDMEDICO, CIT.FECHA, MED.NOMBRE, MES.DESCRIPCION FROM CIT 
			INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
			INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA
			WHERE CIT.IDAFILIADO = @IDAFILIADO AND CONVERT(DATE,CIT.FECHA) >= CONVERT(DATE,GETDATE())

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' AS OK

		RETURN
	END
	IF @METODO = 'FORMAS_PAGO'
	BEGIN
		SELECT @FORMAPAGO =  FORMAPAGO, @CAJA = CAJA, @DESCRIPCION = DESCRIPCION
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (FORMAPAGO       VARCHAR(20)    '$.FORMAPAGO'
				   ,CAJA       VARCHAR(5)    '$.CAJA'
				   ,DESCRIPCION       VARCHAR(100)    '$.DESCRIPCION'
			   )
		BEGIN TRY 
			SELECT 'OK'OK, 'OK'OK1
			IF EXISTS (SELECT * FROM TGEN
							INNER JOIN FPA ON TGEN.CODIGO = FPA.FORMAPAGO AND FPA.REQBCO = 1
						WHERE TABLA = @CAJA AND CAMPO = 'FORMAPAGO' AND TGEN.CODIGO = @FORMAPAGO
			)
			BEGIN
				SELECT  'OK'OK, CODIGO, TGEN.DESCRIPCION, FPA.FORMAPAGO FROM TGEN
					INNER JOIN FPA ON TGEN.CODIGO = FPA.FORMAPAGO AND FPA.REQBCO = 1
				WHERE TABLA = @CAJA AND CAMPO = 'FORMAPAGO' AND TGEN.CODIGO = @FORMAPAGO
				SELECT FISICO, REQBCO, REQDOC, REQAUT FROM FPA WHERE FORMAPAGO = @FORMAPAGO
			END
			ELSE
			BEGIN
				SELECT  'KO'OK
				SELECT FISICO, REQBCO, REQDOC, REQAUT FROM FPA WHERE FORMAPAGO = @FORMAPAGO
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'EDITAR_TIPO_CITA'
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO, @TIPOCITA = TIPOCITA, @DATO1 = DATO1, @DATO2 = DATO2
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO'
				   ,TIPOCITA       VARCHAR(50)    '$.TIPOCITA'
				   ,DATO1       VARCHAR(50)    '$.DATO1'
				   ,DATO2       VARCHAR(50)    '$.DATO2'
			   )
		BEGIN TRY 
			UPDATE CIT SET TIPOCITA = @TIPOCITA WHERE  CONSECUTIVO = @CONSECUTIVO
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'DATOS'
	BEGIN
		PRINT 'INGRESE DATOS'
		SELECT @PROCESO = PROCESO
		FROM OPENJSON(@PARAMETROS) 
		WITH (	
			PROCESO            VARCHAR(20)  '$.PROCESO'
			)
		IF @PROCESO = 'CAUSA'
		BEGIN
			SELECT 'OK' OK
            SELECT IDCAUSAL  value, DESCCAUSAL label, IDCLASE, ESTADONVO, ACTIVO FROM CAU WHERE IDCLASE = 'CITAVIRTUAL' 
			RETURN
		END

		RETURN
	END
	IF @METODO = 'ALERTAS'
	BEGIN
		SELECT @IDAFILIADO = IDAFILIADO
		FROM OPENJSON(@PARAMETROS) 
		WITH (	
			IDAFILIADO            VARCHAR(20)  '$.IDAFILIADO'
			)

		BEGIN
			SELECT 'OK' OK
			SELECT TALR.DESCALTERTA DESCALERTA, ALR.OBS, ALR.CLASE
			FROM ALR INNER JOIN TALR ON TALR.IDALERTA = ALR.IDALERTA
			WHERE IDAFILIADO = @IDAFILIADO
		END
		RETURN
	END
	IF @METODO = 'CRUD_HOMO_SER_MED'
	BEGIN
		SELECT @DATO =  DATO
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		DATO		NVARCHAR(MAX) AS JSON
		)
		SELECT @PROCESO =UPPER( JSON_VALUE(@DATO,'$.PROCESO'))
		SELECT * INTO #datoHOMO_SER_MED FROM OPENJSON (@DATO)
		WITH(
		ITEM					INT								'$.ITEM'
		,ESTADO					VARCHAR(20)						'$.ESTADO'
		,IDMEDICO_1				VARCHAR(20)						'$.IDMEDICO_1'
		,IDSERVICIO_1			VARCHAR(20)						'$.IDSERVICIO_1'
		,IDMEDICO_2				VARCHAR(20)						'$.IDMEDICO_2'
		,IDSERVICIO_2			VARCHAR(20)						'$.IDSERVICIO_2'
		)
		IF UPPER(@PROCESO)='INSERTAR' AND EXISTS (SELECT TOP 100   * FROM  HOMO_SER_MED,#datoHOMO_SER_MED  WHERE HOMO_SER_MED.IDMEDICO_1 = #datoHOMO_SER_MED.IDMEDICO_1
			AND HOMO_SER_MED.IDSERVICIO_1 = #datoHOMO_SER_MED.IDSERVICIO_1 AND HOMO_SER_MED.IDMEDICO_2 = #datoHOMO_SER_MED.IDMEDICO_2 AND HOMO_SER_MED.IDSERVICIO_2 = #datoHOMO_SER_MED.IDSERVICIO_2 )
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La homologacion ingresada, ya existe'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
		 IF UPPER(@PROCESO)='INSERTAR' AND EXISTS (SELECT TOP 100   * FROM  HOMO_SER_MED,#datoHOMO_SER_MED  WHERE HOMO_SER_MED.IDMEDICO_1 = #datoHOMO_SER_MED.IDMEDICO_1
			AND HOMO_SER_MED.IDSERVICIO_1 = #datoHOMO_SER_MED.IDSERVICIO_1 AND HOMO_SER_MED.IDMEDICO_2 = #datoHOMO_SER_MED.IDMEDICO_2  )
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La homologacion ingresada, del Servicio 1, para este medico, ya existe'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
		 IF UPPER(@PROCESO)='EDITAR' AND EXISTS (SELECT TOP 100   * FROM  HOMO_SER_MED,#datoHOMO_SER_MED  WHERE HOMO_SER_MED.IDMEDICO_1 = #datoHOMO_SER_MED.IDMEDICO_1
			AND HOMO_SER_MED.IDSERVICIO_1 = #datoHOMO_SER_MED.IDSERVICIO_1 AND HOMO_SER_MED.IDMEDICO_2 = #datoHOMO_SER_MED.IDMEDICO_2 AND HOMO_SER_MED.IDSERVICIO_2 = #datoHOMO_SER_MED.IDSERVICIO_2 
			AND HOMO_SER_MED.ITEM <> #datoHOMO_SER_MED.ITEM )
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La homologacion ingresada, ya existe'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
		 IF UPPER(@PROCESO)='EDITAR' AND EXISTS (SELECT TOP 100   * FROM  HOMO_SER_MED,#datoHOMO_SER_MED  WHERE HOMO_SER_MED.IDMEDICO_1 = #datoHOMO_SER_MED.IDMEDICO_1
			AND HOMO_SER_MED.IDSERVICIO_1 = #datoHOMO_SER_MED.IDSERVICIO_1 AND HOMO_SER_MED.IDMEDICO_2 = #datoHOMO_SER_MED.IDMEDICO_2 AND HOMO_SER_MED.ITEM <> #datoHOMO_SER_MED.ITEM )
         BEGIN
            INSERT INTO @TBLERRORES(ERROR) SELECT 'La homologacion ingresada, del Servicio 1, para este medico, ya existe'
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
            RETURN
         END
			
		BEGIN TRY 
			IF UPPER(@PROCESO)='EDITAR'
			BEGIN
				UPDATE HOMO_SER_MED SET
				 IDMEDICO_1				= #datoHOMO_SER_MED.IDMEDICO_1			
				,IDSERVICIO_1			= #datoHOMO_SER_MED.IDSERVICIO_1	
				,IDMEDICO_2				= #datoHOMO_SER_MED.IDMEDICO_2	
				,IDSERVICIO_2			= #datoHOMO_SER_MED.IDSERVICIO_2	
				,ESTADO					= #datoHOMO_SER_MED.ESTADO	
				FROM HOMO_SER_MED, #datoHOMO_SER_MED WHERE HOMO_SER_MED.ITEM = #datoHOMO_SER_MED.ITEM
			END
			IF UPPER(@PROCESO)='INSERTAR'
			BEGIN
				INSERT INTO HOMO_SER_MED ( IDMEDICO_1, IDSERVICIO_1, IDMEDICO_2, IDSERVICIO_2, USUARIO,  FECHA, ESTADO)
				SELECT #datoHOMO_SER_MED.IDMEDICO_1,#datoHOMO_SER_MED.IDSERVICIO_1,#datoHOMO_SER_MED.IDMEDICO_2,#datoHOMO_SER_MED.IDSERVICIO_2,@USUARIO, DBO.FNK_GETDATE(), #datoHOMO_SER_MED.ESTADO
				FROM #datoHOMO_SER_MED 
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
IF @METODO = 'CLONAR_AGENDA'
	BEGIN
		SELECT @CONSECUTIVOS =  CONSECUTIVOS, @IDMEDICO_1 = IDMEDICO_1, @IDMEDICO_2 = IDMEDICO_2, @FECHA = FECHA
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CONSECUTIVOS		NVARCHAR(MAX) AS JSON
		,IDMEDICO_1			VARCHAR(20)		'$.IDMEDICO_1'
		,IDMEDICO_2			VARCHAR(20)		'$.IDMEDICO_2'
		,FECHA				DATE			'$.FECHA'
		)

		SELECT ROW_NUMBER()OVER(ORDER BY  CONSECUTIVO  DESC) FILA, * INTO #TABLA_RESULT
		FROM OPENJSON (@CONSECUTIVOS)
		WITH (
			CONSECUTIVO		VARCHAR(20)  '$.CONSECUTIVO'
			,IDSERVICIO		VARCHAR(20)  '$.IDSERVICIO'
			,CLASEORDEN		VARCHAR(20)  '$.CLASEORDEN'
			,IDMEDICO		VARCHAR(20)  '$.IDMEDICO'
			,IDEMEDICA		VARCHAR(20)  '$.IDEMEDICA'
		)

		IF NOT EXISTS (SELECT * FROM HOMO_SER_MED WHERE  IDMEDICO_1 = @IDMEDICO_1 AND IDMEDICO_2 = @IDMEDICO_2) 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No existe homologacion entre estos 2 profesionales, favor de revisar'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF NOT EXISTS (SELECT * FROM HOMO_SER_MED WHERE  IDMEDICO_1 = @IDMEDICO_1 AND IDMEDICO_2 = @IDMEDICO_2) 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No existe homologacion entre estos 2 profesionales, favor de revisar'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT COUNT(*) FROM HOMO_SER_MED, #TABLA_RESULT WHERE HOMO_SER_MED.IDMEDICO_1 = #TABLA_RESULT.IDMEDICO AND HOMO_SER_MED.IDSERVICIO_1 = #TABLA_RESULT.IDSERVICIO AND HOMO_SER_MED.IDMEDICO_2 = @IDMEDICO_2)
		< ( SELECT COUNT(*) FROM #TABLA_RESULT)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No todos los servicios de las citas marcadas, estan homologadas, favor de revisar.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT COUNT(*) FROM CIT WHERE IDMEDICO = @IDMEDICO_2 AND CONVERT(DATE,CIT.FECHA ) = @FECHA AND COALESCE(CIT.IDAFILIADO,'') = '')
		< ( SELECT COUNT(*) FROM #TABLA_RESULT)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cantidad de espacios libres del Medico 2, no son suficientes. Revisar'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF EXISTS(SELECT * FROM #TABLA_RESULT WHERE CLASEORDEN <> 'PyP')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Asegurese que todos los registros selecionados son de tipo PyP. Revisar'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		BEGIN TRY
			SELECT #TABLA_RESULT.FILA, #TABLA_RESULT.CONSECUTIVO, HOMO_SER_MED.IDMEDICO_1, HOMO_SER_MED.IDSERVICIO_1, HOMO_SER_MED.IDMEDICO_2
				, HOMO_SER_MED.IDSERVICIO_2  
			INTO #DATACITA
			FROM HOMO_SER_MED, #TABLA_RESULT 
			WHERE HOMO_SER_MED.IDMEDICO_1 = #TABLA_RESULT.IDMEDICO AND HOMO_SER_MED.IDSERVICIO_1 = #TABLA_RESULT.IDSERVICIO 
				AND HOMO_SER_MED.IDMEDICO_2 = @IDMEDICO_2

		DECLARE @ITEMS INT
		DECLARE @LIMITE INT
		DECLARE @CONSECUTIVO_1 VARCHAR(20)	,@CONSECUTIVO_2 VARCHAR(20) 
		SELECT @ITEMS = 1,@LIMITE = 0
		SELECT @LIMITE=COUNT(*) FROM  #DATACITA
		WHILE @ITEMS<=@LIMITE
		BEGIN
			SELECT @IDSEDE = '01'
				SELECT @CONSECUTIVO_1 = (SELECT #TABLA_RESULT.CONSECUTIVO  FROM #TABLA_RESULT WHERE #TABLA_RESULT.FILA = @ITEMS )
				SELECT @CONSECUTIVO_2 = (SELECT TOP 1 CONSECUTIVO FROM CIT C WHERE C.IDMEDICO = @IDMEDICO_2 AND CONVERT(DATE,C.FECHA ) = @FECHA AND COALESCE(C.IDAFILIADO,'')='' ORDER BY  C.FECHA  ASC)
				--SELECT @CONSECUTIVO_1
				--SELECT @CONSECUTIVO_2

				UPDATE CIT SET
				CIT.IDAFILIADO = C.IDAFILIADO
				,CIT.TIPOCITA = C.TIPOCITA
				,CIT.NUMCARNET = C.NUMCARNET
				,CIT.IDCONTRATANTE = C.IDCONTRATANTE
				,CIT.TELEFONOAVISO = C.TELEFONOAVISO
				,CIT.IDSEDEORIGEN = C.IDSEDEORIGEN
				,CIT.PROCEDENCIA = C.PROCEDENCIA
				,CIT.CODUNG = C.CODUNG
				,CIT.IDTERCEROCA = C.IDTERCEROCA
				,CIT.TIPOAFILIADO = C.TIPOAFILIADO
				,CIT.IDAREA = C.IDAREA
				,CIT.CCOSTO = C.CCOSTO
				,CIT.ESTADO = C.ESTADO
				,CIT.IDPLAN = C.IDPLAN
				,CIT.CLASEORDEN = C.CLASEORDEN
				,CIT.IDPESPECIAL = C.IDPESPECIAL
				,CIT.FECHASOL = DBO.FNK_GETDATE()
				,CIT.MODALIDAD = C.MODALIDAD
				,CIT.MODELOS = C.MODELOS
				,CIT.IDSERVICIO = #DATACITA.IDSERVICIO_2
				,CIT.USUARIO = @USUARIO
				,CIT.SYS_COMPUTERNAME = @SYS_COMPUTERNAME
				FROM CIT, #DATACITA, CIT C
				WHERE #DATACITA.FILA = @ITEMS AND CIT.CONSECUTIVO = @CONSECUTIVO_2 AND C.CONSECUTIVO = @CONSECUTIVO_1

				SELECT @ITEMS = @ITEMS + 1 
			END

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
END