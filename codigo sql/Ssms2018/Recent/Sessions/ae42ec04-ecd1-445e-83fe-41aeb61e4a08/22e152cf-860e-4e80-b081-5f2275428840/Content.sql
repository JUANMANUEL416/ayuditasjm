IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE NAME='SPK_GLOSAANULAFTR' AND TYPE='P')
BEGIN
   DROP PROCEDURE SPK_GLOSAANULAFTR
END

GO
CREATE PROCEDURE DBO.SPK_GLOSAANULAFTR 
@CNSGLO  VARCHAR(20),
@COMPANIA VARCHAR(2),
@USUARIO  VARCHAR(12),
@SEDE     VARCHAR(5),
@SYS_COMPUTERNAME VARCHAR(254),
@CNSRPDX  VARCHAR(20)
WITH ENCRYPTION
AS
DECLARE @OK           INT
DECLARE @AUX1         DECIMAL(14,2)
DECLARE @AUX2         DECIMAL(14,2)
DECLARE @OBS          VARCHAR(512)
DECLARE @CNSFPAG      VARCHAR(20)
DECLARE @CNSCXC       VARCHAR(20)
DECLARE @N_FACTURA    VARCHAR(16)
DECLARE @NVOCONSEC    VARCHAR(20)
DECLARE @NOADMISION   VARCHAR(16)
DECLARE @IDTERCERO    VARCHAR(20)
DECLARE @PROCEDENCIA  VARCHAR(10)
DECLARE @TIPOFAC      VARCHAR(1)
DECLARE @NOREFERENCIA VARCHAR(16)
BEGIN 
   SELECT @OK = CERRADA, @N_FACTURA = N_FACTURA, @IDTERCERO = IDTERCERO 
   FROM   FGLO 
   WHERE  CNSGLO = @CNSGLO 
   
   PRINT 'N_FACTURA='+@N_FACTURA   
   
   IF @OK = 1
   BEGIN
      INSERT INTO RPDX(CNS, NOMBRE )
      SELECT @CNSRPDX, 'GLOSA YA CERRADA'
      RAISERROR('ERROR: GLOSA YA CERRADA',16,1)
      RETURN
   END
   DELETE RPDX WHERE CNS = @CNSRPDX
   SELECT @AUX1 = FCXCD.VALORFACTURA, @AUX2 = FGLO.VLRGLOSA FROM FCXCD, FGLO
   WHERE  FCXCD.N_FACTURA = FGLO.N_FACTURA
   AND    FGLO.CNSGLO     = @CNSGLO
   
   IF @AUX1 <> @AUX2   
   BEGIN
      INSERT INTO RPDX(CNS, NOMBRE )
      SELECT @CNSRPDX, 'No puede ser Glosa Total, El Valor de La GLosa No coincide con el de la Factura.'
      RAISERROR('ERROR: No puede ser Glosa Total, El Valor de La GLosa No coincide con el de la Factura.',16,1)
      RETURN
   END
   
   SELECT @OBS = OBSERVACIONRTA, @CNSFPAG = CNSFPAG, @CNSCXC = CNSCXC FROM FGLO 
   WHERE FGLO.CNSGLO = @CNSGLO   
   
   IF @OBS = '' OR (@OBS IS NULL)
   BEGIN
      INSERT INTO RPDX(CNS, NOMBRE )
      SELECT @CNSRPDX, 'Debe Ingresar una Raz?n para la Anulaci?n de La Factura.'
      RAISERROR('ERROR: Debe Ingresar una Raz?n para la Anulaci?n de La Factura.',16,1)
      RETURN
   END
   -- SE CIERRA LA GLOSA  Y SE COLOCA ESTADO = 'A' PARA PODER ANULAR LA FACTURA 
   UPDATE FGLO  SET CERRADA = 1, ESTADO = 'A'
   WHERE FGLO.CNSGLO = @CNSGLO
     
   -- EXEC SPK_RELIQUIDACXCQX @CNSCXC YA NO ES NECESARIA
   /*COMIENZA DISE?O DE GENERACION DE NOTAS CREDITO EN VEZ DE ANULACION DE LA FACTURA*/
   
   PRINT 'AQUI'   
   
   UPDATE FGLO SET ABONADO = VLRGLOSA, SALDO = 0, VLRRECUPERAR = 0, VLRACEPTADO = VLRGLOSA
   WHERE  CNSGLO = @CNSGLO
   print 'SE GENERA CONSECUTIVO DE NOTA'
   --SE GENERA CONSECUTIVO DE NOTA
   EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@FNOTC', @NVOCONSEC OUTPUT  
   SELECT @NVOCONSEC = @SEDE + REPLACE(SPACE(8 - LEN(@NVOCONSEC))+LTRIM(RTRIM(@NVOCONSEC)),SPACE(1),0)      
   
   --SE INSERTAN LOS DATOS DE LA NOTA DESDE LA GLOSA
   -- MOD.JQUIROGA 20090819 Se agrega campo LIBERAHADM = 1
   INSERT INTO FNOT(CNSFNOT, CLASE, N_FACTURA, IDTERCERO, F_NOTA, VR_TOTAL, OBSERVACION, 
                       MARCA, MARCACONT, CONTABILIZADA, NROCOMPROBANTE, IMPRESO, COMPANIA,
                       USUARIO, CNSCXC, CERRADA, ESTADO, USUARIOANU, USUARIOSOL, FECHAANU,
                       RAZONANU, PROCEDENCIA, CNSGLO, APLICADAA, LIBERAHADM)
   SELECT @NVOCONSEC, 'C', N_FACTURA, IDTERCERO, GETDATE(), VLRACEPTADO, OBSERVACION, 
          0, 0, 0, NULL, 0, @COMPANIA, @USUARIO, CNSCXC, 0, 'O', NULL, NULL, NULL, NULL,
          'AUDITORIA', CNSGLO, 'C', 1
   FROM   FGLO
   WHERE  CNSGLO = @CNSGLO
   
   -- SE CREA TABLA TEMPORAL PARA PODER MANEJAR EL ITEM DE MANERA IDENTITY
   CREATE TABLE #FNOTD(CNSFNOT VARCHAR(20), CLASE VARCHAR(1), ITEM SMALLINT IDENTITY, 
                       TIPO VARCHAR(1), IDSERVICIO VARCHAR(20), DESCRIPCION VARCHAR(512), 
                       CANTIDAD INT, VR_UNITARIO FLOAT , VR_TOTAL FLOAT, COMPANIA VARCHAR(2), 
                       USUARIO VARCHAR(12), OBSERVACION VARCHAR(2048))
   -- SE CREAN LOS DETALLES DE LA NOTA CREDITO DESDE LOS DETALLE DE LA GLOSA
   INSERT INTO #FNOTD(CNSFNOT, CLASE, TIPO, IDSERVICIO, DESCRIPCION, CANTIDAD,
                      VR_UNITARIO, VR_TOTAL, COMPANIA, USUARIO, OBSERVACION)
   SELECT @NVOCONSEC, 'C', 'C', FGLO.IDCONCEPTO, CPNT.DESCRIPCION, 1, FGLO.VLRACEPTADO,
          FGLO.VLRACEPTADO, @COMPANIA, @USUARIO, FGLO.OBSERVACIONRTA
   FROM   FGLO, CPNT   
   WHERE  FGLO.CNSGLO = @CNSGLO  
   AND    FGLO.IDCONCEPTO = CPNT.CODIGO
   AND    FGLO.VLRACEPTADO > 0
   
   -- SE INSERTAN LOS DATOS A DETALLES DE NOTA DESDE LA TABLA TEMPORAL
   INSERT INTO FNOTD(CNSFNOT, CLASE, ITEM, TIPO, IDSERVICIO, DESCRIPCION, CANTIDAD,
                     VR_UNITARIO, VR_TOTAL, COMPANIA, USUARIO, OBSERVACION)
   SELECT CNSFNOT, CLASE, ITEM, TIPO, IDSERVICIO, DESCRIPCION, CANTIDAD,
          VR_UNITARIO, VR_TOTAL, COMPANIA, USUARIO, OBSERVACION
   FROM #FNOTD 
   
   -- SE BORRA TABLA TEMPORAL
   DROP TABLE #FNOTD       
   SELECT @CNSRPDX = 'INTERNO'
   
   EXEC SPK_NOTASCXC @NVOCONSEC, 'C', @CNSRPDX, @SEDE, @COMPANIA, @USUARIO, @SYS_COMPUTERNAME 
   
   /*HASTA AQUI VA LA CREACION DE NOTA CREDITO*/
   /*LIBERACION DE LA ADMISION*/
   
   PRINT  'N FACTURA=' + @N_FACTURA     
   
   SELECT @PROCEDENCIA = PROCEDENCIA, @TIPOFAC = TIPOFAC, @NOREFERENCIA = NOREFERENCIA
   FROM FTR WHERE N_FACTURA = @N_FACTURA
   
   PRINT 'PROCEDENCIA='+@PROCEDENCIA
   PRINT 'TIPOFAC='+@TIPOFAC
   PRINT 'NOREFERENCIA  ='+@NOREFERENCIA
   
   IF @PROCEDENCIA = 'SALUD' AND @TIPOFAC = 'I'
   BEGIN
      print 'Entre a update'
      UPDATE HADM SET FACTURADA = 0, CNSFCT = NULL, N_FACTURA = NULL
      WHERE  NOADMISION = @NOREFERENCIA
      
      UPDATE HPRED SET FACTURADA = 0, N_FACTURA = '' FROM HPRE
      WHERE  HPRE.NOPRESTACION = HPRED.NOPRESTACION
      AND    HPRE.NOADMISION   = @NOREFERENCIA
      AND    HPRED.IDTERCEROCA = @IDTERCERO
   END
   IF @PROCEDENCIA = 'CE'
   BEGIN
      IF @TIPOFAC = 'I' 
      BEGIN 
         UPDATE AUT SET FACTURADA = 0 WHERE NOAUT = @NOREFERENCIA
         UPDATE AUTD SET FACTURADA = 0 WHERE N_FACTURA = @N_FACTURA AND FACTURADA = 1
      END
      IF @TIPOFAC = 'M' 
      BEGIN 
         UPDATE AUT SET FACTURADA = 0 WHERE N_FACTURA = @N_FACTURA AND FACTURADA = 1
         UPDATE AUTD SET FACTURADA = 0 WHERE N_FACTURA = @N_FACTURA AND FACTURADA = 1
      END
   END
      
   IF @PROCEDENCIA = 'CI'
   BEGIN
      IF @TIPOFAC = 'I'
      BEGIN
         UPDATE CIT SET FACTURADA = 0 WHERE CONSECUTIVO = @NOREFERENCIA
      END
      IF @TIPOFAC = 'M'
      BEGIN
         UPDATE CIT SET FACTURADA = 0 WHERE N_FACTURA = @N_FACTURA AND FACTURADA = 1
      END
   END
   
   /*HASTA AQUI LIBERACION DE LA ADMISION*/
END


