CREATE OR ALTER PROCEDURE DBO.SPQ_VENTAFAR
@JSON NVARCHAR(MAX)
WITH ENCRYPTION
AS
DECLARE   @PARAMETROS       NVARCHAR(MAX),      @MODELO         VARCHAR(100)	,@METODO		VARCHAR(100)
        , @QUERY            VARCHAR(MAX),       @USUARIO        VARCHAR(12)		,@NVOCONSEC		VARCHAR(20)
        , @SEDE             VARCHAR(5)        , @NOADMISION     VARCHAR(16)		,@FECHA			VARCHAR(20)         
        , @HORA             VARCHAR(10)       , @ITEM           SMALLINT		,@OBS			VARCHAR(2048)
        , @SYS_COMPUTERNAME VARCHAR(254)      , @GRUPO          VARCHAR(8)		,@PENDIENTES	SMALLINT
        , @CNSMOV           VARCHAR(20)		  , @PROCESO		VARCHAR(50)		,@IDBODEGA		VARCHAR(20)
		,@IDARTICULO		VARCHAR(20)			, @NOLOTE  VARCHAR(20)		, @NOLOTEPEDIDO VARCHAR(20)
		, @IDPLAN			VARCHAR(20)			,@IDTERCERO		VARCHAR(20)	,@COMPANIA VARCHAR(20)	,@CANTIDAD INT
		, @IDCAJA			VARCHAR(20)			,@PCOSTO DECIMAL(14,2)	,@VALOR DECIMAL(14,2)	,@IDSEDE VARCHAR(20)
		,@CONSECUTIVO		VARCHAR(20)			,@CODCAJA		VARCHAR(20)	, @ESPARTICULAR BIT, @IDAFILIADO VARCHAR(20)
		,@NIT				VARCHAR(20)			,@REGISTROS NVARCHAR(MAX), @FELCTRONICA INT	, @IDITAR VARCHAR(20)
		,@FECHAVENCE		DATETIME			,@CNSPRESELL VARCHAR(20)	,@datoCreaCliente NVARCHAR(MAX)
		,@NATJURIDICA		VARCHAR(20)			,@TIPOREGIMEN		VARCHAR(20)		,@TIPO_ID		VARCHAR(20)
		,@RAZONSOCIAL		VARCHAR(500)		,@EMAIL				VARCHAR(200)	,@CODCAJERO VARCHAR(20)	,@NOMBRECLIENTE VARCHAR(500)
		,@DIRECCION			VARCHAR(500)		,@TELEFONOS			VARCHAR(20)		,@CNSACJ VARCHAR(20)	,@CNSFACJ VARCHAR(20)
DECLARE @VALORTOTAL DECIMAL(14,2), @VALORRECAUDADO DECIMAL(14,2), @TIPOPAGO VARCHAR(20), @BANCO VARCHAR(20)	
		,@SUCURSAL VARCHAR(20), @NUMERODOCUMENTO VARCHAR(20), @CTA_BCO VARCHAR(20), @N_FACTURA VARCHAR(20), @CNSPCJ VARCHAR(20)
		,@NUMEROAUTORIZA VARCHAR(20)	,@IDTERCERORESP VARCHAR(20)	, @CODBARRA VARCHAR(100)	, @FINICIAL DATE, @FFINAL DATE
BEGIN   
   SET DATEFORMAT dmy
   --SELECT @JSON
   SELECT *
   INTO #JSON
   FROM OPENJSON (@json)
   WITH (
      MODELO  VARCHAR(100) '$.MODELO',
      METODO  VARCHAR(100) '$.METODO',
      USUARIO VARCHAR(20) '$.USUARIO',
      PARAMETROS NVARCHAR(MAX) AS JSON
   )
   SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
   FROM #JSON
   --DEFINICION DE TABLA DE ERRORES
   DECLARE @TBLERRORES TABLE(ERROR VARCHAR(200));
	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @IDSEDE = IDSEDE, @SEDE = IDSEDE, @COMPANIA=COMPANIA FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME

   --  
	IF @METODO = 'INSERTA_PRESELL'
	BEGIN
		SELECT @IDARTICULO = IDARTICULO, @IDBODEGA = IDBODEGA, @NOLOTE = NOLOTE, @NOLOTEPEDIDO = NOLOTEPEDIDO, @IDPLAN = IDPLAN, @IDTERCERO = IDTERCERO
		, @CANTIDAD = CANTIDAD, @CODCAJA = CODCAJA, @PCOSTO = PCOSTO, @VALOR = VALOR, @PROCESO = PROCESO, @ESPARTICULAR = ESPARTICULAR, @IDAFILIADO = IDAFILIADO
		,@FECHAVENCE = FECHAVENCE	
		FROM OPENJSON(@PARAMETROS)
		WITH(	IDARTICULO		VARCHAR(10)		'$.IDARTICULO'		, IDBODEGA		VARCHAR(20)		'$.IDBODEGA'		, NOLOTE		VARCHAR(20)		'$.NOLOTE'		
				, NOLOTEPEDIDO	VARCHAR(20)		'$.NOLOTEPEDIDO'	, IDPLAN		VARCHAR(20)		'$.IDPLAN'			, IDTERCERO		VARCHAR(20)		'$.IDTERCERO'
				, CANTIDAD		INT				'$.CANTIDAD'		, CODCAJA		VARCHAR(20)		'$.CODCAJA'			, PCOSTO		DECIMAL(14,2)	'$.PCOSTO'		, VALOR			DECIMAL(14,2)	'$.VALOR'
				, ESPARTICULAR	BIT				'$.ESPARTICULAR'	, IDAFILIADO	VARCHAR(20)		'$.IDAFILIADO' 		, PROCESO		VARCHAR(20)		'$.PROCESO' 	, FECHAVENCE	DATETIME		'$.FECHAVENCE')

		IF COALESCE(@USUARIO,'') = ''
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Hace falta usuario en los parametros'
		END
		IF @PROCESO = 'Insertar' AND COALESCE(@VALOR,0) = 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El valor del Item, esta en 0, favor de revisar.'
		END

		IF (SELECT COALESCE(IEXI.EXISLOTE,0) FROM IEXI WHERE NOLOTE = @NOLOTE AND NOLOTEPEDIDO = @NOLOTEPEDIDO AND IEXI.IDARTICULO = @IDARTICULO AND IEXI.IDBODEGA = @IDBODEGA) < @CANTIDAD
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cantidad ingresada excede el numero de existencias del item.'
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF @PROCESO = 'INSERTAR'
				BEGIN
					IF NOT EXISTS (SELECT * FROM PRESELL WHERE USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0 )
					BEGIN
						EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,'@PRESELL', @CONSECUTIVO OUTPUT  
						SELECT @CONSECUTIVO = @IDSEDE + REPLACE(SPACE(8 - LEN(@CONSECUTIVO))+LTRIM(RTRIM(@CONSECUTIVO)),SPACE(1),0)
					END
					ELSE
					BEGIN
						SELECT @CONSECUTIVO = PRESELL.CNSPRESELL FROM PRESELL WHERE USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0 
					END
					INSERT INTO PRESELL ( CNSPRESELL, IDPLAN, IDTERCERO, IDAFILIADO, USUARIO, IDARTICULO, NOLOTE, IDBODEGA, CODCAJA
										, NOLOTEPEDIDO, CANTIDAD, FECHA, FECHAVENCE, PCOSTO, VALORUNI, CNSMOV, PROCESADO, IDARTICULO_ORI, VALOR)
					SELECT @CONSECUTIVO, @IDPLAN , @IDTERCERO, @IDAFILIADO, @USUARIO, @IDARTICULO, @NOLOTE, @IDBODEGA, @CODCAJA, 
									@NOLOTEPEDIDO, @CANTIDAD, DBO.FNK_GETDATE(), @FECHAVENCE,@PCOSTO, @VALOR , NULL, 0,  (SELECT IART.IDSERVICIO FROM IART WHERE IART.IDARTICULO =@IDARTICULO ), COALESCE(@VALOR,0)*@CANTIDAD
	
					UPDATE IEXI SET  IEXI.EXISLOTE  = IEXI.EXISLOTE - @CANTIDAD WHERE NOLOTE = @NOLOTE AND NOLOTEPEDIDO = @NOLOTEPEDIDO AND IEXI.IDARTICULO = @IDARTICULO AND IEXI.IDBODEGA = @IDBODEGA
				END
				IF @PROCESO = 'ELIMINAR'
				BEGIN
					UPDATE IEXI SET  IEXI.EXISLOTE = IEXI.EXISLOTE +  PRESELL.CANTIDAD FROM IEXI, PRESELL WHERE PRESELL.USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0 
							AND IEXI.IDBODEGA = PRESELL.IDBODEGA AND IEXI.NOLOTE = PRESELL.NOLOTE 
							AND IEXI.NOLOTEPEDIDO = PRESELL.NOLOTEPEDIDO AND IEXI.IDARTICULO = PRESELL.IDARTICULO
					DELETE FROM PRESELL WHERE PRESELL.USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0 AND PRESELL.IDBODEGA = @IDBODEGA AND PRESELL.NOLOTE = @NOLOTE 
							AND PRESELL.NOLOTEPEDIDO = @NOLOTEPEDIDO AND PRESELL.IDARTICULO = @IDARTICULO
				END
				IF @PROCESO = 'EliminarTodos'
				BEGIN
					DECLARE CURSOR_PRESELL CURSOR FOR
					SELECT PRESELL.CNSPRESELL, PRESELL.IDBODEGA, PRESELL.NOLOTE , PRESELL.NOLOTEPEDIDO, PRESELL.IDARTICULO, PRESELL.NOLOTE
					FROM PRESELL
					INNER JOIN IART ON PRESELL.IDARTICULO = IART.IDARTICULO
					WHERE PRESELL.USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0

					OPEN CURSOR_PRESELL;
				
					FETCH NEXT FROM CURSOR_PRESELL INTO @CNSPRESELL, @IDBODEGA, @NOLOTE , @NOLOTEPEDIDO, @IDARTICULO, @NOLOTE;

					WHILE @@FETCH_STATUS = 0
					BEGIN

						UPDATE IEXI SET  IEXI.EXISLOTE = IEXI.EXISLOTE +  PRESELL.CANTIDAD FROM IEXI, PRESELL WHERE PRESELL.USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0 
							AND IEXI.IDBODEGA = @IDBODEGA AND IEXI.NOLOTE = @NOLOTE AND IEXI.NOLOTEPEDIDO = @NOLOTEPEDIDO AND IEXI.IDARTICULO = @IDARTICULO
						DELETE FROM PRESELL WHERE PRESELL.USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0 AND PRESELL.IDBODEGA = @IDBODEGA AND PRESELL.NOLOTE = @NOLOTE 
							AND PRESELL.NOLOTEPEDIDO = @NOLOTEPEDIDO AND PRESELL.IDARTICULO = @IDARTICULO AND PRESELL.CNSPRESELL = @CNSPRESELL

						DELETE FROM PRESELLR WHERE CNSPRESELL = @CNSPRESELL AND COALESCE(PROCESADO,0) = 0

						FETCH NEXT FROM CURSOR_PRESELL INTO @CNSPRESELL, @IDBODEGA, @NOLOTE , @NOLOTEPEDIDO, @IDARTICULO, @NOLOTE;
					END

					CLOSE CURSOR_PRESELL;
					DEALLOCATE CURSOR_PRESELL;

				END

				SELECT 'OK' OK
				--SELECT TOP 1 'OK' OK, PRESELL.ITEM, PRESELL.CNSPRESELL, PRESELL.IDPLAN, PRESELL.IDTERCERO, PRESELL.IDAFILIADO, PRESELL.USUARIO, PRESELL.IDARTICULO, IART.DESCRIPCION, PRESELL.NOLOTE, PRESELL.IDBODEGA
				--	, PRESELL.CNSACJ, PRESELL.CODCAJA, PRESELL.NOLOTEPEDIDO, PRESELL.CANTIDAD, PRESELL.FECHA, PRESELL.FECHAVENCE, PRESELL.PCOSTO, PRESELL.VALOR,PRESELL.VALORUNI , PRESELL.CNSMOV, PRESELL.PROCESADO , PRESELL.IDARTICULO_ORI
				--FROM PRESELL
				--INNER JOIN IART ON PRESELL.IDARTICULO = IART.IDARTICULO
				--WHERE PRESELL.USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0

				SELECT PRESELL.ITEM, PRESELL.CNSPRESELL, PRESELL.IDPLAN, PRESELL.IDTERCERO, PRESELL.IDAFILIADO, PRESELL.USUARIO, PRESELL.IDARTICULO, IART.DESCRIPCION, PRESELL.NOLOTE, PRESELL.IDBODEGA
					, PRESELL.CNSACJ, PRESELL.CODCAJA, PRESELL.NOLOTEPEDIDO, PRESELL.CANTIDAD, PRESELL.FECHA, PRESELL.FECHAVENCE, PRESELL.PCOSTO, PRESELL.VALOR,PRESELL.VALORUNI , PRESELL.CNSMOV, PRESELL.PROCESADO , PRESELL.IDARTICULO_ORI
				FROM PRESELL
				INNER JOIN IART ON PRESELL.IDARTICULO = IART.IDARTICULO
				WHERE PRESELL.USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0

				SELECT SUM(VALOR) VALOR FROM PRESELL WHERE PRESELL.USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0

				IF EXISTS (SELECT 1 FROM PRESELL
							INNER JOIN IART ON PRESELL.IDARTICULO = IART.IDARTICULO
							WHERE PRESELL.USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0)
				BEGIN
					SELECT TOP 1 PRESELL.IDPLAN, PRESELL.IDTERCERO, PRESELL.IDBODEGA , PRESELL.CODCAJA
					FROM PRESELL
					WHERE PRESELL.USUARIO = @USUARIO AND COALESCE(PROCESADO,0) = 0
					GROUP BY PRESELL.IDPLAN, PRESELL.IDTERCERO, PRESELL.IDBODEGA , PRESELL.CODCAJA
				END
 
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
		END 
	END   
	IF @METODO = 'BUSCA_CLIENTE'
	BEGIN
		SELECT @NIT = NIT
		FROM OPENJSON(@PARAMETROS)
		WITH(	NIT	VARCHAR(20)		'$.NIT')

		SELECT 'OK' OK
		SELECT  IDTERCERO, RAZONSOCIAL, NIT, DV, TIPO_ID, DIRECCION, TELEFONOS, EMAIL, URL, EMAILRECIBOFE FROM TER 

		--IF EXISTS (SELECT 1
		--			FROM TER
		--			WHERE NIT LIKE '%' + @NIT + '%' )
		--BEGIN
		--	SELECT 'OK' OK, 'SI' RESPUESTA
		--	SELECT IDTERCERO, RAZONSOCIAL, NIT, DV, TIPO_ID, DIRECCION, TELEFONOS, EMAIL, URL, EMAILRECIBOFE
		--	FROM TER
		--	WHERE NIT LIKE '%' + @NIT + '%'
		--END
		--ELSE
		--BEGIN
		--	SELECT 'OK' OK, 'NO' RESPUESTA
		--END
	END
	IF @METODO = 'GUARDA_VENTA'
	BEGIN
		SELECT @CODCAJA = CODCAJA, @IDPLAN = IDPLAN, @IDTERCERO = IDTERCERO, @IDBODEGA = IDBODEGA, @REGISTROS = REGISTROS
		, @ESPARTICULAR = ESPARTICULAR, @FELCTRONICA = FELCTRONICA, @IDTERCERORESP = IDTERCERORESP
		FROM OPENJSON(@PARAMETROS)
		WITH(	CODCAJA		VARCHAR(20)		'$.CODCAJA'	,IDPLAN			VARCHAR(20)		'$.IDPLAN'			,IDTERCERO		VARCHAR(20)		'$.IDTERCERO',IDBODEGA	VARCHAR(20)		'$.IDBODEGA'
				,REGISTROS	NVARCHAR(MAX)	AS JSON		, ESPARTICULAR	BIT				'$.ESPARTICULAR'	,FELCTRONICA	INT				'$.FELCTRONICA',IDTERCERORESP		VARCHAR(20)		'$.IDTERCERORESP'	)

		SELECT * INTO #REGISTROS FROM OPENJSON(@REGISTROS)
		WITH(
		ITEM			INT				'$.ITEM'			,IDTERCERO		VARCHAR(20)		'$.IDTERCERO'
		,CNSPRESELL		VARCHAR(20)		'$.CNSPRESELL'		,IDPLAN			VARCHAR(20)		'$.IDPLAN',IDAFILIADO			VARCHAR(20)		'$.IDAFILIADO'
		,IDARTICULO		VARCHAR(20)		'$.IDARTICULO'		,NOLOTE			VARCHAR(20)		'$.NOLOTE',IDBODEGA			VARCHAR(20)		'$.IDBODEGA'
		,CODCAJA		VARCHAR(20)		'$.CODCAJA'			,NOLOTEPEDIDO	VARCHAR(20)		'$.NOLOTEPEDIDO',CANTIDAD		DECIMAL(14,2)		'$.CANTIDAD'
		,PCOSTO			DECIMAL(14,2)	'$.PCOSTO'			,FECHAVENCE		DATETIME		'$.FECHAVENCE'	,IDARTICULO_ORI			VARCHAR(20)		'$.IDARTICULO_ORI'
		,VALORUNI		DECIMAL(14,2)	'$.VALORUNI'		,VALOR			DECIMAL(14,2)	'$.VALOR')

		SELECT TOP 1 @CNSPRESELL = CNSPRESELL , @CODCAJA = CODCAJA FROM #REGISTROS

		SELECT @VALORRECAUDADO =  SUM(VALOR) FROM PRESELLR WHERE CNSPRESELL = @CNSPRESELL
		SELECT @VALORTOTAL =  SUM(VALOR) FROM PRESELL WHERE CNSPRESELL = @CNSPRESELL


		IF COALESCE(@FELCTRONICA,0) = 1
		BEGIN
			SELECT @IDTERCERORESP = NULL
		END
		IF NOT EXISTS (SELECT 1 FROM ITMO WHERE IDTIPOMOV = DBO.FNK_VALORVARIABLE('IDINVENTA_PARTICULAR') )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene configurado Tipo de Movimiento para Venta.'
		END
		IF COALESCE(@FELCTRONICA,0) = 2 AND COALESCE(@IDTERCERORESP,'') =  ''
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Tiene seleccionado Factura Electronica, debe de ingresar un Respomsable.'
		END
		IF COALESCE(@VALORTOTAL,0) > COALESCE(@VALORRECAUDADO,0)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Pendiente recaudar.'
			
		END
		IF COALESCE(@VALORTOTAL,0) < COALESCE(@VALORRECAUDADO,0)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El monto recaudado el mayor al valor total. Revisar...'
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK 
			SELECT ERROR FROM @TBLERRORES
			IF (COALESCE(@VALORTOTAL,0) > COALESCE(@VALORRECAUDADO,0)) OR (COALESCE(@VALORTOTAL,0) < COALESCE(@VALORRECAUDADO,0))
			BEGIN
				SELECT 'RECAUDAR' RECAUDAR
			END
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				SELECT @IDITAR = '01'
				--BEGIN TRANSACTION;

				BEGIN TRY
						EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE,@PREFIJO='@MOV',  @NVOCONSEC=@NVOCONSEC OUTPUT  
						PRINT 'INSERTA IMOV ==>'
						INSERT INTO IMOV ( IDTERCERO, IDTERCEROENVIA, IDTERCERORESP, CNSMOV, IDBODEGA, IDTIPOMOV, FECHAMOV, CCOSTO, IDSOLICITA
						,  IDRECIBE, FACTORVENTA, ESTADO, IDAREA, CONTABILIZADA, PROCEDENCIA, USUARIO, SYS_ComputerName, IDITAR, ESTRANSITO
						, SECONTABILIZA, F_FACTURA, GENFACTURA, IDPLAN, FACTURADA, TIPOENT, IDKPAGE)
						SELECT @IDTERCERO, NULL ,@IDTERCERORESP, @NVOCONSEC, @IDBODEGA, DBO.FNK_VALORVARIABLE('IDINVENTA_PARTICULAR') , DBO.FNK_GETDATE(), NULL, @USUARIO, @USUARIO, 0, 0, NULL, 0, 'INV'
						,@USUARIO, @SYS_COMPUTERNAME, @IDITAR, 0, 0, NULL, 1, @IDPLAN, 0,'Presencial',0

						PRINT 'INSERTA IMOVH ==>'
						INSERT INTO IMOVH (CNSMOV, IDARTICULO, CANTIDAD, CANTPEDIDA, PCOSTO, NOLOTE, FECHAVENCE, ESTADO, CANTIDADTF, PCOSTOANTES, ITEM, USUARIO, PVENTA, PVENTAT)
						SELECT @NVOCONSEC,#REGISTROS.IDARTICULO_ORI, SUM(#REGISTROS.CANTIDAD),SUM( #REGISTROS.CANTIDAD), NULL
						 ,'Sin Definir', NULL, 0, 0, NULL,LTRIM(RTRIM(STR(ROW_NUMBER() OVER(ORDER BY @NVOCONSEC DESC)))), @USUARIO, 0, SUM(#REGISTROS.VALOR)
						FROM #REGISTROS
						GROUP BY   IDTERCERO, CNSPRESELL, IDPLAN, IDAFILIADO,   IDBODEGA, CODCAJA,IDARTICULO_ORI

						PRINT 'INSERTA ISAL ==>'
						INSERT INTO ISAL (CNSMOV, NOLOTE, IDARTICULO, CANTIDAD, FECHA, NOLOTEPEDIDO, FECHAVENCE, PCOSTO, IDARTICULO_IMOVH, VR_ANTESIVA, VR_IVA, EXISLOTE)
						SELECT @NVOCONSEC, #REGISTROS.NOLOTE, #REGISTROS.IDARTICULO, #REGISTROS.CANTIDAD,  DBO.FNK_GETDATE(), #REGISTROS.NOLOTEPEDIDO, #REGISTROS.FECHAVENCE
							,#REGISTROS.PCOSTO, IDARTICULO_ORI, 0, 0
							, (SELECT IEXI.EXISLOTE FROM IEXI WHERE IEXI.IDARTICULO = #REGISTROS.IDARTICULO AND IEXI.NOLOTE = #REGISTROS.NOLOTE AND IEXI.NOLOTEPEDIDO = #REGISTROS.NOLOTEPEDIDO AND IEXI.IDBODEGA = @IDBODEGA)
						FROM #REGISTROS

						PRINT 'INGRESA==========> SPK_CONFIRMARSALIDAS'
						EXEC SPK_CONFIRMARSALIDAS @IDBODEGA, @NVOCONSEC, @USUARIO, @COMPANIA, @SEDE
						PRINT 'SALIO==========> SPK_CONFIRMARSALIDAS'

						SELECT @CNSACJ = ACJ.CNSACJ FROM ACJ WHERE CODCAJA = @CODCAJA AND ABIERTA = 1
						SELECT @CODCAJERO = CODCAJERO FROM USUSU WHERE USUARIO = @USUARIO
						SELECT @IDAFILIADO = @IDTERCERO
						SELECT TOP 1 @N_FACTURA =  IMOV.N_FACTURA FROM IMOV WHERE CNSMOV = @NVOCONSEC
						SELECT @NOMBRECLIENTE = TER.RAZONSOCIAL FROM TER WHERE IDTERCERO = COALESCE(@IDTERCERORESP,@IDTERCERO)
						--SELECT @NOMBRECLIENTE
						--IDTERCERO
						SET @CNSFACJ=NULL
						EXEC SPK_GENCONSECUTIVO @COMPANIA,@CODCAJA,'@FCJ',@CNSFACJ OUTPUT
						SELECT @CNSFACJ =  REPLACE(SPACE(8 - LEN(@CNSFACJ))+LTRIM(RTRIM(@CNSFACJ)),SPACE(1),0)
						PRINT 'INSERTA FCJ =============>'
						
						INSERT INTO FCJ (CNSFACJ,TIPO,CODCAJA,COMPANIA, CLASE_FAC,CNSACJ,ESTADO,USUARIO,SYS_ComputerName,IDTERCERO, FECHA, TIPOEGRESO, OBSERVACION, PROCEDENCIA, VALORTOTAL , USUARIOLOG
						,BANCO, SUCURSAL, CTA_BCO, NOADMISION, NOPRESTACION, CERRADA, ARCHIVADO, IDPLAN, IDAFILIADO, NOMBRECLIENTE, N_FACTURA)
						SELECT @CNSFACJ, 'INTERNO', @CODCAJA, @COMPANIA, 'COBRO', @CNSACJ, 'P', @CODCAJERO, @SYS_COMPUTERNAME, COALESCE(@IDTERCERORESP,@IDTERCERO), DBO.FNK_FECHA_SIN_MLS(GETDATE()), null, '', 'VENTA',@VALORTOTAL, @USUARIO
						, null,null,null, @NVOCONSEC, @NVOCONSEC, 0, 0, @IDPLAN, @IDAFILIADO, @NOMBRECLIENTE, @N_FACTURA
						
						--SELECT * FROM FCJ WHERE CNSFACJ = @CNSFACJ AND CODCAJA = @CODCAJA

						INSERT INTO FCJD (CODCAJA, CNSFACJ, ITEM, CONCEPTO, VALORUNITARIO, CANTIDAD, VALORTOTAL, TIPODCTO)
						SELECT @CODCAJA, @CNSFACJ, LTRIM(RTRIM(STR(ROW_NUMBER() OVER(ORDER BY @CNSFACJ DESC)))), DBO.FNK_VALORVARIABLE ('IDCJCOPA')
						, VALORUNI, CANTIDAD, VALOR, 'N'
						FROM #REGISTROS 

						UPDATE PRESELL SET PRESELL.CNSMOV = @NVOCONSEC, PRESELL.PROCESADO = 1, CNSACJ = @CNSACJ, CNSFACJ = @CNSFACJ FROM PRESELL, #REGISTROS 
						WHERE PRESELL.CNSPRESELL = #REGISTROS.CNSPRESELL  AND PRESELL.USUARIO = @USUARIO AND PRESELL.IDARTICULO = #REGISTROS.IDARTICULO

						SELECT @CNSPCJ = NULL
						EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,'@PCJ', @CNSPCJ OUTPUT  
						SELECT @CNSPCJ = @IDSEDE+REPLACE(SPACE(8 - LEN(@CNSPCJ))+LTRIM(RTRIM(@CNSPCJ)),SPACE(1),0)

						PRINT 'IMGRESA A INSERTAR A PCJ ===>>>>>>>>>>>>>>>>>>>>>>>>>>>><<'

						DECLARE CURSOR_PCJ CURSOR FOR
						SELECT  TIPOPAGO, VALOR, BANCO, SUCURSAL, CTA_BCO , NUMERODOCUMENTO, NUMEROAUTORIZA
						FROM PRESELLR WHERE CNSPRESELL = @CNSPRESELL

						OPEN CURSOR_PCJ;
				
						FETCH NEXT FROM CURSOR_PCJ INTO @TIPOPAGO, @VALOR, @BANCO, @SUCURSAL, @CTA_BCO , @NUMERODOCUMENTO, @NUMEROAUTORIZA;

						WHILE @@FETCH_STATUS = 0
						BEGIN

							SELECT @CNSPCJ = NULL
							EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,'@PCJ', @CNSPCJ OUTPUT  
							SELECT @CNSPCJ = @IDSEDE+REPLACE(SPACE(8 - LEN(@CNSPCJ))+LTRIM(RTRIM(@CNSPCJ)),SPACE(1),0)

							INSERT INTO PCJ (CODCAJA, CNSPCJ, CNSFACJ, TIPOPAGO, VALOR, BANCO, SUCURSAL, CTA_BCO, CNSDOC, NUMERODOCUMENTO, NUMEROAUTORIZA,
							FECHA, CNSACJ, IDTERCERO, IMPRESO, CODCAJADEP, CNSFACJDEP, DOCORIGEN, BANCO_DEP, CTA_BCO_DEP, CUENTA,
							VLR_DEVUELTO, VARIOS, TRASLADADO, TRASLADO_CNSFACJ, VALORREINTEGRO, N_FACTURA)
							SELECT @CODCAJA, @CNSPCJ, @CNSFACJ, @TIPOPAGO, @VALOR, @BANCO, @SUCURSAL, @CTA_BCO
							, NULL, @NUMERODOCUMENTO, @NUMEROAUTORIZA,DBO.FNK_GETDATE(),
							@CNSACJ, @IDTERCERO, 0, NULL, NULL, 0, '', '', NULL, 0, 0, '', '', 0, @N_FACTURA

							FETCH NEXT FROM CURSOR_PCJ INTO @TIPOPAGO, @VALOR, @BANCO, @SUCURSAL, @CTA_BCO , @NUMERODOCUMENTO, @NUMEROAUTORIZA;
						END

						CLOSE CURSOR_PCJ;
						DEALLOCATE CURSOR_PCJ;

						UPDATE PRESELLR SET CNSACJ = @CNSACJ , CNSFACJ = @CNSFACJ, PROCESADO = 1 WHERE PRESELLR.CNSPRESELL = @CNSPRESELL

						--SELECT @NVOCONSEC, @COMPANIA, @SEDE, @USUARIO, 'INV'
						PRINT 'INGRESA==========> SPK_FAC_VENTA_INV'
						EXEC SPK_FAC_VENTA_INV @NVOCONSEC, @COMPANIA, @SEDE, @USUARIO, 'INV'
						PRINT 'SALIO==========> SPK_FAC_VENTA_INV'

						--@N_FACTURA
						SELECT TOP 1 @N_FACTURA =  IMOV.N_FACTURA FROM IMOV WHERE CNSMOV = @NVOCONSEC
						UPDATE FCJ SET N_FACTURA = @N_FACTURA WHERE FCJ.CNSFACJ = @CNSFACJ AND FCJ.CODCAJA = @CODCAJA

						update FTR set IDTERCERO = COALESCE(@IDTERCERORESP,@IDTERCERO) WHERE FTR.N_FACTURA = @N_FACTURA
						--SELECT @N_FACTURA 


						-- CONFIRMAR RECIBO PENDIENTE
						EXEC SPK_CIERRERECIBO_CAJA @CODCAJA, @CNSFACJ, @COMPANIA, @IDSEDE, @USUARIO, @SYS_COMPUTERNAME
						EXEC SPK_ACTUALIZA_SALDO_BANCO @CNSFACJ, @CODCAJA
						EXEC SPK_NC_CONTAB_CAJA_ING @CNSFACJ, @CODCAJA, @USUARIO, @SYS_COMPUTERNAME, @COMPANIA, @IDSEDE, NULL
						--TERMINA DE CONFIRMAR RECIBO


						--COMMIT TRANSACTION;
				END TRY 
				BEGIN CATCH
					-- Si ocurre algún error, revierte todo
					ROLLBACK TRANSACTION;

					-- Opcional: Manejo del error
					PRINT 'Error detectado: ' + ERROR_MESSAGE();
				END CATCH;
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'CREA_TERCERO'
	BEGIN
		SELECT @datoCreaCliente = datoCreaCliente ,@PROCESO = PROCESO
		FROM OPENJSON(@PARAMETROS)
		WITH(	PROCESO	VARCHAR(20)		'$.PROCESO' , datoCreaCliente NVARCHAR(MAX) AS JSON )

		SELECT * INTO #TERCERO FROM OPENJSON(@datoCreaCliente)
		WITH(
		NATJURIDICA		VARCHAR(20)		'$.NATJURIDICA'		,TIPOREGIMEN	VARCHAR(20)		'$.TIPOREGIMEN'
		,TIPO_ID		VARCHAR(20)		'$.TIPO_ID'			,NIT			VARCHAR(20)		'$.NIT'			,RAZONSOCIAL			VARCHAR(500)		'$.RAZONSOCIAL'
		,EMAIL			VARCHAR(200)	'$.EMAIL'			,DIRECCION		VARCHAR(500)	'$.DIRECCION'	,TELEFONOS			VARCHAR(20)		'$.TELEFONOS')

		SELECT @NATJURIDICA = NATJURIDICA, @TIPOREGIMEN = TIPOREGIMEN , @TIPO_ID = TIPO_ID, @NIT = NIT, @RAZONSOCIAL = RAZONSOCIAL
			, @EMAIL = EMAIL, @DIRECCION = DIRECCION, @TELEFONOS = TELEFONOS FROM #TERCERO
		

		IF NOT EXISTS(SELECT 1 FROM  TER WHERE NIT = @NIT AND TIPO_ID = @TIPO_ID)
		BEGIN
			SELECT @IDTERCERO = NULL 
			EXEC SPK_GENCONSECUTIVO '01', @SEDE, '@TER', @IDTERCERO OUTPUT  
			SELECT @IDTERCERO = @SEDE + REPLACE(SPACE(8 - LEN(@IDTERCERO))+LTRIM(RTRIM(@IDTERCERO)),SPACE(1),0)
		END

		IF EXISTS (SELECT 1 FROM TER WHERE IDTERCERO = @IDTERCERO)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El IDTERCERO: '+ @IDTERCERO+ ' , ya existe, comunicarse con el Area de Sistemas'
		END
		IF (SELECT ISNUMERIC(@NIT)) = 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El documento debe de contener solo numeros'
		END
		IF (SELECT CHARINDEX(' ', @NIT)) > 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El documento debe debe de tener espacios en blanco'
		END
		IF (LEN(@NIT) > 11)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El documento no puede ser mayor a 11 digitos'
		END
		IF EXISTS (SELECT  1 FROM TER 
			WHERE EXISTS (SELECT * FROM TEXCA WHERE TEXCA.IDCATEGORIA = DBO.FNK_VALORVARIABLE('TERCATCLIENTE') AND TER.IDTERCERO = TEXCA.IDTERCERO )
			AND TER.NIT = @NIT AND TER.TIPO_ID = @TIPO_ID
			)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El tipo de documento y documento ya existen, favor de validar.'
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF NOT EXISTS(SELECT 1 FROM  TER WHERE NIT = @NIT AND TIPO_ID = @TIPO_ID)
				BEGIN
					IF COALESCE(@IDTERCERO,'') = ''
					BEGIN
						EXEC SPK_GENCONSECUTIVO '01', @SEDE, '@TER', @IDTERCERO OUTPUT  
						SELECT @IDTERCERO = @SEDE + REPLACE(SPACE(8 - LEN(@IDTERCERO))+LTRIM(RTRIM(@IDTERCERO)),SPACE(1),0)
					END

					INSERT INTO TER (
					IDTERCERO, RAZONSOCIAL, NIT, DV, TIPO_ID, 
					CIUDAD, DIRECCION, TELEFONOS, NIT_R, ESTADO,  
					ENVIODICAJA, MODOCOPAGO, DIASVTO, ESEXTRANJERO, NATJURIDICA,
					TIPOREGIMEN, EMAIL, IDACTIVIDAD, COD_RESP_FISCAL, FORMAPRE, F_INSCRIPTO
					)  
					SELECT @IDTERCERO, @RAZONSOCIAL, @NIT, DBO.FNK_CALCULA_DV(@NIT), @TIPO_ID, NULL, @DIRECCION, @TELEFONOS, NULL, 'Activo'
					,NULL, 'Normal', NULL, NULL, 'Juridica', 'C', @EMAIL, DBO.FNK_VALORVARIABLE('DEFAULT_PART_AEC'), DBO.FNK_VALORVARIABLE('DEFAULT_PART_RF')
					,NULL, NULL

					INSERT INTO TEXCA (IDTERCERO, IDCATEGORIA, ESTADO)
					SELECT @IDTERCERO, DBO.FNK_VALORVARIABLE('TERCATCLIENTE') , 'Activo'
				END
				ELSE
				BEGIN
					IF NOT EXISTS (SELECT  1 FROM TER 
						WHERE EXISTS (SELECT * FROM TEXCA WHERE TEXCA.IDCATEGORIA = DBO.FNK_VALORVARIABLE('TERCATCLIENTE') AND TER.IDTERCERO = TEXCA.IDTERCERO )
						AND TER.NIT = @NIT AND TER.TIPO_ID = @TIPO_ID)
					BEGIN
						SELECT @IDTERCERO = IDTERCERO FROM TER WHERE TER.NIT = @NIT AND TER.TIPO_ID = @TIPO_ID
						INSERT INTO TEXCA (IDTERCERO, IDCATEGORIA, ESTADO)
						SELECT @IDTERCERO, DBO.FNK_VALORVARIABLE('TERCATCLIENTE') , 'Activo'
					END
				END
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK, TER.DIRECCION, TER.DV, TER.EMAIL, TER.EMAILRECIBOFE, TER.IDTERCERO, TER.NIT, TER.RAZONSOCIAL, TER.TELEFONOS, TER.TIPO_ID FROM TER WHERE IDTERCERO = @IDTERCERO
		END 
	END
	IF @METODO = 'VALIDA_REC'
	BEGIN
		SELECT @CODCAJA = CODCAJA, @IDBODEGA = IDBODEGA 
		FROM OPENJSON(@PARAMETROS)
		WITH(	CODCAJA	VARCHAR(20)		'$.CODCAJA', IDBODEGA	VARCHAR(20)		'$.IDBODEGA' )

		IF NOT EXISTS (SELECT 1 FROM PRESELL WHERE COALESCE(PROCESADO,0)=0 AND USUARIO = @USUARIO AND CODCAJA = @CODCAJA )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No hay registro a recaudar.'
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				SELECT 'OK' OK
				SELECT @CNSPRESELL= CNSPRESELL, @VALORTOTAL = SUM(VALOR) FROM PRESELL 
				WHERE COALESCE(PROCESADO,0)=0 AND USUARIO = @USUARIO AND CODCAJA = @CODCAJA
				GROUP BY CNSPRESELL

				SELECT @VALORRECAUDADO =  SUM(VALOR) FROM PRESELLR WHERE CNSPRESELL = @CNSPRESELL

				SELECT @CNSPRESELL CNSPRESELL, @VALORTOTAL VALORTOTAL, COALESCE(@VALORRECAUDADO,0) VALORRECAUDADO
						,@VALORTOTAL- COALESCE(@VALORRECAUDADO,0) [VALORPENDIENTE]

			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'GUARDA_RECAUDO'
	BEGIN
		SELECT @CNSPRESELL = CNSPRESELL, @VALOR = VALOR, @TIPOPAGO = TIPOPAGO, @BANCO = BANCO, @CODCAJA = CODCAJA
				, @SUCURSAL = SUCURSAL, @CTA_BCO = CTA_BCO, @NUMERODOCUMENTO = NUMERODOCUMENTO
		FROM OPENJSON(@PARAMETROS)
		WITH(	CNSPRESELL		VARCHAR(20)		'$.CNSPRESELL'	, VALOR				DECIMAL(14,2)	'$.VALOR'			, TIPOPAGO	VARCHAR(20)		'$.TIPOPAGO'
				, BANCO			VARCHAR(20)		'$.BANCO'		, SUCURSAL			VARCHAR(20)		'$.SUCURSAL'
				, CTA_BCO		VARCHAR(20)		'$.CTA_BCO'		, NUMERODOCUMENTO	VARCHAR(20)		'$.NUMERODOCUMENTO', CODCAJA	VARCHAR(20)		'$.CODCAJA')

		SELECT @VALORRECAUDADO =  SUM(VALOR) FROM PRESELLR WHERE CNSPRESELL = @CNSPRESELL
		SELECT @VALORTOTAL =  SUM(VALOR) FROM PRESELL WHERE CNSPRESELL = @CNSPRESELL

		IF @VALORTOTAL < @VALORRECAUDADO+@VALOR
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El valor ingresado supera el monto pendiente.'
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF @TIPOPAGO = DBO.FNK_VALORVARIABLE('IDCJFPAEFECTIVO') AND EXISTS (SELECT 1 FROM PRESELLR WHERE CNSPRESELL = @CNSPRESELL AND TIPOPAGO = @TIPOPAGO )
				BEGIN
					UPDATE PRESELLR SET VALOR = VALOR+@VALOR WHERE PRESELLR.CNSPRESELL = @CNSPRESELL AND TIPOPAGO = @TIPOPAGO
				END
				ELSE
				BEGIN
					INSERT INTO PRESELLR (CNSPRESELL, CODCAJA, TIPOPAGO, VALOR, USUARIO, BANCO, SUCURSAL, CTA_BCO, NUMERODOCUMENTO, FECHA )
					SELECT @CNSPRESELL, @CODCAJA, @TIPOPAGO, @VALOR, @USUARIO, @BANCO, @SUCURSAL, @CTA_BCO, @NUMERODOCUMENTO, DBO.FNK_GETDATE()
				END
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'ELIMINA_RECAUDO'
	BEGIN
		SELECT @CNSPRESELL = CNSPRESELL, @ITEM = ITEM
		FROM OPENJSON(@PARAMETROS)
		WITH(	CNSPRESELL		VARCHAR(20)		'$.CNSPRESELL'	, ITEM				INT	'$.ITEM')

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				DELETE FROM PRESELLR  WHERE ITEM = @ITEM AND CNSPRESELL = @CNSPRESELL
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'IMPRESION_FTR'
	BEGIN
		SELECT @N_FACTURA = N_FACTURA
		FROM OPENJSON(@PARAMETROS)
		WITH(	N_FACTURA	VARCHAR(20)		'$.N_FACTURA')

		IF 'VALIDACION' <> 'VALIDACION'
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'MENSAJE'
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				SELECT 'OK' OK
				SELECT FTR.N_FACTURA, FTR.IDSEDE, SED.DESCRIPCION [SED_DESC], FTR.VR_TOTAL, FTR.ESTADO, FTR.FECHAFAC, FTR.F_FACTURA, TER_AFI.IDTERCERO, TER_AFI.RAZONSOCIAL, TER_AFI.DIRECCION
					, TER_AFI.TIPO_ID, TER_AFI.NIT, TER_AFI.TELEFONOS, TER_AFI.EMAIL, TER.RAZONSOCIAL [TER_RAZONSOCIAL], TER.IDTERCERO [TER_IDTERCERO]
					, FTR.IDPLAN, PLN.DESCPLAN, FTR.EMPLEADO, USUSU.NOMBRE [USUSU_NOMBRE] 
					--, COALESCE(DBO.FNK_QRCODE(FTR.N_FACTURA),'') [CODQR]
					, CONCAT(TER_AFI.TIPO_ID , '-', TER_AFI.NIT, ', ', TER_AFI.RAZONSOCIAL,', ', CONVERT(DATE,FTR.FECHAFAC)) [CODQR]
				FROM  FTR 
					LEFT JOIN SED ON FTR.IDSEDE = SED.IDSEDE
					LEFT JOIN TER TER_AFI ON FTR.IDAFILIADO = TER_AFI.IDTERCERO
					LEFT JOIN TER ON FTR.IDTERCERO = TER.IDTERCERO
					LEFT JOIN PLN ON FTR.IDPLAN = PLN.IDPLAN
					--LEFT JOIN TER TER_AFI ON AFI.DOCIDAFILIADO = TER_AFI.NIT AND AFI.TIPO_DOC = TER_AFI.TIPO_ID
					LEFT JOIN USUSU ON FTR.EMPLEADO = USUSU.USUARIO
				WHERE FTR.N_FACTURA = @N_FACTURA

				SELECT FTRD.CNSFTR, FTRD.N_CUOTA, FTRD.DB_CR, FTRD.VR_TOTAL, FTRD.PREFIJO, FTRD.ANEXO, FTRD.REFERENCIA, FTRD.CANTIDAD, FTRD.VALOR, FTRD.VLR_SERVICI, FTRD.NOADMISION, FTRD.NOPRESTACION
					, FTRD.N_FACTURA, FTRD.PCOSTO, FTRD.FECHAPREST, FTRD.PIVA, FTRD.VIVA, IEXI.NOLOTEPEDIDO, IEXI.RINVIMA  , FTRD.NOLOTE
				FROM  FTRD 
					INNER JOIN FTR ON FTRD.N_FACTURA = FTR.N_FACTURA
					INNER JOIN IMOV ON FTR.NOREFERENCIA = IMOV.CNSMOV
					LEFT JOIN IART ON FTRD.REFERENCIA = IART.IDARTICULO
					LEFT JOIN IEXI ON FTRD.REFERENCIA = IEXI.IDARTICULO AND FTRD.NOLOTE = IEXI.NOLOTE AND IEXI.IDBODEGA = IMOV.IDBODEGA
				WHERE FTRD.N_FACTURA = @N_FACTURA
					 

				SELECT PCJ.CNSPCJ, PCJ.TIPOPAGO, FPA.DESCRIPCION, PCJ.VALOR, PCJ.BANCO, PCJ.SUCURSAL, PCJ.CTA_BCO, PCJ.NUMERODOCUMENTO, PCJ.NUMEROAUTORIZA 
				FROM FCJ 
					LEFT JOIN PCJ ON FCJ.CODCAJA = PCJ.CODCAJA AND FCJ.CNSFACJ = PCJ.CNSFACJ
					LEFT JOIN FPA ON PCJ.TIPOPAGO = FPA.FORMAPAGO
				WHERE FCJ.N_FACTURA = @N_FACTURA
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'ULTIMA_VENTA'
	BEGIN
		SELECT @CODCAJA = CODCAJA
		FROM OPENJSON(@PARAMETROS)
		WITH(	CODCAJA	VARCHAR(20)		'$.CODCAJA')

		SELECT 'OK' OK
		--IDBODEGA
		SELECT TOP 1 TER.RAZONSOCIAL, TER.TIPO_ID, TER.NIT, FTR.N_FACTURA, FTR.VR_TOTAL, IMOV.FECHAMOV, IMOV.USUARIO  , PRESELL.CNSPRESELL
		FROM PRESELL
			INNER JOIN IMOV ON PRESELL.CNSMOV = IMOV.CNSMOV 
			LEFT JOIN TER ON COALESCE(IMOV.IDTERCERORESP, IMOV.IDTERCERO) = TER.IDTERCERO
			LEFT JOIN FTR ON IMOV.N_FACTURA = FTR.N_FACTURA
		WHERE PRESELL.CODCAJA = @CODCAJA AND COALESCE(PRESELL.PROCESADO,0) = 1 AND IMOV.USUARIO = @USUARIO AND CONVERT(DATE,IMOV.FECHAMOV) = CONVERT(DATE,GETDATE())
		GROUP BY TER.RAZONSOCIAL, TER.TIPO_ID, TER.NIT, FTR.N_FACTURA, FTR.VR_TOTAL,IMOV.IDTERCERO, IMOV.FECHAMOV ,PRESELL.CODCAJA, PRESELL.PROCESADO,IMOV.USUARIO, PRESELL.CNSPRESELL
		ORDER BY  IMOV.FECHAMOV  DESC

		SELECT TOP 1 @N_FACTURA = FTR.N_FACTURA, @IDBODEGA = IMOV.IDBODEGA
		FROM PRESELL
			INNER JOIN IMOV ON PRESELL.CNSMOV = IMOV.CNSMOV 
			LEFT JOIN TER ON COALESCE(IMOV.IDTERCERORESP, IMOV.IDTERCERO) = TER.IDTERCERO
			LEFT JOIN FTR ON IMOV.N_FACTURA = FTR.N_FACTURA
		WHERE PRESELL.CODCAJA = @CODCAJA AND COALESCE(PRESELL.PROCESADO,0) = 1 AND IMOV.USUARIO = @USUARIO AND CONVERT(DATE,IMOV.FECHAMOV) = CONVERT(DATE,GETDATE())
		GROUP BY TER.RAZONSOCIAL, TER.TIPO_ID, TER.NIT, FTR.N_FACTURA, FTR.VR_TOTAL,IMOV.IDTERCERO, IMOV.FECHAMOV ,PRESELL.CODCAJA, PRESELL.PROCESADO,IMOV.USUARIO,IMOV.IDBODEGA
		ORDER BY  IMOV.FECHAMOV  DESC

		SELECT   FTRD.CNSFTR, FTRD.N_CUOTA, FTRD.FECHA, FTRD.DB_CR, FTRD.VR_TOTAL, FTRD.PREFIJO, FTRD.ANEXO, FTRD.REFERENCIA
				, FTRD.CANTIDAD, FTRD.VALOR, FTRD.VLR_SERVICI, FTRD.VLR_COPAGOS    
				, FTRD.VLR_PAGCOMP, FTRD.NOADMISION, FTRD.NOPRESTACION, FTRD.N_FACTURA, FTRD.PCOSTO, FTRD.FECHAPREST
				, FTRD.PIVA, FTRD.VIVA, FTRD.IDARTICULO, FTRD.NOLOTE, FTRD.PROCEDENCIA  , IEXI.NOLOTEPEDIDO, IEXI.RINVIMA  , IEXI.IDBODEGA  
		FROM [dbo].[FTRD] 
			LEFT JOIN IEXI ON FTRD.REFERENCIA = IEXI.IDARTICULO AND FTRD.NOLOTE = IEXI.NOLOTE AND IEXI.IDBODEGA = @IDBODEGA
		WHERE FTRD.N_FACTURA = @N_FACTURA  
		ORDER BY ANEXO ASC
	END
	IF @METODO = 'METODOS_PAGO'
	BEGIN
		SELECT @CODCAJA = CODCAJA
		FROM OPENJSON(@PARAMETROS)
		WITH(	CODCAJA	VARCHAR(20)		'$.CODCAJA')

		SELECT 'OK' OK

		--SELECT FPA.FORMAPAGO value, FPA.DESCRIPCION label, FPA.FISICO, FPA.REQBCO, FPA.REQDOC, FPA.REQAUT, FPA.CXC, FPA.AUTINT, FPA.MEDIOPAGO, FPA.TEDEVOLUCION, FPA.CUENTA, FPA.CEROENAPERTURA
		--		, FPA.USAR_CUENTACAJA, FPA.REQCTA_BCO_DEP, FPA.GENCHEQUE, FPA.COMPROBANTE_EGR, FPA.DATAFONO 
		--FROM  FPA WHERE FPA.FORMAPAGO IN (SELECT CODIGO FROM TGEN WHERE TABLA = @CODCAJA AND CAMPO = 'FORMAPAGO')

		SELECT
			FPA.FORMAPAGO value
			,FPA.DESCRIPCION label
			,FISICO = CAST(FISICO AS BIT)
			,REQBCO = CAST(REQBCO AS BIT)
			,REQDOC = CAST(REQDOC AS BIT)
			,REQAUT = CAST(REQAUT AS BIT)
			,CXC = CAST(CXC AS BIT)
			,AUTINT = CAST(AUTINT AS BIT)
			,MEDIOPAGO  = CAST(MEDIOPAGO AS BIT)
			,TEDEVOLUCION = CAST(TEDEVOLUCION AS BIT)
			,CUENTA
			,CEROENAPERTURA = CAST(CEROENAPERTURA AS BIT)
			,USAR_CUENTACAJA = CAST(USAR_CUENTACAJA AS BIT)  
			,REQCTA_BCO_DEP = CAST(REQCTA_BCO_DEP AS BIT)
			,GENCHEQUE = CAST(GENCHEQUE AS BIT)
			,COMPROBANTE_EGR
			,DATAFONO = CAST(COALESCE(DATAFONO,0) AS BIT)
			,PAGARE = CAST(CASE WHEN U1.DATO = FPA.FORMAPAGO THEN 1 ELSE 0 END AS BIT)
			,DESCUENTO_NOMINA = CAST(CASE WHEN U2.DATO = FPA.FORMAPAGO THEN 1 ELSE 0 END AS BIT)
			,TERCEROS = (SELECT TER.IDTERCERO value, TER.RAZONSOCIAL label FROM BCO INNER JOIN TER ON BCO.IDTERCERO = TER.IDTERCERO WHERE CAST(REQBCO AS BIT) = 1 FOR JSON PATH)
		FROM FPA
			INNER JOIN TGEN ON FPA.FORMAPAGO = TGEN.CODIGO AND TGEN.CAMPO = 'FORMAPAGO' AND TGEN.TABLA = 'C003'
			LEFT JOIN USVGS U1 ON U1.IDVARIABLE = 'IDFPAPAGARE'
			LEFT JOIN USVGS U2 ON U2.IDVARIABLE = 'IDCJFPADESCUENT_NOMI'
		
	END
	IF @METODO = 'BUS_CODBARRA'
	BEGIN
		SELECT @CODBARRA = CODBARRA, @IDTERCERO = IDTERCERO, @IDPLAN = IDPLAN
		FROM OPENJSON(@PARAMETROS)
		WITH(	CODBARRA	VARCHAR(100)	'$.CODBARRA', IDTERCERO	VARCHAR(100)	'$.IDTERCERO'
				, IDPLAN	VARCHAR(100)	'$.IDPLAN')

		IF 'VALIDACION' <> 'VALIDACION'
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'MENSAJE'
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				SELECT 'OK' OK
				IF EXISTS ( SELECT 1 FROM IEXI IE     
								INNER JOIN IART ON IE.IDARTICULO = IART.IDARTICULO           
								INNER JOIN TER ON IART.IDFABRICANTE = TER.IDTERCERO
							WHERE IE.IDARTICULO IN (
							SELECT TGEN.DATO1 FROM TGEN INNER JOIN IART ON IART.IDARTICULO = TGEN.DATO1 
							WHERE TGEN.TABLA = 'IART' AND TGEN.CAMPO = 'CODEBAR' AND TGEN.CODIGO = @CODBARRA )
							)
				BEGIN
					SELECT 'SI' DATO
					--SELECT TGEN.DATO1, IART.DESCRIPCION, CODIGO, TGEN.IDTGEN FROM TGEN INNER JOIN IART ON IART.IDARTICULO = TGEN.DATO1 
					--WHERE TGEN.TABLA = 'IART' AND TGEN.CAMPO = 'CODEBAR' AND TGEN.CODIGO = @CODBARRA

					SELECT IE.IDARTICULO, IE.EXISLOTE, IE.IDBODEGA, IE.NOLOTE, IE.FECHAVENCE, IE.NOLOTEPEDIDO, IE.PCOSTO, IE.RINVIMA                   
					, IE.VR_ANTESIVA, IE.VR_IVA, IE.CNSFCOM, IE.CNSMOV, IE.ESTADO , IART.DESCRIPCION                
					, IART.IDSERVICIO                              
					, DBO.FNK_VALORSERVICIO(@IDTERCERO , @IDPLAN ,IART.IDARTICULO,null,GETDATE(),0) [VALOR]   
					, IART.CODBARRA, IE.ID, IART.IDFABRICANTE, TER.RAZONSOCIAL
					FROM IEXI IE     
					INNER JOIN IART ON IE.IDARTICULO = IART.IDARTICULO           
					INNER JOIN TER ON IART.IDFABRICANTE = TER.IDTERCERO
					WHERE IE.IDARTICULO IN (
											SELECT TGEN.DATO1 FROM TGEN INNER JOIN IART ON IART.IDARTICULO = TGEN.DATO1 
											WHERE TGEN.TABLA = 'IART' AND TGEN.CAMPO = 'CODEBAR' AND TGEN.CODIGO = @CODBARRA )
					ORDER BY  IE.FECHAVENCE ASC
				END
				ELSE
				BEGIN
					SELECT 'NO' DATO
				END
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'RPT_VENTAS'
	BEGIN
		SELECT @FINICIAL = FINICIAL , @FFINAL = FFINAL
		FROM OPENJSON(@PARAMETROS)
		WITH(	FINICIAL	DATE	'$.FINICIAL', FFINAL	DATE	'$.FFINAL')
		
		SELECT 'OK'OK
		SELECT FTR.N_FACTURA, FTR.CNSFCT, FTR.CLASE, FTR.IDTERCERO,  FTR.F_FACTURA, FTR.F_VENCE
		, FTR.VR_TOTAL, FTR.ESTADO, FTR.IDAFILIADO, FTR.EMPLEADO, FTR.NOREFERENCIA, FTR.PROCEDENCIA, FTR.TIPOFAC, FTR.TIPOVENTA    
		, FTR.TIPO_OPERACION, FTR.TIPO_DOCUMENTO, IMOV.CNSMOV, IMOV.IDBODEGA, IMOV.IDTIPOMOV, IMOV.NODOCUMENTO, IMOV.FECHAMOV, IMOV.IDSOLICITA, IMOV.IDRECIBE    
		, TER.RAZONSOCIAL, PLN.DESCPLAN, SED.DESCRIPCION [SED_DESC],USUSU.NOMBRE [USU_COBRA]    
		, (SELECT TOP 1  PRESELL.CNSPRESELL FROM PRESELL WHERE PRESELL.CNSMOV = IMOV.CNSMOV) CNSPRESELL     
		FROM [dbo].[FTR]
			INNER JOIN  IMOV ON FTR.NOREFERENCIA = IMOV.CNSMOV      
			LEFT JOIN TER ON FTR.IDTERCERO = TER.IDTERCERO     
			LEFT JOIN PLN ON FTR.IDPLAN = PLN.IDPLAN       
			LEFT JOIN SED ON FTR.IDSEDE = SED.IDSEDE   
			LEFT JOIN USUSU ON FTR.USUARIOFACTURA = USUSU.USUARIO    
		WHERE IMOV.IDTIPOMOV = DBO.FNK_VALORVARIABLE('IDINVENTA_PARTICULAR') 
			AND CONVERT(DATE, FTR.FECHAFAC) >= CONVERT(DATE, @FINICIAL) 
			AND CONVERT(DATE, FTR.FECHAFAC) <= CONVERT(DATE, @FFINAL) 
		ORDER BY FTR.FECHAFAC DESC

		SELECT  FTRD.N_FACTURA, FTRD.CNSFTR, FTRD.N_CUOTA, FTRD.FECHA, FTRD.DB_CR, FTRD.VR_TOTAL, FTRD.PREFIJO, FTRD.ANEXO, FTRD.REFERENCIA, FTRD.CANTIDAD, FTRD.VALOR, FTRD.VLR_SERVICI, FTRD.VLR_COPAGOS 
		, FTRD.VLR_PAGCOMP, FTRD.NOADMISION, FTRD.NOPRESTACION,  FTRD.PCOSTO, FTRD.FECHAPREST, FTRD.PIVA, FTRD.VIVA, FTRD.IDARTICULO, FTRD.NOLOTE, FTRD.PROCEDENCIA 
		FROM [dbo].[FTRD]
		WHERE  FTRD.CNSFTR IN ( SELECT  FTR.CNSFCT   
								FROM [dbo].[FTR]
									INNER JOIN  IMOV ON FTR.NOREFERENCIA = IMOV.CNSMOV      
									LEFT JOIN TER ON FTR.IDTERCERO = TER.IDTERCERO     
									LEFT JOIN PLN ON FTR.IDPLAN = PLN.IDPLAN       
									LEFT JOIN SED ON FTR.IDSEDE = SED.IDSEDE   
									LEFT JOIN USUSU ON FTR.USUARIOFACTURA = USUSU.USUARIO    
								WHERE IMOV.IDTIPOMOV = DBO.FNK_VALORVARIABLE('IDINVENTA_PARTICULAR') 
									AND CONVERT(DATE, FTR.FECHAFAC) >= CONVERT(DATE, @FINICIAL) 
									AND CONVERT(DATE, FTR.FECHAFAC) <= CONVERT(DATE, @FFINAL) 
								 )
		ORDER BY [dbo].[FTRD].[CNSFTR] 

	END
END




