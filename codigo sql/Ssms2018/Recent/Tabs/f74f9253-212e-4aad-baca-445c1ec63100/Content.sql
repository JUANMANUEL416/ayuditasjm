CREATE OR ALTER PROCEDURE DBO.SPQ_ENFERMERIA
	@JSON  NVARCHAR(MAX)
WITH ENCRYPTION
AS
DECLARE @PARAMETROS         NVARCHAR(MAX)	,@MODELO			VARCHAR(100)    ,@METODO        VARCHAR(100)	,@USUARIO       VARCHAR(12)
		,@GRUPO				VARCHAR(8)		,@SYS_COMPUTERNAME	VARCHAR(254)    ,@IDSEDE          VARCHAR(5)		,@A             INT
		,@DATOS             VARCHAR(MAX)	,@IDMOTIVO VARCHAR(100)				,@AUX			NVARCHAR(MAX)	,@CLASE			VARCHAR(20)
		,@COMPANIA			VARCHAR(2)		,@NOPRESUPUESTO VARCHAR(20)
		,@MINANTES INT = DBO.FNK_VALORVARIABLE('MINUTO_ANTESTURENF')
		,@TIPO_USUARIO VARCHAR(20) 
		,@IDMEDICO VARCHAR (20) 
		,@ACCESO INT 
		,@SECTOR VARCHAR(20) 
		,@CODTURNO VARCHAR(20)
		,@ESTADO VARCHAR(2)
		,@FECHA VARCHAR(20)
		,@IDTSECFU VARCHAR(20)
--RECIBIR IENF
DECLARE @LISTA  TABLE (ID INT IDENTITY(1,1),	CNSMOV	VARCHAR(20),	IDARTICULO	VARCHAR(20),	NOLOTE		VARCHAR(20),	NOADMISION	VARCHAR(20), 
						CLASE	VARCHAR(10),	CODOM	VARCHAR(20),	IDSERVICIO	VARCHAR(20),	CNSHCA		VARCHAR(20),	PRESUNI		VARCHAR(20),
						EQUICC	DECIMAL(14,2),	CANTMAX INT,			CANTREP		INT,			TRANSFORMADO BIT )
DECLARE @T TABLE (ITEM SMALLINT, TIPO VARCHAR(20), SUBTIPO VARCHAR(20), TITULO VARCHAR(100), CANTIDAD INT, CNS VARCHAR(20), OBS VARCHAR(254), COLOR VARCHAR(10), ICONO VARCHAR(50), ESTITULO SMALLINT)

DECLARE @FIX INT = 1, @FIX_TO INT,		@CNSIENF	INT,		@CODOM		VARCHAR(20) 
		,@IDSERVICIO VARCHAR(20), @CNSHCA	VARCHAR(20), @TIPO		VARCHAR(3)
		,@HOY DATETIME=CONVERT(SMALLDATETIME,GETDATE()), @FECHASOL DATETIME,	 @CANTIDAD	DECIMAL(18,6), @EQUICC DECIMAL(14,2)
		,@CNSMOV VARCHAR(20), @NOLOTE VARCHAR(20), @CONSECUTIVOHCA VARCHAR(20), @CANTIDAD_RECIBIR DECIMAL (14,2), @CNSIZSOLD VARCHAR(20), @IDARTICULO VARCHAR(20)
		,@FILTRO VARCHAR(200), @FECHAINI  VARCHAR(12), @FECHAFIN VARCHAR(12), @PROCEDENCIA VARCHAR(20), @ARTICULO VARCHAR(30),@ITEM INT, @TODOS BIT
		,@VECES INT = 0, @CNSHBALI VARCHAR(20), @NCONSECUTIVO INT, @HCA NVARCHAR(MAX), @TIPOT VARCHAR(20), @SUBTIPO VARCHAR(20), @NOPRESTACION VARCHAR(20)
		,@NOITEM INT, @CMD NVARCHAR(MAX), @HABCAMA VARCHAR(10), @NOADMISION VARCHAR(16), @CNSIZSOL VARCHAR(20), @IDBODEGAATIENDE VARCHAR(20), @HABCAMAANT VARCHAR(20)
		,@IDAFILIADO VARCHAR(20), @TIPOESTANCIA VARCHAR(20)

----NOTA DE CIERRE
DECLARE @CONSECUTIVO VARCHAR(20),
		@CLASEPLANTILLA VARCHAR(20),
		@AMBITO VARCHAR(20), 
		@IDDX VARCHAR(20), 
		@OBSERVAANU VARCHAR(2048)

--SPK_IENF
DECLARE @INSUMOSCONMED VARCHAR(20)
	,@IDINVITMOVENF VARCHAR(20)			= DBO.FNK_VALORVARIABLE('IDINVITMOVENF')
	,@DEINVNODESER VARCHAR(20)			= DBO.FNK_VALORVARIABLE('DEINVNODESER')
	,@PIDE_INSUMOSCON_MEDI VARCHAR(20)	= DBO.FNK_VALORVARIABLE('PIDE_INSUMOSCON_MEDI')
	,@IENF_MEZCLA VARCHAR(20)			= DBO.FNK_VALORVARIABLE('IENF_MEZCLA')
	,@OMCODMEZCLA VARCHAR(20)			= DBO.FNK_VALORVARIABLE('OMCODMEZCLA')
	,@IENF_NUTP VARCHAR(20)				= DBO.FNK_VALORVARIABLE('IENF_NUTP')
	,@OMCODNUTRICIONP VARCHAR(20)		= DBO.FNK_VALORVARIABLE('OMCODNUTRICIONP')
	,@OMCODHEMODERIVADOS VARCHAR(20)	= DBO.FNK_VALORVARIABLE('OMCODHEMODERIVADOS')
	,@F_INIVERSION180 VARCHAR(20)		= DBO.FNK_VALORVARIABLE('F_INIVERSION180')
	,@TSEFCU_XADMISION VARCHAR(20)		= DBO.FNK_VALORVARIABLE('TSEFCU_XADMISION')
	,@CNSLOG VARCHAR(20)
DECLARE @DBLOG VARCHAR(30), @DB_BASE VARCHAR(20)

BEGIN
	SET LANGUAGE Spanish; 
	SET DATEFORMAT dmy
	SELECT @A = ISJSON(@JSON)
	IF @A = 0 
	BEGIN
		RAISERROR('Json: Formato Erroneo',16,1)
		RETURN
	END 
	SELECT TOP 1 @DBLOG=DB_LOG, @DB_BASE=DB_NAME() FROM BDIX..CIA WHERE DB_BASE=DB_NAME()

	SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS , @USUARIO = USUARIO
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)     AS JSON
	)

	--DEFINICION DE TABLA DE ERRORES
	DECLARE @TBLERRORES TABLE(ERROR VARCHAR(200));
	-- TOMA DEL GRUPO, SYS_COMPUTERNAME, SEDE   DE ACUERDO AL USUARIO
	PRINT 'USUARIO:'+@USUARIO
	SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO) FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @IDSEDE = IDSEDE, @COMPANIA=COMPANIA FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME
	SELECT @IDMEDICO = IDMEDICO FROM USUSU WHERE USUARIO=@USUARIO
	IF COALESCE(@IDSEDE,'') = '' SELECT @IDSEDE = '01'

	IF @METODO = 'VALIDA_ACCESO'
	BEGIN
		SELECT @TIPO_USUARIO = TIPO_USUARIO FROM MED WHERE IDMEDICO = @IDMEDICO
		
		IF @TIPO_USUARIO = 'Fisioterapia' AND DBO.FNK_VALORVARIABLE('TERAPIA_ABRE_TURNO')<>'SI'
		BEGIN 
			SELECT 'OK' OK
			SELECT 1 ACCESO, A.SECTOR, A.DESCRIPCION DESC_SECTOR, TUR.CODTURNO, TUR.DESCRIPCION DESC_TURNO,  GETDATE() FECHAINI, GETDATE()+1 FECHAFIN
			FROM HHAB A 
				LEFT JOIN TUR ON TUR.CODTURNO='@PENDIENTE'
			WHERE A.CLASE='SECTOR' AND COALESCE(ESTADOHAB,'')<>'Inhabilitada'
			RETURN
		END
		
		IF (SELECT COUNT(1) FROM DBO.FNK_TURNO_ENF(@USUARIO) WHERE ACCESO=1)<=0
		BEGIN
			IF EXISTS (SELECT 1 FROM HHAB WHERE CLASE='SECTOR' AND COALESCE(ESTADOHAB,'')<>'Inhabilitada' AND SINTURNO=1)
			BEGIN
				SELECT 'OK' OK
				SELECT 1 ACCESO, A.SECTOR, A.DESCRIPCION DESC_SECTOR, TUR.CODTURNO, TUR.DESCRIPCION DESC_TURNO,  GETDATE() FECHAINI, GETDATE()+1 FECHAFIN
				FROM HHAB A 
					LEFT JOIN TUR ON TUR.CODTURNO='@PENDIENTE'
				WHERE A.CLASE='Sector' AND COALESCE(ESTADOHAB,'')<>'Inhabilitada' AND SINTURNO=1		
			END
			ELSE
			BEGIN
				SELECT 'KO' OK
				SELECT 'Usted no tiene turno asignado en este horario' ERROR
			END
			RETURN		
		END
		ELSE
		BEGIN
			SELECT TOP 1 @ACCESO = ACCESO, @SECTOR = SECTOR, @CODTURNO = CODTURNO, @ESTADO = ESTADO, @FECHA = CONVERT(VARCHAR,FECHAINI,103)+' '+CONVERT(VARCHAR,FECHAINI,108)
            FROM DBO.FNK_TURNO_ENF(@USUARIO) 
			WHERE ACCESO=1 
			ORDER BY ESTADO, FECHAINI
			
			
			IF @ESTADO = 2
			BEGIN
				IF dbo.FNK_VALORVARIABLE('REABRIRTURNOENF')<>'SI'
				BEGIN
					SELECT 'KO' OK
					SELECT ERROR = 'El turno ya se encuentra cerrado... Comuniquese con el administrador del sistema'
				END
				ELSE
				BEGIN
					SELECT 'OK' OK					
					SELECT 1 ACCESO, HHAB.HABCAMA, HHAB.DESCRIPCION DESC_SECTOR, TUR.CODTURNO, TUR.DESCRIPCION DESC_TURNO, A.FECHAINI, A.FECHAFIN, A.IDTSECFU
					FROM DBO.FNK_TURNO_ENF(@USUARIO) A
						LEFT JOIN HHAB ON HHAB.HABCAMA=@SECTOR
						LEFT JOIN TUR ON A.CODTURNO=@CODTURNO
					WHERE A.ACCESO=1 AND A.ESTADO=2
					ORDER BY FECHAINI, A.ESTADO
					RETURN
				END
				RETURN
			END
			IF @ESTADO = 0
			BEGIN
				IF(SELECT COALESCE(CIERRETURNO,0) FROM HHAB WHERE HABCAMA=@SECTOR AND CLASE='Sector')=1
				BEGIN
					IF (SELECT COUNT(1)
						FROM ( 
								SELECT CONVERT(DATE,TSECFU.FECHA) FECHA, 
								LEFT(CONVERT(TIME,TUR.FECHAINICIAL),5) HINI, 
								LEFT(CONVERT(TIME,TUR.FECHAFINAL),5) HFIN 
								FROM   TSECFU INNER JOIN TUR ON TSECFU.CODTURNO = TUR.CODTURNO 
								WHERE  TSECFU.HABCAMA=@SECTOR
								AND    TSECFU.ESTADO=1 
							)X 
						WHERE REPLACE(CONVERT(VARCHAR(10),DATEADD(DAY,(CASE WHEN HINI>=HFIN THEN 1 ELSE 0 END),FECHA)),'-','')+' '+HFIN
							<= DATEADD(MINUTE,@MINANTES,CONVERT(DATETIME,@FECHA))
						)>0
					BEGIN
						SELECT 'KO' OK
						SELECT ERROR = 'No se puede abrir turno, existen turnos anteriores sin cerrar.....' UNION ALL
						SELECT 'Sector: ' + X.HABCAMA + ' - '+ HHAB.DESCRIPCION+', Usuario: ' + X.USUARIO+' - '+MED.NOMBRE
						+IIF(X.FAPERTURA IS NOT NULL,'Fecha de Apertura: '+LEFT(CONVERT(VARCHAR, X.FAPERTURA,29),30),'')
						FROM ( 
							SELECT TSECFU.HABCAMA, TSECFU.USUARIO, TSECFU.FAPERTURA, 
							CONVERT(DATE,TSECFU.FECHA) FECHA,
							LEFT(CONVERT(TIME,TUR.FECHAINICIAL),5) HINI, 
							LEFT(CONVERT(TIME,TUR.FECHAFINAL),5) HFIN
							FROM   TSECFU INNER JOIN TUR ON TSECFU.CODTURNO = TUR.CODTURNO 
							WHERE  TSECFU.HABCAMA = @SECTOR
							AND    TSECFU.ESTADO = 1 
							)X 
						LEFT JOIN HHAB ON X.HABCAMA=HHAB.HABCAMA AND HHAB.CLASE='Sector' 
						LEFT JOIN MED  ON X.USUARIO=MED.IDMEDICO 
						WHERE REPLACE(CONVERT(VARCHAR(10),DATEADD(DAY,(CASE WHEN HINI>=HFIN THEN 1 ELSE 0 END),X.FECHA)),'-','')+' '+HFIN 
						<= DATEADD(MINUTE,@MINANTES,CONVERT(DATETIME,@FECHA))
						RETURN
					END
				END
				SELECT 'OK' OK
				SELECT A.ESTADO ACCESO, A.SECTOR, HHAB.DESCRIPCION DESC_SECTOR, A.CODTURNO, TUR.DESCRIPCION DESC_TURNO, GETDATE() F_APERTURA, A.FECHAINI, A.FECHAFIN, A.IDTSECFU
				FROM DBO.FNK_TURNO_ENF(@USUARIO) A
					LEFT JOIN HHAB ON HHAB.HABCAMA=A.SECTOR
					LEFT JOIN TUR ON A.CODTURNO=TUR.CODTURNO
				WHERE ACCESO=1
				ORDER BY FECHAINI, A.ESTADO
				RETURN
			END
			IF @ESTADO = 1
			BEGIN
				SELECT 'OK' OK
				
				SELECT A.ESTADO ACCESO, A.SECTOR, HHAB.DESCRIPCION DESC_SECTOR, A.CODTURNO, TUR.DESCRIPCION DESC_TURNO,  A.FECHAINI, A.FECHAFIN, A.IDTSECFU
				FROM DBO.FNK_TURNO_ENF(@USUARIO) A
					LEFT JOIN HHAB ON HHAB.HABCAMA=A.SECTOR
					LEFT JOIN TUR ON TUR.CODTURNO=A.CODTURNO
				WHERE A.ACCESO=1 AND A.ESTADO=1
				ORDER BY FECHAINI, A.ESTADO
				RETURN
			END
			RETURN
		END
		RETURN
	END
	IF @METODO = 'ABRIR_TURNO'
	BEGIN
		SELECT @IDMEDICO = IDMEDICO, @SECTOR = SECTOR, @CODTURNO = CODTURNO
		FROM OPENJSON (@PARAMETROS)
		WITH (
			IDMEDICO       VARCHAR(12)     '$.IDMEDICO',
			SECTOR         VARCHAR(10)     '$.SECTOR',
			CODTURNO       VARCHAR(4)      '$.CODTURNO'
		)
		SELECT  @ESTADO = ESTADO -- ACCESO, SECTOR, CODTURNO,CONVERT(VARCHAR(10),DBO.FNK_FECHA_SIN_HORA(FECHAINI),103) + ' ' +CONVERT(VARCHAR(10), FECHAINI,108) 
		FROM   DBO.FNK_TURNO_ENF(@USUARIO) WHERE  SECTOR = @SECTOR AND CODTURNO=@CODTURNO
		ORDER BY FECHAINI, ESTADO

		IF @ESTADO = '2'
		BEGIN
			IF DBO.FNK_VALORVARIABLE('REABRIRTURNOENF')<>'SI'
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'Turno ya cerrado, no es posible su apertura'
				RETURN
			END
			ELSE
			BEGIN
				UPDATE TSECFU SET ESTADO = 1, FAPERTURA = GETDATE() 
				WHERE HABCAMA = @SECTOR AND CODTURNO = @CODTURNO AND USUARIO = @IDMEDICO AND FECHA = CONVERT(VARCHAR, GETDATE(),103)
				IF @@ERROR = 0
				BEGIN
					SELECT 'OK' OK
					SELECT A.ESTADO ACCESO, A.SECTOR, HHAB.DESCRIPCION DESC_SECTOR, A.CODTURNO, TUR.DESCRIPCION DESC_TURNO, A.FECHAINI, A.FECHAFIN, A.IDTSECFU
					FROM DBO.FNK_TURNO_ENF(@USUARIO) A
						LEFT JOIN HHAB ON HHAB.HABCAMA=A.SECTOR
						LEFT JOIN TUR ON TUR.CODTURNO=A.CODTURNO
					WHERE A.ACCESO=1 AND A.ESTADO=1
					ORDER BY FECHAINI, A.ESTADO
				END
				ELSE
				BEGIN
					SELECT 'KO' OK
					SELECT ERROR = 'Error al intentar reabrir el turno'
				END
				RETURN        
			END
			RETURN
		END

		IF @ESTADO=1
		BEGIN
			SELECT 'OK' OK
			SELECT A.ESTADO ACCESO, A.SECTOR, HHAB.DESCRIPCION DESC_SECTOR, A.CODTURNO, TUR.DESCRIPCION DESC_TURNO, A.FECHAINI, A.FECHAFIN, A.IDTSECFU
			FROM DBO.FNK_TURNO_ENF(@USUARIO) A
				LEFT JOIN HHAB ON HHAB.HABCAMA=A.SECTOR
				LEFT JOIN TUR ON TUR.CODTURNO=A.CODTURNO
			WHERE A.ACCESO=1 AND A.ESTADO=1
			ORDER BY FECHAINI, A.ESTADO
			RETURN
		END

		IF @ESTADO=0
		BEGIN
			IF(SELECT COALESCE(CIERRETURNO,0) FROM HHAB WHERE HABCAMA=@SECTOR AND CLASE='Sector')=1
			BEGIN
				IF (SELECT COUNT(1)
					FROM ( 
							SELECT CONVERT(DATE,TSECFU.FECHA) FECHA, 
							LEFT(CONVERT(TIME,TUR.FECHAINICIAL),5) HINI, 
							LEFT(CONVERT(TIME,TUR.FECHAFINAL),5) HFIN 
							FROM   TSECFU INNER JOIN TUR ON TSECFU.CODTURNO = TUR.CODTURNO 
							WHERE  TSECFU.HABCAMA=@SECTOR
							AND    TSECFU.ESTADO=1 
						)X 
					WHERE REPLACE(CONVERT(VARCHAR(10),DATEADD(DAY,(CASE WHEN HINI>=HFIN THEN 1 ELSE 0 END),FECHA)),'-','')+' '+HFIN
						<= DATEADD(MINUTE,@MINANTES,CONVERT(DATETIME,@FECHA))
					)>0
				BEGIN
					SELECT 'KO' OK
					SELECT ERROR = 'No se puede abrir turno, existen turnos anteriores sin cerrar.....' UNION ALL
					SELECT 'Sector: ' + COALESCE(X.HABCAMA,'') + ' - '+ COALESCE(HHAB.DESCRIPCION,'')+', Usuario: ' 
						+ COALESCE(X.USUARIO,'')+' - '+COALESCE(MED.NOMBRE,'')+IIF(X.FAPERTURA IS NOT NULL,'Fecha de Apertura: '+LEFT(CONVERT(VARCHAR, X.FAPERTURA,29),30),'')
					FROM ( 
						SELECT TSECFU.HABCAMA, TSECFU.USUARIO, TSECFU.FAPERTURA, 
						CONVERT(DATE,TSECFU.FECHA) FECHA,
						LEFT(CONVERT(TIME,TUR.FECHAINICIAL),5) HINI, 
						LEFT(CONVERT(TIME,TUR.FECHAFINAL),5) HFIN
						FROM   TSECFU INNER JOIN TUR ON TSECFU.CODTURNO = TUR.CODTURNO 
						WHERE  TSECFU.HABCAMA = @SECTOR
						AND    TSECFU.ESTADO = 1 
						)X 
					LEFT JOIN HHAB ON X.HABCAMA=HHAB.HABCAMA AND HHAB.CLASE='Sector' 
					LEFT JOIN MED  ON X.USUARIO=MED.IDMEDICO 
					WHERE REPLACE(CONVERT(VARCHAR(10),DATEADD(DAY,(CASE WHEN HINI>=HFIN THEN 1 ELSE 0 END),X.FECHA)),'-','')+' '+HFIN 
					<= DATEADD(MINUTE,@MINANTES,CONVERT(DATETIME,@FECHA))
					RETURN
				END
			END
		
			SELECT TOP 1 @IDTSECFU=IDTSECFU FROM TSECFU 
			WHERE HABCAMA=@SECTOR AND CODTURNO=@CODTURNO AND USUARIO=@IDMEDICO 
					AND (CONVERT(VARCHAR,GETDATE(),103)=FECHA OR GETDATE() BETWEEN FECHAINICIAL AND FECHAFINAL) AND FECHAINICIAL<GETDATE() 
			ORDER BY FECHAINICIAL DESC
		
			IF (SELECT COUNT(1) FROM TGEN WHERE TABLA='VERIFICA' AND CAMPO='TURNOS' AND DATO1=@SECTOR)=0
			BEGIN
				UPDATE TSECFU SET ESTADO=1, FAPERTURA=GETDATE() WHERE IDTSECFU=@IDTSECFU
				IF @@ERROR = 0
				BEGIN
					SELECT 'OK' OK
					SELECT A.ESTADO ACCESO, A.SECTOR, HHAB.DESCRIPCION DESC_SECTOR, A.CODTURNO, TUR.DESCRIPCION DESC_TURNO, A.FECHAINI, A.FECHAFIN, A.IDTSECFU
					FROM DBO.FNK_TURNO_ENF(@USUARIO) A
						LEFT JOIN HHAB ON HHAB.HABCAMA=A.SECTOR
						LEFT JOIN TUR ON TUR.CODTURNO=A.CODTURNO
					WHERE A.ACCESO=1 AND A.ESTADO=1
					ORDER BY FECHAINI, A.ESTADO
				END
				ELSE
				BEGIN
					SELECT 'KO' OK
					SELECT ERROR = 'Error al intentar abrir el turno de enfermeria, turno no abierto'
				END
				RETURN
			END
			ELSE
			BEGIN
				PRINT 'VERIFICA EN DESAROLLO' 
			END
			RETURN
		END
		RETURN
	END
	IF @METODO = 'CENSO'
	BEGIN
		SELECT @SECTOR = SECTOR, @ESTADO = SINCAMA, @FILTRO = FILTRO, @PROCEDENCIA = PROCEDENCIA
		FROM OPENJSON (@PARAMETROS)
		WITH (
			FILTRO       VARCHAR(200)    '$.FILTRO',
			SINCAMA      VARCHAR(200)    '$.SIN_CAMA',
			SECTOR       VARCHAR(20)     '$.SECTOR',
			PROCEDENCIA  VARCHAR(20)     '$.PROCEDENCIA'
		)
		IF COALESCE(@FILTRO,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'Debe indicar el sector a consultar'
			RETURN
		END
		SET @CMD=''
		SET @TODOS =IIF(TRIM(@FILTRO)='1=1',1,0)
		SELECT 'OK' OK
		IF @ESTADO='tr' --Buscar sector
		BEGIN
			SELECT @CMD = '
			SELECT HADM.HABCAMA, HADM.NOADMISION, HADM.FECHA, '''' CIRUGIA, HTAD.DESCRIPCION ESTANCIA, 
					CASE HADM.CERRADA WHEN 0 THEN ''Admitido'' WHEN 1 THEN ''Alta Administrativa'' WHEN 2 THEN ''Alta Medica'' WHEN 3 THEN ''Alta Enfermeria'' ELSE ''Error'' END ESTADO, 
					AFI.SEXO, CONCAT(''['',AFI.TIPO_DOC,''] '',AFI.DOCIDAFILIADO) DOCUMENTO, DBO.FN_EDAD_PACIENTE(AFI.FNACIMIENTO, HADM.FECHA,''ALL'') EDAD, 
					AFI.NOMBREAFI PACIENTE, TER.RAZONSOCIAL ENTIDAD,
					'''' MEDICO, '''' ESPECIALIDD, '''' SERVICIO, '''' OBSERVACION, HADM.IDAFILIADO, HADM.IDTERCERO, HADM.IDPLAN, HADM.CERRADA
					,NULL PENDIENTE
					,DATEDIFF(YEAR,AFI.FNACIMIENTO, HADM.FECHA) ANIOS
					,0 MTRASLADO
					,'''' SECTOR
					,''Ocupada'' ESTADOHAB
				   , '''' IDALTERNA

			FROM HADM
				INNER JOIN AFI ON AFI.IDAFILIADO=HADM.IDAFILIADO
				LEFT JOIN HTAD ON HADM.TIPOADM=HTAD.TIPOADM
				LEFT JOIN TER ON HADM.IDTERCERO=TER.IDTERCERO
			WHERE '+@FILTRO
		END
		ELSE
		BEGIN
				   --,(SELECT COLOR, ICONO1, ICONO2, C1, C2, OBS1, OBS2 FROM DBO.FNK_PENDIENTE_HHAB(VWK.HABCAMA) FOR JSON PATH) PENDIENTE
			SELECT @CMD = '			
			SELECT VWK.HABCAMA, VWK.NOADMISION, VWK.FECHA, VWK.CIRUGIA, VWK.ESTANCIA, VWK.ESTADO, VWK.SEXO, VWK.DOCUMENTO, VWK.EDAD, VWK.PACIENTE, VWK.ENTIDAD,
					VWK.MEDICO, COALESCE(VWK.ESPECIALIDAD,'''') ESPECIALIDAD, VWK.SERVICIO, VWK.OBSERVACION, HHAB.IDAFILIADO, HADM.IDTERCERO, HADM.IDPLAN, HADM.CERRADA
					,'+IIF(@TODOS=1,+'NULL','(SELECT COLOR, ICONO1, ICONO2, C1, C2, OBS1, OBS2 FROM DBO.FNK_PENDIENTE_HHAB(HHAB.HABCAMA) FOR JSON PATH)')+' PENDIENTE
					,DATEDIFF(YEAR,AFI.FNACIMIENTO, GETDATE()) ANIOS
					,COALESCE(HHAB.MTRASLADO,0) MTRASLADO				   
					,HHAB.SECTOR
					,''Ocupada'' ESTADOHAB
					, COALESCE(HHAB.IDALTERNA,'''') IDALTERNA
			FROM VWK_CENSO_ENF VWK
				INNER JOIN HHAB ON HHAB.HABCAMA=VWK.HABCAMA
				INNER JOIN HADM ON HADM.NOADMISION=HHAB.NOADMISION
				INNER JOIN AFI ON AFI.IDAFILIADO=HHAB.IDAFILIADO
			WHERE '+IIF(@TSEFCU_XADMISION='SI' AND @PROCEDENCIA<>'AUDIT' ,' EXISTS (SELECT 1 FROM TSECFUA A WHERE IDTSECFU='''+@FILTRO+''' AND A.NOADMISION=HADM.NOADMISION)',@FILTRO)
			--WHERE '+@FILTRO
			IF @TSEFCU_XADMISION<>'SI'
			BEGIN
				SET @CMD+=
				'				
				UNION ALL
				SELECT HHAB.HABCAMA,  '''' NOADMISION, HHAB.FECHA_RESERVA FECHA, '''' CIRUGIA, '''' ESTANCIA, 
						''Preadmitido'' ESTADO, AFI.SEXO, CONCAT(''['',AFI.TIPO_DOC,''] '',AFI.DOCIDAFILIADO) DOCUMENTO, DBO.FN_EDAD_PACIENTE(AFI.FNACIMIENTO, GETDATE(),''ALL'') EDAD, 
						AFI.NOMBREAFI PACIENTE, LEFT(LTRIM(RTRIM(PLN.DESCPLAN))+'' (''+LTRIM(RTRIM(TER.RAZONSOCIAL))+'')'',100) ENTIDAD, 
						'''' MEDICO, '''' ESPECIALIDAD, '''' SERVICIO, '''' OBSERVACION, HHAB.IDAFILIADO, AFI.IDADMINISTRADORA IDTERCERO, AFI.IDPLAN, ''1'' CERRADA
						,NULL PENDIENTE
						,DATEDIFF(YEAR,AFI.FNACIMIENTO, GETDATE()) ANIOS
						,0 MTRASLADO
						,HHAB.SECTOR SECTOR
						,''Reservada''
					   , COALESCE(HHAB.IDALTERNA,'''') IDALTERNA
				FROM HHAB
				INNER JOIN AFI ON AFI.IDAFILIADO=HHAB.IDAFILIADO
				INNER JOIN TER ON TER.IDTERCERO=AFI.IDADMINISTRADORA
				INNER JOIN PLN ON PLN.IDPLAN=AFI.IDPLAN
				WHERE '+@FILTRO +' AND HHAB.ESTADOHAB=''Reservada'' AND COALESCE(HHAB.NOADMISION,'''')='''''
			END
		END
		PRINT '@CMD='+@CMD
        EXEC (@CMD)
		IF @ESTADO<>'tr' AND @TSEFCU_XADMISION<>'SI'
		BEGIN
			SELECT @CMD = '
			SELECT ERROR = ''Cama ''+HHAB.HABCAMA+'',	Reservada para el paciente: ''+AFI.NOMBREAFI+'' hace ''+CONVERT(varchar, DATEDIFF(HOUR,HHAB.FECHA_RESERVA ,getdate())) +'' horas''
			FROM HHAB INNER JOIN AFI ON HHAB.IDAFILIADO=AFI.IDAFILIADO
			WHERE '+@FILTRO+' AND CLASE=''CAMA'' AND ESTADOHAB=''Reservada'' AND DATEDIFF(HOUR, HHAB.FECHA_RESERVA, GETDATE())>8
				AND (DATEDIFF(HOUR, HHAB.FECHA_ALERTA, GETDATE())>2 OR HHAB.FECHA_ALERTA IS NULL)'
			PRINT '@CMD='+@CMD
			EXEC (@CMD)
		
			SELECT @CMD = 'UPDATE HHAB SET FECHA_ALERTA=GETDATE()
			WHERE '+@FILTRO+' AND CLASE=''CAMA'' AND ESTADOHAB=''Reservada'' AND DATEDIFF(HOUR, HHAB.FECHA_RESERVA, GETDATE())>8 AND (DATEDIFF(HOUR, HHAB.FECHA_ALERTA, GETDATE())>2 OR HHAB.FECHA_ALERTA IS NULL)'
			PRINT '@CMD='+@CMD
			EXEC (@CMD)
		END

		RETURN
	END	
	IF @METODO = 'EXPORTAR'
	BEGIN
		SELECT @SECTOR = SECTOR
		FROM OPENJSON (@PARAMETROS)
		WITH (
			SECTOR       VARCHAR(20)     '$.SECTOR'
		)
		IF COALESCE(@SECTOR,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'Debe indicar el sector a consultar'
			RETURN
		END
		
		SELECT 'OK' OK
		SELECT B.DESCRIPCION AS SECTOR, A.NOADMISION,  A.HABCAMA+' - ' +A.DESCRIPCION DESC_CAMA, C.TIPO_DOC,
			C.DOCIDAFILIADO, C.NOMBREAFI,  VWK.SEXO, VWK.ESTADO, VWK.ENTIDAD, CONVERT(VARCHAR, VWK.FECHA, 120) FECHA_INGRESO,
		NOTAS = LEFT(COALESCE((SELECT STUFF((SELECT CONVERT(VARCHAR, ROW_NUMBER() OVER (ORDER BY ITEM))+ ' - ['+COALESCE(OBS,'')+'] ' 
										FROM HADMNOT WHERE NOADMISION=VWK.NOADMISION AND CLASE='NE' FOR XML PATH('')),1,0,'')),''),1024)
		FROM VWK_CENSO_ENF VWK INNER JOIN HHAB A ON A.HABCAMA=VWK.HABCAMA
			INNER JOIN HHAB B ON B.HABCAMA=A.SECTOR AND B.CLASE='SECTOR'
			INNER JOIN AFI C ON C.IDAFILIADO=A.IDAFILIADO
		WHERE A.SECTOR=@SECTOR AND A.CLASE='CAMA'
		RETURN
	END
	IF @METODO = 'CRUDIZSOL'
	BEGIN
		SELECT @METODO = METODO, @HABCAMA = HABCAMA, @SECTOR = SECTOR, @NOADMISION = NOADMISION, @CNSIZSOL = CNSIZSOL, @CLASE = CLASE,
			@IDBODEGAATIENDE = IDBODEGAATIENDE
		FROM OPENJSON (@PARAMETROS)
		WITH (
			METODO			VARCHAR(12)   '$.METODO',
			CNSIZSOL        VARCHAR(20)	  '$.CNSIZSOL',
			NOADMISION      VARCHAR(16)	  '$.NOADMISION',
			CLASE			VARCHAR(10)	  '$.CLASE',
			IDBODEGAATIENDE VARCHAR(20)	  '$.IDBODEGAATIENDE',
			HABCAMA			VARCHAR(10)	  '$.HABCAMA',
			SECTOR			VARCHAR(30)	  '$.SECTOR'
		)
		PRINT '@METODO		='	   + COALESCE(@METODO		  , '')
		PRINT '@CNSIZSOL	='	   + COALESCE(@CNSIZSOL		  , '')
		PRINT '@NOADMISION	='	   + COALESCE(@NOADMISION	  , '')
		PRINT '@CLASE		='	   + COALESCE(@CLASE		  , '')
		PRINT '@IDBODEGAATIENDE='  + COALESCE(@IDBODEGAATIENDE, '')
		PRINT '@HABCAMA		='	   + COALESCE(@HABCAMA		  , '')
		PRINT '@SECTOR		='	   + COALESCE(@SECTOR		  , '')

		IF @METODO='INSERTAR'
		BEGIN
			IF COALESCE(@CNSIZSOL,'')<>''
			BEGIN
				SELECT 'KO'
				SELECT ERROR = 'AL INSERTAR EL CONSECUTIVO DEBE SER VACIO'
				RETURN
			END
			IF (COALESCE(@IDBODEGAATIENDE,'')<>'' AND COALESCE(@SECTOR,'')<>'' AND COALESCE(@CLASE,'')<>'' AND COALESCE(@NOADMISION,'')<>'')
			BEGIN
				PRINT 'TODOS COMPLETOS'
			END
			ELSE
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'Datos incompletos para insercion, por favor revise'
				RETURN
			END
			EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE, @PREFIJO='@IZSOL' ,@NVOCONSEC=@CNSIZSOL OUTPUT

			INSERT INTO IZSOL (CNSIZSOL, FECHASOL, USUARIOSOL, ESTADO, IDBODEGASOLICITA, IDBODEGAATIENDE, SECTOR, CLASE, NOADMISION)
			SELECT @CNSIZSOL, GETDATE(), @USUARIO, 0, @IDBODEGAATIENDE, @IDBODEGAATIENDE, @SECTOR, @CLASE, @NOADMISION
			IF @@ERROR=0
			BEGIN
				SELECT 'OK' OK
			END
			ELSE
			BEGIN
				SELECT 'KO' OK
				SELECT 'ERROR AL INSERTAR' ERROR
			END
			RETURN
		END
		IF @METODO='Eliminar'
		BEGIN 
			IF COALESCE(@CNSIZSOL,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT 'Al eliminar un registro, debe indicar cual es el consecutivo' ERROR
				RETURN
			END
			IF NOT EXISTS(SELECT 1 FROM IZSOL WHERE CNSIZSOL=@CNSIZSOL AND COALESCE(ESTADO,0)=0)
			BEGIN
				SELECT 'KO' OK
				SELECT 'Registro a eliminar no encontrado en base de datos o no está abierto'	ERROR
				RETURN
			END
			IF EXISTS (SELECT 1 FROM IZSOLD WHERE CNSIZSOL=@CNSIZSOL)
			BEGIN
				SELECT 'KO' OK
				SELECT 'No se puede eliminar una solicitud con detalle' ERROR
				RETURN
			END
			DELETE IZSOL FROM IZSOL WHERE CNSIZSOL=@CNSIZSOL
			IF @@ERROR=0
			BEGIN
				SELECT 'OK' OK
			END
			ELSE
			BEGIN
				SELECT 'KO' OK
				SELECT 'Error al eliminar CNSIZSOL='+COALESCE(@CNSIZSOL,'') ERROR
			END
			RETURN
		END
		IF @METODO='CIERRA_SOL'
		BEGIN
			IF COALESCE(@CNSIZSOL,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'ERROR DEBE INDICAR EL CONSECUTIVO A CERRAR'
				RETURN				
			END
			IF (SELECT COALESCE(ESTADO,0) FROM IZSOL WHERE CNSIZSOL=@CNSIZSOL)<>0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'SOLICITUD NO PENDIENTE, REVISE POR FAVOR'
				RETURN
			END
			IF (SELECT COUNT(1) FROM IZSOLD WHERE CNSIZSOL=@CNSIZSOL)<=0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'SOLICITUD SIN DETALLE, PÓR FAVOR REVISE'
				RETURN
			END

			SELECT @IDBODEGAATIENDE = IDBODEGA, @NOADMISION = TIPOBODEGA 
			FROM IZSOL 
				INNER JOIN IBOD  ON IZSOL.IDBODEGAATIENDE=IBOD.IDBODEGA
			WHERE IDBODEGA = @CNSIZSOL
			BEGIN TRY
				UPDATE IZSOL SET ESTADO = 1 WHERE CNSIZSOL=@CNSIZSOL
				IF (SELECT COUNT(1) FROM IZSOL INNER JOIN IBOD  ON IZSOL.IDBODEGAATIENDE=IBOD.IDBODEGA
						WHERE IDBODEGA = @CNSIZSOL AND IBOD.CONFIRMAAUTOMDESDEQX=1)>0 AND @NOADMISION='VIRTUAL'
				BEGIN
					EXEC SPK_INSERTA_IZOLDT_AUT @CNSIZSOL, @IDBODEGAATIENDE, @IDSEDE, @USUARIO
				END
				SELECT 'OK' OK
			END TRY
			BEGIN CATCH
				SELECT 'KO' OK
				SELECT ERROR = 'SOLICITUD NO PENDIENTE, REVISE POR FAVOR'
				RETURN
			END CATCH
			RETURN
		END
		IF @METODO='ABRE_SOL'
		BEGIN
			IF COALESCE(@CNSIZSOL,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'ERROR DEBE INDICAR EL CONSECUTIVO A ABRIR'
				RETURN				
			END
			IF (SELECT COALESCE(ESTADO,0) FROM IZSOL WHERE CNSIZSOL=@CNSIZSOL)<>1
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'SOLICITUD NO PENDIENTE, REVISE POR FAVOR'
				RETURN
			END
			IF (SELECT COUNT(1) FROM IZSOLD WHERE CNSIZSOL=@CNSIZSOL AND ESTADO=0)>0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'La Solicitud ya Fue Respondida en Farmacia... No Es Posible Cancelar Pedido'
				RETURN
			END
			BEGIN TRY
				UPDATE IZSOL SET ESTADO = 0 WHERE CNSIZSOL=@CNSIZSOL
				SELECT 'OK' OK
			END TRY
			BEGIN CATCH
				SELECT 'KO' OK
				SELECT ERROR = 'SOLICITUD NO PENDIENTE, REVISE POR FAVOR'
				RETURN
			END CATCH
			RETURN
		END
		RETURN
	END
	IF @METODO = 'CRUDIZSOLD'
	BEGIN
		SELECT @METODO = METODO,  @CNSIZSOL = CNSIZSOL, @CNSIZSOLD = CNSIZSOLD, @IDARTICULO = IDARTICULO, @CANTIDAD = CANTIDAD
		FROM OPENJSON (@PARAMETROS)
		WITH (
			METODO			VARCHAR(12)   '$.METODO',
			CNSIZSOL        VARCHAR(20)	  '$.CNSIZSOL',
			CNSIZSOLD       VARCHAR(20)	  '$.CNSIZSOLD',
			IDARTICULO		VARCHAR(20)	  '$.IDARTICULO',
			CANTIDAD		VARCHAR(20)	  '$.CANTIDAD'
		)
		
		PRINT '@METODO		='  + COALESCE(@METODO, '')
		PRINT '@CNSIZSOL    ='  + COALESCE(@CNSIZSOL, '')
		PRINT '@CNSIZSOLD   ='  + COALESCE(@CNSIZSOLD, '')
		PRINT '@IDARTICULO	='  + COALESCE(@IDARTICULO, '')
		PRINT '@CANTIDAD	='  + COALESCE(CONVERT(VARCHAR,@CANTIDAD), '')

		IF @METODO='INSERTAR'
		BEGIN
			IF COALESCE(@CNSIZSOLD,'')<>''
			BEGIN
				SELECT 'KO'
				SELECT 'AL INSERTAR EL CONSECUTIVO DEBE SER VACIO'
				RETURN
			END
			IF (COALESCE(@CNSIZSOL,'')<>'' AND COALESCE(@IDARTICULO,'')<>'' AND COALESCE(@CANTIDAD,0)<>0)
			BEGIN
				PRINT 'TODOS COMPLETOS'
			END
			ELSE
			BEGIN
				SELECT 'KO' OK
				SELECT 'Datos incompletos para insercion, por favor revise'
				RETURN
			END
			--EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,'@IZSOLD', @CNSIZSOLD OUTPUT
			--SELECT @CNSIZSOLD = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSIZSOLD))+LTRIM(RTRIM(@CNSIZSOLD)),SPACE(1),0)
			--EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE, @PREFIJO='@IZSOLD' ,@NVOCONSEC=@CNSIZSOLD OUTPUT

			SELECT TOP 1 @IDSERVICIO=IDSERVICIO FROM SER WHERE IDARTICULO=@IDARTICULO

			INSERT INTO IZSOLD (CNSIZSOL, IDARTICULO, CANTIDADSOL, ESTADO, IDSERVICIO)
			SELECT @CNSIZSOL, @IDARTICULO, @CANTIDAD, 1, @IDSERVICIO

			IF @@ERROR=0
			BEGIN
				SELECT 'OK' OK
			END
			ELSE
			BEGIN
				SELECT 'KO' OK
				SELECT 'ERROR AL INSERTAR' ERROR
			END
			RETURN
		END
		IF @METODO='EDITAR'
		BEGIN 
			IF COALESCE(@CNSIZSOLD,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT 'Al editar un registro, debe indicar cual es el consecutivo' ERROR
				RETURN
			END
			IF NOT EXISTS(SELECT 1 FROM IZSOLD WHERE CNSIZSOLD=@CNSIZSOLD)
			BEGIN
				SELECT 'KO' OK
				SELECT 'Registro a editar no encontrado en base de datos'	ERROR
				RETURN
			END
			IF EXISTS (SELECT 1 FROM IZSOLDT WHERE CNSIZSOLD=@CNSIZSOLD)
			BEGIN
				SELECT 'KO' OK
				SELECT 'No se puede editar un articulo en proceso de entrega' ERROR
				RETURN
			END
			IF EXISTS (SELECT 1 FROM IZSOLD WHERE CNSIZSOLD=@CNSIZSOLD AND COALESCE(ESTADO,0)=0)
			BEGIN
				SELECT 'KO' OK
				SELECT 'No se puede editar un articulo en proceso de entrega o entregado' ERROR
				RETURN
			END
			UPDATE IZSOLD SET IDARTICULO = @IDARTICULO, CANTIDADSOL = @CANTIDAD WHERE CNSIZSOLD = @CNSIZSOLD
			IF @@ERROR=0
			BEGIN
				SELECT 'OK' OK
			END
			ELSE
			BEGIN
				SELECT 'KO' OK
				SELECT 'Error al editar CNSIZSOLD='+COALESCE(@CNSIZSOLD,'') ERROR
			END
			RETURN
		END
		IF @METODO='Eliminar'
		BEGIN 
			IF COALESCE(@CNSIZSOLD,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT 'Al eliminar un registro, debe indicar cual es el consecutivo' ERROR
				RETURN
			END
			IF NOT EXISTS(SELECT 1 FROM IZSOLD WHERE CNSIZSOLD=@CNSIZSOLD)
			BEGIN
				SELECT 'KO' OK
				SELECT 'Registro a eliminar no encontrado en base de datos'	ERROR
				RETURN
			END
			IF EXISTS (SELECT 1 FROM IZSOLDT WHERE CNSIZSOLD=@CNSIZSOLD)
			BEGIN
				SELECT 'KO' OK
				SELECT 'No se puede eliminar un articulo en proceso de entrega' ERROR
				RETURN
			END
			IF EXISTS (SELECT 1 FROM IZSOLD WHERE CNSIZSOLD=@CNSIZSOLD AND COALESCE(ESTADO,0)=0)
			BEGIN
				SELECT 'KO' OK
				SELECT 'No se puede eliminar un articulo en proceso de entrega o entregado' ERROR
				RETURN
			END
			DELETE IZSOLD FROM IZSOLD WHERE CNSIZSOLD=@CNSIZSOLD
			IF @@ERROR=0
			BEGIN
				SELECT 'OK' OK
			END
			ELSE
			BEGIN
				SELECT 'KO' OK
				SELECT 'Error al eliminar CNSIZSOLD='+COALESCE(@CNSIZSOLD,'') ERROR
			END
			RETURN
		END
		RETURN
	END
	IF @METODO = 'ASIGNA_CAMA'
	BEGIN
		SELECT @NOADMISION = NOADMISION, @HABCAMA = HABCAMA, @TIPOESTANCIA = TIPOESTANCIA
		FROM OPENJSON (@PARAMETROS)
		WITH (
			NOADMISION		VARCHAR(20)   '$.NOADMISION',
			HABCAMA         VARCHAR(20)	  '$.HABCAMA',
			TIPOESTANCIA    VARCHAR(20)	  '$.TIPOESTANCIA'
		)
		SELECT @HABCAMAANT = HABCAMA, @IDAFILIADO = IDAFILIADO FROM HHAB WHERE NOADMISION=@NOADMISION

		PRINT '@NOADMISION	='  + COALESCE(@NOADMISION, '')
		PRINT '@HABCAMA     ='  + COALESCE(@HABCAMA, '')
		PRINT '@TIPOESTANCIA='  + COALESCE(@TIPOESTANCIA, '')
		PRINT '@HABCAMAANT  ='  + COALESCE(@HABCAMAANT, '')
		PRINT '@IDAFILIADO  ='  + COALESCE(@IDAFILIADO, '')
		
		IF COALESCE(@NOADMISION,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT 'Debe indicar cual es la admision o paciente a acostar' ERROR
			RETURN
		END
		IF COALESCE(@HABCAMA, '')=''
		BEGIN
			SELECT 'KO' OK
			SELECT 'Debe indicar la cama donde va a acostar al paciente' ERROR
			RETURN
		END
		IF COALESCE(@TIPOESTANCIA, '')=''
		BEGIN
			SELECT 'KO' OK
			SELECT 'Debe indicar el tipo de estancia del paciente' ERROR
			RETURN
		END
		IF COALESCE(@HABCAMAANT, '')=''
		BEGIN
			SELECT 'KO' OK
			SELECT 'Paciente no encontrado en el censo' ERROR
			RETURN
		END
		IF (SELECT COUNT(1) FROM HHAB WHERE HABCAMA=@HABCAMA AND CLASE='CAMA' AND ESTADOHAB='LIBRE')<=0
		BEGIN
			SELECT 'KO' OK
			SELECT 'La cama seleccionada no está disponible o no existe' ERROR
			RETURN
		END
		BEGIN TRY
			EXEC SPK_RECIBIR_HHAB @NOADMISION, @HABCAMA, @TIPOESTANCIA, @USUARIO, @SYS_COMPUTERNAME
		END TRY
		BEGIN CATCH
			SELECT 'KO' OK
			SELECT ERROR = 'Error al asignar al paciente en la cama, error: '+ERROR_MESSAGE() 
			RETURN
		END CATCH
		SELECT 'OK' OK
		
		RETURN
	END
	IF @METODO = 'MARCA_TRASLADO'
	BEGIN
		SELECT @NOADMISION = NOADMISION, @HABCAMA = HABCAMA
		FROM OPENJSON (@PARAMETROS)
		WITH (
			NOADMISION		VARCHAR(20)   '$.NOADMISION'
			,HABCAMA		VARCHAR(20)   '$.HABCAMA'
		)
		
		IF COALESCE(@NOADMISION,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT 'Debe indicar cual es la admision o paciente a trasladar' ERROR
			RETURN
		END
		IF (SELECT COALESCE(MTRASLADO,0) FROM HHAB WHERE NOADMISION=@NOADMISION AND HABCAMA=@HABCAMA) IN (2,3)
		BEGIN
			SELECT 'KO' OK
			SELECT 'Paciente no se encuentra disponible para traslado, paciente en cirugia' ERROR
			RETURN
		END
		IF (SELECT COALESCE(MTRASLADO,0) FROM HHAB WHERE NOADMISION=@NOADMISION AND HABCAMA=@HABCAMA)=1
		BEGIN
			SELECT 'OK' OK
			UPDATE HHAB SET MTRASLADO=0, USUARIOMT='' WHERE NOADMISION=@NOADMISION
		END
		ELSE
		BEGIN
			IF (SELECT COUNT(1) FROM HHAB WHERE HABCAMA=@HABCAMA AND COALESCE(TIPO,'')=(SELECT DATO FROM USVGS WHERE IDVARIABLE='HTHA_CX'))=0 AND DBO.FNK_VALORVARIABLE('MSECTOR_CIRUGIA')<>''
			BEGIN 
				IF DBO.FNK_VALORVARIABLE('TIPOHTX')='HORIZONTAL'
				BEGIN
					PRINT 'HBALI'
					IF (SELECT COUNT(1) FROM IZSOL WHERE NOADMISION=@NOADMISION AND ESTADO<>2 AND CLASE <>'CE' AND IDBODEGAATIENDE<>DBO.FNK_VALORVARIABLE('IDBOD_HEMODERIVADOS'))>0
					BEGIN
						INSERT INTO @TBLERRORES (ERROR)
						SELECT 'EXISTEN SOLICITUDES REALIZADAS A FARMACIA SIN DEFINIR CNSIZSOL:' UNION ALL
						SELECT IZSOL.CNSIZSOL
						FROM IZSOL WHERE NOADMISION=@NOADMISION AND ESTADO<>2 AND CLASE <>'CE' AND IDBODEGAATIENDE<>DBO.FNK_VALORVARIABLE('IDBOD_HEMODERIVADOS')
					END
					IF (SELECT COUNT(1) FROM DBO.VWK_HBALID WHERE NOADMISION=@NOADMISION AND ESTADO=1 AND FECHA<GETDATE())>0
					BEGIN
						INSERT INTO @TBLERRORES (ERROR)
						SELECT 'EXISTEN ITEMS DE LA HOJA DE TRATAMIENTO  SIN DEFINIR A LA HORA DE TRASLADO:' UNION ALL
						SELECT 'IDSERVICIO='+A.IDSERVICIO+'-'+LEFT(SER.DESCSERVICIO,50)+' FECHA:'+CONVERT(VARCHAR, FECHA, 103) 
						FROM DBO.VWK_HBALID A LEFT JOIN SER ON SER.IDSERVICIO=A.IDSERVICIO 
						WHERE NOADMISION=@NOADMISION AND A.ESTADO=1 AND FECHA<GETDATE()
						--SELECT * FROM VWK_HBALID
					END
				END
				ELSE
				BEGIN
					PRINT 'HTX'
					IF (SELECT COUNT(1) FROM HTX WHERE NOADMISION=@NOADMISION AND COALESCE(ANULADA,0)=0 AND ENCARGOS=0 AND COALESCE(INDDEV,0)=0 AND FECHAREQ <GETDATE())>0
					BEGIN
						INSERT INTO @TBLERRORES (ERROR)
						SELECT 'EXISTEN ITEMS EN LA HOJA DE TRATAMIENTO SIN DEFINIR:' UNION ALL
						SELECT 'IDSERVICIO:'+IDSERVICIO+' FECHA:'+CONVERT(VARCHAR,FECHAREQ,103) FROM HTX WHERE NOADMISION=@NOADMISION AND COALESCE(ANULADA,0)=0 AND ENCARGOS=0 AND COALESCE(INDDEV,0)=0 AND FECHAREQ <GETDATE()
					END
					IF (SELECT COUNT(1) FROM IMOV WHERE NODOCUMENTO=@NOADMISION AND ESTADO=0 AND COALESCE(CLASEPED,'')<>'24H')>0
					BEGIN
						INSERT INTO @TBLERRORES (ERROR)
						SELECT 'EXISTEN MOVIMIENTOS EN FARMACIA SIN CONFIRMAR:' UNION ALL
						SELECT 'CNSMOV:'+CNSMOV FROM IMOV WHERE NODOCUMENTO=@NOADMISION AND ESTADO=0 AND COALESCE(CLASEPED,'')<>'24H'
					END
				END
			END
			IF (SELECT COUNT(1) FROM @TBLERRORES)>0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
			END
			ELSE
			BEGIN
				UPDATE HHAB SET MTRASLADO=1, USUARIOMT=@USUARIO WHERE NOADMISION=@NOADMISION
				SELECT 'OK' OK
			END
		END
		
		
		RETURN
	END
	IF @METODO = 'A_RECIBIR_IENF'
	BEGIN
		SELECT @NOADMISION = NOADMISION
		FROM OPENJSON (@PARAMETROS)
		WITH (
			NOADMISION		VARCHAR(20)   '$.NOADMISION'
		)

		PRINT '@NOADMISION	='  + COALESCE(@NOADMISION, '')
		PRINT '@HABCAMA	='  + COALESCE(@HABCAMA, '')
		
		IF COALESCE(@NOADMISION,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT 'Debe indicar cual es la admision o paciente a trasladar' ERROR
			RETURN
		END

		SELECT 'OK' OK
		SELECT DISTINCT
			ID = ROW_NUMBER() OVER (ORDER BY IZSOL.NOADMISION, SER.DESCSERVICIO), --ORDEN
			IMOVH.CNSMOV, --ID1
			IMOVH.IDARTICULO, --ID2
			IMOVH.NOLOTE, --ID3
			IMOVH.NOLOTEPEDIDO, --ID4
			I.NODOCUMENTO, --ID5
			IZSOL.NOADMISION, --ID6
			IZSOL.CLASE, --ID7
			IZSOLD.CODOM, --ID8
			IZSOLD.IDSERVICIO, --ID9
			IZSOL.CONSECUTIVOHCA, --ID10
			(SELECT DESCRIPCION FROM HCCOM WHERE HCCOM.CODOM=IZSOLD.CODOM) DESC_CODOM, --STRINGMEDIO9
			I.FECHACONF, --FECHA1
			IZSOLDT.CANTIDADSOL-ISNULL(IMOVH.CANTREP,0) CANTIDAD , --VALOR1
			IZSOLDT.CANTIDADSOL-ISNULL(IMOVH.CANTREP,0) CANTIDAD_RECIBIR , --VALOR1
			LEFT(IART.DESCRIPCION,512) DESC_ARTICULO --STRINGGRANDE1
			, CAST(0 AS BIT) AS MARCA
		FROM IMOV I
			INNER JOIN IMOVH   ON IMOVH.CNSMOV=I.CNSMOV
			INNER JOIN IZSOL   ON I.NODOCUMENTO=IZSOL.CNSIZSOL 
			INNER JOIN IZSOLD  ON IZSOL.CNSIZSOL=IZSOLD.CNSIZSOL AND IMOVH.IDSERVICIO=IZSOLD.IDSERVICIO
			INNER JOIN IZSOLDT ON IZSOLD.CNSIZSOLD=IZSOLDT.CNSIZSOLD AND IZSOLDT.IDARTICULOREAL=IMOVH.IDARTICULO AND IZSOLDT.CNSMOV=I.CNSMOV AND IZSOLDT.NOLOTE=IMOVH.NOLOTE
			INNER JOIN IART    ON IMOVH.IDARTICULO=IART.IDARTICULO 
			INNER JOIN SER     ON IART.IDSERVICIO=SER.IDSERVICIO 
		WHERE IZSOL.NOADMISION=@NOADMISION AND I.IDTIPOMOV=@IDINVITMOVENF AND COALESCE(I.PROCEDENCIA,'')='CM_SOL' 
			AND I.FECHACONF >= CONVERT(DATETIME,(CASE ISDATE(@F_INIVERSION180) WHEN 1 THEN @F_INIVERSION180 ELSE '01/01/1800' END))
			AND IZSOL.CLASE IN ('OMEDICA','24HORAS','SENFER')
			AND COALESCE(I.ESTADO,0)=1
			AND ISNULL(IMOVH.RENFER,0) IN (0,2)
			AND (IZSOLDT.CANTIDADSOL-ISNULL(IMOVH.CANTREP,0))>0
			AND IART.IDITAR<>@DEINVNODESER
			AND ISNULL(SER.MEDICAMENTOS,0)= CASE WHEN @PIDE_INSUMOSCON_MEDI='SI' THEN ISNULL(SER.MEDICAMENTOS,0) 
																		ELSE (CASE IZSOLD.CODOM WHEN (CASE ISNULL(@OMCODHEMODERIVADOS,'') WHEN '' THEN 'XX' ELSE @OMCODHEMODERIVADOS END) THEN ISNULL(SER.MEDICAMENTOS,0) ELSE 1 END) 
																		END 
			AND 1=(CASE WHEN @IENF_MEZCLA<>'SI' AND ISNULL(IZSOLD.CODOM,'')=@OMCODMEZCLA THEN 0 ELSE 1 END)
			AND 1=(CASE WHEN @IENF_NUTP  <>'SI' AND ISNULL(IZSOLD.CODOM,'')=@OMCODNUTRICIONP THEN 0 ELSE 1 END)	
		
		RETURN
	END
	IF @METODO = 'RECIBIR_IENF'
	BEGIN
		SELECT @METODO = MODO, @CNSMOV = CNSMOV, @IDARTICULO = IDARTICULO, @NOLOTE = NOLOTE, @NOADMISION = NOADMISION, @CLASE = CLASE, @CODOM = CODOM,
				@IDSERVICIO = IDSERVICIO, @CONSECUTIVOHCA = CONSECUTIVOHCA, @CANTIDAD = CANTIDAD, @CANTIDAD_RECIBIR = CANTIDAD_RECIBIR
		FROM OPENJSON (@PARAMETROS)
		WITH (
			MODO				VARCHAR(20)	'$.MODO',
			CNSMOV				VARCHAR(20)	'$.CNSMOV',
			IDARTICULO			VARCHAR(20)	'$.IDARTICULO',
			NOLOTE				VARCHAR(20)	'$.NOLOTE',
			NOADMISION			VARCHAR(20)	'$.NOADMISION',
			CLASE				VARCHAR(20)	'$.CLASE',
			CODOM				VARCHAR(20)	'$.CODOM',
			IDSERVICIO			VARCHAR(20)	'$.IDSERVICIO',
			CONSECUTIVOHCA		VARCHAR(20)	'$.CONSECUTIVOHCA',
			CANTIDAD			VARCHAR(20)	'$.CANTIDAD',
			CANTIDAD_RECIBIR	VARCHAR(20)	'$.CANTIDAD_RECIBIR'
		)
		IF @METODO='RECIBIR'
		BEGIN
			IF COALESCE(@NOADMISION,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT 'Debe indicar cual es la admision o paciente a trasladar' ERROR
				RETURN
			END

			INSERT INTO @LISTA (CNSMOV, IDARTICULO, NOLOTE, NOADMISION, CLASE, CODOM, IDSERVICIO, CNSHCA, PRESUNI, EQUICC, CANTMAX, CANTREP, TRANSFORMADO)
			SELECT 
				@CNSMOV, @IDARTICULO, @NOLOTE, @NOADMISION, @CLASE, @CODOM, @IDSERVICIO, @CONSECUTIVOHCA,
				(CASE COALESCE(MDOSIF,0) WHEN 1 THEN (CASE WHEN @CODOM=@OMCODMEZCLA AND ISNULL(SER.MEZCLA,0)=3 THEN 'mL' ELSE SER.PRESUNI END) ELSE 'UND' END) AS PRESUNI,
				(CASE COALESCE(MDOSIF,0) WHEN 1 THEN (CASE WHEN @CODOM=@OMCODMEZCLA AND ISNULL(SER.MEZCLA,0)=3 THEN SER.EQUICCINF ELSE SER.EQUICC  END) ELSE 1     END) AS EQUICC, 
				@CANTIDAD, @CANTIDAD_RECIBIR, ISNULL(SER.TRANSFORMADO,0)
			FROM IART INNER JOIN SER  ON SER.IDSERVICIO=COALESCE(@IDSERVICIO, IART.IDSERVICIO)
			WHERE IART.IDARTICULO=@IDARTICULO
				AND EXISTS (SELECT 1 FROM IMOVH WHERE IMOVH.CNSMOV=@CNSMOV 
							AND IMOVH.IDARTICULO=@IDARTICULO 
							AND IMOVH.NOLOTE=@NOLOTE
							AND (IMOVH.CANTIDAD-ISNULL(IMOVH.CANTREP,0))>=@CANTIDAD_RECIBIR
							)
			ORDER BY IART.IDITAR, SER.IDSERVICIO

			PRINT 'Actualizo IMOVH'
			UPDATE IMOVH SET
				USUARIOR= @USUARIO,
				CANTREP = ISNULL(IMOVH.CANTREP,0) + L.CANTREP,
				RENFER  = CASE WHEN L.CANTMAX = L.CANTREP THEN 1 WHEN L.CANTMAX > L.CANTREP THEN 2 ELSE 0 END 
			FROM IMOVH INNER JOIN @LISTA L ON IMOVH.CNSMOV=L.CNSMOV AND IMOVH.IDARTICULO=L.IDARTICULO AND IMOVH.NOLOTE=L.NOLOTE
 
 --query2
 --query2   
			PRINT 'Inicio Bucle para insertar los distintos registros de @LISTA'
			SELECT @FIX_TO = COUNT(1) FROM @LISTA
			WHILE @FIX <= @FIX_TO
			BEGIN
				SELECT @VECES=(CASE TRANSFORMADO WHEN 1 THEN 1 ELSE CANTREP END), @CODOM=CODOM FROM @LISTA WHERE ID=@FIX
  
				IF @CODOM=@OMCODHEMODERIVADOS
					SET @TIPO='HEM'
				ELSE IF @CODOM=@OMCODMEZCLA
					SET @TIPO='INF'
				ELSE IF @CODOM=@OMCODNUTRICIONP
					SET @TIPO='NUT'
				ELSE
					SET @TIPO='MED'

				IF @TIPO='HEM'
				BEGIN
					SELECT @IDSERVICIO=L.IDSERVICIO
					FROM @LISTA L CROSS JOIN DBO.FNK_N_REGISTROS(@VECES)
					INNER JOIN IZSOLDT ON IZSOLDT.CNSMOV=L.CNSMOV AND IZSOLDT.IDARTICULO=L.IDARTICULO AND IZSOLDT.NOLOTE=L.NOLOTE
					INNER JOIN BSRES   ON BSRES.CNSIZSOLD=IZSOLDT.CNSIZSOLD AND BSRES.IDARTICULO=IZSOLDT.IDARTICULO AND BSRES.LOTE=IZSOLDT.NOLOTE AND ISNULL(BSRES.ESTADODEV,0)=0
					WHERE ID=@FIX

					INSERT INTO IENF (TIPO,NOREFERENCIA,CNSMOV,FECHA,IDSERVICIO,IDARTICULO,NOLOTE,EQUICC,PRESUNI,USUARIO,CODOM,CONSECUTIVOHCA,CLASE)
					SELECT 'NOADMISION', L.NOADMISION, L.CNSMOV, @HOY, L.IDSERVICIO, L.IDARTICULO, L.NOLOTE, BSRES.BSCAPACIDAD, 'ml', @USUARIO, @TIPO, CNSHCA, CLASE
					FROM @LISTA L CROSS JOIN DBO.FNK_N_REGISTROS(@VECES)
					INNER JOIN IZSOLDT ON IZSOLDT.CNSMOV=L.CNSMOV AND IZSOLDT.IDARTICULO=L.IDARTICULO AND IZSOLDT.NOLOTE=L.NOLOTE
					INNER JOIN BSRES   ON BSRES.CNSIZSOLD=IZSOLDT.CNSIZSOLD AND BSRES.IDARTICULO=IZSOLDT.IDARTICULO AND BSRES.LOTE=IZSOLDT.NOLOTE AND ISNULL(BSRES.ESTADODEV,0)=0
					WHERE ID=@FIX
					IF NOT EXISTS(SELECT 1 FROM HBALI A INNER JOIN HBALID B ON A.CNSHBALI=B.CNSHBALI WHERE NOADMISION=@NOADMISION AND CAST(FECHA AS date)=CAST(GETDATE() AS DATE) AND IDSERVICIO = @IDSERVICIO AND CLASE = @CODOM)
					BEGIN
						IF (SELECT COUNT(1) FROM HBALI WHERE NOADMISION = @NOADMISION AND DBO.FNK_FECHA_SIN_HORA(FECHA) = DBO.FNK_FECHA_SIN_HORA(GETDATE()))= 0
						BEGIN                        
							--EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@HBALI', @CNSHBALI OUTPUT  
							--SELECT @CNSHBALI = @IDSEDE + REPLACE(SPACE(10 - LEN(@CNSHBALI))+LTRIM(RTRIM(@CNSHBALI)),SPACE(1),0) 
							EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE, @PREFIJO='@HBALI' ,@NVOCONSEC=@CNSHBALI OUTPUT

							INSERT INTO HBALI(CNSHBALI, NOADMISION, FECHA)
							SELECT @CNSHBALI, @NOADMISION, DBO.FNK_FECHA_SIN_HORA(GETDATE())
						END
						ELSE
						BEGIN
							SELECT @CNSHBALI = CNSHBALI FROM HBALI WHERE NOADMISION = @NOADMISION AND DBO.FNK_FECHA_SIN_HORA(FECHA) = dbo.FNK_FECHA_SIN_HORA(GETDATE())
						END
						IF (SELECT COUNT(1) FROM HBALID WHERE CNSHBALI = @CNSHBALI AND IDSERVICIO = @IDSERVICIO AND CLASE = @CODOM) =  0
						BEGIN
							SELECT @NCONSECUTIVO = COALESCE(MAX(NCONSECUTIVO),0) FROM HBALID WHERE CNSHBALI = @CNSHBALI AND TIPO = 'HEMODE'
							SELECT @NCONSECUTIVO = COALESCE(@NCONSECUTIVO,0) + 1
							INSERT INTO HBALID(CNSHBALI, NTIPO, NCONSECUTIVO, TIPO, CLASE, IDSERVICIO, H07, H07EST, H08, H08EST, H09, H09EST, H10, H10EST, H11, H11EST,
												H12, H12EST, H13, H13EST, H14, H14EST, H15, H15EST, H16, H16EST, H17, H17EST, H18, H18EST, H19, H19EST, H20, H20EST,
												H21, H21EST, H22, H22EST, H23, H23EST, H00, H00EST, H01, H01EST, H02, H02EST, H03, H03EST, H04, H04EST, H05, H05EST,
												H06, H06EST)                   
							SELECT @CNSHBALI, 5, @NCONSECUTIVO, 'HEMODE', @CODOM, @IDSERVICIO,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 
						END
					END

					UPDATE BSRES SET ESTADO='Recibido', IDRECIBE=@USUARIO, F_RECIBE=@HOY
					FROM @LISTA L
					INNER JOIN IZSOLDT ON IZSOLDT.CNSMOV=L.CNSMOV
					INNER JOIN BSRES   ON BSRES.CNSIZSOLD=IZSOLDT.CNSIZSOLD
					WHERE L.ID=@FIX AND UPPER(BSRES.ESTADO)='ENTREGADO'
				END
				ELSE IF @TIPO='NUT'
				BEGIN --Inicio: Nutrición
					--Inicio: Busco datos del IDSERVICIO y CONSECUTIVOHCA
					SELECT @IDSERVICIO=NULL, @CNSHCA=NULL, @CNSIENF=NULL, @CANTIDAD=0, @FECHASOL=NULL

					IF EXISTS (SELECT 1 FROM @LISTA L INNER JOIN HCATDH H ON H.CONSECUTIVO=L.CNSHCA AND H.CODOM=L.CODOM AND H.IDSERVICIOD=L.IDSERVICIO WHERE ID=@FIX)
					BEGIN
					SELECT @IDSERVICIO=H.IDSERVICIO, @CNSHCA=H.CONSECUTIVO, @CANTIDAD=H.CANTIDAD
						FROM @LISTA L 
						INNER JOIN HCATDH H ON H.CONSECUTIVO=L.CNSHCA AND H.CODOM=L.CODOM AND H.IDSERVICIOD=L.IDSERVICIO
						INNER JOIN IMOVH I ON I.CNSMOV=L.CNSMOV AND I.IDARTICULO=L.IDARTICULO AND I.NOLOTE=L.NOLOTE
						WHERE L.ID=@FIX AND I.DILUYENTE<>'DY'
					END
					ELSE
					BEGIN
					SELECT @IDSERVICIO=H.IDSERVICIO, @CNSHCA=H.CONSECUTIVO, @CANTIDAD=H.QMEZCLA
						FROM @LISTA L 
						INNER JOIN IMOVH I ON I.CNSMOV=L.CNSMOV AND I.IDARTICULO=L.IDARTICULO AND I.NOLOTE=L.NOLOTE
						INNER JOIN SER   S ON S.IDSERVICIO=I.IDSERVICIO
						INNER JOIN HCATD H ON H.CONSECUTIVO=L.CNSHCA AND H.CODOM=L.CODOM 
						INNER JOIN SER  SD ON SD.IDSERVICIO=H.IDSERVICIOMEZCLA
						WHERE L.ID=@FIX AND I.DILUYENTE='DY' AND S.IDJERARQUIA=SD.IDJERARQUIA
					END
					--Fin: Busco datos del IDSERVICIO y CONSECUTIVOHCA

					--Inicio: Creo cnsienf
					SELECT @CNSIENF=I.CNSIENF, @FECHASOL=CONVERT(SMALLDATETIME,COALESCE(IZSOL.FECHASOL,@HOY))
					FROM @LISTA L INNER JOIN IENF I ON I.TIPO='NOADMISION' AND I.NOREFERENCIA=L.NOADMISION 
						AND I.IDSERVICIO=@IDSERVICIO AND COALESCE(I.CONSECUTIVOHCA,'')=@CNSHCA
					INNER JOIN IMOV ON IMOV.CNSMOV=I.CNSMOV
					INNER JOIN IMOV M ON M.CNSMOV=L.CNSMOV
					LEFT  JOIN IZSOL ON IZSOL.CNSIZSOL=M.NODOCUMENTO
					WHERE L.ID=@FIX AND IMOV.NODOCUMENTO=M.NODOCUMENTO

					IF @CNSIENF IS NULL
					BEGIN
						SELECT @EQUICC=MAX(ISNULL(D.QMEZCLA,0))+SUM(ISNULL(H.CANTIDAD,0))
						FROM HCATD D INNER JOIN HCATDH H ON H.CONSECUTIVO=D.CONSECUTIVO AND D.CODOM=H.CODOM AND D.IDSERVICIO=H.IDSERVICIO
						WHERE D.CONSECUTIVO=@CNSHCA AND D.CODOM=@CODOM AND D.IDSERVICIO=@IDSERVICIO

						INSERT INTO IENF (TIPO,NOREFERENCIA,CNSMOV,FECHA,IDSERVICIO,IDARTICULO,NOLOTE,EQUICC,PRESUNI,USUARIO,CODOM,CONSECUTIVOHCA,CLASE)
						SELECT 'NOADMISION', NOADMISION, CNSMOV, @FECHASOL FECHA, @IDSERVICIO, NULL, NULL, @EQUICC, 'mL', @USUARIO, @TIPO, @CNSHCA, CLASE
						FROM @LISTA L 
						WHERE ID=@FIX

						SET @CNSIENF=@@IDENTITY
					END
         
					INSERT INTO IENFD (CNSIENF,CNSMOV,FECHA,IDSERVICIO,IDARTICULO,NOLOTE,EQUICC)
					SELECT @CNSIENF, CNSMOV, @HOY, IDSERVICIO, IDARTICULO, NOLOTE, EQUICC
					FROM @LISTA L CROSS JOIN DBO.FNK_N_REGISTROS(@VECES)
					WHERE ID=@FIX
					--Fin: Creo cnsienf
				END --Fin: Nutrición
				ELSE
				BEGIN
					INSERT INTO IENF (TIPO,NOREFERENCIA,CNSMOV,FECHA,IDSERVICIO,IDARTICULO,NOLOTE,EQUICC,PRESUNI,USUARIO,CODOM,CONSECUTIVOHCA,CLASE)
					SELECT 'NOADMISION', NOADMISION, CNSMOV, @HOY FECHA, IDSERVICIO, IDARTICULO, NOLOTE, 
					(CASE TRANSFORMADO WHEN 1 THEN CANTREP ELSE EQUICC END), PRESUNI, @USUARIO, @TIPO, CNSHCA, CLASE
					FROM @LISTA L CROSS JOIN DBO.FNK_N_REGISTROS(@VECES)
					WHERE ID=@FIX
				END

				SET @FIX += 1
			END
			RETURN
		END
		IF @METODO='NO_RECIBIR'
		BEGIN
			UPDATE IMOVH SET USUARIOR=@USUARIO, RENFER=4 WHERE CNSMOV=@CNSMOV AND IDARTICULO=@IDARTICULO AND NOLOTE=@NOLOTE
			IF (SELECT COUNT(1) FROM IBOD WHERE IDBODEGA=(SELECT IDBODEGA FROM IMOV WHERE CNSMOV=@CNSMOV) AND CONFIRMAAUTOMDESDEQX=1 AND TIPOBODEGA='Virtual')>0
			BEGIN
				BEGIN TRY
					EXEC SPK_RECUPERA_NORECIBIDOS_ENF @CNSMOV,@IDARTICULO,@NOLOTE,@NOADMISION,@USUARIO,@IDSEDE,@SYS_COMPUTERNAME, 1
				END TRY
				BEGIN CATCH
					SELECT 'KO' OK
					SELECT ERROR = 'Error al no recibir los insumos, error: '+ERROR_MESSAGE() 
					RETURN
				END CATCH
			END
			RETURN
		END
		RETURN
	END
	IF @METODO = 'ALTA_ENFERMERIA'
	BEGIN
		SELECT @NOADMISION = NOADMISION, @METODO = METODO
		FROM OPENJSON (@PARAMETROS)
		WITH (
			NOADMISION        VARCHAR(20)    '$.NOADMISION',
			METODO            VARCHAR(20)    '$.METODO'
		)
		
		IF COALESCE(@NOADMISION,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT 'Debe indicar cual es la admision a consultar' ERROR
			RETURN
		END
		
		SELECT @ESTADO=CERRADA FROM HADM WHERE NOADMISION = @NOADMISION
		
		IF @METODO='RETIRAR'
		BEGIN
			IF @ESTADO<>3
			BEGIN
				SELECT 'KO' OK
				SELECT 'Paciente no cuenta con alta de enfermeria, no se puede retirar'
				RETURN	
			END
			IF DBO.FNK_VALORVARIABLE('LIBCAMANOTACIERRE')='SI'
			BEGIN
				UPDATE HADM SET CERRADA=2 WHERE NOADMISION=@NOADMISION
			END
			SELECT 'OK' OK
			RETURN
		END
		
		IF @ESTADO<>2
		BEGIN
			INSERT INTO @TBLERRORES (ERROR)
			SELECT CASE @ESTADO WHEN 1 THEN 'Paciente con Alta Administrativa' 
								WHEN 0 THEN 'No se le ha dado alta medica al paciente, aun admitido'
								WHEN 3 THEN 'Paciente ya cuenta con alta de enfermeria'
								ELSE 'Error al validar el estado del paciente' END ERROR
		END
		IF DBO.FNK_VALORVARIABLE('REVISAISOLALTAENF')='SI'
		BEGIN
			IF (SELECT COUNT(1) FROM IZSOL WHERE NOADMISION=@NOADMISION AND ESTADO=1 AND CLASE NOT IN ('QXPGCX','CE','Consumo'))>0
			BEGIN
				INSERT INTO @TBLERRORES (ERROR)
				SELECT 'Existen solicitudes realizadas a farmacia sin definir' UNION ALL
				SELECT 'Solicitud: '+ CNSIZSOL+' Bodega: '+IDBODEGAATIENDE
				FROM IZSOL WHERE NOADMISION=@NOADMISION AND ESTADO=1 AND CLASE NOT IN ('QXPGCX','CE','Consumo')
			END
		END
		IF (SELECT COUNT(1) FROM HPRE WHERE NOADMISION=@NOADMISION AND PROCEDENCIA='ENFER' AND COALESCE(ANULADO,0)=0 AND COALESCE(ESDEINV,0)=1 AND COALESCE(PEDIDOINV,0)=0)>0
		BEGIN
			INSERT INTO @TBLERRORES (ERROR)
			SELECT 'Existen cargos que deben ser cerrados antes de realizar la alta' UNION ALL
			SELECT 'Noprestacion: '+NOPRESTACION+' Fecha:'+LEFT(CONVERT(VARCHAR, FECHA, 29),17) 
			FROM HPRE WHERE NOADMISION=@NOADMISION AND PROCEDENCIA='ENFER' AND COALESCE(ANULADO,0)=0 AND COALESCE(ESDEINV,0)=1 AND COALESCE(PEDIDOINV,0)=0		
		END
		IF DBO.FNK_VALORVARIABLE('TIPOHTX')='HORIZONTAL'
		BEGIN			
			IF DBO.FNK_VALORVARIABLE('MODOCOBROMEDHBALI')='HBALI'
			BEGIN
				IF DBO.FNK_VALORVARIABLE('IENF')='SI'
				BEGIN
					IF (SELECT COUNT(1) FROM VWK_IENF_NOADMISION WHERE NOADMISION=@NOADMISION AND TOTAL>0)>0
					BEGIN
						INSERT INTO @TBLERRORES (ERROR)
						SELECT 'Existe disponibilidad de medicamentos en el tacho del paciente' UNION ALL
						SELECT 'Idservicio: ' +IDSERVICIO+' - '+DESCSERVICIO+' Cantidad: '+CONVERT(VARCHAR,TOTAL)
						FROM VWK_IENF_NOADMISION WHERE NOADMISION=@NOADMISION AND TOTAL>0
					END
					IF (SELECT COUNT(1) FROM IDEV WHERE NOADMISION=@NOADMISION AND APLICADA=0 AND PREFIJO IN ('HBALI','HEMO'))>0
					BEGIN					
						INSERT INTO @TBLERRORES (ERROR)
						SELECT 'Existen posibles devoluciones sin confirmar.' UNION ALL
						SELECT 'Cnsidev: '+CNSIDEV+' FechaDev:'+LEFT(CONVERT(VARCHAR, FECHA, 29),17)
						FROM IDEV WHERE NOADMISION=@NOADMISION AND APLICADA=0 AND PREFIJO IN ('HBALI','HEMO')
					END
				END
				ELSE
				BEGIN
					IF (SELECT COUNT(1)FROM ENFINV INNER JOIN SER ON ENFINV.IDARTICULO=SER.IDSERVICIO WHERE NOADMISION=@NOADMISION AND TIPOM='Unidad' 
								AND ENFINV.CANTIDAD -(DEVUELTA+COBRADA+ CASE WHEN COALESCE(DESECHADA,0)>0 THEN CEILING(ENFINV.DESECHADA/ENFINV.EQUICC) ELSE 0 END)>0)>0
					BEGIN
						INSERT INTO @TBLERRORES (ERROR)
						SELECT 'Existen items pendientes por definir (ENFINV).' UNION ALL
						SELECT 'Idservicio: '+SER.IDSERVICIO+' - '+SER.DESCSERVICIO FROM ENFINV INNER JOIN SER ON ENFINV.IDARTICULO=SER.IDSERVICIO WHERE NOADMISION=@NOADMISION AND TIPOM='Unidad' 
								AND ENFINV.CANTIDAD -(DEVUELTA+COBRADA+ CASE WHEN COALESCE(DESECHADA,0)>0 THEN CEILING(ENFINV.DESECHADA/ENFINV.EQUICC) ELSE 0 END)>0
					END        
				END
				IF (SELECT COUNT(1) FROM DBO.FNK_IMOVH_SIN_RECIBIR(@NOADMISION))>0
				BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'Hay entregas de farmacia sin recibir, No está permitido dar alta de enfermería con estos pendientes.'
				END
			END
			IF (SELECT COUNT(1) FROM DBO.VWK_HBALID WHERE NOADMISION=@NOADMISION AND ESTADO=1 AND CANTIDAD>0)>0
			BEGIN
				INSERT INTO @TBLERRORES (ERROR)
				SELECT 'Hay items de la hoja de trabajo sin definir. Revise por favor la hoja de trabajo y vuelva a intentarlo.' UNION ALL
				SELECT 'Idservicio: '+A.IDSERVICIO+'-'+LEFT(SER.DESCSERVICIO,50)+' Fecha:'+LEFT(CONVERT(VARCHAR, A.FECHA, 29),17) 
				FROM DBO.VWK_HBALID A LEFT JOIN SER ON SER.IDSERVICIO=A.IDSERVICIO 
				WHERE A.NOADMISION=@NOADMISION AND A.ESTADO=1 AND A.CANTIDAD>0
			END
			IF DBO.FNK_VALORVARIABLE('VALIDADEVOL_ALTA_EFN')='SI'
			BEGIN
				IF (SELECT COUNT(1) FROM IMOV WHERE NODOCUMENTO=@NOADMISION  AND PROCEDENCIA='HBALI' AND ESTADO=0 AND IDTIPOMOV=(SELECT DATO FROM USVGS WHERE IDVARIABLE='IDINVMOVPREDEV') )>0
				BEGIN
					INSERT INTO @TBLERRORES (ERROR)
					SELECT 'Hay devoluciones de enfermería sin confirmar en farmacia.' UNION ALL
					SELECT 'Cnsmov: '+CNSMOV+' Fecha: '+LEFT(CONVERT(VARCHAR, FECHAMOV, 29),17) 
					FROM IMOV WHERE NODOCUMENTO=@NOADMISION  AND PROCEDENCIA='HBALI' AND ESTADO=0 AND IDTIPOMOV=(SELECT DATO FROM USVGS WHERE IDVARIABLE='IDINVMOVPREDEV')
				END
				IF (SELECT COUNT(1) FROM IMOVH INNER JOIN IMOV ON IMOVH.CNSMOV=IMOV.CNSMOV INNER JOIN IZSOL ON IZSOL.CNSIZSOL=IMOV.NODOCUMENTO
					 WHERE IMOV.IDTIPOMOV=DBO.FNK_VALORVARIABLE('IDINVMOV_VENTAS') AND IZSOL.NOADMISION=@NOADMISION AND ISNULL(IMOVH.RENFER,0) IN (4,41))>0
				BEGIN
					INSERT INTO @TBLERRORES (ERROR)
					SELECT 'Hay no recibidos en inventario sin definir.' UNION ALL
					SELECT 'Cnsmov: '+IMOV.CNSMOV+' Articulo:'+IMOVH.IDARTICULO+'-'+IART.DESCRIPCION
					FROM IMOVH 
						INNER JOIN IMOV ON IMOVH.CNSMOV=IMOV.CNSMOV 
						INNER JOIN IZSOL ON IZSOL.CNSIZSOL=IMOV.NODOCUMENTO
						INNER JOIN IART ON IART.IDARTICULO=IMOVH.IDARTICULO
					WHERE IMOV.IDTIPOMOV=DBO.FNK_VALORVARIABLE('IDINVMOV_VENTAS') AND IZSOL.NOADMISION=@NOADMISION AND ISNULL(IMOVH.RENFER,0) IN (4,41)
				END
			END
			IF DBO.FNK_VALORVARIABLE('HOJTRA_CAMBIHORAINI')='SI'
			BEGIN
				IF (SELECT COUNT(1) FROM HBALINI WHERE NOADMISION=@NOADMISION AND COALESCE(ESTADO,'') IN ('I','P'))>0
				BEGIN
					INSERT INTO @TBLERRORES (ERROR)
					SELECT 'Existen tratamientos sin iniciar.' UNION ALL
					SELECT 'Servicio: '+A.IDSERVICIO+' - '+LEFT(SER.DESCSERVICIO,100) + ' Hora:'+LEFT(CONVERT(VARCHAR, A.FECHA, 29),17)
					FROM HBALINI A INNER JOIN SER ON SER.IDSERVICIO=A.IDSERVICIO WHERE NOADMISION=@NOADMISION AND COALESCE(A.ESTADO,'') IN ('I','P')
				END
			END
		END
		ELSE --HTX-VERTICAL
		BEGIN
			IF DBO.FNK_VALORVARIABLE('FTR_VALHTXSINCARGAR')='SI'
			BEGIN
				IF (SELECT COUNT(1) FROM HTX WHERE NOADMISION=@NOADMISION AND COALESCE(ANULADA,0)=0 AND ENCARGOS=0 AND COALESCE(INDDEV,0)=0)>0
				BEGIN
					INSERT INTO @TBLERRORES (ERROR)
					SELECT 'Existen Items de la Hoja de Tratamiento Sin Definir (HTX)...No se puede dar Alta de Enfermeria' UNION ALL
					SELECT 'Idservicio: '+IDSERVICIO+' FechaReq:'+LEFT(CONVERT(VARCHAR, FECHAREQ, 29),17)
					FROM HTX WHERE NOADMISION=@NOADMISION AND COALESCE(ANULADA,0)=0 AND ENCARGOS=0 AND COALESCE(INDDEV,0)=0
				END
				IF (SELECT COUNT(1) FROM IMOV WHERE NODOCUMENTO=@NOADMISION AND ESTADO=0 AND PROCEDENCIA<>'INV')>0
				BEGIN
					INSERT INTO @TBLERRORES (ERROR)
					SELECT 'Hay movimientos en farmacia sin confirmar. No está permitido dar Alta de Enfermería con estos pendientes.' UNION ALL
					SELECT 'Cnsmov: '+CNSMOV+' FechaMov:'+LEFT(CONVERT(VARCHAR, FECHAMOV, 29),17)
					FROM IMOV WHERE NODOCUMENTO=@NOADMISION AND ESTADO=0 AND PROCEDENCIA<>'INV'
				END
			END
		END
		IF (SELECT COUNT(1) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			IF @METODO='REVISAR'
			BEGIN
				SELECT 'OK' OK
				RETURN
			END
			IF @METODO='ALTA'
			BEGIN
				UPDATE HADM SET CERRADA = 3, FECHAALTAENF = CONVERT(SMALLDATETIME,GETDATE()), IDUSUARIOALTAENF = COALESCE(@IDMEDICO, @USUARIO), 
						ESTADO=CASE DBO.FNK_VALORVARIABLE('ALTAENF_SINBOLETA') WHEN 'SI' THEN 'SP01' ELSE 'SP00' END
				WHERE  NOADMISION = @NOADMISION

				INSERT INTO HEVEN (NOADMISION, EVENTO, USUARIO, SYS_COMPUTERNAME, CONSECUTIVOGEN, FECHA, CLASE)
				SELECT @NOADMISION, 'ALTA ENFERMERIA', @USUARIO, @SYS_COMPUTERNAME, 'ENFERMERIA', GETDATE(), 'SALIDA_PACIENTE'

				IF DBO.FNK_VALORVARIABLE('LIBCAMAALTAENF')='SI'
				BEGIN
					UPDATE HHAB SET ESTADOHAB='Libre', NOADMISION=NULL, IDAFILIADO=NULL WHERE NOADMISION=@NOADMISION
				END
				IF DBO.FNK_VALORVARIABLE('ESTANCIA_ALTA')='SI'
				BEGIN
					BEGIN TRY
						EXEC SPK_ESTANCIA_ADMISION @COMPANIA, @NOADMISION
					END TRY
					BEGIN CATCH
						SELECT 'KO' OK
						SELECT ERROR = 'Error al definir la estancia de la admision, error: '+ERROR_MESSAGE() 
						RETURN
					END CATCH
				END
				SELECT 'OK' OK
				RETURN
			END
			RETURN
		END
		RETURN
	END	
	IF @METODO = 'NOCI'
	BEGIN
		SELECT @METODO = METODO, @NOADMISION = NOADMISION, @HCA = HCA
		FROM OPENJSON (@PARAMETROS)
		WITH (
			HCA           NVARCHAR(MAX)     AS JSON,
			METODO        VARCHAR(20)    '$.METODO',
			NOADMISION    VARCHAR(20)    '$.NOADMISION'
		)
		IF @METODO = 'CONSULTAR'
		BEGIN
			SELECT 'OK' OK
			IF (SELECT COUNT(1) FROM HCA WHERE NOADMISION = @NOADMISION AND CLASE = 'NC')>0
			BEGIN
				SELECT TOP 1 CONSECUTIVO, FECHA, MED.IDMEDICO, MED.NOMBRE AS NOMBREMED, NOADMISION, IDAFILIADO, CLASEPLANTILLA, CLASE, AMBITO, IDDX, N_HISTORIA, OBSERVAANU
				FROM HCA LEFT JOIN MED ON MED.IDMEDICO=HCA.IDMEDICO
				WHERE NOADMISION = @NOADMISION AND CLASE = 'NC'
			END
			RETURN
		END
		IF @METODO = 'INSERTAR' OR @METODO = 'EDITAR'
		BEGIN

			SELECT @CONSECUTIVO = CONSECUTIVO, @FECHA = CONCAT(REPLACE(FECHA,'-',''),' ', HORA), @IDMEDICO = IDMEDICO, @NOADMISION = NOADMISION, 
				@IDAFILIADO = IDAFILIADO, @CLASEPLANTILLA = CLASEPLANTILLA, @CLASE = CLASE, @AMBITO = AMBITO, @IDDX = IDDX, 
				@OBSERVAANU = OBSERVAANU
			FROM OPENJSON (@HCA)
			WITH (
				CONSECUTIVO 	VARCHAR(20)    '$.consecutivo',
				FECHA 			VARCHAR(20)    '$.fecha',
				HORA 			VARCHAR(20)    '$.hora',
				IDMEDICO 		VARCHAR(20)    '$.idmedico',
				NOADMISION 		VARCHAR(20)    '$.noadmision',
				IDAFILIADO 		VARCHAR(20)    '$.idafiliado',
				CLASEPLANTILLA 	VARCHAR(20)    '$.claseplantilla',
				CLASE 			VARCHAR(20)    '$.clase',
				AMBITO			VARCHAR(20)    '$.ambito',
				IDDX 			VARCHAR(20)    '$.iddx',
				OBSERVAANU		VARCHAR(2000)  '$.observaanu'
			)
			
			
			IF COALESCE(@NOADMISION,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT 'DEBE INDICAR EL NOADMISION' ERROR
				RETURN
			END
			IF COALESCE(@IDAFILIADO,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT 'DEBE INDICAR EL IDAFILIADO' ERROR
				RETURN
			END
			IF COALESCE(@CLASEPLANTILLA,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT 'DEBE INDICAR LA PLANTILLA' ERROR
				RETURN
			END
			
			IF @METODO = 'INSERTAR'
			BEGIN
				--EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE,'@HCANC', @CONSECUTIVO OUTPUT
				--SELECT @CONSECUTIVO = @IDSEDE + 'NC'+ REPLACE(SPACE(8 - LEN(@CONSECUTIVO))+LTRIM(RTRIM(@CONSECUTIVO)),SPACE(1),0)
				EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE, @EXTRA='NC', @PREFIJO='@HCANC', @LONGITUD=8 ,@NVOCONSEC=@CONSECUTIVO OUTPUT
				SELECT TOP 1 @IDDX = IDDX FROM HCA WHERE NOADMISION = @NOADMISION AND PROCEDENCIA='QX'
			
				INSERT INTO HCA (CONSECUTIVO, FECHA, IDMEDICO, NOADMISION, IDAFILIADO, CLASEPLANTILLA, CLASE, AMBITO, IDDX, N_HISTORIA, OBSERVAANU)
				SELECT @CONSECUTIVO, @FECHA, @IDMEDICO, @NOADMISION, @IDAFILIADO, @CLASEPLANTILLA, @CLASE, @AMBITO, @IDDX, @CONSECUTIVO, @OBSERVAANU
			
				IF @@ERROR = 0
					SELECT 'OK' OK
				ELSE
				BEGIN
					SELECT 'KO' OK
					RETURN
				END

				UPDATE HADM SET ESTADO = 'SP02' WHERE NOADMISION=@NOADMISION
				IF DBO.FNK_VALORVARIABLE('LIBCAMANOTACIERRE')='SI'
				BEGIN
					UPDATE HHAB SET NOADMISION=NULL, IDAFILIADO=NULL,
						ESTADOHAB=CASE WHEN DBO.FNK_VALORVARIABLE('ESTADOCAMA_NC')<>'' THEN DBO.FNK_VALORVARIABLE('ESTADOCAMA_NC') ELSE 'Aseo' END
					WHERE NOADMISION=@NOADMISION
				END

				INSERT INTO HEVEN (NOADMISION, EVENTO, USUARIO, SYS_COMPUTERNAME, CONSECUTIVOGEN, FECHA, CLASE)
				SELECT @NOADMISION, 'NOTA DE CIERRE', @USUARIO, @SYS_COMPUTERNAME, 'ENFERMERIA', GETDATE(), 'SALIDA_PACIENTE' UNION ALL
				SELECT @NOADMISION, 'ESTADO CAMA', @USUARIO, @SYS_COMPUTERNAME, 'Aseo', GETDATE(), 'SALIDA_PACIENTE'

				RETURN
			END
			
			IF @METODO = 'EDITAR'
			BEGIN
				IF COALESCE(@CONSECUTIVO,'')=''
				BEGIN
					SELECT 'KO' OK
					SELECT 'DEBE INDICAR EL CONSECUTIVO A EDITAR' ERROR
					RETURN
				END
				UPDATE HCA SET FECHA=@FECHA, OBSERVAANU = @OBSERVAANU WHERE CONSECUTIVO = @CONSECUTIVO
				
				IF @@ERROR = 0
               BEGIN
					   SELECT 'OK' OK
               END
				ELSE
               BEGIN
					SELECT 'KO' OK
				   RETURN
               END
            UPDATE HADM SET ESTADO = 'SP02' WHERE NOADMISION=@NOADMISION
				IF DBO.FNK_VALORVARIABLE('LIBCAMANOTACIERRE')='SI'
				BEGIN
					UPDATE HHAB SET NOADMISION=NULL, IDAFILIADO=NULL,
						ESTADOHAB=CASE WHEN DBO.FNK_VALORVARIABLE('ESTADOCAMA_NC')<>'' THEN DBO.FNK_VALORVARIABLE('ESTADOCAMA_NC') ELSE 'Aseo' END
					WHERE NOADMISION=@NOADMISION
				END

				INSERT INTO HEVEN (NOADMISION, EVENTO, USUARIO, SYS_COMPUTERNAME, CONSECUTIVOGEN, FECHA, CLASE)
				SELECT @NOADMISION, 'NOTA DE CIERRE', @USUARIO, @SYS_COMPUTERNAME, 'ENFERMERIA', GETDATE(), 'SALIDA_PACIENTE' UNION ALL
				SELECT @NOADMISION, 'ESTADO CAMA', @USUARIO, @SYS_COMPUTERNAME, 'Aseo', GETDATE(), 'SALIDA_PACIENTE'
			END
			RETURN
		END
		RETURN
	END
	IF @METODO = 'PENDIENTES_ADMISION'
	BEGIN
		SELECT @NOADMISION = NOADMISION
		FROM OPENJSON (@PARAMETROS)
		WITH (
			NOADMISION    VARCHAR(20)    '$.NOADMISION'
		)
		IF COALESCE(@NOADMISION,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'DEBE INDICAR EL NOADMISION A CONSULTAR'
			RETURN
		END


		INSERT INTO @T (TIPO, SUBTIPO, TITULO, CANTIDAD, ESTITULO,ICONO)  ---INSERTO TITULO
		SELECT TIPO, '', CASE TIPO WHEN 'Med' THEN 'Medico' WHEN 'Enf' THEN 'Enfermeria' WHEN 'Ter' THEN 'Terapia'
										WHEN 'Far' THEN 'Farmacia' WHEN 'ADx' THEN 'Apoyo Dx' WHEN 'CX' THEN 'Cirugia' 
										WHEN 'Hemo' THEN 'Hemoderivados' ELSE 'Otros' END, 
		SUM(CANTIDAD), 1 
			, CASE TIPO WHEN 'Med' THEN 'fa-solid fa-stethoscope' WHEN 'Enf' THEN 'fa-solid fa-user-nurse-hair-long' 
						WHEN 'Ter' THEN 'fa-solid fa-person-cane' WHEN 'Far' THEN 'fa-duotone fa-capsules' 
						WHEN 'ADx' THEN 'fa-solid fa-flask-vial' WHEN 'CX' THEN 'fa-duotone fa-scalpel-line-dashed' 
						WHEN 'Hemo' THEN 'fa-solid fa-heart-pulse' ELSE 'fa-solid fa-triangle-exclamation' END
		FROM DBO.FNK_PENDIENTE_HADM(@NOADMISION,'','')
			
		GROUP BY TIPO, CASE TIPO WHEN 'Med' THEN 'Medico' WHEN 'Enf' THEN 'Enfermeria' WHEN 'Ter' THEN 'Terapia'
										WHEN 'Far' THEN 'Farmacia' WHEN 'ADx' THEN 'Apoyo Dx' WHEN 'CX' THEN 'Cirugia' 
										WHEN 'Hemo' THEN 'Hemoderivados' ELSE 'Otros' END
		UNION ALL --INSERTO SUBTITULO
		SELECT TIPO, SUBTIPO, TITULO, CANTIDAD, 2,''
		FROM DBO.FNK_PENDIENTE_HADM(@NOADMISION,'','')

		DECLARE _CURSOR_PEND CURSOR FOR
		SELECT TIPO, SUBTIPO FROM @T WHERE ESTITULO=2

		OPEN _CURSOR_PEND
		FETCH NEXT FROM _CURSOR_PEND INTO @TIPOT, @SUBTIPO
		WHILE @@FETCH_STATUS = 0
		BEGIN
			INSERT INTO @T (ITEM, TIPO, SUBTIPO, TITULO, CANTIDAD, ESTITULO, CNS, OBS, COLOR) --INSERTO DETALLE
			SELECT ROW_NUMBER() OVER(ORDER BY A.TIPO, A.SUBTIPO), @TIPOT, @SUBTIPO, T.TITULO, A.CANTIDAD, 0, A.CNS, A.OBS, A.COLOR 
			FROM DBO.FNK_PENDIENTE_HADM(@NOADMISION,@TIPOT, @SUBTIPO) A
			CROSS JOIN @T T
			WHERE T.TIPO=@TIPOT AND T.SUBTIPO=@SUBTIPO
			FETCH NEXT FROM _CURSOR_PEND INTO @TIPOT, @SUBTIPO
		END
		CLOSE _CURSOR_PEND
		DEALLOCATE _CURSOR_PEND

		SELECT 'OK' OK
		SELECT * FROM @T 
		
	END
	IF @METODO = 'IZSOL_IENF'
	BEGIN
		SELECT @NOADMISION = NOADMISION, @FILTRO = FILTRO, @FECHAINI = FINI, @FECHAFIN = FFIN, @ESTADO = ESTADO, 
				@PROCEDENCIA = PROCEDENCIA, @ARTICULO = ARTICULO
		FROM OPENJSON (@PARAMETROS)
		WITH (
			NOADMISION  VARCHAR(20)		'$.NOADMISION',
			FILTRO		VARCHAR(200)    '$.FILTRO',
			FINI		VARCHAR(20)		'$.FINI',
			FFIN		VARCHAR(20)		'$.FFIN',
			ESTADO	    VARCHAR(2)		'$.ESTADO',
			PROCEDENCIA VARCHAR(20)		'$.PROCEDENCIA',
			ARTICULO	VARCHAR(30)		'$.ARTICULO'
		)
		IF COALESCE(@NOADMISION,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'DEBE INDICAR LA ADMISION A CONSULTAR'
			RETURN
		END 
		------FILTRO SE PASA A QUASAR
		--SELECT @CMD = 'CLASE<>''CE'' '
		--IF COALESCE(@NOADMISION,'')<>''
		--	SELECT @CMD+=' AND NOADMISION = '''+@NOADMISION+''''
		--IF COALESCE(@FILTRO,'')<>''
		--	SELECT @CMD+=' AND CNSIZSOL LIKE ''%'+@FILTRO+'%'''
		--IF COALESCE(@FECHAINI,'')<>''
		--	SELECT @CMD+=' AND FECHASOL>=REPLACE('''+@FECHAINI+''',''-'','''')'
		--IF COALESCE(@FECHAFIN,'')<>''
		--	SELECT @CMD+=' AND CAST(FECHASOL AS DATE)<=REPLACE('''+@FECHAFIN+''',''-'','''')'
		--IF COALESCE(@ESTADO,'To')<>'To'
		--	SELECT @CMD+=' AND ESTADO='''+@ESTADO+''''
		--IF COALESCE(@PROCEDENCIA,'Todos')<>'Todos'
		--	SELECT @CMD+=' AND CLASE='''+@PROCEDENCIA+''''
		--IF COALESCE(@ARTICULO,'')<>''
		--	SELECT @CMD+=' AND EXISTS( SELECT 1 FROM IART INNER JOIN IZSOLD ON IZSOLD.IDARTICULO=IART.IDARTICULO
		--						WHERE IZSOLD.CNSIZSOL=IZSOL.CNSIZSOL AND CONCAT(IART.IDARTICULO, IART.DESCRIPCION) LIKE ''%'+@ARTICULO+'%'')'

		SELECT 'OK' OK
		SELECT CNSIZSOL, IDBODEGAATIENDE, FECHASOL, CLASE, SECTOR, USUARIOSOL, ESTADO
		FROM IZSOL
		WHERE NOADMISION=@NOADMISION AND COALESCE(CLASE,'')<>'CE'
		ORDER BY FECHASOL DESC

		RETURN		
	END
	IF @METODO = 'IZSOLD_IENF'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL
		FROM OPENJSON (@PARAMETROS)
		WITH (
			CNSIZSOL    VARCHAR(20)    '$.CNSIZSOL'
		)
		IF COALESCE(@CNSIZSOL,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'DEBE INDICAR EL CONSECUTIVO A CONSULTAR'
			RETURN
		END
		
		SELECT @NOADMISION=NOADMISION FROM IZSOL WHERE CNSIZSOL=@CNSIZSOL

		--INSERT INTO RPDX (CNS,IDTERCERO,FECHA1,ID1,ID2,ID3,ID4,STRINGMEDIO1,ID5,STRINGMEDIO2,ID6,STRINGGRANDE1,ID7,ID8,CANTIDAD,ID9)
		
		SELECT 'OK' OK
		
		SELECT IZSOLD.CNSIZSOL, IZSOLD.CNSIZSOLD, IZSOLD.IDARTICULO, IART.DESCRIPCION ARTICULO, IZSOLD.CANTIDADSOL, 
			IZSOLD.NUMDOSIS,IZSOLD.CANTIDAD, IZSOLD.FRECUENCIA, IZSOLD.DURACION, IZSOLD.ESTADO,
			(SELECT SUM(IZSOLDT.CANTIDADSOL) FROM IZSOLDT WHERE IZSOLDT.CNSIZSOLD=IZSOLD.CNSIZSOLD) CANTENTREGA,
			CASE COALESCE(IZSOLD.CODOM,'') WHEN dbo.FNK_VALORVARIABLE('OMCODMEDICAMENTOSNP') THEN 'NoPos' --RED
											WHEN dbo.FNK_VALORVARIABLE('OMCODMEDICAMENTOS') THEN 'Pos'	  --PINK
											WHEN dbo.FNK_VALORVARIABLE('OMCODMEDICAMENTOSCT') THEN 'Contr'--
											WHEN dbo.FNK_VALORVARIABLE('OMCODLIQUIDOSPARE') THEN 'Liqui'  --GREEN
											WHEN dbo.FNK_VALORVARIABLE('OMCODMEZCLA') THEN 'Infu'		  --
											WHEN dbo.FNK_VALORVARIABLE('OMCODMEDIENTERAL') THEN 'Nente'	  --LIME
											WHEN dbo.FNK_VALORVARIABLE('OMCODNUTRICIONP') THEN 'Nparent'  --BLUE
											ELSE 'Mat' END CLASEMED --PURPLE
		FROM IZSOLD
			INNER JOIN IZSOL ON IZSOL.CNSIZSOL=IZSOLD.CNSIZSOL
			INNER JOIN IART ON IART.IDARTICULO=IZSOLD.IDARTICULO
			LEFT JOIN IZSOLDT ON IZSOLD.CNSIZSOLD=IZSOLDT.CNSIZSOLD
		WHERE IZSOLD.CNSIZSOL=@CNSIZSOL

		SELECT X.FECHA, X.TIPO, X.CNSMOV, X.IDBODEGA, X.USUARIO, LEFT(U1.NOMBRE,100) AS USU_ENTREGA,
			X.USUARIOR, LEFT(U2.NOMBRE,100) AS USU_RECIBE, X.IDARTICULO, LEFT(IART.DESCRIPCION,512) AS ARTICULO, 
			X.NOLOTE, X.NOLOTEPEDIDO, CONVERT(INT,SUM(X.CANTIDAD)) AS CANTIDAD, @CNSIZSOL
		FROM (
			SELECT IENF.FECHA, TIPO=CASE IENF.DEVUELTO WHEN 1 THEN 'Devuelto' ELSE 'Recibido' END, 
				IMOV.CNSMOV, IMOV.IDBODEGA, CASE IENF.DEVUELTO WHEN 1 THEN IDEV.USUARIO ELSE IMOVH.USUARIO END USUARIO, 
				IMOVH.USUARIOR, IMOVH.IDARTICULO, IMOVH.NOLOTE, IMOVH.NOLOTEPEDIDO, 1 CANTIDAD
			FROM IMOV INNER JOIN IMOVH ON IMOVH.CNSMOV=IMOV.CNSMOV
				INNER JOIN IENF ON IENF.TIPO='NOADMISION' AND IENF.NOREFERENCIA=@NOADMISION 
					AND IENF.CNSMOV=IMOV.CNSMOV AND COALESCE(IENF.CODOM,'') NOT IN ('NUT') AND IENF.IDARTICULO=IMOVH.IDARTICULO AND IENF.NOLOTE=IMOVH.NOLOTE
				LEFT  JOIN IDEV ON ISNULL(IENF.CNSIDEV,'')=IDEV.CNSIDEV
			WHERE IMOV.PROCEDENCIA='CM_SOL' AND IMOV.NODOCUMENTO=@CNSIZSOL AND IMOV.ESTADO=1

			UNION ALL

			SELECT IENF.FECHA, TIPO=CASE IENF.DEVUELTO WHEN 1 THEN 'Devuelto' ELSE 'Recibido' END, 
				IMOV.CNSMOV, IMOV.IDBODEGA, CASE IENF.DEVUELTO WHEN 1 THEN IDEV.USUARIO ELSE IMOVH.USUARIO END USUARIO, 
				IMOVH.USUARIOR, IMOVH.IDARTICULO, IMOVH.NOLOTE, IMOVH.NOLOTEPEDIDO, 1 CANTIDAD
			FROM IMOV INNER JOIN IMOVH ON IMOVH.CNSMOV=IMOV.CNSMOV
				INNER JOIN IENF  ON IENF.TIPO='NOADMISION' AND IENF.NOREFERENCIA=@NOADMISION 
					AND IENF.CNSMOV=IMOV.CNSMOV AND COALESCE(IENF.CODOM,'') IN ('NUT')
				INNER JOIN IENFD ON IENFD.CNSIENF=IENF.CNSIENF AND IENFD.CNSMOV=IMOV.CNSMOV
				   AND IENFD.IDARTICULO=IMOVH.IDARTICULO AND IENFD.NOLOTE=IMOVH.NOLOTE
				LEFT  JOIN IDEV ON ISNULL(IENF.CNSIDEV,'')=IDEV.CNSIDEV
			WHERE IMOV.PROCEDENCIA='CM_SOL' AND IMOV.NODOCUMENTO=@CNSIZSOL AND IMOV.ESTADO=1 

			UNION ALL

			SELECT IMOV.FECHACONF, 
				TIPO=CASE 
				   WHEN IMOV.ESTADO=0 THEN 'Sin confirmar'
				   WHEN ISNULL(IMOVH.RENFER,0)=0 THEN (
					  CASE @INSUMOSCONMED WHEN 'SI' THEN 'Por recibir' 
					  ELSE (CASE WHEN ISNULL(SER.MEDICAMENTOS,0)=1 THEN 
								 (CASE WHEN CODOM NOT IN (@OMCODMEZCLA,@OMCODNUTRICIONP) THEN 'Por recibir' 
									   WHEN CODOM=@OMCODMEZCLA AND @IENF_MEZCLA='SI' THEN 'Por recibir' 
									   WHEN CODOM=@OMCODNUTRICIONP  AND @IENF_NUTP='SI'   THEN 'Por recibir' 
								 ELSE 'No aplica' END)
							ELSE 'No aplica' END) END)
				   ELSE 'No recibido' END, 
				IMOV.CNSMOV, IMOV.IDBODEGA, IMOVH.USUARIO, IMOVH.USUARIOR, IMOVH.IDARTICULO, IMOVH.NOLOTE, IMOVH.NOLOTEPEDIDO, IZSOLDT.CANTIDADSOL-ISNULL(IMOVH.CANTREP,0)
			FROM IMOV 
				INNER JOIN IMOVH ON IMOVH.CNSMOV=IMOV.CNSMOV
				INNER JOIN IZSOL ON IZSOL.CNSIZSOL=IMOV.NODOCUMENTO
				  INNER JOIN IZSOLD ON IZSOL.CNSIZSOL=IZSOLD.CNSIZSOL AND IMOVH.IDSERVICIO=IZSOLD.IDSERVICIO
				INNER JOIN IZSOLDT ON IZSOLDT.CNSIZSOLD=IZSOLD.CNSIZSOLD AND IZSOLDT.CNSMOV=IMOV.CNSMOV AND IZSOLDT.IDARTICULOREAL=IMOVH.IDARTICULO AND IZSOLDT.NOLOTE=IMOVH.NOLOTE
				LEFT JOIN SER ON SER.IDSERVICIO=IMOVH.IDSERVICIO
			WHERE IMOV.PROCEDENCIA='CM_SOL' AND IMOV.NODOCUMENTO=@CNSIZSOL AND IMOV.ESTADO IN (0,1)
				AND ISNULL(IMOVH.RENFER,0) IN (4,41,0)
				  AND 1=(CASE WHEN @IENF_MEZCLA<>'SI' AND ISNULL(IZSOLD.CODOM,'')=@OMCODMEZCLA THEN 0 ELSE 1 END)
				  AND 1=(CASE WHEN @IENF_NUTP  <>'SI' AND ISNULL(IZSOLD.CODOM,'')=@OMCODNUTRICIONP  THEN 0 ELSE 1 END)

			UNION ALL

			SELECT IMOV.FECHACONF, TIPO='No recibido', 
				IMOV.CNSMOV, IMOV.IDBODEGA, IMOVH.USUARIO, IMOVH.USUARIOR, IMOVH.IDARTICULO, IMOVH.NOLOTE, IMOVH.NOLOTEPEDIDO, 
				CASE WHEN MAX(IENF.CNSIENF) IS NULL THEN IMOVH.CANTIDAD ELSE IMOVH.CANTIDAD-COUNT(1) END
			FROM IMOV 
				INNER JOIN IMOVH ON IMOVH.CNSMOV=IMOV.CNSMOV
				INNER JOIN IZSOL ON IZSOL.CNSIZSOL=IMOV.NODOCUMENTO
				INNER JOIN IZSOLD ON IZSOL.CNSIZSOL=IZSOLD.CNSIZSOL AND IMOVH.IDSERVICIO=IZSOLD.IDSERVICIO
				LEFT  JOIN IENF  ON IENF.TIPO='NOADMISION' AND IENF.NOREFERENCIA=IZSOL.NOADMISION 
				   AND IENF.CNSMOV=IMOV.CNSMOV AND IENF.IDARTICULO=IMOVH.IDARTICULO AND IENF.NOLOTE=IMOVH.NOLOTE
			WHERE IMOV.PROCEDENCIA='CM_SOL' AND IMOV.NODOCUMENTO=@CNSIZSOL AND IMOV.ESTADO=1 AND ISNULL(IMOVH.RENFER,0)=1
				AND IZSOLD.CODOM NOT IN (@OMCODNUTRICIONP)
			GROUP BY IMOV.CNSMOV, IMOV.IDBODEGA, IMOV.FECHACONF, IMOVH.USUARIO, IMOVH.USUARIOR, IMOVH.IDARTICULO, IMOVH.NOLOTE, 
				IMOVH.NOLOTEPEDIDO, IMOVH.CANTIDAD
			HAVING (CASE WHEN MAX(IENF.CNSIENF) IS NULL THEN IMOVH.CANTIDAD ELSE IMOVH.CANTIDAD-COUNT(1) END)>0

			UNION ALL

			SELECT IMOV.FECHACONF, TIPO='No recibido', 
				IMOV.CNSMOV, IMOV.IDBODEGA, IMOVH.USUARIO, IMOVH.USUARIOR, IMOVH.IDARTICULO, IMOVH.NOLOTE, IMOVH.NOLOTEPEDIDO, 
				CASE WHEN MAX(IENF.CNSIENF) IS NULL THEN IMOVH.CANTIDAD ELSE IMOVH.CANTIDAD-COUNT(1) END
			FROM IMOV 
				INNER JOIN IMOVH ON IMOVH.CNSMOV=IMOV.CNSMOV
				INNER JOIN IZSOL ON IZSOL.CNSIZSOL=IMOV.NODOCUMENTO
				INNER JOIN IZSOLD ON IZSOL.CNSIZSOL=IZSOLD.CNSIZSOL AND IMOVH.IDSERVICIO=IZSOLD.IDSERVICIO
				LEFT  JOIN IENF  ON IENF.TIPO='NOADMISION' AND IENF.NOREFERENCIA=IZSOL.NOADMISION 
				LEFT  JOIN IENFD ON IENFD.CNSIENF=IENF.CNSIENF AND IENFD.CNSMOV=IMOV.CNSMOV
				   AND IENFD.IDARTICULO=IMOVH.IDARTICULO AND IENFD.NOLOTE=IMOVH.NOLOTE
			WHERE IMOV.PROCEDENCIA='CM_SOL' AND IMOV.NODOCUMENTO=@CNSIZSOL AND IMOV.ESTADO=1 AND ISNULL(IMOVH.RENFER,0)=1
				AND IZSOLD.CODOM IN (@OMCODNUTRICIONP)
			GROUP BY IMOV.CNSMOV, IMOV.IDBODEGA, IMOV.FECHACONF, IMOVH.USUARIO, IMOVH.USUARIOR, IMOVH.IDARTICULO, IMOVH.NOLOTE, 
				IMOVH.NOLOTEPEDIDO, IMOVH.CANTIDAD
			HAVING (CASE WHEN MAX(IENF.CNSIENF) IS NULL THEN IMOVH.CANTIDAD ELSE IMOVH.CANTIDAD-COUNT(1) END)>0
		)X INNER JOIN IART ON IART.IDARTICULO=X.IDARTICULO
			LEFT JOIN USUSU U1 ON U1.USUARIO=X.USUARIO
			LEFT JOIN USUSU U2 ON U2.USUARIO=X.USUARIOR
		GROUP BY X.FECHA, X.TIPO, X.CNSMOV, X.IDBODEGA, X.USUARIO, LEFT(U1.NOMBRE,100),
			X.USUARIOR, LEFT(U2.NOMBRE,100), X.IDARTICULO, LEFT(IART.DESCRIPCION,512), 
			X.NOLOTE, X.NOLOTEPEDIDO
		ORDER BY FECHA, TIPO
		RETURN		
	END
	IF @METODO = 'HADMNOT'
	BEGIN
		SELECT @METODO = METODO, @NOADMISION = NOADMISION, @ITEM = ITEM, @OBSERVAANU = OBS, @CLASE = CLASE, @CNSHCA = CNSHAUT
			,@IDMOTIVO = IDMOTIVO, @NOPRESUPUESTO = NOPRESUPUESTO
		FROM OPENJSON (@PARAMETROS)
		WITH (
			METODO			VARCHAR(20)    '$.METODO',
			NOADMISION		VARCHAR(20)    '$.NOADMISION',
			CNSHAUT			VARCHAR(20)    '$.CNSHAUT',
			CLASE			VARCHAR(20)    '$.CLASE',
			ITEM			VARCHAR(20)    '$.ITEM',
			OBS				VARCHAR(2048)  '$.OBS',
			IDMOTIVO		VARCHAR(100)  '$.IDMOTIVO',
			NOPRESUPUESTO	VARCHAR(100)  '$.NOPRESUPUESTO'
		)
		IF COALESCE(@NOADMISION,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'DEBE INDICAR LA ADMISION A CONSULTAR'
			RETURN
		END
		IF COALESCE(@CLASE,'')='HPREP' AND COALESCE(@IDMOTIVO,'')='' AND @METODO = 'GUARDAR'
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'DEBE DE SELECCIONAR UN MOTIVO'
			RETURN
		END
		SET @CLASE = COALESCE(@CLASE,'NE')
		IF @METODO = 'GUARDAR'
		BEGIN
			IF COALESCE(@OBSERVAANU,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'DEBE INDICAR UNA OBSERVACION O NOTA'
				RETURN
			END
			IF COALESCE(@ITEM,0)=0 --INSERTAR
			BEGIN
				SELECT @ITEM = COALESCE((SELECT MAX(ITEM) FROM HADMNOT WHERE NOADMISION=@NOADMISION),0)+1
				BEGIN TRY
					INSERT INTO HADMNOT (NOADMISION, ITEM, FECHA, OBS, USUARIO, CLASE, ESTADO, RESPONSABLE, VIGENTE, CNSHAUT, IDMOTIVO,NOPRESUPUESTO)
					SELECT @NOADMISION, @ITEM, GETDATE(), @OBSERVAANU, @USUARIO, @CLASE, 'INICIAL', @USUARIO, 1, @CNSHCA, @IDMOTIVO , @NOPRESUPUESTO---IIF(@CLASE='NE',1,0)
					
					INSERT INTO NOTXDET(ITEM, NOADMISION, GRUPO, USUARIO, GENERAL)
					SELECT @ITEM, @NOADMISION, 'TODOS', 'TODOS', 1
				END TRY
				BEGIN CATCH
					SELECT 'KO' OK
					SELECT ERROR = 'ERROR AL INSERTAR LA NOTA'
					RETURN
				END CATCH
			END
			ELSE
			BEGIN --EDITAR
				BEGIN TRY
					UPDATE HADMNOT SET OBS=@OBSERVAANU WHERE NOADMISION=@NOADMISION AND ITEM = @ITEM
				END TRY
				BEGIN CATCH
					SELECT 'KO' OK
					SELECT ERROR = 'ERROR AL ACTUALIZAR LA NOTA'
					RETURN
				END CATCH
			END
		END
		IF @METODO = 'FINALIZAR'
		BEGIN
			BEGIN TRY
				UPDATE HADMNOT SET VIGENTE=0 WHERE NOADMISION=@NOADMISION AND ITEM = @ITEM 
			END TRY
			BEGIN CATCH
				SELECT 'KO' OK
				SELECT ERROR = 'ERROR AL FINALIZAR LA NOTA'
				RETURN
			END CATCH
		END
		IF @METODO = 'ELIMINAR'
		BEGIN
			BEGIN TRY
				SELECT @OBSERVAANU=OBS FROM HADMNOT WHERE NOADMISION=@NOADMISION AND ITEM = @ITEM

				EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@LOG',@CNSLOG OUTPUT
				SELECT @CNSLOG = @IDSEDE + RIGHT('00000000'+CONVERT(VARCHAR(8),@CNSLOG),8)

				SELECT @CMD = 'INSERT INTO '+@DBLOG+'..USLOG (CNSLOG, COMPANIA, NOADMISION, PROCESO, REQUEST,REFERENCIA, USUARIO, FECHA, SYS_ComputerName, TABLA)
							SELECT '''+@CNSLOG+''', '''+@COMPANIA+''', '''+@NOADMISION+''', ''HADMNOT'', ''DELETE'', ''ELIMINAR REGISTRO DE HADMNOT'', '''+@USUARIO+''', GETDATE(), '''+@SYS_COMPUTERNAME+''', ''HADMNOT''
				'
				EXEC (@CMD)						
				SELECT @CMD = 'INSERT INTO '+@DBLOG+'..USLOGH (CNSLOG, ITEM, CAMPO, VALORANT, VALORNVO)
							SELECT '''+@CNSLOG+''', 1, ''ITEM'', '''', '''+CONVERT(VARCHAR,@ITEM)+'''
							'
				EXEC (@CMD)
				SELECT @CMD = 'INSERT INTO '+@DBLOG+'..USLOGH (CNSLOG, ITEM, CAMPO, VALORANT, VALORNVO)
							SELECT '''+@CNSLOG+''', 2, ''OBS'', '''', '''+LEFT(@OBSERVAANU,255)+'''
							'
				EXEC (@CMD)
				DELETE NOTXDET WHERE NOADMISION=@NOADMISION AND ITEM = @ITEM 
				DELETE HADMNOT WHERE NOADMISION=@NOADMISION AND ITEM = @ITEM 
			END TRY
			BEGIN CATCH
				SELECT 'KO' OK
				SELECT ERROR = 'Error al eliminar la nota, error:'+ERROR_MESSAGE()
				RETURN
			END CATCH

		END
		IF COALESCE(@ITEM,0)=0
			SELECT @ITEM=MAX(ITEM) FROM HADMNOT A  WHERE A.NOADMISION = @NOADMISION  AND A.CLASE=@CLASE

		--NO IMPORTA EL METODO AL FINAL DEVUELVE LA TABLA
		SELECT 'OK' OK, ITEM = @ITEM
		SELECT A.ITEM, A.FECHA, A.OBS, A.USUARIO, A.CLASE, A.VIGENTE, USUSU.NOMBRE, A.CNSHAUT,
			LABEL = IIF(A.CLASE='AUTORIZACION','Autorizacion='+CONVERT(VARCHAR,A.CNSHAUT),'')+ ' Item: '+CONVERT(VARCHAR,A.ITEM)+' Usuario:'+COALESCE(USUSU.NOMBRE, A.USUARIO)+' Fecha: '+CONVERT(VARCHAR,A.FECHA,103)+' Hora: '+CONVERT(VARCHAR,A.FECHA,108),
			CAPTION = 'Clase= '+A.CLASE+' Estado: '+ CASE VIGENTE WHEN 1 THEN 'Pendiente' ELSE 'Finalizado' END,
			BG = 'text-weight-bold text-black '+CASE VIGENTE WHEN 1 THEN 'bg-red-3' ELSE 'bg-green-3' END
		FROM HADMNOT A
			INNER JOIN NOTXDET B ON B.ITEM=A.ITEM AND B.NOADMISION=A.NOADMISION
			LEFT JOIN USUSU ON USUSU.USUARIO=A.USUARIO
		WHERE A.NOADMISION = @NOADMISION  AND A.CLASE=@CLASE AND (B.GRUPO IN ('TODOS', @GRUPO) OR B.USUARIO IN ('TODOS',@USUARIO) OR GENERAL = 1)
			--AND (@CNSHCA IS NULL OR CNSHAUT=@CNSHCA)
		
		RETURN
	END
	IF @METODO = 'CERRAR_TURNO'
	BEGIN
		SELECT @METODO = METODO, @USUARIO = USUARIO, @HABCAMA = HABCAMA, @CODTURNO = CODTURNO, 
				@FECHA = FECHA, @IDMEDICO = IDMEDICO, @IDTSECFU = IDTSECFU, @TIPO = ADMINISTRATIVO
		FROM OPENJSON (@PARAMETROS)
		WITH (
			METODO        VARCHAR(20)    '$.METODO',
			USUARIO	      VARCHAR(20)    '$.USUARIO',
			IDMEDICO      VARCHAR(20)    '$.IDMEDICO',
			HABCAMA	      VARCHAR(20)    '$.HABCAMA',
			CODTURNO      VARCHAR(20)    '$.CODTURNO',
			FECHA	      VARCHAR(20)    '$.FECHA',
			IDTSECFU      VARCHAR(20)    '$.IDTSECFU',
			ADMINISTRATIVO VARCHAR(20)   '$.ADMINISTRATIVO'
		)
		IF @METODO='CONSULTA'
		BEGIN
			IF COALESCE(@USUARIO,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'DEBE INDICAR EL SUAURIO A CONSULTAR'
				RETURN
			END
			SELECT @IDMEDICO = IDMEDICO FROM USUSU WHERE USUARIO=@USUARIO
			IF (SELECT  COUNT(1) FROM MED WHERE IDMEDICO=@IDMEDICO AND TIPO_USUARIO IN ('Enfermera','Fisioterapia'))<=0 AND COALESCE(@TIPO,0)=0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'ERROR AL VALDIAR EL TIPO DE USUARIO'
				RETURN				
			END
			IF (SELECT COUNT(1) FROM DBO.FNK_TURNO_ENF(@USUARIO) WHERE ACCESO=1)<=0 AND DBO.FNK_VALORVARIABLE('CERRARTURNOENF')<>'SI' AND COALESCE(@TIPO,0)=0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'No tiene turno asignado para este horario'
				RETURN				
			END
		END
		
		PRINT '@HABCAMA='+@HABCAMA
		PRINT '@CODTURNO='+@CODTURNO
		PRINT '@IDMEDICO='+@IDMEDICO
		PRINT '@FECHA='+@FECHA
		PRINT '@TIPO='+@TIPO --ADMINISTRATIVO

		IF @METODO = 'CERRAR'
		BEGIN
			IF (SELECT COUNT(1) FROM DBO.FNK_PENDIENTE_ENF(@HABCAMA, @CODTURNO, @IDMEDICO, @FECHA) Z WHERE Z.CANTIDAD>0)>0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'No puede cerrar turno ya que existen pendientes'
				RETURN				
			END
			UPDATE TSECFU SET ESTADO=2, FCIERRE=GETDATE(), CIERREADM=COALESCE(@TIPO,0), USUARIOCIERRA=CASE @TIPO WHEN 1 THEN @USUARIO ELSE NULL END
			WHERE IDTSECFU=@IDTSECFU
		END
		IF @METODO = 'CONSULTA_PENDIENTE'
		BEGIN
			SELECT 'OK' OK
			SELECT Z.CNS, Z.IDTERCERO, Z.ID1, Z.TIPO, Z.ID2, Z.ID3, Z.STRINGMEDIO2, Z.FECHA1, Z.CANTIDAD, Z.NOMBRE, Z.STRINGMEDIO1, HADM.FECHA, HADM.IDAFILIADO, 
				CASE HADM.CERRADA WHEN 0 THEN 'Admitido' when 1 then 'Alta Administrativa' when 2 then 'Alta medica' when 3 then 'Alta de enfermeria' else 'Error al validar estado' END ESTADO 
			FROM DBO.FNK_PENDIENTE_ENF(@HABCAMA, @CODTURNO, @IDMEDICO, @FECHA) Z
			LEFT JOIN HADM ON HADM.NOADMISION=Z.IDTERCERO AND ID1 IN ('HBALI','HBALINI')

		END
		SELECT 'OK' OK --QUEDA FUERA YA QUE SIN IMPORTAR LA PROCEDENCIA SIEMPRE DEVUELVE EL VALOR
		SELECT CODSECTOR = HHAB.HABCAMA, HHAB.HABCAMA+' - '+HHAB.DESCRIPCION SECTOR, A.HABCAMA, A.FECHA, A.CODTURNO, A.ESTADO, 
			CASE A.ESTADO WHEN 0 THEN 'Sin Abrir' WHEN 1 THEN 'Abierto' WHEN 2 THEN 'Cerrado' END ESTADO_DESC,
			A.FECHAINICIAL, A.FECHAFINAL, A.FAPERTURA, A.FCIERRE, A.USUARIO, A.IDTSECFU, MED.NOMBRE
		FROM TSECFU A
			LEFT JOIN HHAB ON HHAB.HABCAMA=A.HABCAMA AND CLASE='SECTOR'
			LEFT JOIN MED ON MED.IDMEDICO=A.USUARIO
		WHERE A.TIPOPERSONAL='Asistencial' AND A.ESTADO=1 AND USUARIO= CASE @TIPO WHEN '1' THEN USUARIO ELSE  @IDMEDICO END 
		RETURN
	END
	IF @METODO = 'IDEV'
	BEGIN
		SELECT @METODO = METODO, @NOADMISION = NOADMISION, @PARAMETROS = IDEVD, @CNSIZSOL = CNSIDEV, @OBSERVAANU = OBSERVACION
		FROM OPENJSON (@PARAMETROS)
		WITH (
			METODO        VARCHAR(20)    '$.METODO',
			NOADMISION    VARCHAR(20)    '$.NOADMISION',
			CNSIDEV		  VARCHAR(20)    '$.CNSIDEV',
			OBSERVACION	  VARCHAR(512)    '$.OBSERVACION',
			IDEVD		  NVARCHAR(MAX)  AS JSON
		)
		
		--IF @METODO='CONSULTA'
		--BEGIN
			IF COALESCE(@NOADMISION,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'DEBE INDICAR LA ADMISION A CONSULTAR'
				RETURN
			END
		--END
		IF @METODO = 'CONFIRMAR'
		BEGIN
		
			IF COALESCE(@CNSIZSOL,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'DEBE INDICAR EL CONSECUTIVO DE DEVOLUCION A CONFIRMAR'
				RETURN
			END

			SELECT @IDBODEGAATIENDE = DBO.FNK_BUSCA_BODEGA_IZSOL(HHAB.IDSEDE,HHAB.HABCAMA) FROM HHAB WHERE NOADMISION=@NOADMISION
			IF COALESCE(@IDBODEGAATIENDE,'')=''
				SELECT @IDBODEGAATIENDE = IDBODEGA FROM UBEQ WHERE SYS_ComputerName=@SYS_COMPUTERNAME
			
			BEGIN TRY
				EXEC SPK_DEVOLUCINVCM @CNSIZSOL,@IDBODEGAATIENDE,@COMPANIA,@IDSEDE,@USUARIO,@SYS_COMPUTERNAME
			END TRY
			BEGIN CATCH
				SELECT 'KO' OK
				SELECT ERROR='ERROR AL CONFIRMAR LA DEVOLUCION, ERROR:'+ERROR_MESSAGE()
				RETURN
			END CATCH
		END
		IF @METODO = 'ELIMINARIDEV'
		BEGIN
			IF COALESCE(@CNSIZSOL,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'DEBE INDICAR EL CONSECUTIVO DE DEVOLUCION A CONFIRMAR'
				RETURN
			END
			IF NOT EXISTS(SELECT 1 FROM IDEV WHERE CNSIDEV=@CNSIZSOL AND COALESCE(APLICADA,0)=0 AND COALESCE(ANULADO,0)=0)
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'DEVOLUCION YA PROCESADA O CONFIRMADA'
				RETURN
			END
			IF EXISTS(SELECT 1 FROM IDEVD WHERE CNSIDEV=@CNSIZSOL)
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'Devolucion con detalles, no es posible su eliminacion'
				RETURN
			END
			DELETE FROM IDEV WHERE CNSIDEV=@CNSIZSOL
		END
		IF @METODO = 'ELIMINARIDEVD'
		BEGIN
			IF COALESCE(@CNSIZSOL,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'DEBE INDICAR EL CONSECUTIVO DE DEVOLUCION A PROCESAR'
				RETURN
			END
			IF NOT EXISTS(SELECT 1 FROM IDEV WHERE CNSIDEV=@CNSIZSOL AND COALESCE(APLICADA,0)=0 AND COALESCE(ANULADO,0)=0)
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'DEVOLUCION YA PROCESADA O CONFIRMADA'
				RETURN
			END
			SELECT @NOPRESTACION = NOPRESTACION, @NOITEM = NOITEM, @IDSERVICIO = IDSERVICIO
			FROM OPENJSON (@PARAMETROS)
			WITH (
				NOPRESTACION	VARCHAR(20)    '$.NOPRESTACION',
				NOITEM			VARCHAR(3)		'$.NOITEM',
				IDSERVICIO		VARCHAR(20)		'$.IDSERVICIO'
			)
			DELETE FROM IDEVD WHERE CNSIDEV=@CNSIZSOL AND NOPRESTACION=@NOPRESTACION AND NOITEM=@NOITEM AND IDSERVICIO=@IDSERVICIO
		END
		IF @METODO = 'ANULAR'
		BEGIN
			IF COALESCE(@CNSIZSOL,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'DEBE INDICAR EL CONSECUTIVO DE DEVOLUCION A ANULAR'
				RETURN
			END
			IF NOT EXISTS(SELECT 1 FROM IMOV WHERE CNSIDEV=@CNSIZSOL AND COALESCE(ESTADO,0)=0)
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'Esta Devolución ya Fue Definida en Farmacia No se Puede Continuar'
				RETURN
			END
			SELECT @IDAFILIADO=IDAREAAUX FROM IDEV WHERE CNSIDEV=@CNSIZSOL
			BEGIN TRY
				EXEC SPK_CANCELA_DEV_ENFERMERIA @CNSIZSOL ,@NOADMISION,@USUARIO,@IDSEDE , @IDAFILIADO
			END TRY
			BEGIN CATCH
				SELECT 'KO' OK
				SELECT ERROR = 'ERROR AL CONFIRMAR DEVOLUCION, ERROR:'+ERROR_MESSAGE()
				RETURN
			END CATCH
		END
		IF @METODO = 'PROCESARIDEVD'
		BEGIN
			IF COALESCE(@PARAMETROS,'')=''
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'DEBE INDICAR LOS DATOS A PROCESAR'
				RETURN
			END
			IF COALESCE(@CNSIZSOL,'')=''
			BEGIN
				SELECT TOP 1 @CNSIZSOL=CNSIDEV FROM IDEV WHERE NOADMISION=@NOADMISION AND COALESCE(APLICADA,0)=0 AND COALESCE(ANULADO,0)=0
			END
			IF COALESCE(@CNSIZSOL,'')=''
			BEGIN
				BEGIN TRY
					--EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,'@IDEV', @CNSIZSOL OUTPUT
					--SELECT @CNSIZSOL = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSIZSOL))+LTRIM(RTRIM(@CNSIZSOL)),SPACE(1),0)
					EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE, @PREFIJO='@IDEV', @LONGITUD=8 ,@NVOCONSEC=@CNSIZSOL OUTPUT

--query3
--query3
					INSERT INTO IDEV(CNSIDEV, NOADMISION, IDAFILIADO, USUARIO, FECHA, IDSEDE, SYS_COMPUTERNAME, AMBITO, APLICADA, IDAREAAUX, OBSERVACION, NOPRESTACION)
					SELECT @CNSIZSOL, @NOADMISION, IDAFILIADO, @USUARIO, GETDATE(), @IDSEDE, @SYS_COMPUTERNAME,'M',0,'M', @OBSERVAANU
					, LEFT('M_'+DBO.FNK_FECHA(GETDATE())+'-'+CAST(DATEPART(HH,GETDATE()) AS VARCHAR(2))+':'+CAST(DATEPART(MINUTE,GETDATE()) AS VARCHAR(2)),16)
					FROM HADM WHERE NOADMISION=@NOADMISION
				END TRY
				BEGIN CATCH
					SELECT 'KO' OK
					SELECT ERROR = 'ERROR AL INSERTAR LA DEVOLUCION'
					RETURN
				END CATCH
			END
			ELSE
			BEGIN
				DELETE FROM IDEVD WHERE CNSIDEV=@CNSIZSOL
			END

			print '@CNSIZSOL='+coalesce(@CNSIZSOL,'')
			BEGIN TRY
				INSERT INTO IDEVD(CNSIDEV,NOPRESTACION,NOITEM,IDSERVICIO,CANTIDADDEVUELTA,APLICADA,ANULADO,CNSMOV,IDCONTRATO)
				SELECT @CNSIZSOL, NOPRESTACION, NOITEM, IDSERVICIO, CANTIDAD_DEVOLVER, 0,0, CNSMOV, IDARTICULO
				FROM OPENJSON (@PARAMETROS)
				WITH (
					NOPRESTACION	VARCHAR(20)    '$.NOPRESTACION',
					NOITEM			VARCHAR(3)		'$.NOITEM',
					IDSERVICIO		VARCHAR(20)		'$.IDSERVICIO',
					CANTIDAD_DEVOLVER VARCHAR(3)	'$.CANTIDAD_DEVOLVER',
					CNSMOV			VARCHAR(20)		'$.CNSMOV',
					IDARTICULO		VARCHAR(20)		'$.IDARTICULO'
				)
				
			END TRY
			BEGIN CATCH
				SELECT 'KO' OK
				SELECT ERROR = 'ERROR AL PROCESAR DEVOLUCION'
				RETURN
			END CATCH
			UPDATE IDEVD SET IDPLAN = B.IDPLAN, IDPROVEEDOR = B.IDPROVEEDOR, IDCONCEPTORIPS = B.IDCONCEPTORIPS, DXPPAL = B.DXPPAL,
					USUARIOHPRED = B.USUARIO, TIPOCIRUGIA = B.TIPOSERCIRUGIA, PCOSTO=B.NOCOBRABLE, VIA=B.VIA, COBRARA = B.COBRARA, 
					IDTERCEROCA = B.IDTERCEROCA, PCUBRIMIENTO = B.PCUBRIMIENTO, TIPODTO = B.TIPODTO, CCOSTO = B.CCOSTO, CNSMOV = B.CNSMOV
			FROM IDEVD A
				INNER JOIN HPRED B ON B.NOPRESTACION=A.NOPRESTACION AND B.NOITEM=A.NOITEM
			WHERE A.CNSIDEV=@CNSIZSOL
		END

		SELECT 'OK' OK
		SELECT A.CNSIDEV, A.FECHA, A.NOADMISION, A.NOPRESTACION, B.IDBODEGA, B.CNSMOV, B.ESTADO, 
			CASE B.ESTADO WHEN 0 THEN 'Pendiente' WHEN 1 THEN 'Confirmado' WHEN 2 THEN 'Anulado' ELSE '' END ESTADO_DESC,
			A.OBSERVACION, A.USUARIO, C.NOMBRE, 
			LABEL = 'Item: '+A.CNSIDEV+' Usuario:'+COALESCE(C.NOMBRE, A.USUARIO)+' Fecha:'+CONVERT(VARCHAR,A.FECHA,103),
			CAPTION = 'Bodega= '+COALESCE(B.IDBODEGA,'')+' CnsMov='+COALESCE(B.CNSMOV,'')+' Estado: '+ CASE B.ESTADO WHEN 0 THEN 'Pendiente' WHEN 1 THEN 'Confirmado' WHEN 2 THEN 'Anulado' ELSE '' END,
			BG = 'text-weight-bold text-black '+CASE B.ESTADO WHEN 0 THEN 'bg-yellow-3' WHEN 1 THEN 'bg-green-3' WHEN 2 THEN 'bg-red-3' ELSE 'bg-gray-4' END,
			(SELECT NOPRESTACION, NOITEM, IDEVD.IDSERVICIO, SER.DESCSERVICIO, IDEVD.CANTIDADDEVUELTA, IDEVD.TIPOCIRUGIA 
				FROM IDEVD INNER JOIN SER ON SER.IDSERVICIO=IDEVD.IDSERVICIO WHERE CNSIDEV=A.CNSIDEV FOR JSON PATH) IDEVD
		FROM IDEV A
			LEFT JOIN IMOV B ON B.NODOCUMENTO=A.NOADMISION AND B.CNSIDEV=A.CNSIDEV
			LEFT JOIN USUSU C ON C.USUARIO=A.USUARIO
		WHERE A.NOADMISION=@NOADMISION AND COALESCE(A.IDAREAAUX,'')='M'

		SELECT B.INDDEVOLUCION, CASE WHEN A.CLASEOM='DOSIS' THEN 'Dosis' ELSE 'Unidad' END CLASEOM, B.NOPRESTACION, A.NOITEM, A.IDSERVICIO, 
				B.FECHA, A.CANTIDAD, A.CANTIDAD CANTIDAD_DEVOLVER, SER.DESCSERVICIO, '0' MARCA, A.CNSMOV, A.IDARTICULO
		FROM HPRE B INNER JOIN HPRED A ON A.NOPRESTACION=B.NOPRESTACION LEFT JOIN SER ON SER.IDSERVICIO=A.IDSERVICIO
		WHERE NOADMISION = @NOADMISION AND B.ESDEINV = 1 AND B.PEDIDOINV = 1 AND COALESCE(A.FACTURADA,0)=0 AND COALESCE(A.CNSMOV,'')<>''
			AND B.PROCEDENCIA = CASE DBO.FNK_VALORVARIABLE('TIPOHTX') WHEN 'HORIZONTAL' THEN 'CMEZCLAS' ELSE 'ENFER' END
			AND  COALESCE(CLASEOM,'')<>'PREPARADO' AND  EXISTS(SELECT 1 FROM IMOV WHERE IMOV.CNSMOV=A.CNSMOV AND IMOV.ESTADO=1)
		RETURN
	END
	IF @METODO = 'ACIRUGIA'
	BEGIN
		SELECT @NOADMISION = NOADMISION, @HABCAMA = HABCAMA
		FROM OPENJSON (@PARAMETROS)
		WITH (
			NOADMISION    VARCHAR(20)    '$.NOADMISION'
			,HABCAMA    VARCHAR(20)    '$.HABCAMA'
		)
		
		IF COALESCE(@NOADMISION,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'Debe indicar la admision a consultar'
			RETURN
		END
		SELECT TOP 1 @SECTOR = SECTOR, @CNSIENF = COALESCE(MTRASLADO,0), @IDAFILIADO=COALESCE(IDALTERNA,'') --!Para evitar que regresen sin cama donde devolver clarion
		FROM HHAB WHERE NOADMISION=@NOADMISION AND HHAB.HABCAMA=@HABCAMA
		IF @CNSIENF=2 --YA ESTÁ MARCADO, LE VOY A QUITAR LA MARCA
		BEGIN
			UPDATE HHAB SET MTRASLADO=0, USUARIOMT=NULL WHERE HABCAMA=@HABCAMA
		END
		ELSE IF @CNSIENF=0 --NO MARCADO APENAS LO VOY A MANDAR A CIRUGIA
		BEGIN
			IF (SELECT COUNT(1) FROM HHAB WHERE HABCAMA=@SECTOR AND COALESCE(TIPO,'') IN (SELECT DATO FROM USVGS WHERE IDVARIABLE='HTHA_CX'))>0 
				AND dbo.FNK_VALORVARIABLE('MSECTOR_CIRUGIA')<>'' 
			BEGIN
				IF @IDAFILIADO='' RETURN
				SELECT @ITEM = MAX(NOITEM) FROM HNAT WHERE NOADMISION=@NOADMISION
				SELECT @ITEM = COALESCE(@ITEM,1)
				SELECT @NOLOTE = COALESCE(NIVELATENCION,2) FROM HNAT WHERE NOADMISION=@NOADMISION AND NOITEM=@ITEM

				INSERT INTO HNAT(NOADMISION, NOITEM, FECHA, IDAREA, IDAREAFUNCIONAL, NIVELATENCION, USUARIO, SYS_ComputerName, 
							FECHAREGISTRO, HABCAMA, APLICADO, CCOSTO, TIPOESTANCIA,VALIDADO,USUARIOVAL ) 
                SELECT  @NOADMISION, @ITEM+1, GETDATE (),IDAREA,IDAREA,@NOLOTE,@USUARIO, @SYS_COMPUTERNAME,
							GETDATE (),HHAB.IDALTERNA,1,CCOSTO,TIPOESTANCIA, 0, NULL
				FROM HHAB WHERE HABCAMA=@IDAFILIADO
				
				SELECT @TIPOESTANCIA = TIPOESTANCIA FROM HHAB WHERE HABCAMA=@IDAFILIADO

				UPDATE HHAB SET ESTADOHAB='Ocupada', MTRASLADO=0 WHERE HABCAMA=@IDAFILIADO
				UPDATE HHAB SET ESTADOHAB='Libre', IDAFILIADO=NULL, NOADMISION=NULL, MTRASLADO=0, USUARIOMT=NULL, IDALTERNA='' WHERE HABCAMA=@HABCAMA

				UPDATE HADM SET HABCAMA=@IDAFILIADO, TIPOESTANCIA=@TIPOESTANCIA FROM HADM WHERE NOADMISION=@NOADMISION
			END
			ELSE
			BEGIN
				IF (SELECT COUNT(1) FROM HCA WHERE NOADMISION=@NOADMISION AND PROCEDENCIA='QX' AND CLASE='HC' AND CLASEPLANTILLA NOT IN (SELECT DATO FROM USVGS WHERE IDVARIABLE IN('HCPLANTILLAEPI','HCPLANTILLAEPI_UCI')))<=0
				BEGIN
					SELECT 'KO' OK
					SELECT ERROR = 'No se puede marcar el paciente debido a que no se le ha realizado historia clinica'
					RETURN
				END
				IF dbo.FNK_VALORVARIABLE('TRASLADACX_SINORDEN')<>'SI' AND @IDAFILIADO<>''
				BEGIN
					IF NOT EXISTS (SELECT c.NOCIRUGIA,c1.ESTADO FROM CXPI c LEFT JOIN CXPS c1 ON c.NOCIRUGIA=c1.NOCIRUGIA WHERE c.NOADMISION=@NOADMISION AND C1.ESTADO='P')
					BEGIN
						SELECT 'KO' OK
						SELECT ERROR = 'El paciente no puede ir a cirugía sin la orden médica correspondiente. Consulte al médico para que tome las acciones necesarias para poder continuar.'
						RETURN
					END
				END
				IF (SELECT COALESCE(AFU.CE,0) FROM HHAB LEFT JOIN CEN ON HHAB.CCOSTO=CEN.CCOSTO LEFT JOIN AFU ON CEN.IDAREA=AFU.IDAREA 
					WHERE SECTOR<>DBO.FNK_VALORVARIABLE('MSECTOR_CIRUGIA') AND HABCAMA=@HABCAMA)=2
				BEGIN
					DELETE FROM @TBLERRORES WHERE 1 = 1
					IF DBO.FNK_VALORVARIABLE('TIPOHTX')='HORIZONTAL'
					BEGIN
						INSERT INTO @TBLERRORES (ERROR)
						SELECT 'Existen '+CONVERT(VARCHAR,COUNT(1))+' Solicitudes Realizadas a Farmacia sin Definir'
						FROM IZSOL WHERE NOADMISION=@NOADMISION AND ESTADO<>2 AND CLASE<>'CE'
						HAVING COUNT(1)>0
						UNION ALL
						SELECT 'Existen '+CONVERT(VARCHAR,COUNT(1))+' Items De la Hoja de Tratamiento  sin Definir a la Hora de Traslado'
						FROM DBO.VWK_HBALID WHERE NOADMISION=@NOADMISION AND ESTADO=1 AND FECHA<GETDATE()
						HAVING COUNT(1)>0
					END
					ELSE
					BEGIN
						INSERT INTO @TBLERRORES (ERROR)
						SELECT 'Existen '+CONVERT(VARCHAR,COUNT(1))+' Items en la hoja de Tratamiento sin Definir'
						FROM HTX WHERE NOADMISION=@NOADMISION AND ISNULL(ANULADA,0)=0 AND ENCARGOS=0 AND ISNULL(INDDEV,0)=0 AND FECHAREQ<GETDATE()
						HAVING COUNT(1)>0
						UNION ALL
						SELECT 'Existen '+CONVERT(VARCHAR,COUNT(1))+'  Movimientos En Farmacia Sin Confirmar...'
						FROM IMOV WHERE NODOCUMENTO=@NOADMISION AND ESTADO=0 AND COALESCE(CLASEPED,'')<>'24H'
						HAVING COUNT(1)>0
					END
					IF (SELECT COUNT(1) FROM @TBLERRORES)>0
					BEGIN
						SELECT 'KO' OK
						SELECT ERROR FROM @TBLERRORES
						RETURN
					END
				END
				UPDATE HHAB SET MTRASLADO=2, USUARIOMT=@USUARIO WHERE HABCAMA=@HABCAMA
			END			
		END
		SELECT 'OK' OK
		RETURN
	END
	IF @METODO = 'HEMODERIVADOS'
	BEGIN
		SELECT @NOADMISION = NOADMISION, @METODO=METODO, @MODELO = CNSRES
		FROM OPENJSON (@PARAMETROS)
		WITH (
			NOADMISION    VARCHAR(20)    '$.NOADMISION'
			,METODO    VARCHAR(20)    '$.METODO'
			,CNSRES    VARCHAR(20)    '$.CNSRES'
		)
		
		IF COALESCE(@METODO,'')='PLANTILLA_UT'
		BEGIN
			SELECT 'OK' OK
			SELECT value = MPLSV.CLASEPLANTILLA, label = MPL.DESCPLANTILLA
			FROM MPLSV INNER JOIN MPL ON MPL.CLASEPLANTILLA=MPLSV.CLASEPLANTILLA
			WHERE MPLSV.CLASEPLANTILLA=DBO.FNK_VALORVARIABLE('MPLSV_UT')
			RETURN
		END
		IF COALESCE(@NOADMISION,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'Debe indicar la admision a consultar'
			RETURN
		END
		IF COALESCE(@METODO,'')='INCINERAR'
		BEGIN
			BEGIN TRY
				EXEC SPK_DESTRUCCION_HEMODERIVADOS @MODELO,@IDSEDE,@USUARIO
			END TRY
			BEGIN CATCH
				SELECT 'KO' OK
				SELECT ERROR = 'Error al enviar a incinaeracion, error:'+ERROR_MESSAGE()
				RETURN
			END CATCH
			UPDATE BSRES SET CANTAPLI=BSCAPACIDAD, USUDEVO=@USUARIO WHERE CNSRES=@MODELO
		END
		
		UPDATE BSRES SET CANTAPLI=HBALID.APLI FROM  BSRES
			INNER JOIN HBALI ON BSRES.NOADMISION=HBALI.NOADMISION
			INNER JOIN HBALID ON HBALI.CNSHBALI=HBALID.CNSHBALI AND BSRES.IDARTICULO=HBALID.IDSERVICIO
		WHERE BSRES.ESTADO='RECIBIDO' AND  BSRES.NOADMISION=@NOADMISION

		SELECT 'OK' OK
		SELECT A.CNSRES, A.NUMUNIDAD, A.SELLOCALIDAD, B.DESCRIPCION, A.BSCAPACIDAD, A.CANTAPLI, C.NOMBRE AS USUARIO_RECIBE, A.F_RECIBE, A.IDARTICULO, A.LOTE, A.ESTADO, A.IDRECIBE, A.IDDESECHO
			,INCINERAR = CAST(IIF(UPPER(A.ESTADO)='RECIBIDO' AND COALESCE(A.IDDESECHO,'')='' AND ISNULL(A.CANTAPLI,0)<>COALESCE(A.BSCAPACIDAD,0),1,0) AS BIT)
			--AND ISNULL(A.CANTAPLI,0)<>A.BSCAPACIDAD AND ISNULL(A.IDDESECHO,'')='' AND A.ESTADO='Recibido'
		FROM BSRES A
		LEFT JOIN IART B ON A.IDARTICULO=B.IDARTICULO
		LEFT JOIN USUSU C ON C.USUARIO=A.IDRECIBE
		WHERE A.NOADMISION=@NOADMISION
		RETURN
	END
	IF @METODO = 'CERRAR_SOLICITUD'
	BEGIN
		
		SELECT @CNSIZSOL = CNSIZSOL, @METODO = MOTIVO, @OBSERVAANU = OBSERVACION
		FROM OPENJSON (@PARAMETROS)
		WITH (
			CNSIZSOL      VARCHAR(20)    '$.CNSIZSOL',
			MOTIVO	      VARCHAR(20)    '$.MOTIVO',
			OBSERVACION   VARCHAR(200)    '$.OBSERVACION'
		)

		IF NOT EXISTS(SELECT 1 FROM IZSOL WHERE CNSIZSOL=@CNSIZSOL)
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'No se encuentra solicitud...'
			RETURN
		END
		SELECT @NOADMISION = NOADMISION FROM IZSOL WHERE CNSIZSOL=@CNSIZSOL
		IF NOT EXISTS(SELECT 1 FROM HADM WHERE NOADMISION=@NOADMISION AND CERRADA=2)
		BEGIN 
			SELECT 'KO' OK
			SELECT ERROR = 'Solo se permite cierre con alta medica, por favor validar con inventario...'
			RETURN
		END
		SELECT TOP 1 @CNSMOV= CNSMOV  , @USUARIO=USUARIO FROM IMOV WHERE ESTADO=0 AND PROCEDENCIA='CM_SOL' AND NODOCUMENTO=@CNSIZSOL
		IF COALESCE(@CNSMOV,'')<>''
		BEGIN
			EXEC SPK_PROCESA_IZSOLDT @CNSIZSOL, @CNSMOV, @COMPANIA, @IDSEDE, @USUARIO
		END
		IF EXISTS(SELECT 1 FROM IMOV INNER JOIN IMOVH ON IMOV.CNSMOV=IMOVH.CNSMOV WHERE IMOV.PROCEDENCIA='CM_SOL' AND IMOV.ESTADO=0 AND IMOV.NODOCUMENTO=@CNSIZSOL)
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'Existen movimientos con artículos pendientes por confirmar...'
			RETURN
		END
		IF COALESCE(@METODO,'')=''
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'Debe seleccionar un motivo...'
			RETURN
		END
		IF LEN(COALESCE(@OBSERVAANU,''))<=6 AND DBO.FNK_VALORVARIABLE('IXCOUNTRY')<>'PERU'
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR = 'La observación debe ser justificable...'
			RETURN
		END
		UPDATE IMOV SET ESTADO=2 WHERE PROCEDENCIA='CM_SOL' AND ESTADO=0 AND NODOCUMENTO=@CNSIZSOL AND NOT EXISTS (SELECT 1 FROM IMOVH WHERE IMOVH.CNSMOV=IMOV.CNSMOV)
		UPDATE IZSOL SET ESTADO = '2', USUARIOCIERRA=@USUARIO ,F_CANCEL=GETDATE(), SYS_COMPUTER=@SYS_COMPUTERNAME, CODIGOCERRAR =@METODO,
				DESCRIPCERRAR=@OBSERVAANU
		WHERE CNSIZSOL = @CNSIZSOL
		SELECT 'OK' OK
		RETURN
	END
	IF @METODO = 'HELPER'
	BEGIN
		SELECT @METODO = METODO, @SECTOR = SECTOR, @HABCAMA = HABCAMA
		FROM OPENJSON (@PARAMETROS)
		WITH (
			METODO        VARCHAR(12)    '$.METODO',
			SECTOR        VARCHAR(10)    '$.SECTOR',
			HABCAMA       VARCHAR(10)    '$.HABCAMA'
		)
		
		IF @METODO='BODEGA'
		BEGIN
			IF COALESCE(@SECTOR,'')='' 
			BEGIN
				SELECT 'KO' OK
				SELECT 'Debe indicar el sector a consultar bodega' ERROR
				RETURN
			END
			SELECT @IDSEDE=IDSEDE FROM HHAB WHERE HABCAMA=@SECTOR

			SELECT 'OK' OK
			SELECT @IDBODEGAATIENDE = DBO.FNK_BUSCA_BODEGA_IZSOL(@IDSEDE,@SECTOR)

			SELECT @IDBODEGAATIENDE IDBODEGA, DESCRIPCION DESC_BODEGA
			FROM IBOD 
			WHERE IDBODEGA = @IDBODEGAATIENDE
			RETURN
		END
		IF @METODO='HHABCNF'
		BEGIN
			IF COALESCE(@HABCAMA,'')='' 
			BEGIN
				SELECT 'KO' OK
				SELECT 'Debe indicar la cama a consultar' ERROR
				RETURN
			END
			SELECT 'OK' OK
			SELECT HHABCNF.OPCION value, TGEN.DESCRIPCION label
			FROM HHABCNF INNER JOIN TGEN ON HHABCNF.OPCION=TGEN.CODIGO AND TABLA='GENERAL' AND CAMPO='CLASEHOSP'
			WHERE HHABCNF.HABCAMA=@HABCAMA
			RETURN
		END
		SELECT 'OK' OK		
		SELECT DISTINCT HHAB.HABCAMA value, HHAB.HABCAMA +' - ' +HHAB.DESCRIPCION label, 
			estado_sector = (SELECT STUFF((SELECT ', '+A.ESTADOHAB+'s='+CONVERT(VARCHAR(5),COUNT(A.ESTADOHAB)) FROM HHAB A
				WHERE A.SECTOR=HHAB.HABCAMA AND A.CLASE='Cama' AND A.ESTADOHAB IN ('Ocupada','Libre','Reservada','Aislada')
				GROUP BY A.ESTADOHAB FOR XML PATH('')),1,2,'')
			  ), COALESCE(IBOD.IDBODEGA,'') IDBODEGA, COALESCE(IBOD.DESCRIPCION,'') DESC_BODEGA
		FROM HHAB 
		LEFT JOIN IBOD ON IBOD.IDBODEGA=DBO.FNK_BUSCA_BODEGA_IZSOL(HHAB.IDSEDE,HHAB.HABCAMA)
		WHERE CLASE='SECTOR' AND COALESCE(ESTADOHAB,'') <> 'Inhabilitada'
		ORDER BY HHAB.HABCAMA +' - ' +HHAB.DESCRIPCION
		RETURN
	END
END
