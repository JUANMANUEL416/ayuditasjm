-- 001
DROP TABLE ESTHADM
GO
-- 002
CREATE TABLE ESTHADM (NOADMISION  VARCHAR(16) NOT NULL,
                      E_CERRADA   SMALLINT,
                      E_FACTURADA SMALLINT,
                      N_HPRED     INT,
                      V_HPRED     DECIMAL(14,2),
                      E_PREFACTUR SMALLINT,
                      N_HPRED_FAC INT,
                      V_HPRED_FAC DECIMAL(14,2),      
                      E_VRPREFACT SMALLINT,
                      E_HADMF     SMALLINT,
                      OBSERVACION VARCHAR(512),
                      HOSTNAME    VARCHAR(254),
                      ESTADO      INT )
GO
ALTER TABLE ESTHADM
ADD CONSTRAINT ESTHADMNOADMISION
PRIMARY KEY CLUSTERED (NOADMISION)
GO
-- 003
DROP TABLE ESTHADM_FTR
-- 004
CREATE TABLE DBO.ESTHADM_FTR (NOADMISION  VARCHAR(16) NOT NULL,
                          N_FACTURA   VARCHAR(16) NOT NULL,
                          F_FACTURA   DATETIME,
                          VR_FTR      DECIMAL(14,2),
                          VR_HPRED    DECIMAL(14,2),
                          E_VALORES   SMALLINT,  
                          OBSERVACION VARCHAR(512),
                          HOSTNAME    VARCHAR(254),
                          ESTADO      INT    )
GO
ALTER TABLE ESTHADM_FTR
ADD CONSTRAINT ESTHADM_FTRNOADMISION
PRIMARY KEY CLUSTERED (NOADMISION, N_FACTURA)
GO

/********************************************************/
IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE NAME='SPKH_CREA_REVISAESTADO_HADMFTR' AND XTYPE='P')
BEGIN
   DROP PROC SPKH_CREA_REVISAESTADO_HADMFTR
END
GO
/********************************************************/
CREATE PROC DBO.SPKH_CREA_REVISAESTADO_HADMFTR
AS
BEGIN 
   INSERT INTO ESTHADM(NOADMISION, E_CERRADA, E_FACTURADA, E_PREFACTUR, E_VRPREFACT, E_HADMF)
   SELECT NOADMISION, 0, 0, 0, 0, 0
   FROM   HADM
   WHERE  CLASEING   = 'A'
   AND    NOADMISION NOT IN (SELECT NOADMISION FROM ESTHADM) 
END
GO
/********************************************************/
IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE NAME='SPKH_REVISAESTADO_HADMFTR' AND XTYPE='P')
BEGIN
   DROP PROC SPKH_REVISAESTADO_HADMFTR
END
GO
/********************************************************/
CREATE PROC DBO.SPKH_REVISAESTADO_HADMFTR
@FECHA_ANALISIS DATETIME
AS
DECLARE @NOADMISION VARCHAR(16)
DECLARE @N_FACTURA  VARCHAR(16)
DECLARE @CERRADA    SMALLINT
DECLARE @FACTURADA  SMALLINT
DECLARE @AUX1       INT
DECLARE @AUX2       INT
DECLARE @VAUX1      DECIMAL(14,2)
DECLARE @VAUX2      DECIMAL(14,2)
BEGIN 
    IF @FECHA_ANALISIS >= DBO.FNK_FECHA_SIN_HORA(GETDATE())
    BEGIN
       PRINT 'SOLO SE PUEDE ANALIZAR FECHAS ANTERIORES'
    END
    -- SE HACE EL LLENADO DE LAS ADMISIONES NO INCLUIDAS EN LA TABLA DE REVISIONES
    EXEC DBO.SPKH_CREA_REVISAESTADO_HADMFTR
    -- INSERTO LAS FACTURAS DE LAS ADMISIONES FACTURADAS EN LA FECHA
    INSERT INTO ESTHADM_FTR (NOADMISION, N_FACTURA, F_FACTURA, VR_FTR, VR_HPRED, OBSERVACION, HOSTNAME, ESTADO) 
    SELECT NOREFERENCIA, N_FACTURA, F_FACTURA, CAST(VR_TOTAL AS DECIMAL(14,2)), 0, NULL, HOST_NAME(), 9
    FROM   FTR 
    WHERE  F_FACTURA = @FECHA_ANALISIS AND PROCEDENCIA = 'SALUD' AND ESTADO <> 'A' 
    
    UPDATE ESTHADM SET HOSTNAME = HOST_NAME(), ESTADO = 9
    FROM   ESTHADM INNER JOIN ESTHADM_FTR ON ESTHADM.NOADMISION = ESTHADM_FTR.NOADMISION
    WHERE  ESTHADM_FTR.HOSTNAME = HOST_NAME()
    AND    ESTHADM_FTR.ESTADO   = 9
    
    DECLARE EA_CURSOR  CURSOR FOR
    SELECT NOADMISION FROM ESTHADM WHERE HOSTNAME = HOST_NAME() AND ESTADO = 9
    OPEN EA_CURSOR    
    FETCH NEXT FROM EA_CURSOR    
    INTO @NOADMISION
    WHILE @@FETCH_STATUS = 0    
    BEGIN       
        SELECT @CERRADA = HADM.CERRADA, @FACTURADA =  HADM.FACTURADA FROM HADM
        WHERE  NOADMISION = @NOADMISION
        
        IF @CERRADA = 1
           UPDATE ESTHADM SET E_CERRADA = 1 WHERE NOADMISION = @NOADMISION
        ELSE
           UPDATE ESTHADM SET E_CERRADA = 0 WHERE NOADMISION = @NOADMISION

        IF @FACTURADA > 0
           UPDATE ESTHADM SET E_FACTURADA = 1 WHERE NOADMISION = @NOADMISION
        ELSE
           UPDATE ESTHADM SET E_FACTURADA = 0 WHERE NOADMISION = @NOADMISION
        
        SELECT @AUX1 = COUNT(*), @VAUX1 = SUM(HPRED.VALOR * HPRED.CANTIDAD)
        FROM   HPRED INNER JOIN HPRE ON HPRED.NOPRESTACION = HPRE.NOPRESTACION
        WHERE  HPRE.NOADMISION = @NOADMISION
        
        SELECT @AUX2 = COUNT(*), @VAUX2 = SUM(HPRED.VALOR * HPRED.CANTIDAD)
        FROM   HPRED INNER JOIN HPRE ON HPRED.NOPRESTACION = HPRE.NOPRESTACION
        WHERE  HPRE.NOADMISION = @NOADMISION
        AND    HPRED.FACTURADA = 1
        
        UPDATE ESTHADM SET N_HPRED = @AUX1, V_HPRED = @VAUX1, N_HPRED_FAC = @AUX2, V_HPRED_FAC = @VAUX2 WHERE NOADMISION = @NOADMISION

        IF @AUX1 = @AUX2
           UPDATE ESTHADM SET E_PREFACTUR = 1 WHERE NOADMISION = @NOADMISION
        ELSE
           UPDATE ESTHADM SET E_PREFACTUR = 0, OBSERVACION = RTRIM(LTRIM(OBSERVACION))+' / NO TODOS LOS HPRED APARECEN FACTURADOS' WHERE NOADMISION = @NOADMISION
              
        IF @VAUX1 = @VAUX2
           UPDATE ESTHADM SET E_VRPREFACT = 1 WHERE NOADMISION = @NOADMISION
        ELSE
           UPDATE ESTHADM SET E_VRPREFACT = 0, OBSERVACION = RTRIM(LTRIM(OBSERVACION))+' / LOS VALORES FACTURADOS NO COINCIDE CON EL VALOR DE LOS HPRED' WHERE NOADMISION = @NOADMISION 
        
        SELECT @AUX1 = ISNULL(COUNT(*),0) FROM HADMF WHERE ESTADO = 'P' AND NOADMISION = @NOADMISION
        SELECT @AUX2 = ISNULL(COUNT(*),0) FROM FTR WHERE PROCEDENCIA = 'SALUD' AND ESTADO <> 'A' AND TIPOANULACION = 'NC' AND NOREFERENCIA = @NOADMISION

        IF @AUX1 = @AUX2
           UPDATE ESTHADM SET E_HADMF = 1 WHERE NOADMISION = @NOADMISION 
        ELSE
           UPDATE ESTHADM SET E_HADMF = 0, OBSERVACION = RTRIM(LTRIM(OBSERVACION))+' / EL NUMERO DE FACTURAS EN HADMF NO CRRESPONDE AL NUMERO DE FACTURAS EN FTR DE ESTA' WHERE NOADMISION = @NOADMISION  

        -- DEBEMOS REVISAR LAS FACTURAS QUE ESTAN EN FTR DE ESTA ADMISION

        DECLARE H_CURSOR CURSOR FOR
        SELECT N_FACTURA, VR_FTR FROM ESTHADM_FTR WHERE NOADMISION = @NOADMISION
        OPEN H_CURSOR
        FETCH NEXT FROM H_CURSOR    
        INTO @N_FACTURA, @VAUX2
        WHILE @@FETCH_STATUS = 0    
        BEGIN       
           SELECT @VAUX1 = SUM(HPRED.VALOR*HPRED.CANTIDAD) 
           FROM   HPRED INNER JOIN HPRE ON HPRED.NOPRESTACION = HPRE.NOPRESTACION
           WHERE  HPRE.NOADMISION = @NOADMISION
           AND    HPRED.N_FACTURA = @N_FACTURA 

           UPDATE ESTHADM_FTR SET VR_HPRED = @VAUX1 WHERE NOADMISION = @NOADMISION AND N_FACTURA = @N_FACTURA 
  
           IF @VAUX1 = @VAUX2
              UPDATE ESTHADM_FTR SET E_VALORES = 1 WHERE NOADMISION = @NOADMISION AND N_FACTURA = @N_FACTURA 
           ELSE
              UPDATE ESTHADM_FTR SET E_VALORES = 0, OBSERVACION = LTRIM(RTRIM(OBSERVACION))+' / LOS VALORES DE LA FTR CON LOS VALORES DE HPRED NO COINCIDEN ' WHERE NOADMISION = @NOADMISION AND N_FACTURA = @N_FACTURA 

           FETCH NEXT FROM H_CURSOR    
           INTO @N_FACTURA, @VAUX2
        END
        CLOSE H_CURSOR
        DEALLOCATE H_CURSOR

        
        FETCH NEXT FROM EA_CURSOR    
        INTO @NOADMISION
    END
    CLOSE EA_CURSOR
    DEALLOCATE EA_CURSOR    

    UPDATE ESTHADM     SET ESTHADM.ESTADO       = 8 WHERE ESTADO = 9
    UPDATE ESTHADM_FTR SET ESTHADM_FTR.ESTADO   = 8 WHERE ESTADO = 9
END
GO

EXEC SPKH_REVISAESTADO_HADMFTR '21/06/2009'

SELECT NOADMISION, E_CERRADA, E_FACTURADA, E_PREFACTUR, E_VRPREFACT, N_HPRED, N_HPRED_FAC, V_HPRED, V_HPRED_FAC, OBSERVACION 
FROM   ESTHADM 
WHERE  ESTADO = 8
AND    (E_CERRADA = 0 OR E_FACTURADA = 0 OR E_PREFACTUR = 0 OR E_VRPREFACT = 0)

SELECT * FROM ESTHADM_FTR WHERE ESTADO = 8 AND E_VALORES = 0



SELECT * FROM ESTHADM
SELECT * FROM ESTHADM_FTR 

DELETE ESTHADM
DELETE ESTHADM_FTR
